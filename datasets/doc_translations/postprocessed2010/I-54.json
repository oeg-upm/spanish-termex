{
    "id": "I-54",
    "original_text": "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents. The agents have time constraints in the form of both deadlines and discount factors. There are m > 1 issues for negotiation where each issue is viewed as a pie of size one. The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent). Here different agents value different issues differently. Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities. For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties. Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting. In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium. We also analyze the relative error (i.e., the difference between the true optimum and the approximate). The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error. Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues. Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) . These approximate strategies also have polynomial time complexity. Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1. INTRODUCTION Negotiation is a key form of interaction in multiagent systems. It is a process in which disputing agents decide how to divide the gains from cooperation. Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them. Now, the simplest form of negotiation involves two agents and a single issue. For example, consider a scenario in which a buyer and a seller negotiate on the price of a good. To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement. Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome. However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers. That is, they must set the negotiation protocol [20]. On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation). Given this context, this work focuses on competitive scenarios with self-interested agents. For such cases, each participant defines its strategy so as to maximise its individual utility. However, in most bilateral negotiations, the parties involved need to settle more than one issue. For this case, the issues may be divisible or indivisible [4]. For the former, the problem for the agents is to decide how to split each issue between themselves [21]. For the latter, the individual issues cannot be divided. An issue, in its entirety, must be allocated to either of the two agents. Since the agents value different issues differently, they must come to terms about who will take which issue. To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6]. However, in many real-world settings, the issues are indivisible. Hence, our focus here is on negotiation for indivisible issues. Such negotiations are very common in multiagent systems. For example, consider the case of task allocation between two agents. There is a set of tasks to be carried out and different agents have different preferences for the tasks. The tasks cannot be partitioned; a task must be carried out by one agent. The problem then is for the agents to negotiate about who will carry out which task. A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies. An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers. However, such computational issues have so far received little attention. As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues. Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts. Thus, we consider negotiations in which there is incomplete information and time constraints. Incompleteness of information on the part of negotiators is a common feature of most practical negotiations. Also, agents typically have time constraints in the form of both deadlines and discount factors. Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit. Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation. Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues). Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents. For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting. Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium. We also analyze the relative error (i.e., the difference between the true optimum and the approximate). The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error. Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues. Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) . These approximate strategies also have polynomial time complexity. In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria. No previous work has determined these equilibria. Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents. The remainder of the paper is organised as follows. We begin by giving a brief overview of single-issue negotiation in Section 2. In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem. We then present an approximate equilibrium and evaluate its approximation error. Section 4 analyzes online multi-issue negotiation. Section 5 discusses the related literature and Section 6 concludes. 2. SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers. Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27]. Hence we use this basic single issue model and extend it to multiple issues. Before doing so, we give an overview of this model and its equilibrium strategies. There are two strategic agents: a and b. Each agent has time constraints in the form of deadlines and discount factors. The two agents negotiate over a single indivisible issue (i). This issue is a pie of size 1 and the agents want to determine who gets the pie. There is a deadline (i.e., a number of rounds by which negotiation must end). Let n ∈ N+ denote this deadline. The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods. One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b. Agent b can either accept or reject the offer. If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi. Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer. This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict). Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation. An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21]. Specifically, the decrease occurs at each step of offer and counteroffer. This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents. Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively. Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents. For the above setting, the agents reason as follows in order to determine what to offer at t = 1. We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period. Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie). To begin, consider the case where the deadline for both agents is n = 1. If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline). Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 . Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period. Now, consider the case where the deadline is n = 2. In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards. Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a. Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer. Hence, during the first time period, agent a offers [0, 1]. Agent b accepts this and an agreement occurs in the first time period. In general, if the deadline is n, negotiation proceeds as follows. As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards. Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers. Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal. However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1). Thus, we assume that b accepts as offer. 952 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period. This, in turn, depends on whether n is odd or even. Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd. Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period. Note that the equilibrium outcome depends on who makes the first move. Since we have two agents and either of them could move first, we get two possible equilibrium outcomes. On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem. We then present a time efficient approximate equilibrium. 3. MULTI-ISSUE NEGOTIATION We first analyse the complete information setting. This section forms the base which we extend to the case of information uncertainty in Section 4. Here a and b negotiate over m > 1 indivisible issues. These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves. Let S = {1, 2, . . . , m} denote the set of m pies. As before, each pie is of size 1. Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1. For each issue, let n denote each agents deadline. In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}. Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c). The shares for a and b are together represented as the package [xt , yt ]. As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12]. The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b. Here N+ denotes the set of positive integers. These vectors indicate how the agents value different issues. For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1. Likewise for agent b. In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them). In all the settings we study, the issues will be perfect substitutes. To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m). Now, multi-issue negotiation can be done using different procedures. Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel. Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6]. Hence we adopt it here. We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2). However, an offer for the package deal includes a proposal for each issue under negotiation. Thus, for m issues, an offer includes m divisions, one for each issue. Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer. An agreement can therefore take place either on all m issues or on none of them. As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards. However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities. For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively. We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues. Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively. Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one). Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs. We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs. We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}. Given this, the following theorem characterises the equilibrium for the package deal procedure. THEOREM 1. For the package deal procedure, the following strategies form a Nash equilibrium. The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1). PROOF. We look ahead to the last time period (i.e., t = n) and then reason backwards. To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent. Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem. In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period. During time period t, either a or b could be the offering agent. Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1). However, since there is more than one issue, there is more than one package that gives b this cumulative utility. From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser). Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable. Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package. If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b). The function TRADEOFFB for agent b is analogous to that for a. On the other hand, the equilibrium strategy for the agent that receives an offer is as follows. For time period t, let b denote the receiving agent. Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period. The equilibrium strategy for a as receiving agent is defined analogously. In this way, we reason backwards and obtain the offers for the first time period. Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem. The following example illustrates how the agents make tradeoffs using the above equilibrium strategies. EXAMPLE 1. Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2. Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5. Let agent a be the first mover. By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues. This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3. Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer. So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2. This gives a cumulative utility of 3 to a and 5 to b. Agent b accepts the package and an agreement takes place in the first time period. The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 . In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight. There is a knapsack with a given capacity. The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack. This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3). Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity. Example 1 was for two issues and so it was easy to find the equilibrium offers. But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1. The following theorem proves this. THEOREM 2. For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard. PROOF. Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4. Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10]. Hence we use these methods to find a solution to our negotiation problem. At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem. The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack. On the other hand, our negotiation problem involves two players and they are both strategic. Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium. The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example). In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating. Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem. Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms. There are two key issues in the design of approximate algorithms [1]: sack problem. The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17]. In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers. However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation. The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1]. The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one. In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms. An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1]. For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method. This method is based on dynamic programming. It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ . More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity). Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem. This is done as follows. For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method. The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous. For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively. We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues. Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one). Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation. THEOREM 3. For the package deal procedure, the following strategies form an approximate Nash equilibrium. The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1). An agreement takes place at t = 1. PROOF. As in the proof for Theorem 1, we use backward reasoning. We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues. Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it. For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB). These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem. These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4. Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5). Assume that a is the offering agent for t = n − 1. Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period). Recall that for the last time period, the offering agent gets a hundred percent of all the issues. Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues. Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1. On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package. In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1). By reasoning backwards, we obtain the offer for time period t = 1. If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). The receiving agent accepts the offer. This is because the relative error in its cumulative utility from the offer is at most . An agreement therefore takes place in the first time period. THEOREM 4. The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ). PROOF. The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )). In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times. Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ). This analysis was done in a complete information setting. However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins. For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own. This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents. All our analysis for the complete information setting still holds for The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility. Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4. ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future. In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues. As before, let m be the total number of issues that are up for negotiation. The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1]. This probability distribution, n, and m are common knowledge to the agents. However, the agents come to know ka c and kb c only just before negotiation for issue c begins. Once the agents reach an agreement on issue c, it cannot be re-negotiated. This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3]. We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve. In an online problem, data is given to the algorithm incrementally, one unit at a time [3]. The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output. Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution. Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance. In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input. An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs. The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution). Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium. The protocol is defined as follows. Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues). Step 1. For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge. Step 2. The agents settle issue c using the alternating offers protocol described in Section 2. Negotiation for issue c must end within n time periods from the start of negotiation on the issue. If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues. Step 3. The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition. However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m). In order to solve this online negotiation problem we draw analogy with the online knapsack problem. Before doing so, however, we give a brief overview of the online knapsack problem. In the online knapsack problem, there are m items. The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known). Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number. Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem. Our online negotiation problem is analogous to the online knapsack problem. This analogy is described in detail in the proof for Theorem 5. Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16]. Hence we use this solution and show that it forms an equilibrium. The following theorem characterizes an approximate equilibrium for online negotiation. Here the agents have to choose a strategy without knowing the features of the future issues. Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18]. However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem. Also, the online knapsack can only be solved approximately [16]. Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example). The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem. For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum. THEOREM 5. For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium. The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1). An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF. As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction. Let a be the offering agent for t = 1 for all the m issues. Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue). Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues. Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues. Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents. Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i . However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol). Hence, a computes UB(n) as follows. Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6). Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]). Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6). Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i. Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants. Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem. An algorithm to solve the online knapsack problem has already proposed in [16]. This algorithm is called the fixed-choice online algorithm. It has time complexity linear in the number of items (m) in the knapsack problem. We use this to solve our online negotiation problem. Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter. This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem. The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)). The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows. A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem. The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered. In more detail, the algorithm ONLINE-TRADEOFFA works as follows. It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one. Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1). If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal. Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1. Agent b accepts the offer. Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1. In the next time period (i.e., t = 2), negotiation proceeds to the next issue. The deadline for the second issue is n time periods from the start of negotiation on the issue. For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above. Agent offers bc at t = 2 and b accepts. Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2. This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts. As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i. On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously. Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6. The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF. The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16]. Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16]. Thus, it follows that this lower bound also holds for our negotiation problem. 5. RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues. We first describe the existing work for the case of divisible issues. Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues. However, most of this work has focussed on the sequential procedure [7, 2]. For this procedure, a key issue is the negotiation agenda. Here the term agenda refers to the order in which the issues are negotiated. The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change. Hence, the agents must decide what agenda they will use. Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous). For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda. A number of researchers have also studied negotiations with an endogenous agenda [2]. In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure. However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible. Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation. Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents. The problem of task allocation has been previously studied in the context of coalitions involving more than two agents. For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole. In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities. On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility. In contrast, our focuses on negotiation regarding who will carry out which task. Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6. CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints. The issues are indivisible and different agents value different issues differently. Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities. Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting. We then presented approximately optimal negotiation strategies and showed that they form an equilibrium. These strategies have polynomial time complexity. We also analysed the difference between the true optimum and the approximate optimum. Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues. Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error. These approximate strategies also have polynomial time complexity. There are several interesting directions for future work. First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed. It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions. Apart from this, we treated the number of issues as being common knowledge to the agents. In future, it will be interesting to treat the number of issues as uncertain. 7. REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi. Complexity and approximation: Combinatorial optimization problems and their approximability properties. Springer, 2003. [2] M. Bac and H. Raff. Issue-by-issue negotiations: the role of information and time preference. Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv. Online Computation and Competitive Analysis. Cambridge University Press, 1998. [4] S. J. Brams. Fair division: from cake cutting to dispute resolution. Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman. Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings. Multi-issue negotiation with deadlines. Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman. The importance of the agenda in bargaining. Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover. A multiphase dual algorithm for the zero-one integer programming problem. Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes. Adaptive limited-supply online auctions. In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim. Fast approximation algorithms for the knapsack and sum of subset problems. Journal of ACM, 22:463-468, 1975. [11] R. Inderst. Multi-issue bargaining with endogenous agenda. Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa. Decisions with Multiple Objectives: Preferences and Value Trade-offs. New York: John Wiley, 1976. [13] S. Kraus. Strategic negotiation in multi-agent environments. The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham. Truth revelation in approximately efficient combinatorial auctions. Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings. A classification scheme for negotiation in electronic commerce. International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis. Stochastic online knapsack problems. Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth. Knapsack problems: Algorithms and computer implementations. John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein. A Course in Game Theory. The MIT Press, 1994. [19] H. Raiffa. The Art and Science of Negotiation. Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin. Rules of Encounter. MIT Press, 1994. [21] A. Rubinstein. Perfect equilibrium in a bargaining model. Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser. Levelled commitment contracts and strategic breach. Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan. Bargaining with deadlines. In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling. An essay on bargaining. American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus. Methods for task allocation via agent coalition formation. Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman. Computing approximate Bayes Nash equilibria in tree games of incomplete information. In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl. Bargaining Theory. Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)",
    "original_translation": "Negociación de temas múltiples aproximados y en línea Shaheen S. Fatima Departamento de Informática Universidad de Liverpool Liverpool L69 3BX, Reino Unido. shaheen@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido.mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, Reino Unido.nrj@ecs.soton.ac.uk Resumen Este documento analiza la negociación bilateral de problemas múltiples entre agentes autónomos autoinalgados. Los agentes tienen limitaciones de tiempo en forma de plazos y factores de descuento. Hay m> 1 problemas para la negociación donde cada problema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no se pueden dividir entre las partes; cada problema debe asignarse en su totalidad a cualquiera de los agentes). Aquí diferentes agentes valoran diferentes problemas de manera diferente. Por lo tanto, el problema es que los agentes decidan cómo asignar los problemas entre ellos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en que los problemas de negociación se conocen a priori a las partes. Luego, analizamos su complejidad del tiempo y mostramos que encontrar las ofertas de equilibrio es un problema np-duro, incluso en una configuración de información completa. Para superar esta complejidad computacional, luego presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el verdadero óptimo y el aproximado). La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo. Finalmente, ampliamos el análisis a la negociación en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre sus valoraciones para estos problemas. Específicamente, mostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y lo aproximado es o (√ m). Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial distribuida]: Sistemas Multiagentes Algoritmos de Términos Generales, Diseño, Teoría 1. La negociación de la introducción es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que los agentes de disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los propios agentes [20, 19, 13, 15], cada parte solo puede obtener lo que el otro está preparado para permitirlos. Ahora, la forma más simple de negociación involucra a dos agentes y un solo problema. Por ejemplo, considere un escenario en el que un comprador y un vendedor negocian sobre el precio de un bien. Para comenzar, es probable que los dos agentes difieran en el precio al que creen que el comercio debería tener lugar, pero a través de un proceso de toma de decisiones conjuntas llegan a un precio que es mutuamente aceptable o no llegan a llegar a un acuerdo. Dado que es probable que los agentes comiencen con diferentes precios, uno o ambos deben moverse hacia el otro, a través de una serie de ofertas y contrarretas, para obtener un resultado mutuamente aceptable. Sin embargo, antes de que los agentes realmente puedan realizar tales negociaciones, deben decidir las reglas para hacer ofertas y contrarrestar ofertas. Es decir, deben establecer el protocolo de negociación [20]. Sobre la base de este protocolo, cada agente elige su estrategia (es decir, qué ofrece que debe hacer durante el curso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia para maximizar su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas deben resolver más de un problema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para el primero, el problema para los agentes es decidir cómo dividir cada problema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe asignarse a cualquiera de los dos agentes. Dado que los agentes valoran los problemas diferentes de manera diferente, deben llegar a un acuerdo sobre quién tomará qué problema. Hasta la fecha, la mayor parte del trabajo existente sobre negociación de múltiples problemas se ha centrado en el caso anterior [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Dichas negociaciones son muy comunes en los sistemas múltiples. Por ejemplo, considere el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que se llevarán a cabo y diferentes agentes tienen diferentes preferencias para las tareas. Las tareas no pueden dividirse;Una tarea debe ser realizada por un agente. El problema es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples problemas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de los agentes de software, es encontrar la complejidad del tiempo para calcular las ofertas de equilibrio. Sin embargo, tales problemas computacionales han recibido hasta ahora poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (describe en la Sección 5) se ha centrado principalmente en la negociación para cuestiones divisibles 951 978-81-904262-7-5 (RPS) C 2007 Ifaamas y encontrar el equilibrio paraEste caso es computacionalmente más fácil que el de los problemas indivisibles. Por lo tanto, nuestro objetivo principal es responder las preguntas computacionales para este último caso para los tipos de situaciones que los agentes en los contextos del mundo real se enfrentan comúnmente. Por lo tanto, consideramos negociaciones en las que existe información incompleta y limitaciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común de la mayoría de las negociaciones prácticas. Además, los agentes generalmente tienen restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede continuar indefinidamente, sino que debe terminar dentro de un límite de tiempo razonable. Del mismo modo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin (ver [21] para la negociación de problemas únicos sin plazos y [23, 13] para negociar con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en el que todos los problemas para la negociación se conocen a priori para ambos agentes. Para este caso, mostramos que el problema de encontrar las ofertas de equilibrio es NP-Hard, incluso en una configuración de información completa. Luego, para superar el problema de la complejidad del tiempo, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el verdadero óptimo y el aproximado). La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo. Finalmente, ampliamos el análisis a la negociación en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre sus valoraciones para estos problemas. Específicamente, mostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y lo aproximado es o (√ m). Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación de múltiples problemas anteriores y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes limitados por recursos. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo problema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples problemas y mostramos que encontrar ofertas de equilibrio es un problema np. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La Sección 4 analiza la negociación de múltiples problemas en línea. La Sección 5 discute la literatura relacionada y la Sección 6 concluye.2. Negociación de un solo tema Adoptamos el modelo de un solo problema de [27] porque este es un modelo en el que, durante la negociación, las partes pueden hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque está en problemas indivisibles (es decir, las partes pueden hacer una de las dos ofertas posibles: cero o una), nuestro escenario encaja bien con [27]. Por lo tanto, usamos este modelo básico de problemas únicos y lo ampliamos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: A y B. Cada agente tiene limitaciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre una sola cuestión indivisible (I). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién obtiene el pastel. Hay una fecha límite (es decir, una serie de rondas por las cuales la negociación debe terminar). Deje que n ∈ N+ denote esta fecha límite. Los agentes usan un protocolo de ofertas alterno (como el de Rubinstein [18]), que continúa a través de una serie de períodos de tiempo. Uno de los agentes, digamos A, comienza la negociación en el primer período (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente B puede aceptar o rechazar la oferta. Si acepta, la negociación termina en un acuerdo con una obtención de Xi y B obteniendo yi = 1 - xi. De lo contrario, la negociación procede al próximo período de tiempo, en el que el Agente B hace una contratoria. Este proceso de realización de ofertas continúa hasta que uno de los agentes acepta una oferta o cita la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres posibles acciones que un agente puede tomar durante cualquier período de tiempo: acepte la última oferta, haga una nueva contraoferta o renuncie a la negociación. Una característica esencial de las negociaciones que involucran ofertas alternativas es que los servicios públicos de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado 0 <ΔI ≤ 1 para ambos agentes 1. Deje que [xt i, yt i] denote la oferta hecha en el período de tiempo t donde Xt I e It denoten la participación para el agente A y B respectivamente. Luego, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i]: xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1} en el tiempo t,Si A y B reciben una parte de XT I e YT, respectivamente, sus utilidades son: Ua I (Xt I, T) = J XT I × ΔT - 1 Si t ≤ n 0 de lo contrario Ub i (yt i, t)= J Yt I × ΔT - 1 Si t ≤ n 0 de lo contrario la utilidad de conflicto (es decir, la utilidad recibida en caso de que no se alcance el acuerdo) es cero para ambos agentes. Para la configuración anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A (1) (B (1)) denote como oferta de equilibrio (BS) para el primer período de tiempo. Deje que el agente A denote el primer motor (es decir, en t = 1, A propone B que debe obtener el pastel). Para comenzar, considere el caso en el que la fecha límite para ambos agentes es n = 1. Si B acepta, la división ocurre según lo acordado;Si no, ninguno de los agentes obtiene nada (ya que n = 1 es la fecha límite). Aquí, A está en una posición poderosa y es capaz de proponer mantener el 100 por ciento del pastel y no dar nada a B 2. Dado que la fecha límite es n = 1, B acepta esta oferta y el acuerdo tiene lugar en el primer período. Ahora, considere el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, un vistazo a T = 2 y razones hacia atrás. Agente una razón por la cual si la negociación continúa a la segunda ronda, B tomará el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para A. Por lo tanto, en el primer período de tiempo, si A ofrece B algo menos que todo el pastel, B rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente A ofrece [0, 1]. El agente B acepta esto y se produce un acuerdo en el primer período. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el Agente A decide qué ofrecer en la primera ronda mirando hacia el futuro hasta T = N y luego razonando hacia atrás. El agente como 1 que tiene un factor de descuento diferente para diferentes agentes solo hace que la presentación sea más involucrada sin conducir a ningún cambio en el análisis del comportamiento estratégico de los agentes o la complejidad del tiempo para encontrar las ofertas de equilibrio. Por lo tanto, tenemos un solo factor de descuento para ambos agentes.2 Es posible que B pueda rechazar dicha propuesta. Sin embargo, independientemente de si B acepta o rechaza la propuesta, obtiene cero utilidad (porque la fecha límite es n = 1). Por lo tanto, suponemos que B acepta como oferta.952 El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), la oferta para T = 1 depende de quién sea el agente de oferta durante el último período de tiempo. Esto, a su vez, depende de si N es impar o incluso. Dado que A hace una oferta en t = 1 y los agentes usan el protocolo de ofertas alterno, el agente de oferta durante el último período de tiempo es B si N es uniforme y es A si n es impar. Por lo tanto, dependiendo de si N es impar o incluso, A realiza la siguiente oferta en t = 1: a (1) = j oferta [1, 0] Si impar n acepta si bs gira b (1) = j oferta [0,1] Si incluso N acepta si, como turno, el Agente B acepta esta oferta y la negociación termina en el primer período de tiempo. Tenga en cuenta que el resultado de equilibrio depende de quién realice el primer movimiento. Como tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples problemas y luego mostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en el tiempo.3. Negociación de múltiples problemas primero analizamos la configuración de información completa. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí A y B negocian sobre M> 1 temas indivisibles. Estos problemas son m pasteles y los agentes quieren determinar cómo distribuir los pasteles entre ellos. Sea s = {1, 2 ,..., M} denota el conjunto de M Pies. Como antes, cada pastel es de tamaño 1. Deje que el factor de descuento para el problema C, donde 1 ≤ c ≤ m, sea 0 <ΔC ≤ 1. Para cada tema, deje que N denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), el agente como (BS) compartir para cada uno de los problemas m ahora se representa como un vector m de elementos Xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si el agente como compartir para el problema C en el tiempo t es Xt C, entonces el agente BS Share es yt c = (1 - T C). Las acciones para A y B se representan juntas como el paquete [XT, YT]. Como es tradicional en la teoría de servicios públicos de problemas múltiples, definimos una utilidad acumulativa de los agentes utilizando la forma aditiva estándar [12]. Las funciones UA: BM × BM × N+ → R y UB: BM × BM × N+ → R Da las utilidades acumulativas para A y B respectivamente en el tiempo t.Estos se definen de la siguiente manera: UA ([xt, yt], t) = (σm c = 1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) ub ([xt, yt], t)= (Σm c = 1kb cub c (yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de elemento m de constantes para el agente a y kb ∈ Nm + que para b. Aquí N+ denota el conjunto de enteros positivos. Estos vectores indican cómo los agentes valoran diferentes problemas. Por ejemplo, si Ka C> Ka C + 1, entonces agente los valores A Problema C más que el problema C + 1. Del mismo modo para el agente b. En otras palabras, los problemas de M son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los problemas M y no para ningún subconjunto de ellos). En todos los entornos que estudiamos, los problemas serán sustitutos perfectos. Para comenzar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, N, M, Ka C, Kb C y ΔC para 1 ≤ C ≤ M). Ahora, la negociación de múltiples problemas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples problemas [19]: 1. El procedimiento de oferta de paquete donde todos los problemas se resuelven como un paquete, 2. El procedimiento secuencial donde los problemas se discuten uno tras otro y 3.El procedimiento simultáneo donde los problemas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para ello.3.1 El procedimiento de oferta de paquete En este procedimiento, los agentes usan el mismo protocolo que para la negociación de un solo problema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema bajo negociación. Por lo tanto, para M temas, una oferta incluye m divisiones, una para cada tema. Los agentes pueden aceptar una oferta completa (es decir, todos los problemas de M) o rechazar una oferta completa. Por lo tanto, un acuerdo puede tener lugar en todos los temas de M o en ninguno de ellos. Según la negociación de un solo problema, un agente decide qué ofrecer mirando hacia el futuro y el razonamiento hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una acción para todos los problemas M, los agentes ahora pueden hacer compensaciones en los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema C en el momento t se denota como [en C, Bt C] donde en C y Bt C denotan las acciones para el Agente A y B respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [en, bt] donde en ∈ Bm (bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas M. Además, para 1 ≤ c ≤ m, ΔC es el factor de descuento para el problema c.Los símbolos 0 y 1 denotan vectores de elementos m de ceros y otros respectivamente. Tenga en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las acciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos que A (t) (respectivamente b (t)) denota la estrategia de equilibrio para el agente A (respectivamente b).3.2 Estrategias de equilibrio Como se menciona en la Sección 1, el paquete permite a los agentes hacer compensaciones. Dejamos que el compatrioffa (compatibilidad) denote la función del agente como (BS) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros a la compensación del procedimiento (TradeOffB) donde p = {ka, kb, Δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. Teorema 1. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: a (n) = j oferta [1, 0] si como turno acepta si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro para todosPeríodos de tiempo t <n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: a (t) = 8 <: Oferta de compadación (p, ub (t), t) sicomo turno if (ua ([xt, yt], t) ≥ ua (t)) acepta el otro rechazo si bs giro b (t) = 8 <: oferta tradeOffb (p, ua (t), t) si bs gira si(Ub ([XT, yt], t) ≥ ub (t)) Acepte el otro rechazo si es como giro el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (Aamas 07) 953 donde UA (t) = UA ([AT+1, BT+1], T+1) y Ub (T) = Ub ([AT+1, BT+1], t + 1). PRUEBA. Miramos hacia el último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para comenzar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A (N) y B (N) como se da en la declaración del teorema. En todos los períodos de tiempo anteriores (t <n), el agente de la oferta propone un paquete que le da a su oponente una utilidad acumulativa igual a lo que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo T, A o B podría ser el agente de ofrenda. Considere el caso donde A hace una oferta en t.El paquete que ofrece en T le da a B una utilidad acumulativa de UB ([en+1, BT+1], t+1). Sin embargo, dado que hay más de un problema, hay más de un paquete que le da a B esta utilidad acumulativa. De entre estos paquetes, un ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para A es encontrar el paquete [AT, BT] para: maximizar mx c = 1 ka c (1 - bt c) Δt - 1 c (3) de modo que mx c = 1 bt ckb c ≥Ub (T) Bt C = 0 o 1 para 1 ≤ C ≤ M donde Ub (t), ΔT - 1 C, Ka C y Kb C son constantes y Bt C (1 ≤ C ≤ M) es una variable. Suponga que el intercambio de funciones toma los parámetros P, Ub (t) y T, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces el Comercio devuelve cualquiera de ellos (porque el Agente A obtiene la misma utilidad de todos estos paquetes y también el Agente B). La función compadecida para el agente B es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo T, deje que B denote al agente receptor. Entonces, B acepta [xt, yt] si ub (t) ≤ ub ([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad más alta en el próximo período de tiempo. La estrategia de equilibrio para A como agente receptor se define análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período. Por lo tanto, obtenemos las estrategias de equilibrio (A (t) y B (t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio anteriores. EJEMPLO 1. Suponga que hay M = 2 problemas para la negociación, la fecha límite para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Deje ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Deje que el agente sea el primer motor. Al usar el razonamiento atrasado, A sabe que si la negociación alcanza el segundo período de tiempo (que es la fecha límite), B obtendrá un cien por ciento de ambos problemas. Esto le da a B una utilidad acumulativa de Ub (2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si B obtiene algo menos que una utilidad de 3, rechazará como oferta. Entonces, en T = 1, A ofrece el paquete donde obtiene el problema 1 y B obtiene el problema 2. Esto proporciona una utilidad acumulativa de 3 a A y 5 a b. El agente B acepta el paquete y se lleva a cabo un acuerdo en el primer período. El problema de maximización en la ecuación 3 se puede ver como el problema 0-1 mochila 3. En el problema de la mochila 0-1, tenemos una nota del conjunto 3 de que para el caso de los problemas divisibles, este es el elemento fraccional de KnapOf M, donde cada artículo tiene ganancias y peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar el beneficio acumulativo de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la ecuación 3). Dado que Ka C y ΔT - 1 C son constantes, maximizar PM C = 1 Ka C (1 - CB) ΔT - 1 C es lo mismo que minimizar PM C = 1 Ka C Bt c.Por lo tanto, la ecuación 3 se puede escribir como: minimizar mx c = 1 ka c bt c (4) de modo que mx c = 1 bt ckb c ≥ ub (t) bt c = 0 o 1 para 1 ≤ c ≤ m ecuación 4 es unVersión de minimización del problema estándar de mochila 0-1 4 con m ítems donde Ka C representa la ganancia para el ítem C, KB C El peso para el ítem C y UB (t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es computacionalmente fácil encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. Teorema 2. Para el procedimiento del paquete de paquete, el problema de encontrar las ofertas de equilibrio dadas en el Teorema 1 es NP-Hard. PRUEBA. Encontrar las ofertas de equilibrio dadas en el Teorema 1 requiere resolver el problema de la mochila 0-1 dada en la ecuación 4. Dado que el problema de la mochila 0-1 es NP-Hard [17], el problema de encontrar el equilibrio para el paquete también es NP-HARD.3.3 Investigadores de equilibrio aproximado en el área de los algoritmos han encontrado métodos eficientes en el tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones de un solo agente con respecto a qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación involucra a dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar una solución aproximada al problema de la mochila, también debemos demostrar que tal aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional para encontrar un equilibrio ha sido usar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil de estrategia forma un equilibrio de Nash aproximado si ninguno de los agentes puede ganar más de lo que la constante se desvía. Por lo tanto, nuestro objetivo es usar la solución al problema de la mochila 0-1 propuesto en [10] y mostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: problema de saco. El problema de la mochila fraccional es computacionalmente fácil;Se puede resolver en tiempo polinomio en el número de elementos en el problema de la mochila [17]. En contraste, el problema de la mochila 0-1 es computacionalmente difícil.4 Tenga en cuenta que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de mochila 0-1 con fracciones y valores no positivos puede transformarse fácilmente en uno con enteros positivos en el tiempo lineal en M utilizando los métodos dados en [8, 17].954 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1. La calidad de su solución, y 2. El tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina comparando su rendimiento con el algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z - z ∗)/z ∗ donde z es la solución aproximada y z ∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximadamenteAlgoritmos de aproximación totalmente polinomiales. Se dice que un algoritmo de aproximación es totalmente polinómico si para cualquier> 0 encuentra una solución que satisface la ecuación 5 en el tiempo limitado polinomialmente por tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos)y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación totalmente polinomial. Este método se basa en la programación dinámica. Es un método paramétrico que toma como un parámetro y para cualquier> 0, encuentra una solución heurística z con error relativo como máximo, de modo que la complejidad del tiempo y el espacio crece polinómicamente con el número de elementos my 1/. Más específicamente, el espacio y la complejidad del tiempo son O (m/ 2) y, por lo tanto, polinomiales en M y 1/ (ver [10] para el algoritmo de aproximación detallado y la prueba del tiempo y la complejidad del espacio). Dado que el método Ibarra y Kim es totalmente polinomial, lo usamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el Agente A, deje que APRX-TradeOffa (P, Ub (T), T,) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método Ibarra y KIM. El procedimiento APRX-TRADEOFFB (P, UA (T), T,) para el Agente B es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para la emisión C en el tiempo t se denota como [¯at c, ¯bt c] donde ¯at c y ¯bt c denotan las acciones para el agente A y B respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at, ¯bt] donde ¯at ∈ Bm (¯bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas. Además, como antes, para 1 ≤ c ≤ m, ΔC es el factor de descuento para el problema c.Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de los agentes comparte (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos ¯a (t) (respectivamente ¯b (t)) denotan la estrategia de equilibrio aproximada para el agente A (respectivamente b). El siguiente teorema usa esta notación y caracterizaUn equilibrio aproximado para la negociación de múltiples problemas. Teorema 3. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de NASH aproximado. La estrategia de equilibrio para t = n es: ¯a (n) = j oferta [1, 0] si es como turno aceptar si bs gira ¯b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente), t,) si como giro if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs gira ¯b (t) = 8 <: oferta aprx-tradeoffb (p, ua (t), t,) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como turno donde ua (t) = ua ([¯at+1, ¯bt++1], t + 1) y ub (t) = ub ([¯at + 1, ¯bt + 1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la prueba del Teorema 1, usamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n.Es sencillo obtener estas estrategias;El agente de la oferta obtiene cien por ciento de todos los problemas. Luego, para t = n - 1, el agente de oferta debe resolver el problema de maximización de la ecuación 4 sustituyendo t = n - 1 en él. Para el Agente A (b), esto se hace por Aprox-TradeOffa (Aprox-TradeOffB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y usan el método de aproximación Ibarra y KIMS para devolver un paquete que maximiza aproximadamente la ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que para el método Ibarra y KIMS (es decir, es como máximo donde se da en la Ecuación 5). Suponga que A es el agente de oferta para t = n - 1. Agente A Must a ofrecer un paquete que le da a B una utilidad acumulativa igual a lo que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, UB ([¯at+1, ¯Bt+1], t+1) donde[¯at+1, ¯Bt+1] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que durante el último período de tiempo, el agente de la oferta obtiene un cien por ciento de todos los problemas. Dado que A es el agente de oferta para t = n - 1 y los agentes usan el protocolo de ofertas alterno, es bs giro en t = n.Así, UB ([¯at+1, ¯Bt+1], t+1) es igual a la utilidad acumulada BS de recibir cien por ciento de todos los problemas. Utilizando esta utilidad como la capacidad de la mochila, A usa aprox-tradeoffa y obtiene el paquete de equilibrio aproximado para t = n-1. Por otro lado, si B es el agente de oferta en t = n-1, usa aprox-tradeOffB para obtener el paquete de equilibrio aproximado. De la misma manera para t <n-1, el agente de ofrenda (digamos a) usa aproximadamente-tradeoffa para encontrar un paquete de equilibrio aproximado que le da a B una utilidad de ub ([¯at+1, ¯bt+1], t+1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si a (b) es el agente de oferta, propone la oferta de aproximadamente-tradeoffa (p, ub (1), 1,) (aprox-tradeoffb (p, ua (1), 1,)). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulativa de la oferta es como máximo. Por lo tanto, un acuerdo tiene lugar en el primer período. Teorema 4. La complejidad del tiempo para encontrar la oferta de equilibrio aproximado para el primer período es O (nm/ 2). PRUEBA. La complejidad del tiempo de aprox-tradeoffa y aproxtradeoffb es la misma que la complejidad del tiempo del método ibarra y kim [10] es decir, o (m/ 2)). Para encontrar la oferta de equilibrio para el primer período de tiempo utilizando razonamiento hacia atrás, se invoca AproxtradeOffa (o aproximadamente compensación) n veces. Por lo tanto, la complejidad del tiempo para encontrar la oferta de equilibrio aproximado para el primer período de tiempo es O (nm/ 2). Este análisis se realizó en una configuración de información completa. Sin embargo, una extensión de este análisis a una configuración de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es sencillo, siempre que la negociación se realice fuera de línea;es decir, los agentes conocen su preferencia por cada problema individual antes de que comience la negociación. Por ejemplo, considere el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente está incierto sobre su factor de descuento de oponentes, aunque sabe lo suyo. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores para el factor de descuento de oponentes y tiene esta distribución de conocimiento común para los agentes. Todo nuestro análisis para la configuración de información completa aún se mantiene para el sexto INTL. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 955 esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar una configuración de información incompleta para la negociación fuera de línea, nos centramos en la negociación en línea de problemas múltiples.4. Negociación en línea de problemas múltiples ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples problemas, donde los agentes no están seguros sobre los problemas que tendrán que negociar en el futuro. En este entorno, al negociar un problema, los agentes saben que negociarán más problemas en el futuro, pero no están seguros sobre los detalles de esos problemas. Como antes, sea que M sea el número total de problemas que están a la negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de Ka C y KB c.Para 1 ≤ c ≤ m, deje que Ka C y Kb C se distribuyan uniformemente sobre [0,1]. Esta distribución de probabilidad, N y M son de conocimiento común para los agentes. Sin embargo, los agentes llegan a conocer KA C y KB C solo antes de que comience la negociación para el problema C. Una vez que los agentes llegan a un acuerdo sobre el tema C, no se puede volver a negociar. Este escenario requiere una negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego dibujamos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se dan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver que las unidades de entrada deben emitir la unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre toda la entrada, un algoritmo en línea a menudo no puede producir una solución óptima. Tal algoritmo solo puede aproximar el rendimiento del algoritmo óptimo que ve todas las entradas por adelantado. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento cercano al algoritmo óptimo fuera de línea en cada entrada. Se dice que un algoritmo en línea es estocástico si toma decisiones sobre la base de las distribuciones de probabilidad para las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la aproximación (denotada e [z ∗ m −zm] donde z ∗ m es la solución óptima y zm de la solución aproximada). Tenga en cuenta que el subíndice m se usa para indicar el hecho de que esta diferencia depende de m.Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Deje que el agente denote el primer motor (ya que nos centramos en el procedimiento del paquete, el primer motor es el mismo para todos los problemas de M). Paso 1. Para C = 1, los agentes reciben los valores de Ka C y Kb c.Estos dos valores ahora son comunes5 de conocimiento. Paso 2. Los agentes liquidan el problema C utilizando el protocolo de ofertas alterno descrito en la Sección 2. La negociación para la emisión C debe terminar dentro de N períodos de tiempo desde el comienzo de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, la negociación falla en esto y en todos los asuntos restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3 ,..., m.La negociación para la emisión C (2 ≤ c ≤ m) comienza en el período de tiempo posterior a un acuerdo sobre la emisión C - 1. 5 Asumimos el conocimiento común porque simplifica la exposición. Sin embargo, si Ka C (KB C) es como (BS) conocimiento privado, entonces nuestro análisis aún se mantendrá, pero ahora un agente debe encontrar su utilidad esperada de los oponentes sobre la base del P.D.FS para Ka C y KB c.Por lo tanto, durante el período de tiempo T, el problema para el agente de la oferta (digamos A) es encontrar la oferta óptima para el problema C sobre la base de Ka C y KB C y la distribución de probabilidad para KA I y KB I (C <I ≤metro). Para resolver este problema de negociación en línea, dibujamos la analogía con el problema de la mochila en línea. Sin embargo, antes de hacerlo, damos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m ítems uno a la vez de acuerdo con el pedido que son de entrada (es decir, a medida que se conocen sus coeficientes de ganancias y tamaño). Por lo tanto, se requiere que el algoritmo decida si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y ganancias, sin conocimiento sobre los artículos que aún deben verse, excepto por su número total. Tenga en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y las ganancias de los elementos futuros, este es un caso de problema de mochila en línea estocástica. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la prueba del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en el tiempo al problema de la mochila en línea [16]. Por lo tanto, usamos esta solución y mostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta información, la solución de equilibrio relevante es la de un equilibrio de Bayes Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar una estrategia de agentes BNE es análogo a resolver el problema de mochila 0-1 en línea. Además, la mochila en línea solo se puede resolver aproximadamente [16]. Por lo tanto, el concepto de solución de equilibrio relevante es BNE aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando procedimientos en línea: el comercio y el comercio en línea que se definen en la prueba del teorema. Durante un período de tiempo determinado, dejamos que ZM denote la solución aproximadamente óptima generada por Online-TradeOffa (o en línea-TradeOffB) y Z ∗ m el óptimo real. Teorema 5. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de Nash de Bayes aproximado. La estrategia de equilibrio para t = n es: a (n) = j oferta [1, 0] si como turno acepta si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro para todosPeríodos de tiempo t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: a (t) = 8 <: Oferta en línea-tradeoffa (p, ub (t), t) Si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: ofrece en línea-tradeoffb (p, ua (t), t)Si bs gira si (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como giro donde ua (t) = ua ([¯at+1, ¯bt+1], t+1) y ub (t) = ub ([¯at+1, ¯bt+1], t+1). Un acuerdo sobre la emisión C tiene lugar en t = c.Durante un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y que por la estrategia aproximada es E [z ∗ m - zm] = o (√ m).956 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Prueba. Como en el Teorema 1, encontramos la oferta de equilibrio para el período de tiempo t = 1 usando inducción hacia atrás. Deje que A sea el agente de oferta para T = 1 para todos los problemas de M. Considere el último período de tiempo t = n (recordar desde el paso 2 del protocolo en línea de que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer motor es el mismo para todos los problemas, y los agentes hacen ofertas alternativamente, el agente de oferta para t = n también es el mismo para todos los problemas. Suponga que B es el agente de oferta para t = n.Como en la Sección 3, el agente de oferta para T = N obtiene cien por ciento de todos los problemas de M. Dado que B es el agente de oferta para t = n, su utilidad para este período de tiempo es: ub (n) = kb 1ΔN - 1 1 + 1/2 mx i = 2 δ I (n - 1) I (6) recuerda queLos agentes no conocen Ka I y Kb I (para C <i ≤ m). Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros sobre la base de las funciones de distribución de probabilidad para KA I y KB I. Sin embargo, durante la negociación de la emisión C, los agentes conocen KA C pero no KB C (ver Paso 1 del Protocolo en línea). Por lo tanto, A calcula UB (N) como sigue. La utilidad del agente BS del problema C = 1 es Kb 1ΔN - 1 1 (que es el primer término de la ecuación 6). Luego, sobre la base de las funciones de distribución de probabilidad para Ka I y KB I, el agente A calcula la utilidad esperada de cada problema futuro I como δ I (N - 1) I /2 (ya que KA I y KB I se distribuyen de manera uniforme[0, 1]). Por lo tanto, la utilidad acumulativa esperada de BS de estos problemas m - c es 1/2 pm I = 2 δ I (N - 1) I (que es el segundo término de la ecuación 6). Ahora, para decidir qué ofrecer para el problema C = 1, el agente de oferta para t = n - 1 (es decir, agente a) debe resolver el siguiente problema de mochila en línea: maximizar σm i = 1ka i (1 - ¯bt I) ΔN - 1 I (7) tal que σm i = 1kb i ¯Bt I ≥ ub (n) ¯Bt i = 0 o 1 para 1 ≤ i ≤ m Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar σm i = 1ka i (1 --¯bt i) Δn - 1 I es lo mismo que minimizar σm i = 1ka i ¯Bt I ya que ΔN - 1 I y Ka I son constantes. Por lo tanto, escribimos la ecuación 7 como: minimizar σm i = 1ka i ¯bt i (8) tal que σm i = 1kb i ¯bt i ≥ ub (n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m anteriorEl problema de optimización es análogo al problema de mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha propuesto en [16]. Este algoritmo se llama algoritmo en línea de opción fija. Tiene complejidad de tiempo lineal en el número de elementos (M) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo en línea-Tradeoffa no es más que el algoritmo en línea de opción fija y, por lo tanto, tiene la misma complejidad del tiempo que este último. Este algoritmo toma los valores de KA I y KB I uno a la vez y genera una solución aproximada al problema de la mochila anterior. La diferencia esperada entre la solución óptima y aproximada es E [z ∗ m-zm] = o (√ m) [16] (ver [16] para el algoritmo en línea de opción fija detallada y una prueba para e [z ∗ m-zm] = o (√ m)). El algoritmo en línea de opción fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea;La idea detrás de esto es la siguiente. Se determina un valor umbral sobre la base de la información sobre los pesos y las ganancias para el problema de la mochila 0-1. Luego, el método incluye en la mochila todos los elementos cuya densidad de ganancias (densidad de ganancias de un artículo es su beneficio por unidad de peso) excede el umbral hasta que se llene la mochila o se hayan considerado todos los elementos M. Con más detalle, el algoritmo en línea-tradeoffa funciona de la siguiente manera. Primero obtiene los valores de Ka 1 y KB 1 y encuentra ¯Bt c.Como tenemos un problema de mochila 0-1, ¯Bt C puede ser cero o uno. Ahora, si ¯Bt C = 1 para t = n, entonces ¯Bt C debe ser uno para 1 ≤ t <n (es decir, A debe ofrecer ¯Bt C = 1 en t = 1). Si ¯bt C = 1 para t = n, pero A ofrece ¯bt c = 0 en t = 1, entonces el agente B obtiene menos utilidad de lo que espera como oferta y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para A es ofrecer ¯bt c = 1 en t = 1. El agente B acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se alcanza un acuerdo en T = 1. En el próximo período de tiempo (es decir, t = 2), la negociación procede al próximo número. La fecha límite para el segundo problema es n períodos de tiempo desde el comienzo de la negociación sobre el tema. Para C = 2, el algoritmo en línea-TradeOffa recibe los valores de Ka 2 y KB 2 y encuentra ¯BT C como se describe anteriormente. El agente ofrece BC en T = 2 y B acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se alcanza un acuerdo en T = 2. Este proceso se repite para los problemas restantes C = 3 ,..., m.Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que la negociación para el próximo problema comienza en el siguiente período de tiempo (ver el paso 3 del protocolo en línea), el acuerdo sobre el tema I ocurre en el momento t = i. Por otro lado, si B es el agente de oferta en t = 1, usa el algoritmo en línea-tradeoffb que se define de manera análoga. Por lo tanto, independientemente de quién realice el primer movimiento, todos los problemas de M se resuelven en el momento t = m.Teorema 6. La complejidad del tiempo para encontrar las ofertas de equilibrio aproximadas del Teorema 5 es lineal en m.PRUEBA. La complejidad del tiempo de en línea-Tradeoffa y OnlinetradeOffb es la misma que la complejidad del tiempo del algoritmo en línea de elección fija de [16]. Dado que este último tiene complejidad de tiempo lineal en M, la complejidad del tiempo de en línea-tradeoffa y onlinetradeoffb también es lineal en m.Vale la pena señalar que, para el problema de la mochila 0-1, el límite inferior en la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω (1) [16]. Por lo tanto, se deduce que este límite inferior también es válido para nuestro problema de negociación.5. El trabajo relacionado con la negociación de múltiples problemas se puede dividir en dos tipos principales: el de los problemas indivisibles y el de los problemas divisibles. Primero describimos el trabajo existente para el caso de cuestiones divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de la negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples problemas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, una cuestión clave es la agenda de negociación. Aquí el término agenda se refiere a la orden en que se negocian los problemas. La agenda es importante porque cada agente de utilidad acumulativa depende de la agenda;Si cambiamos la agenda, estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda usarán. Ahora, la agenda se puede decidir antes de negociar los problemas (dicha agenda se llama exógena) o se puede decidir durante el proceso de negociación (dicha agenda se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con una agenda exógena. Varios investigadores también han estudiado negociaciones con una agenda endógena [2]. En contraste con el trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento del paquete. Sin embargo, todo el trabajo mencionado anteriormente difiere de el nuestro, ya que nos centramos en temas indivisibles, mientras que otros se centran en el caso del Sexto INTL. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 957, donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples problemas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente problemas de asignación de tareas (para tareas que no pueden separarse) a un grupo de agentes. El problema de la asignación de tareas se ha estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo, [25] analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su conjunto. En contraste, nuestro enfoque está en dos agentes donde ambos se interesan y quieren maximizar sus servicios públicos individuales. Por otro lado, centrarse en el uso de contratos para la asignación de tareas a múltiples agentes interesados, pero este trabajo se refiere a encontrar formas de desmantelar contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de los agentes. En contraste, nuestro enfoque en la negociación sobre quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de las subastas [14, 9] pero no para negociaciones bilaterales (que es el foco de nuestro trabajo).6. Conclusiones Este documento ha estudiado la negociación bilateral de problemas múltiples entre agentes autónomos egoístas con limitaciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran diferentes problemas de manera diferente. Por lo tanto, el problema es que los agentes decidan cómo asignar los problemas entre ellos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-Hard incluso en una configuración de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad del tiempo polinómico. También analizamos la diferencia entre el verdadero óptimo y el óptimo aproximado. Finalmente, ampliamos el análisis a la negociación en línea donde los problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre las características de estos problemas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Hay varias direcciones interesantes para el trabajo futuro. Primero, para la negociación en línea, asumimos que las constantes Ka C y KB C están distribuidas de manera uniforme. Será interesante analizar el caso donde Ka C y KB C tienen otras distribuciones de probabilidad, posiblemente diferentes. Aparte de esto, tratamos el número de problemas como de conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como inciertos.7. Referencias [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: problemas de optimización combinatoria y sus propiedades de aproximación. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones de emisión por tema: el papel de la información y la preferencia de tiempo. Juegos y comportamiento económico, 13: 125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. División Justa: desde el corte de pastel hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch e I. J. Horstman. Fricciones de negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples problemas. Economica, 64: 669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples problemas con plazos. Journal of Artificial Intelligence Research, 27: 381-417, 2006. [7] C. Fershtman. La importancia de la agenda en la negociación. Juegos y comportamiento económico, 2: 224-238, 1990. [8] F. Glover. Un algoritmo dual multifásico para el problema de programación entera cero-one. Operations Research, 13: 879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápidos para la mochila y suma de problemas de subconjunto. Journal of ACM, 22: 463-468, 1975. [11] R. Inderst. Negociación de múltiples problemas con agenda endógena. Juegos y comportamiento económico, 30: 64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias y compensaciones de valores. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos de múltiples agentes. The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. Ocallaghan e Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Journal of the ACM, 49 (5): 577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión y Negociación del Grupo, 12 (1): 31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas estocásticos de mochila en línea. Programación Matemática, 68: 73-104, 1995. [17] S. Martello y P. Toth. Problemas de mochila: algoritmos e implementaciones de computadora. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. The MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de encuentro. MIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50 (1): 97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelados y violación estratégica. Juegos y comportamiento económico: número especial sobre IA y Economía, 35: 212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociación con plazos. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre negociación. American Economic Review, 46: 281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de la coalición del agente. Artificial Intelligence Journal, 101 (1-2): 165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Computación de equilibrio de nash de Bayes aproximado en juegos de árboles de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Economics Research Institute, Stockholm School of Economics, Estocolmo, 1972. 958 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07)",
    "original_sentences": [
        "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
        "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
        "The agents have time constraints in the form of both deadlines and discount factors.",
        "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
        "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
        "Here different agents value different issues differently.",
        "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
        "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
        "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
        "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
        "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
        "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
        "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
        "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
        "These approximate strategies also have polynomial time complexity.",
        "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
        "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
        "It is a process in which disputing agents decide how to divide the gains from cooperation.",
        "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
        "Now, the simplest form of negotiation involves two agents and a single issue.",
        "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
        "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
        "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
        "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
        "That is, they must set the negotiation protocol [20].",
        "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
        "Given this context, this work focuses on competitive scenarios with self-interested agents.",
        "For such cases, each participant defines its strategy so as to maximise its individual utility.",
        "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
        "For this case, the issues may be divisible or indivisible [4].",
        "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
        "For the latter, the individual issues cannot be divided.",
        "An issue, in its entirety, must be allocated to either of the two agents.",
        "Since the agents value different issues differently, they must come to terms about who will take which issue.",
        "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
        "However, in many real-world settings, the issues are indivisible.",
        "Hence, our focus here is on negotiation for indivisible issues.",
        "Such negotiations are very common in multiagent systems.",
        "For example, consider the case of task allocation between two agents.",
        "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
        "The tasks cannot be partitioned; a task must be carried out by one agent.",
        "The problem then is for the agents to negotiate about who will carry out which task.",
        "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
        "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
        "However, such computational issues have so far received little attention.",
        "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
        "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
        "Thus, we consider negotiations in which there is incomplete information and time constraints.",
        "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
        "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
        "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
        "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
        "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
        "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
        "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
        "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
        "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
        "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
        "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
        "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
        "These approximate strategies also have polynomial time complexity.",
        "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
        "No previous work has determined these equilibria.",
        "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
        "The remainder of the paper is organised as follows.",
        "We begin by giving a brief overview of single-issue negotiation in Section 2.",
        "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
        "We then present an approximate equilibrium and evaluate its approximation error.",
        "Section 4 analyzes online multi-issue negotiation.",
        "Section 5 discusses the related literature and Section 6 concludes. 2.",
        "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
        "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
        "Hence we use this basic single issue model and extend it to multiple issues.",
        "Before doing so, we give an overview of this model and its equilibrium strategies.",
        "There are two strategic agents: a and b.",
        "Each agent has time constraints in the form of deadlines and discount factors.",
        "The two agents negotiate over a single indivisible issue (i).",
        "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
        "There is a deadline (i.e., a number of rounds by which negotiation must end).",
        "Let n ∈ N+ denote this deadline.",
        "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
        "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
        "Agent b can either accept or reject the offer.",
        "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
        "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
        "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
        "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
        "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
        "Specifically, the decrease occurs at each step of offer and counteroffer.",
        "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
        "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
        "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
        "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
        "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
        "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
        "To begin, consider the case where the deadline for both agents is n = 1.",
        "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
        "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
        "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
        "Now, consider the case where the deadline is n = 2.",
        "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
        "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
        "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
        "Hence, during the first time period, agent a offers [0, 1].",
        "Agent b accepts this and an agreement occurs in the first time period.",
        "In general, if the deadline is n, negotiation proceeds as follows.",
        "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
        "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
        "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
        "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
        "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
        "This, in turn, depends on whether n is odd or even.",
        "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
        "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
        "Note that the equilibrium outcome depends on who makes the first move.",
        "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
        "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
        "We then present a time efficient approximate equilibrium. 3.",
        "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
        "This section forms the base which we extend to the case of information uncertainty in Section 4.",
        "Here a and b negotiate over m > 1 indivisible issues.",
        "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
        "Let S = {1, 2, . . . , m} denote the set of m pies.",
        "As before, each pie is of size 1.",
        "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
        "For each issue, let n denote each agents deadline.",
        "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
        "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
        "The shares for a and b are together represented as the package [xt , yt ].",
        "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
        "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
        "Here N+ denotes the set of positive integers.",
        "These vectors indicate how the agents value different issues.",
        "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
        "Likewise for agent b.",
        "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
        "In all the settings we study, the issues will be perfect substitutes.",
        "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
        "Now, multi-issue negotiation can be done using different procedures.",
        "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
        "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
        "Hence we adopt it here.",
        "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
        "However, an offer for the package deal includes a proposal for each issue under negotiation.",
        "Thus, for m issues, an offer includes m divisions, one for each issue.",
        "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
        "An agreement can therefore take place either on all m issues or on none of them.",
        "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
        "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
        "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
        "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
        "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
        "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
        "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
        "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
        "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
        "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
        "THEOREM 1.",
        "For the package deal procedure, the following strategies form a Nash equilibrium.",
        "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
        "PROOF.",
        "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
        "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
        "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
        "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
        "During time period t, either a or b could be the offering agent.",
        "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
        "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
        "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
        "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
        "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
        "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
        "The function TRADEOFFB for agent b is analogous to that for a.",
        "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
        "For time period t, let b denote the receiving agent.",
        "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
        "The equilibrium strategy for a as receiving agent is defined analogously.",
        "In this way, we reason backwards and obtain the offers for the first time period.",
        "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
        "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
        "EXAMPLE 1.",
        "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
        "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
        "Let agent a be the first mover.",
        "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
        "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
        "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
        "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
        "This gives a cumulative utility of 3 to a and 5 to b.",
        "Agent b accepts the package and an agreement takes place in the first time period.",
        "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
        "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
        "There is a knapsack with a given capacity.",
        "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
        "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
        "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
        "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
        "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
        "The following theorem proves this.",
        "THEOREM 2.",
        "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
        "PROOF.",
        "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
        "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
        "Hence we use these methods to find a solution to our negotiation problem.",
        "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
        "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
        "On the other hand, our negotiation problem involves two players and they are both strategic.",
        "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
        "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
        "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
        "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
        "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
        "There are two key issues in the design of approximate algorithms [1]: sack problem.",
        "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
        "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
        "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
        "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
        "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
        "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
        "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
        "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
        "This method is based on dynamic programming.",
        "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
        "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
        "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
        "This is done as follows.",
        "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
        "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
        "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
        "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
        "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
        "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
        "THEOREM 3.",
        "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
        "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
        "An agreement takes place at t = 1.",
        "PROOF.",
        "As in the proof for Theorem 1, we use backward reasoning.",
        "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
        "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
        "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
        "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
        "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
        "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
        "Assume that a is the offering agent for t = n − 1.",
        "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
        "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
        "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
        "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
        "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
        "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
        "By reasoning backwards, we obtain the offer for time period t = 1.",
        "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
        "The receiving agent accepts the offer.",
        "This is because the relative error in its cumulative utility from the offer is at most .",
        "An agreement therefore takes place in the first time period.",
        "THEOREM 4.",
        "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
        "PROOF.",
        "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
        "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
        "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
        "This analysis was done in a complete information setting.",
        "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
        "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
        "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
        "All our analysis for the complete information setting still holds for The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
        "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
        "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
        "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
        "As before, let m be the total number of issues that are up for negotiation.",
        "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
        "This probability distribution, n, and m are common knowledge to the agents.",
        "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
        "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
        "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
        "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
        "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
        "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
        "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
        "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
        "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
        "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
        "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
        "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
        "The protocol is defined as follows.",
        "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
        "Step 1.",
        "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
        "Step 2.",
        "The agents settle issue c using the alternating offers protocol described in Section 2.",
        "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
        "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
        "Step 3.",
        "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
        "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
        "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
        "Before doing so, however, we give a brief overview of the online knapsack problem.",
        "In the online knapsack problem, there are m items.",
        "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
        "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
        "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
        "Our online negotiation problem is analogous to the online knapsack problem.",
        "This analogy is described in detail in the proof for Theorem 5.",
        "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
        "Hence we use this solution and show that it forms an equilibrium.",
        "The following theorem characterizes an approximate equilibrium for online negotiation.",
        "Here the agents have to choose a strategy without knowing the features of the future issues.",
        "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
        "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
        "Also, the online knapsack can only be solved approximately [16].",
        "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
        "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
        "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
        "THEOREM 5.",
        "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
        "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
        "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
        "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
        "Let a be the offering agent for t = 1 for all the m issues.",
        "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
        "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
        "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
        "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
        "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
        "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
        "Hence, a computes UB(n) as follows.",
        "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
        "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
        "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
        "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
        "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
        "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
        "An algorithm to solve the online knapsack problem has already proposed in [16].",
        "This algorithm is called the fixed-choice online algorithm.",
        "It has time complexity linear in the number of items (m) in the knapsack problem.",
        "We use this to solve our online negotiation problem.",
        "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
        "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
        "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
        "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
        "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
        "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
        "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
        "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
        "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
        "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
        "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
        "Agent b accepts the offer.",
        "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
        "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
        "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
        "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
        "Agent offers bc at t = 2 and b accepts.",
        "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
        "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
        "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
        "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
        "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
        "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
        "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
        "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
        "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
        "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
        "We first describe the existing work for the case of divisible issues.",
        "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
        "However, most of this work has focussed on the sequential procedure [7, 2].",
        "For this procedure, a key issue is the negotiation agenda.",
        "Here the term agenda refers to the order in which the issues are negotiated.",
        "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
        "Hence, the agents must decide what agenda they will use.",
        "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
        "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
        "A number of researchers have also studied negotiations with an endogenous agenda [2].",
        "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
        "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
        "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
        "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
        "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
        "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
        "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
        "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
        "In contrast, our focuses on negotiation regarding who will carry out which task.",
        "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
        "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
        "The issues are indivisible and different agents value different issues differently.",
        "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
        "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
        "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
        "These strategies have polynomial time complexity.",
        "We also analysed the difference between the true optimum and the approximate optimum.",
        "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
        "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
        "These approximate strategies also have polynomial time complexity.",
        "There are several interesting directions for future work.",
        "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
        "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
        "Apart from this, we treated the number of issues as being common knowledge to the agents.",
        "In future, it will be interesting to treat the number of issues as uncertain. 7.",
        "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
        "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
        "Springer, 2003. [2] M. Bac and H. Raff.",
        "Issue-by-issue negotiations: the role of information and time preference.",
        "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
        "Online Computation and Competitive Analysis.",
        "Cambridge University Press, 1998. [4] S. J. Brams.",
        "Fair division: from cake cutting to dispute resolution.",
        "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
        "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
        "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
        "Multi-issue negotiation with deadlines.",
        "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
        "The importance of the agenda in bargaining.",
        "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
        "A multiphase dual algorithm for the zero-one integer programming problem.",
        "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
        "Adaptive limited-supply online auctions.",
        "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
        "Fast approximation algorithms for the knapsack and sum of subset problems.",
        "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
        "Multi-issue bargaining with endogenous agenda.",
        "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
        "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
        "New York: John Wiley, 1976. [13] S. Kraus.",
        "Strategic negotiation in multi-agent environments.",
        "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
        "Truth revelation in approximately efficient combinatorial auctions.",
        "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
        "A classification scheme for negotiation in electronic commerce.",
        "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
        "Stochastic online knapsack problems.",
        "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
        "Knapsack problems: Algorithms and computer implementations.",
        "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
        "A Course in Game Theory.",
        "The MIT Press, 1994. [19] H. Raiffa.",
        "The Art and Science of Negotiation.",
        "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
        "Rules of Encounter.",
        "MIT Press, 1994. [21] A. Rubinstein.",
        "Perfect equilibrium in a bargaining model.",
        "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
        "Levelled commitment contracts and strategic breach.",
        "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
        "Bargaining with deadlines.",
        "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
        "An essay on bargaining.",
        "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
        "Methods for task allocation via agent coalition formation.",
        "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
        "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
        "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
        "Bargaining Theory.",
        "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
    ],
    "error_count": 0,
    "keys": {
        "negotiation": {
            "translated_key": "negociación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue <br>negotiation</br> Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue <br>negotiation</br> between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for <br>negotiation</br> where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for <br>negotiation</br> are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present <br>negotiation</br> strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the <br>negotiation</br> deadline and the relative error.",
                "Finally, we extend the analysis to online <br>negotiation</br> where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online <br>negotiation</br> and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION <br>negotiation</br> is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of <br>negotiation</br> involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the <br>negotiation</br> protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of <br>negotiation</br>).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue <br>negotiation</br> has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on <br>negotiation</br> for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue <br>negotiation</br> is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on <br>negotiation</br> for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since <br>negotiation</br> cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for <br>negotiation</br> are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the <br>negotiation</br> deadline and the relative error.",
                "Finally, we extend the analysis to online <br>negotiation</br> where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online <br>negotiation</br> and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue <br>negotiation</br> problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue <br>negotiation</br> in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue <br>negotiation</br> and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue <br>negotiation</br>.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE <br>negotiation</br> We adopt the single issue model of [27] because this is a model where, during <br>negotiation</br>, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which <br>negotiation</br> must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts <br>negotiation</br> in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, <br>negotiation</br> ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, <br>negotiation</br> proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits <br>negotiation</br> (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the <br>negotiation</br>.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if <br>negotiation</br> proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, <br>negotiation</br> proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and <br>negotiation</br> ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue <br>negotiation</br> with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE <br>negotiation</br> We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all <br>negotiation</br> parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue <br>negotiation</br> can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue <br>negotiation</br> (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under <br>negotiation</br>.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue <br>negotiation</br>, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if <br>negotiation</br> reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for <br>negotiation</br>, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if <br>negotiation</br> reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the <br>negotiation</br> problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our <br>negotiation</br> problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our <br>negotiation</br> problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our <br>negotiation</br> problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our <br>negotiation</br> problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our <br>negotiation</br> problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue <br>negotiation</br>.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the <br>negotiation</br> is done offline; i.e., the agents know their preference for each individual issue before <br>negotiation</br> begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline <br>negotiation</br>, we focus on online multi-issue <br>negotiation</br>. 4.",
                "ONLINE MULTI-ISSUE <br>negotiation</br> We now consider a more general and, arguably more realistic, version of multi-issue <br>negotiation</br>, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for <br>negotiation</br>.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before <br>negotiation</br> for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online <br>negotiation</br> since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the <br>negotiation</br> problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online <br>negotiation</br> and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "<br>negotiation</br> for issue c must end within n time periods from the start of <br>negotiation</br> on the issue.",
                "If an agreement is not reached within this time, then <br>negotiation</br> fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. <br>negotiation</br> for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online <br>negotiation</br> problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online <br>negotiation</br> problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online <br>negotiation</br>.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing <br>negotiation</br> on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the <br>negotiation</br> for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online <br>negotiation</br> problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, <br>negotiation</br> on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), <br>negotiation</br> proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of <br>negotiation</br> on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, <br>negotiation</br> on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As <br>negotiation</br> for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our <br>negotiation</br> problem. 5.",
                "RELATED WORK Work on multi-issue <br>negotiation</br> can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of <br>negotiation</br> depends on the choice of <br>negotiation</br> procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the <br>negotiation</br> agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of <br>negotiation</br> (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential <br>negotiation</br> with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential <br>negotiation</br>, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue <br>negotiation</br> or for online <br>negotiation</br>.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on <br>negotiation</br> regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue <br>negotiation</br> between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal <br>negotiation</br> strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online <br>negotiation</br> where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online <br>negotiation</br> and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online <br>negotiation</br>, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue <br>negotiation</br> with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic <br>negotiation</br> in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for <br>negotiation</br> in electronic commerce.",
                "International Journal of Group Decision and <br>negotiation</br>, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of <br>negotiation</br>.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Negociación\" de múltiples problemas aproximados y en línea de Shaheen S. Fátima del Departamento de Ciencias de la Computación de la Universidad de Liverpool Liverpool L69 3BX, Reino Unido.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido.mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, Reino Unido.nrj@ecs.soton.ac.uk Resumen Este artículo analiza la \"negociación\" bilateral de problemas múltiples entre agentes autónomos autoinalgados.",
                "Hay m> 1 problemas para la \"negociación\" donde cada problema se considera un pastel de tamaño uno.",
                "Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en que los problemas de \"negociación\" se conocen a priori a las partes.",
                "Para superar esta complejidad computacional, luego presentamos estrategias de \"negociación\" que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un equilibrio.",
                "La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de \"negociación\" y el error relativo.",
                "Finalmente, ampliamos el análisis a la \"negociación\" en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros de sus valoraciones para estos problemas.",
                "Específicamente, mostramos que existe un equilibrio aproximado para la \"negociación\" en línea y mostramos que la diferencia esperada entre lo óptimo y lo aproximado es o (√ m).",
                "La \"negociación\" de introducción es una forma clave de interacción en sistemas multiagentes.",
                "Ahora, la forma más simple de \"negociación\" involucra a dos agentes y un solo problema.",
                "Es decir, deben establecer el protocolo de \"negociación\" [20].",
                "Sobre la base de este protocolo, cada agente elige su estrategia (es decir, qué ofrece que debe hacer durante el curso de la \"negociación\").",
                "Hasta la fecha, la mayor parte del trabajo existente sobre \"negociación\" de múltiples problemas se ha centrado en el caso anterior [7, 2, 5, 23, 11, 6].",
                "Por lo tanto, nuestro enfoque aquí está en la \"negociación\" para temas indivisibles.",
                "Un problema clave en el estudio de la \"negociación\" de problemas múltiples es determinar las estrategias de equilibrio.",
                "Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (describe en la Sección 5) se ha centrado principalmente en la \"negociación\" para los temas divisibles 951 978-81-904262-7-5 (RPS) c 2007 Ifaamas y encontrar elEl equilibrio para este caso es computacionalmente más fácil que el de los problemas indivisibles.",
                "Los plazos son un elemento esencial ya que la \"negociación\" no puede continuar indefinidamente, sino que debe terminar dentro de un límite de tiempo razonable.",
                "Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en el que todos los problemas para la \"negociación\" se conocen a priori para ambos agentes.",
                "La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de \"negociación\" y el error relativo.",
                "Finalmente, ampliamos el análisis a la \"negociación\" en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros de sus valoraciones para estos problemas.",
                "Específicamente, mostramos que existe un equilibrio aproximado para la \"negociación\" en línea y mostramos que la diferencia esperada entre lo óptimo y lo aproximado es o (√ m).",
                "Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de \"negociación\" de múltiples problemas anterior y encontrar los equilibrios aproximados y en línea.",
                "Comenzamos dando una breve descripción de la \"negociación\" de un solo tema en la Sección 2.",
                "En la Sección 3, obtenemos el equilibrio para la \"negociación\" de problemas múltiples y mostramos que encontrar ofertas de equilibrio es un problema difícil.",
                "La Sección 4 analiza la \"negociación\" de múltiples problemas en línea.",
                "\"Negociación\" de un solo problema adoptamos el modelo de un solo problema de [27] porque este es un modelo en el que, durante la \"negociación\", las partes pueden hacer ofertas de un conjunto de ofertas discretas.",
                "Hay una fecha límite (es decir, una serie de rondas por las cuales la \"negociación\" debe terminar).",
                "Uno de los agentes, digamos A, comienza \"negociación\" en el primer período (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b.",
                "Si acepta, la \"negociación\" termina en un acuerdo con una obtención de Xi y B obteniendo yi = 1 - xi.",
                "De lo contrario, la \"negociación\" procede al próximo período de tiempo, en el que el Agente B hace una contraoferta.",
                "Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o deja de \"negociación\" (que resulta en un conflicto).",
                "Por lo tanto, hay tres posibles acciones que un agente puede tomar durante cualquier período de tiempo: acepte la última oferta, haga una nueva contratera o renuncie a la \"negociación\".",
                "Agente una razón por la cual si la \"negociación\" procede a la segunda ronda, B tomará el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para A.",
                "En general, si la fecha límite es n, la \"negociación\" procede de la siguiente manera.",
                "Por lo tanto, dependiendo de si N es impar o incluso, A realiza la siguiente oferta en t = 1: a (1) = j oferta [1, 0] Si impar n acepta si bs gira b (1) = j oferta [0,1] Si incluso N acepta si, como turno, el agente B acepta esta oferta y la \"negociación\" termina en el primer período de tiempo.",
                "Sobre la base del equilibrio anterior para la \"negociación\" de un solo tema con información completa, primero obtenemos el equilibrio para múltiples problemas y luego mostramos que calcular estas ofertas es un problema difícil.",
                "\"Negociación\" de múltiples problemas primero analizamos la configuración de información completa.",
                "Para comenzar, cada agente tiene información completa sobre todos los parámetros de \"negociación\" (es decir, N, M, Ka C, Kb C y ΔC para 1 ≤ C ≤ M).",
                "Ahora, la \"negociación\" de múltiples problemas se puede realizar utilizando diferentes procedimientos.",
                "Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para ello.3.1 El procedimiento de oferta de paquete En este procedimiento, los agentes usan el mismo protocolo que para la \"negociación\" de un solo elemento (descrito en la Sección 2).",
                "Sin embargo, una oferta para el paquete incluye una propuesta para cada tema bajo \"negociación\".",
                "Según la \"negociación\" de un solo tema, un agente decide qué ofrecer mirando hacia el futuro y el razonamiento hacia atrás.",
                "Para comenzar, si la \"negociación\" llega a la fecha límite (n), entonces el agente cuyo turno lo toma todo y no deja nada para su oponente.",
                "Suponga que hay M = 2 problemas para la \"negociación\", la fecha límite para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2.",
                "Al usar el razonamiento atrasado, A sabe que si la \"negociación\" alcanza el segundo período de tiempo (que es la fecha límite), B obtendrá cien por ciento de ambos problemas.",
                "Este problema es análogo al problema de \"negociación\" que queremos resolver (es decir, el problema de maximización de la ecuación 3).",
                "Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de \"negociación\".",
                "En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de \"negociación\".",
                "Por otro lado, nuestro problema de \"negociación\" involucra a dos jugadores y ambos son estratégicos.",
                "Por lo tanto, nuestro objetivo es usar la solución al problema de la mochila 0-1 propuesto en [10] y mostrar que forma un equilibrio aproximado a nuestro problema de \"negociación\".",
                "Dado que el método Ibarra y Kim es totalmente polinomial, lo usamos para resolver nuestro problema de \"negociación\".",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos ¯a (t) (respectivamente ¯b (t)) denotan la estrategia de equilibrio aproximada para el agente A (respectivamente b). El siguiente teorema usa esta notación y caracterizaUn equilibrio aproximado para la \"negociación\" de múltiples problemas.",
                "Sin embargo, una extensión de este análisis a una configuración de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es sencillo, siempre que la \"negociación\" se realice fuera de línea;es decir, los agentes saben su preferencia por cada problema individual antes de que comience la \"negociación\".",
                "Por lo tanto, en lugar de analizar una configuración de información incompleta para la \"negociación\" fuera de línea, nos centramos en la \"negociación\" de emisión múltiple en línea.4.",
                "La \"negociación\" en línea de múltiples emisiones en línea, ahora consideramos una versión más general y, posiblemente más realista, de la \"negociación\" de múltiples problemas, donde los agentes no están seguros sobre los problemas que tendrán que negociar en el futuro.",
                "Como antes, sea el número total de problemas que están en \"negociación\".",
                "Sin embargo, los agentes llegan a conocer KA C y KB C solo antes de que comience la \"negociación\" para el problema C.",
                "Este escenario requiere \"negociación\" en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3].",
                "Primero damos una breve introducción a los problemas en línea y luego dibujamos una analogía entre el problema de la mochila en línea y el problema de \"negociación\" que queremos resolver.",
                "Tenga en cuenta que el subíndice m se usa para indicar el hecho de que esta diferencia depende de m.Ahora describimos el protocolo para la \"negociación\" en línea y luego obtenemos un equilibrio aproximado.",
                "La \"negociación\" para el problema C debe finalizar dentro de N períodos de tiempo desde el comienzo de la \"negociación\" sobre el tema.",
                "Si no se llega a un acuerdo dentro de este tiempo, entonces la \"negociación\" falla en esto y en todos los asuntos restantes.",
                "Los pasos anteriores se repiten para los problemas c = 2, 3 ,..., m.La \"negociación\" para la emisión C (2 ≤ c ≤ m) comienza en el período de tiempo posterior a un acuerdo sobre la emisión C - 1. 5 Asumimos el conocimiento común porque simplifica la exposición.",
                "Para resolver este problema de \"negociación\" en línea, dibujamos la analogía con el problema de la mochila en línea.",
                "Nuestro problema de \"negociación\" en línea es análogo al problema de la mochila en línea.",
                "El siguiente teorema caracteriza un equilibrio aproximado para la \"negociación\" en línea.",
                "Considere el último período de tiempo t = n (recordar desde el paso 2 del protocolo en línea de que n es la fecha límite para completar la \"negociación\" sobre el primer tema).",
                "Sin embargo, durante la \"negociación\" para el problema C, los agentes conocen KA C pero no KB C (ver Paso 1 del Protocolo en línea).",
                "Usamos esto para resolver nuestro problema de \"negociación\" en línea.",
                "Por lo tanto, la \"negociación\" sobre el primer tema comienza en t = 1 y también se alcanza un acuerdo en T = 1.",
                "En el próximo período de tiempo (es decir, t = 2), la \"negociación\" procede al siguiente tema.",
                "La fecha límite para el segundo problema es N períodos de tiempo desde el comienzo de la \"negociación\" sobre el tema.",
                "Por lo tanto, la \"negociación\" sobre el segundo tema comienza en t = 2 y también se alcanza un acuerdo sobre él en t = 2.",
                "A medida que la \"negociación\" para el próximo problema comienza en el siguiente período de tiempo (vea el paso 3 del protocolo en línea), el acuerdo sobre el tema I ocurre en el tiempo t = i.",
                "Por lo tanto, se deduce que este límite inferior también es válido para nuestro problema de \"negociación\".5.",
                "El trabajo relacionado con la \"negociación\" de múltiples problemas se puede dividir en dos tipos principales: el de los problemas indivisibles y el de los problemas divisibles.",
                "Dado que Schelling [24] señaló por primera vez que el resultado de la \"negociación\" depende de la elección del procedimiento de \"negociación\", se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples problemas.",
                "Para este procedimiento, una cuestión clave es la agenda de \"negociación\".",
                "Ahora, la agenda se puede decidir antes de negociar los problemas (dicha agenda se llama exógena) o se puede decidir durante el proceso de \"negociación\" (dicha agenda se llama endógena).",
                "Por ejemplo, Fershtman [7] analiza la \"negociación\" secuencial con una agenda exógena.",
                "En contraste con el trabajo anterior que trata principalmente de \"negociación\" secuencial, [6] estudia el equilibrio para el procedimiento de paquete.",
                "Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la \"negociación\" de múltiples problemas o para la \"negociación\" en línea.",
                "En contraste, nuestro enfoque en la \"negociación\" con respecto a quién llevará a cabo qué tarea.",
                "Conclusiones Este documento ha estudiado la \"negociación\" bilateral de múltiples problemas entre agentes autónomos egoístas con limitaciones de tiempo.",
                "Luego presentamos estrategias de \"negociación\" aproximadamente óptimas y demostramos que forman un equilibrio.",
                "Finalmente, ampliamos el análisis a la \"negociación\" en línea donde los problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre las características de estos problemas.",
                "Específicamente, demostramos que existe un equilibrio aproximado para la \"negociación\" en línea y analizamos el error de aproximación.",
                "Primero, para la \"negociación\" en línea, asumimos que las constantes Ka C y KB C están distribuidas de manera uniforme.",
                "\"Negociación\" de múltiples emisiones con plazos.",
                "\"Negociación\" estratégica en entornos de múltiples agentes.",
                "Un esquema de clasificación para la \"negociación\" en el comercio electrónico.",
                "Revista Internacional de Decisión y \"Negociación\", 12 (1): 31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis.",
                "El arte y la ciencia de la negociación\"."
            ],
            "translated_text": "",
            "candidates": [
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación",
                "Negociación",
                "negociación",
                "negociación",
                "negociación",
                "Negociación",
                "negociación"
            ],
            "error": []
        },
        "key form of interaction": {
            "translated_key": "forma clave de interacción",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a <br>key form of interaction</br> in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La negociación de la introducción es una \"forma clave de interacción\" en sistemas multiagentes."
            ],
            "translated_text": "",
            "candidates": [
                "forma clave de interacción",
                "forma clave de interacción"
            ],
            "error": []
        },
        "interaction key form": {
            "translated_key": "Formulario de clave de interacción",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "multiagent system": {
            "translated_key": "sistema multiagente",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in <br>multiagent system</br>s.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in <br>multiagent system</br>s.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "La negociación de la introducción es una forma clave de interacción en el \"sistema multiagente\".",
                "Dichas negociaciones son muy comunes en el \"sistema multiagente\" s."
            ],
            "translated_text": "",
            "candidates": [
                "sistema multiagente",
                "sistema multiagente",
                "sistema multiagente",
                "sistema multiagente"
            ],
            "error": []
        },
        "disputing agent": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which <br>disputing agent</br>s decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Es un proceso en el que los \"agentes de disputa\" deciden cómo dividir las ganancias de la cooperación."
            ],
            "translated_text": "",
            "candidates": [
                "agente de disputa",
                "agentes de disputa"
            ],
            "error": []
        },
        "gains from cooperation": {
            "translated_key": "ganancias de la cooperación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the <br>gains from cooperation</br>.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Es un proceso en el que los agentes de disputa deciden cómo dividir las \"ganancias de la cooperación\"."
            ],
            "translated_text": "",
            "candidates": [
                "ganancias de la cooperación",
                "ganancias de la cooperación"
            ],
            "error": []
        },
        "protocol": {
            "translated_key": "protocolo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation <br>protocol</br> [20].",
                "On the basis of this <br>protocol</br>, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers <br>protocol</br> (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers <br>protocol</br>, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same <br>protocol</br> as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers <br>protocol</br>, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the <br>protocol</br> for online negotiation and then obtain an approximate equilibrium.",
                "The <br>protocol</br> is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers <br>protocol</br> described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online <br>protocol</br> that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online <br>protocol</br>).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online <br>protocol</br>), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Es decir, deben establecer el \"protocolo\" de negociación [20].",
                "Sobre la base de este \"protocolo\", cada agente elige su estrategia (es decir, qué ofrece que debe hacer durante el curso de la negociación).",
                "Los agentes usan un \"protocolo\" alternativo (como el de Rubinstein [18]), que procede a través de una serie de períodos de tiempo.",
                "Dado que A hace una oferta en t = 1 y los agentes usan las ofertas alternos \"protocolo\", el agente de oferta durante el último período de tiempo es B si N es uniforme y es A si n es impar.",
                "Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para ello.3.1 El procedimiento de oferta de paquete En este procedimiento, los agentes usan el mismo \"protocolo\" que para la negociación de un solo problema (descrito en la Sección 2).",
                "Dado que A es el agente de oferta para t = n - 1 y los agentes usan las ofertas alternativas \"protocolo\", es bs giro en t = n.Así, UB ([¯at+1, ¯Bt+1], t+1) es igual a la utilidad acumulada BS de recibir cien por ciento de todos los problemas.",
                "Tenga en cuenta que el subíndice m se usa para indicar el hecho de que esta diferencia depende de m.Ahora describimos el \"protocolo\" para la negociación en línea y luego obtenemos un equilibrio aproximado.",
                "El \"protocolo\" se define de la siguiente manera.",
                "Los agentes liquidan el problema C utilizando las ofertas alternos \"Protocolo\" descrito en la Sección 2.",
                "Considere el último período de tiempo t = n (recordar desde el paso 2 del \"protocolo\" en línea que n es la fecha límite para completar la negociación sobre el primer tema).",
                "Sin embargo, durante la negociación de la emisión C, los agentes conocen KA C pero no KB C (ver Paso 1 del \"Protocolo\" en línea).",
                "A medida que la negociación para el próximo problema comienza en el siguiente período de tiempo (consulte el paso 3 del \"protocolo\" en línea), el acuerdo sobre el tema I ocurre en el tiempo t = i."
            ],
            "translated_text": "",
            "candidates": [
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "Protocolo",
                "Protocolo",
                "protocolo",
                "protocolo",
                "protocolo",
                "Protocolo",
                "protocolo",
                "protocolo"
            ],
            "error": []
        },
        "strategy": {
            "translated_key": "estrategia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its <br>strategy</br> (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its <br>strategy</br> so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium <br>strategy</br> for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium <br>strategy</br> for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium <br>strategy</br> for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a <br>strategy</br> profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium <br>strategy</br> for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a <br>strategy</br> without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE <br>strategy</br> is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal <br>strategy</br> and that by the approximate <br>strategy</br> is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal <br>strategy</br> for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Sobre la base de este protocolo, cada agente elige su \"estrategia\" (es decir, qué ofertas debe hacer durante el curso de la negociación).",
                "Para tales casos, cada participante define su \"estrategia\" para maximizar su utilidad individual.",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos que A (t) (respectivamente b (t)) denote la \"estrategia\" de equilibrio para el agente A (respectivamente b).3.2 Estrategias de equilibrio Como se menciona en la Sección 1, el paquete permite a los agentes hacer compensaciones.",
                "La \"estrategia\" de equilibrio para t = n es: a (n) = j oferta [1, 0] si es como turno aceptar si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente) Si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: Oferta TradeOffb (p, ua (t), t) si bsGire if (ub ([xt, yt], t) ≥ ub (t)) acepte el más rechazar si es como girar el sexto intl.",
                "Por otro lado, la \"estrategia\" de equilibrio para el agente que recibe una oferta es la siguiente.",
                "La \"estrategia\" de equilibrio para A como agente receptor se define análoga.",
                "En este enfoque, se dice que un perfil de \"estrategia\" forma un equilibrio de NASH aproximado si ninguno de los agentes puede ganar más de lo constante al desviarse.",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos ¯a (t) (respectivamente ¯b (t)) denotan la \"estrategia\" de equilibrio aproximado para el agente A (respectivamente b). El siguiente teorema utiliza esta notacióny caracteriza un equilibrio aproximado para la negociación de múltiples problemas.",
                "La \"estrategia\" de equilibrio para t = n es: ¯a (n) = j oferta [1, 0] si es como giro aceptar si bs gira ¯b (n) = j oferta [0, 1] si bs gira aceptar si es comoGire para todos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯a (t) = 8 <: oferta Aprx-tradeoffa (P, ub, ub, ub, ub, ub, ub,(t), t,) si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs gira ¯b (t) = 8 <: oferta aprx-tradeoffb (p,Ua (t), t,) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como giro donde ua (t) = ua ([¯at+1, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯, ¯Bt+1], t+1) y ub (t) = ub ([¯at+1, ¯bt+1], t+1).",
                "Aquí los agentes tienen que elegir una \"estrategia\" sin conocer las características de los problemas futuros.",
                "Sin embargo, encontrar una \"estrategia\" de los agentes es análogo a resolver el problema de mochila 0-1 en línea.",
                "La \"estrategia\" de equilibrio para t = n es: a (n) = j oferta [1, 0] si es como turno aceptar si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: a (t) = 8 <: oferta en línea-tradeoffa (p, ub (t), t) si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: ofrecer en línea-tradeoffb (p, ua (t),t) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como turno donde ua (t) = ua ([¯at+1, ¯bt+1], t+ 1) y ub (t) = ub ([¯at+ 1, ¯bt+ 1], t+ 1).",
                "Un acuerdo sobre la emisión C tiene lugar en t = c.Durante un período de tiempo dado, la diferencia esperada entre la solución generada por la \"estrategia\" óptima y la de la \"estrategia\" aproximada es e [z ∗ m - zm] = o (√ m).956 El sexto intl.",
                "Por lo tanto, si ¯bt c = 1 para t = n, entonces la \"estrategia\" óptima para A es ofrecer ¯bt c = 1 en t = 1."
            ],
            "translated_text": "",
            "candidates": [
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia",
                "estrategia"
            ],
            "error": []
        },
        "indivisible issue": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single <br>indivisible issue</br> (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los dos agentes negocian sobre un solo \"tema indivisible\" (i)."
            ],
            "translated_text": "",
            "candidates": [
                "problema indivisible",
                "tema indivisible"
            ],
            "error": []
        },
        "equilibrium": {
            "translated_key": "equilibrio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the <br>equilibrium</br> strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the <br>equilibrium</br> offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an <br>equilibrium</br>.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate <br>equilibrium</br> strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate <br>equilibrium</br> exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the <br>equilibrium</br> strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the <br>equilibrium</br> offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the <br>equilibrium</br> for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the <br>equilibrium</br> strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the <br>equilibrium</br> offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an <br>equilibrium</br>.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate <br>equilibrium</br> strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate <br>equilibrium</br> exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the <br>equilibrium</br> for multi-issue negotiation and show that finding <br>equilibrium</br> offers is an NP-hard problem.",
                "We then present an approximate <br>equilibrium</br> and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its <br>equilibrium</br> strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) <br>equilibrium</br> offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the <br>equilibrium</br> offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the <br>equilibrium</br> outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible <br>equilibrium</br> outcomes.",
                "On the basis of the above <br>equilibrium</br> for single-issue negotiation with complete information, we first obtain the <br>equilibrium</br> for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate <br>equilibrium</br>. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the <br>equilibrium</br> strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the <br>equilibrium</br> offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the <br>equilibrium</br> package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the <br>equilibrium</br> strategy for agent a (respectively b). 3.2 <br>equilibrium</br> strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the <br>equilibrium</br> for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own <br>equilibrium</br> offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the <br>equilibrium</br> strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The <br>equilibrium</br> strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the <br>equilibrium</br> strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above <br>equilibrium</br> strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the <br>equilibrium</br> offers.",
                "But, in general, it is not computationally easy to find the <br>equilibrium</br> offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the <br>equilibrium</br> offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the <br>equilibrium</br> offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding <br>equilibrium</br> for the package deal is also NP-hard. 3.3 Approximate <br>equilibrium</br> Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an <br>equilibrium</br>.",
                "The traditional approach for overcoming the computational complexity in finding an <br>equilibrium</br> has been to use an approximate <br>equilibrium</br> (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash <br>equilibrium</br> if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate <br>equilibrium</br> to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate <br>equilibrium</br> offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the <br>equilibrium</br> package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate <br>equilibrium</br> strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate <br>equilibrium</br> for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate <br>equilibrium</br> offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate <br>equilibrium</br> package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate <br>equilibrium</br> package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate <br>equilibrium</br> package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate <br>equilibrium</br> package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate <br>equilibrium</br> offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the <br>equilibrium</br> offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate <br>equilibrium</br> offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate <br>equilibrium</br>.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an <br>equilibrium</br>.",
                "The following theorem characterizes an approximate <br>equilibrium</br> for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant <br>equilibrium</br> solution is that of a Bayes Nash <br>equilibrium</br> (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant <br>equilibrium</br> solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this <br>equilibrium</br> using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the <br>equilibrium</br> offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate <br>equilibrium</br> offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the <br>equilibrium</br> for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate <br>equilibrium</br> for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the <br>equilibrium</br> offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an <br>equilibrium</br>.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate <br>equilibrium</br> exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect <br>equilibrium</br> in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Para tales negociaciones, primero obtenemos las estrategias de \"equilibrio\" para el caso en que los problemas de negociación se conocen a priori para las partes.",
                "Luego, analizamos su complejidad del tiempo y mostramos que encontrar las ofertas de \"equilibrio\" es un problema difícil, incluso en una configuración de información completa.",
                "Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un \"equilibrio\".",
                "La complejidad del tiempo de las estrategias aproximadas de \"equilibrio\" es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo.",
                "Específicamente, mostramos que existe un \"equilibrio\" aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O (√ m).",
                "Un problema clave en el estudio de la negociación de múltiples problemas es determinar las estrategias de \"equilibrio\".",
                "Un problema igualmente importante, especialmente en el contexto de los agentes de software, es encontrar la complejidad del tiempo para calcular las ofertas de \"equilibrio\".",
                "Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (describe en la Sección 5) se ha centrado principalmente en la negociación para cuestiones divisibles 951 978-81-904262-7-5 (RPS) c 2007 Ifaamas y encontrar el \"equilibrio\"Para este caso, es computacionalmente más fácil que eso para el caso de problemas indivisibles.",
                "Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de \"equilibrio\" para el caso en el que todos los problemas para la negociación se conocen a priori para ambos agentes.",
                "Para este caso, mostramos que el problema de encontrar las ofertas de \"equilibrio\" es NP-Hard, incluso en una configuración de información completa.",
                "Luego, para superar el problema de la complejidad del tiempo, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un \"equilibrio\".",
                "La complejidad del tiempo de las estrategias aproximadas de \"equilibrio\" es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo.",
                "Específicamente, mostramos que existe un \"equilibrio\" aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O (√ m).",
                "En la Sección 3, obtenemos el \"equilibrio\" para la negociación de múltiples problemas y mostramos que encontrar ofertas de \"equilibrio\" es un problema difícil.",
                "Luego presentamos un \"equilibrio\" aproximado y evaluamos su error de aproximación.",
                "Antes de hacerlo, damos una visión general de este modelo y sus estrategias de \"equilibrio\".",
                "Dejamos que A (1) (B (1)) denote como oferta de \"equilibrio\" (BS) para el primer período de tiempo.",
                "El agente como 1 que tiene un factor de descuento diferente para diferentes agentes solo hace que la presentación sea más involucrada sin conducir a ningún cambio en el análisis del comportamiento estratégico de los agentes o la complejidad del tiempo para encontrar las ofertas de \"equilibrio\".",
                "Tenga en cuenta que el resultado del \"equilibrio\" depende de quién realice el primer movimiento.",
                "Como tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de \"equilibrio\".",
                "Sobre la base del \"equilibrio\" anterior para la negociación de un solo tema con información completa, primero obtenemos el \"equilibrio\" para múltiples problemas y luego mostramos que calcular estas ofertas es un problema difícil.",
                "Luego presentamos un \"equilibrio\" aproximado de tiempo eficiente.3.",
                "Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de \"equilibrio\" para ello.3.1 El procedimiento de oferta de paquete En este procedimiento, los agentes usan el mismo protocolo que para la negociación de un solo problema (descrito en la Sección 2).",
                "Para 1 ≤ c ≤ m, la oferta de \"equilibrio\" para el problema C en el tiempo t se denota como [en C, Bt C] donde en C y Bt C denotan las acciones para el Agente A y B respectivamente.",
                "Denotamos el paquete de \"equilibrio\" en el tiempo t como [at, bt] donde en ∈ Bm (bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas M.",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos que A (t) (respectivamente b (t)) denota la estrategia de \"equilibrio\" para el agente A (respectivamente b).3.2 Estrategias de \"equilibrio\" Como se menciona en la Sección 1, el paquete permite a los agentes hacer compensaciones.",
                "Dado esto, el siguiente teorema caracteriza el \"equilibrio\" para el procedimiento de paquete.",
                "Para el procedimiento de paquete de paquete, las siguientes estrategias forman un \"equilibrio\" de NASH.",
                "La estrategia de \"equilibrio\" para t = n es: a (n) = j oferta [1, 0] si es como turno aceptar si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de \"equilibrio\" se definen de la siguiente manera: a (t) = 8 <: Oferta de compensación (P, ub (t), t) si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: Oferta TradeOffb (P, Ua (t), t)Si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como girar el sexto intl.",
                "En todos los períodos de tiempo anteriores (t <n), el agente de la oferta propone un paquete que le da a su oponente una utilidad acumulativa igual a lo que el oponente obtendría de su propia oferta de \"equilibrio\" para el próximo período de tiempo.",
                "Por otro lado, la estrategia de \"equilibrio\" para el agente que recibe una oferta es la siguiente.",
                "La estrategia de \"equilibrio\" para A como agente receptor se define análoga.",
                "Por lo tanto, obtenemos las estrategias de \"equilibrio\" (a (t) y b (t)) dadas en la declaración del teorema.",
                "El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de \"equilibrio\" anteriores.",
                "El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de \"equilibrio\".",
                "Pero, en general, no es computacionalmente fácil encontrar las ofertas de \"equilibrio\" del teorema 1.",
                "Para el procedimiento de paquete, el problema de encontrar las ofertas de \"equilibrio\" dadas en el Teorema 1 es NP-Hard.",
                "Encontrar las ofertas de \"equilibrio\" dadas en el Teorema 1 requiere resolver el problema de la mochila 0-1 dada en la ecuación 4.",
                "Dado que el problema de la mochila 0-1 es NP-Hard [17], el problema de encontrar \"equilibrio\" para el paquete también es NP-HARD.3.3 Investigadores de \"equilibrio\" aproximados en el área de algoritmos han encontrado métodos eficientes en el tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10].",
                "Por lo tanto, en nuestro caso, no es suficiente encontrar una solución aproximada al problema de la mochila, también debemos demostrar que tal aproximación forma un \"equilibrio\".",
                "El enfoque tradicional para superar la complejidad computacional para encontrar un \"equilibrio\" ha sido usar un \"equilibrio\" aproximado (ver [14, 26] por ejemplo).",
                "En este enfoque, se dice que un perfil de estrategia forma un \"equilibrio\" aproximado de NASH si ninguno de los agentes puede ganar más de lo que la constante se desvía.",
                "Por lo tanto, nuestro objetivo es usar la solución al problema de la mochila 0-1 propuesto en [10] y mostrar que forma un \"equilibrio\" aproximado a nuestro problema de negociación.",
                "Para 1 ≤ c ≤ m, la oferta aproximada de \"equilibrio\" para el problema C en el tiempo t se denota como [¯at c, ¯bt c] donde ¯at c y ¯bt c denotan las acciones para el agente A y B respectivamente.",
                "Denotamos el paquete de \"equilibrio\" en el tiempo t como [¯at, ¯bt] donde ¯at ∈ Bm (¯bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas.",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos ¯a (t) (respectivamente ¯b (t)) denotan la estrategia de \"equilibrio\" aproximada para el agente A (respectivamente b). El siguiente teorema utiliza esta notacióny caracteriza un \"equilibrio\" aproximado para la negociación de múltiples problemas.",
                "Para el procedimiento del paquete de paquete, las siguientes estrategias forman un \"equilibrio\" de NASH aproximado.",
                "La estrategia de \"equilibrio\" para t = n es: ¯a (n) = j oferta [1, 0] si como giro acepta si bs gira ¯b (n) = j oferta [0, 1] si bs gira aceptar si es comoGire para todos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de \"equilibrio\" se definen de la siguiente manera: ¯a (t) = 8 <: oferta Aprx-tradeoffa (p, Ub (t), t,) si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs gira ¯b (t) = 8 <: ofrece aprx-tradeOffb (P, ua (t), t,) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como giro donde ua (t) = ua ([¯at+1, ¯bt+1], t+1) y ub (t) = ub ([¯at+1, ¯bt+1], t+1).",
                "Agente A Debe ofrecer un paquete que le dé a B una utilidad acumulativa igual a lo que obtendría de su propia oferta aproximada de \"equilibrio\" para el próximo período de tiempo (es decir, UB ([¯at+1, ¯Bt+1], t+1) donde [¯at+1, ¯Bt+1] es el paquete de \"equilibrio\" aproximado para el próximo período de tiempo).",
                "Utilizando esta utilidad como la capacidad de la mochila, A usa aprox-tradeoffa y obtiene el paquete aproximado de \"equilibrio\" para t = n-1.",
                "Por otro lado, si B es el agente de oferta en t = n-1, usa aprox-tradeOffB para obtener el paquete de \"equilibrio\" aproximado.",
                "De la misma manera para t <n-1, el agente de ofrenda (digamos a) usa aprox-tradeoffa para encontrar un paquete aproximado de \"equilibrio\" que le da a b una utilidad de ub ([¯at+1, ¯bt+1], t+ 1).",
                "La complejidad del tiempo para encontrar la oferta aproximada de \"equilibrio\" para el primer período es O (nm/ 2).",
                "Para encontrar la oferta de \"equilibrio\" para el primer período de tiempo utilizando el razonamiento hacia atrás, se invoca aproxtadeoffa (o aproximadamente compensación) n veces.",
                "Por lo tanto, la complejidad del tiempo para encontrar la oferta aproximada de \"equilibrio\" para el primer período de tiempo es O (nm/ 2).",
                "Tenga en cuenta que el subíndice m se usa para indicar el hecho de que esta diferencia depende de m.Ahora describimos el protocolo para la negociación en línea y luego obtenemos un \"equilibrio\" aproximado.",
                "Por lo tanto, usamos esta solución y mostramos que forma un \"equilibrio\".",
                "El siguiente teorema caracteriza un \"equilibrio\" aproximado para la negociación en línea.",
                "Debido a esta información, la solución de \"equilibrio\" relevante es la de un \"equilibrio\" de Bayes Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18].",
                "Por lo tanto, el concepto de solución de \"equilibrio\" relevante es BNE aproximado (ver [26] por ejemplo).",
                "El siguiente teorema encuentra este \"equilibrio\" utilizando procedimientos en línea: el comercio y el comercio en línea que se definen en la prueba del teorema.",
                "Para el procedimiento del paquete, las siguientes estrategias forman un \"equilibrio\" de Bayes aproximado de Bayes.",
                "La estrategia de \"equilibrio\" para t = n es: a (n) = j oferta [1, 0] si es como turno aceptar si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de \"equilibrio\" se definen de la siguiente manera: a (t) = 8 <: Offer en línea-tradeoffa (P, ub (t), t) si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: ofrecer en línea-tradeoffb (p, ua (t), t) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como giro donde ua (t) = ua ([¯at+1, ¯Bt+1], t + 1) y ub (t) = ub ([¯at + 1, ¯bt + 1], t + 1).",
                "Como en el Teorema 1, encontramos la oferta de \"equilibrio\" para el período de tiempo t = 1 usando inducción hacia atrás.",
                "La complejidad del tiempo para encontrar las ofertas aproximadas de \"equilibrio\" del Teorema 5 es lineal en m.PRUEBA.",
                "En contraste con el trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el \"equilibrio\" para el procedimiento de paquete.",
                "Específicamente, ningún trabajo previo ha determinado un \"equilibrio\" aproximado para la negociación de múltiples problemas o para la negociación en línea.",
                "Específicamente, primero demostramos que encontrar las ofertas de \"equilibrio\" es un problema difícil de NP incluso en una configuración de información completa.",
                "Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un \"equilibrio\".",
                "Específicamente, demostramos que existe un \"equilibrio\" aproximado para la negociación en línea y analizamos el error de aproximación.",
                "\"Equilibrio\" perfecto en un modelo de negociación."
            ],
            "translated_text": "",
            "candidates": [
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "Equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "Equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "Equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "equilibrio",
                "Equilibrio"
            ],
            "error": []
        },
        "time constraint": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and <br>time constraint</br>s.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has <br>time constraint</br>s in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with <br>time constraint</br>s.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Los agentes tienen \"restricción de tiempo\" s en forma de plazos y factores de descuento.",
                "Por lo tanto, consideramos negociaciones en las que existe información incompleta y \"restricción de tiempo\" s.",
                "Además, los agentes generalmente tienen \"restricción de tiempo\" s en forma de plazos y factores de descuento.",
                "Cada agente tiene \"restricción de tiempo\" en forma de plazos y factores de descuento.",
                "Conclusiones Este documento ha estudiado la negociación bilateral de problemas múltiples entre agentes autónomos egoístas con \"restricción de tiempo\" s."
            ],
            "translated_text": "",
            "candidates": [
                "limitación de tiempo",
                "restricción de tiempo",
                "limitación de tiempo",
                "restricción de tiempo",
                "limitación de tiempo",
                "restricción de tiempo",
                "limitación de tiempo",
                "restricción de tiempo",
                "limitación de tiempo",
                "restricción de tiempo"
            ],
            "error": []
        },
        "relative error": {
            "translated_key": "error relativo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the <br>relative error</br> [3, 1].",
                "The <br>relative error</br> is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose <br>relative error</br> is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with <br>relative error</br> at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the <br>relative error</br> for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the <br>relative error</br> in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "También analizamos el \"error relativo\" (es decir, la diferencia entre el verdadero óptimo y el aproximado).",
                "La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el \"error relativo\".",
                "También analizamos el \"error relativo\" (es decir, la diferencia entre el verdadero óptimo y el aproximado).",
                "La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el \"error relativo\".",
                "La calidad de un algoritmo aproximado se determina comparando su rendimiento con el algoritmo óptimo y medir el \"error relativo\" [3, 1].",
                "El \"error relativo\" se define como (z - z ∗)/z ∗ donde z es la solución aproximada y z ∗ la óptima.",
                "En general, estamos interesados en encontrar algoritmos aproximadamenteal encontrar algoritmos de aproximación completamente polinomial.",
                "Es un método paramétrico que toma como un parámetro y para cualquier> 0, encuentra una solución heurística z con \"error relativo\" como máximo, de modo que la complejidad del tiempo y el espacio crece polinómicamente con el número de elementos my 1/.",
                "Por lo tanto, el \"error relativo\" para estas dos funciones es el mismo que para el método Ibarra y KIMS (es decir, es como máximo donde se da en la Ecuación 5).",
                "Esto se debe a que el \"error relativo\" en su utilidad acumulada de la oferta es como máximo."
            ],
            "translated_text": "",
            "candidates": [
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo",
                "error relativo"
            ],
            "error": []
        },
        "game-theory": {
            "translated_key": "teoría de juego",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "approximation": {
            "translated_key": "aproximación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its <br>approximation</br> error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an <br>approximation</br> forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie <br>approximation</br> algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the <br>approximation</br>.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial <br>approximation</br> algorithms.",
                "An <br>approximation</br> algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial <br>approximation</br> method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed <br>approximation</br> algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims <br>approximation</br> method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims <br>approximation</br> method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the <br>approximation</br> error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and <br>approximation</br>: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast <br>approximation</br> algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "Luego presentamos un equilibrio aproximado y evaluamos su error de \"aproximación\".",
                "Por lo tanto, en nuestro caso, no es suficiente encontrar una solución aproximada al problema de la mochila, también debemos demostrar que tal \"aproximación\" forma un equilibrio.",
                "Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de \"aproximación\".",
                "Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1. La calidad de su solución, y 2. El tiempo necesario para calcular la \"aproximación\".",
                "En general, estamos interesados en encontrar algoritmos aproximadamenteAlgoritmos de \"aproximación\" totalmente polinomiales.",
                "Se dice que un algoritmo de \"aproximación\" es totalmente polinómico si es para cualquier> 0 encuentra una solución que satisface la ecuación 5 en el tiempo limitada polinomialmente por tamaño del problema (para el problema 0-1 mochila, el tamaño del problema es igual al número deelementos) y por 1/ [1].",
                "Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de \"aproximación\" totalmente polinomial.",
                "Más específicamente, el espacio y la complejidad del tiempo son O (m/ 2) y, por lo tanto, polinomiales en M y 1/ (ver [10] para el algoritmo detallado de \"aproximación\" y prueba de tiempo y complejidad del espacio).",
                "Estas dos funciones no son más que el método de \"aproximación\" de Ibarra y Kims para resolver el problema de la mochila 0-1.",
                "Estas dos funciones toman como parámetro y usan el método de \"aproximación\" de Ibarra y KIMS para devolver un paquete que maximiza aproximadamente la ecuación 4.",
                "Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de \"aproximación\".",
                "Complejidad y \"aproximación\": problemas de optimización combinatoria y sus propiedades de aproximación.",
                "Algoritmos rápidos de \"aproximación\" para la mochila y suma de problemas de subconjunto."
            ],
            "translated_text": "",
            "candidates": [
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "Aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación",
                "aproximación"
            ],
            "error": []
        },
        "online computation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "<br>online computation</br> and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [
                "\"Computación en línea\" y análisis competitivo."
            ],
            "translated_text": "",
            "candidates": [
                "cálculo en línea",
                "Computación en línea"
            ],
            "error": []
        }
    }
}