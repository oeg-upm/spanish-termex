{
    "original_text": "The first step of PB, the enumeration of the conditional sample space through abductive logic programming, could be compared to logical inference in ProbLog [9]. While both languages aim to generate a propositional formula and compile it into a decision diagram, logical inference in PB is based on abductive logic programming, while ProbLog grounds the relevant parts of the probabilistic program. Moreover, in PB compilation of the boolean formulas is performed using (RO)BDDs, while ProbLog can use a wider range of decision diagrams, e.g. sentential decision diagrams (SDD), deterministic, decomposable negation normal form (d-DNNF). These differences reflect the different aims of the two PPLs: ProbLog focuses on models where logical inference needs to be efficient, and the resulting representation, the decision diagrams, need to be compact, while PB focuses on models where logical inference is typically easy, however it must be applied repeatedly, according to the nature and the number of the observations. However, in future work, PB could benefit from the use of more compact decision diagrams.",
    "original_translation": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
    "error_count": 1,
    "keys": {
        "d-DNNF": {
            "translated_key": "D-DNNF",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión sentencial (SDD), Forma normal de negación determinista, descomponible (\"D-DNNF\").Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "decision diagrams": {
            "translated_key": "diagramas de decisión",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de \"diagramas de decisión\", p.\"Diagramas de decisión\" (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los \"diagramas de decisión\", deben ser compactos, mientras que PB se centra en modelos donde la inferencia lógica es típicamente fácil, sin embargo, debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de \"diagramas de decisión\" más compactos.",
            "error": [
                ""
            ]
        },
        "deterministic, decomposable negation normal form": {
            "translated_key": "Forma normal de negación determinista y descomponible",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), \"Forma normal de negación determinista y descomponible\" (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "enumeration of the conditional sample space": {
            "translated_key": "enumeración del espacio de muestra condicional",
            "translated_annotated_text": "El primer paso de PB, la \"enumeración del espacio de muestra condicional\" a través de la programación de lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "logical inference": {
            "translated_key": "inferencia lógica",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la \"inferencia lógica\" en ProBlog [9].Si bien ambos idiomas apuntan a generar una fórmula proposicional y compilarla en un diagrama de decisión, la \"inferencia lógica\" en PB se basa en la programación de lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la \"inferencia lógica\" debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en modelos donde la \"inferencia lógica\"Por lo general, es fácil, sin embargo, debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "logical inference in PB": {
            "translated_key": "Inferencia lógica en PB",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas apuntan a generar una fórmula proposicional y compilarla en un diagrama de decisión, \"Inferencia lógica en PB\" se basa en la programación de lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "PB": {
            "translated_key": "Pb",
            "translated_annotated_text": "El primer paso de \"Pb\", la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en \"PB\" se basa en la programación de lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación \"PB\" de las fórmulas booleanas se realiza utilizando BDD (RO), mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que \"PB\" se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo, debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, \"PB\" podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "PB compilation": {
            "translated_key": "compilación PB",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la \"compilación PB\" de las fórmulas booleanas se realiza utilizando BDDS (RO), mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "PPLs": {
            "translated_key": "PPL",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos \"PPL\": ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo, debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "ProbLog": {
            "translated_key": "ProBlog",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en \"ProBlog\" [9].Si bien ambos idiomas apuntan a generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que \"Problog\" base a las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que \"ProBlog\" puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: \"Problog\" se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo, debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "(RO)BDDs": {
            "translated_key": [],
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": []
        },
        "SDD": {
            "translated_key": "SDD",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión sentencial (\"SDD\"), Forma normal de negación determinista, descomponible (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "sentential decision diagrams": {
            "translated_key": "Diagramas de decisión sentencial",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.\"Diagramas de decisión sentencial\" (SDD), Forma normal de negación determinista, descomponible (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del uso de diagramas de decisión más compactos.",
            "error": [
                ""
            ]
        },
        "use of more compact decision diagrams": {
            "translated_key": "uso de diagramas de decisión más compactos",
            "translated_annotated_text": "El primer paso de PB, la enumeración del espacio de muestra condicional a través de la programación lógica abductiva, podría compararse con la inferencia lógica en ProBlog [9].Si bien ambos idiomas tienen como objetivo generar una fórmula proposicional y compilarla en un diagrama de decisión, la inferencia lógica en PB se basa en la programación lógica abductiva, mientras que ProBlog basa en las partes relevantes del programa probabilístico.Además, en la compilación PB de las fórmulas booleanas se realiza utilizando (RO) BDDS, mientras que ProBlog puede usar una gama más amplia de diagramas de decisión, p.Diagramas de decisión de sentencias (SDD), determinista, negación descomponible Forma normal (D-DNNF).Estas diferencias reflejan los diferentes objetivos de las dos personas: ProBlog se centra en modelos donde la inferencia lógica debe ser eficiente, y la representación resultante, los diagramas de decisión, deben ser compactos, mientras que PB se centra en los modelos donde la inferencia lógica es típicamente fácil, sin embargo,Debe aplicarse repetidamente, de acuerdo con la naturaleza y el número de observaciones.Sin embargo, en el trabajo futuro, PB podría beneficiarse del \"uso de diagramas de decisión más compactos\".",
            "error": [
                ""
            ]
        }
    }
}