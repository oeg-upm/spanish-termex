{
    "original_text": "Aspect-oriented Programming (AOP) can well solve the cross-cutting concerns. Because of the different features of aspect, AOP requires new techniques for testing. First, this paper proposes a model to test aspect-oriented software. In order to support the testing model of the first three steps, we propose the algorithm of selecting aspect relevant test cases. Then, we develop a new tool to implement the theoretical of automating select test case. Finally, a case of the Bank Account System is studied to illustrate our testing approach.",
    "original_translation": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba.",
    "error_count": 0,
    "errors": [],
    "keys": {
        "algorithm of selecting aspect relevant test cases": {
            "translated_key": "algoritmo de seleccionar casos de prueba relevantes de aspecto",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el \"algoritmo de seleccionar casos de prueba relevantes de aspecto\".Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "AOP": {
            "translated_key": "AOP",
            "translated_annotated_text": "La programación orientada a los aspectos (\"AOP\") puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, \"AOP\" requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "Aspect-oriented Programming": {
            "translated_key": "programación orientada al aspecto",
            "translated_annotated_text": "La \"programación orientada al aspecto\" (AOP) puede resolver las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "automating select test case": {
            "translated_key": "Automatizar el caso de prueba seleccionado",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de \"Automatizar el caso de prueba seleccionado\".Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "Bank Account System": {
            "translated_key": "sistema de cuentas bancarias",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del \"sistema de cuentas bancarias\" para ilustrar nuestro enfoque de prueba."
        },
        "develop a new tool to implement the theoretical of automating select test case": {
            "translated_key": "desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, \"desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado\".Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "model to test aspect-oriented software": {
            "translated_key": "modelo para probar el software orientado a los aspectos",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un \"modelo para probar el software orientado a los aspectos\".Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "solve the cross-cutting concerns": {
            "translated_key": "resolver las preocupaciones transversales",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede \"resolver las preocupaciones transversales\".Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el modelo de prueba de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        },
        "testing model": {
            "translated_key": "modelo de prueba",
            "translated_annotated_text": "La programación orientada a los aspectos (AOP) puede resolver bien las preocupaciones transversales.Debido a las diferentes características del aspecto, AOP requiere nuevas técnicas para las pruebas.Primero, este documento propone un modelo para probar el software orientado a los aspectos.Para apoyar el \"modelo de prueba\" de los primeros tres pasos, proponemos el algoritmo de seleccionar casos de prueba relevantes de aspecto.Luego, desarrollamos una nueva herramienta para implementar la teórica de la automatización del caso de prueba seleccionado.Finalmente, se estudia un caso del sistema de cuentas bancarias para ilustrar nuestro enfoque de prueba."
        }
    }
}