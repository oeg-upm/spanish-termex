Como se discutió anteriormente, la inclusión adecuada de estas interacciones requiere sincronización de segmentos después de cada iteración. Para minimizar errores de simulación debido a valores incorrectos del potencial de las interacciones, los segmentos se sincronizan después de cada iteración. Aunque los tiempos de comunicación relativamente largos entre procesadores remotos pueden obstaculizar este proceso en computadoras paralelas típicas, este no es el caso para las arquitecturas GPGPU. Sin embargo, la recalculación completa del potencial de interacción después de cada iteración es consumidora de tiempo. En su lugar, el algoritmo corrige el potencial actual agregando contribuciones de dipolos para cada carga cercana que saltó durante la iteración anterior. Las actualizaciones completas del potencial de interacción solo son necesarias para los puntos de la cuadrícula relacionados con las cargas que saltaron durante la última iteración. Los errores acumulativos de redondeo que surgen debido a la adición y sustracción repetitivas se resuelven redondeando todos los potenciales de interacción a un rango uniformemente espaciado de números de punto flotante.