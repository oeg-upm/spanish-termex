Coste compartido en un problema de programación de empleo utilizando el valor de shapley de Debasis Mishra para la investigación de operaciones y la economía (core) Universit´e Catholique de Louvain Louvain La Neuve, Bélgica mishra@core.ucl.ac.be Bharath Rangarajan para la investigación de operaciones y la economía de la economía(Core) Universit´e Catholique de Louvain Louvain La Neuve, Belgium rangarajan@core.ucl.ac.be Resumen Un conjunto de trabajos debe ser atendido por un solo servidor que solo puede servir un trabajo a la vez. Los trabajos tienen tiempos de procesamiento e incurren en costos de espera (lineal en su tiempo de espera). Los trabajos comparten sus costos mediante la compensación utilizando transferencias monetarias. Caracterizamos la regla de valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la parte de los costos de los trabajos en un grupo, eficiencia y algunas propiedades de independencia en la parte de los costos de un trabajo. Categorías y descriptores de sujetos J.4 [Ciencias sociales y conductuales]: Economía Términos generales Economía, Teoría 1. Introducción Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. El pedido eficiente de esta cola nos dirige a servir a los trabajos en el orden creciente de la relación de costo de espera y tiempo de procesamiento por unidad de tiempo. Para compensar la espera por empleos, se permiten transferencias monetarias a trabajos. ¿Cómo deberían los trabajos compartir el costo de manera equitativa entre ellos (a través de transferencias)? El problema de la división justa de los costos entre los agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas de computadora están programados regularmente en los servidores, los datos están programados para transmitirse a través de redes, los trabajos están programados en el piso de la tienda en máquinas y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de los problemas de cola ha atraído a los economistas durante mucho tiempo [7, 17]. Los costos compartidos son un problema fundamental en muchos entornos en Internet. Internet puede verse como un recurso común compartido por muchos usuarios y el costo incurado al usar el recurso debe compartirse de manera equitativa. El aumento actual en la literatura de costos compartidos de los científicos informáticos validan esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchas configuraciones en las que aparece nuestro modelo de programación de empleo y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para transmitirse a través de una red de ancho de banda fija, etc.). Esperamos que nuestro análisis brinde nuevas ideas sobre los problemas de costo compartido de esta naturaleza. Recientemente, ha habido un mayor interés en los métodos de costo compartido con funciones de costo submodular [11, 12, 6, 24]. Si bien muchas configuraciones tienen funciones de costo submodular (por ejemplo, juegos de transmisión de múltiples castas [8]), mientras que la función de costo de nuestro juego es supermodular. Además, dicha literatura generalmente no asume el equilibrio del presupuesto (transferencias que se suman a cero), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo donde asume que todos los tiempos de procesamiento son la unidad. Para tal modelo, caracteriza la regla de valor de Shapley utilizando axiomas clásicos de equidad. Chun [1] interpreta el valor de una coalición de empleos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla usando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de cola desde una vista de punto estratégico cuando los costos de espera por unidad son la unidad. Moulin presenta nuevos conceptos en la configuración de colas, como dividir y fusionar trabajos, y formas de prevenirlos. Otro flujo de literatura está en los juegos de secuenciación, introducidos por primera vez por Curiel et al.[4]. Para una encuesta detallada, consulte Curiel et al.[3]. Curiel et al.[4] Los juegos de secuenciación definidos similares a nuestro modelo, pero en los que se otorga un orden inicial de trabajos. Además, su noción de valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición hace que el juego de secuenciación de Curiel et al.[4] Convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de 1 Los autores agradecen a Fran¸cois Maniquet por varias discusiones fructíferas.232 La investigación es cómo compartir los ahorros en los costos desde el orden inicial hasta el orden óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y S´anchez [13, 14] consideraron la secuencia de juegos sin ningún orden inicial de trabajos. Toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado juego de cola, está relacionado con la regla inversa de Chun [1]. En el juego de cola, los trabajos en una coalición se sirven después de que se sirven los trabajos que no en la coalición. Klijn y S´anchez [14] mostraron que el juego de cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de cola, generalizando el resultado en Chun [1]. Klijn y S´anchez [13] estudian el núcleo de este juego en detalle. También se han investigado aspectos estratégicos de los problemas de cola. Mitra [19] estudia la primera mejor implementación en modelos de colas con funciones de costo genérico. La primera mejor implementación significa que existe un mecanismo eficiente en el que los trabajos en la cola tienen una estrategia dominante para revelar sus tipos verdaderos y sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces es posible la primera mejor implementación. Mitra [19] muestra que entre una clase más general de problemas de cola, la primera mejor implementación es posible si y solo si el costo es lineal. Para otro modelo de cola, Mitra [18] muestra que la primera mejor implementación es posible si y solo si la función de costo satisface una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos, como dividir y fusionar problemas de cola con la unidad por unidad de costos de espera. La literatura general de costos compartidos es vasta y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde el trabajo seminal de Shapley [25] hasta trabajos recientes sobre costos compartidos en problemas de transmisión y optimización de varios casos [8, 6, 23] Esta área ha atraído a economistas, informáticos e investigadores de operaciones.1.1 Nuestra contribución es el primer modelo que considera el costo compartido cuando el tiempo de procesamiento y el costo de espera de los trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativo y aplicamos la regla de valor de Shapley clásica al problema. Mostramos que la regla del valor de Shapley satisface muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro entorno. Introducimos axiomas como Independece de la unidad de empleos anterior a los costos de espera y la independencia del tiempo de procesamiento de empleos. Un axioma clave que presentamos nos da un límite en la parte de costos de un trabajo en un grupo de trabajos que tienen la misma relación de tiempo de espera de tiempo de unidad y tiempo de procesamiento (estos trabajos se pueden ordenar de cualquier manera entre ellos en un pedido eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo debería al menos pagar su propio costo de procesamiento (es decir, el costo en el que habría incurrido si fuera el único trabajo en la cola). Si hay múltiples trabajos en dicho grupo, la probabilidad de dos trabajos de dicho grupo que infligen costos entre sí es la misma (1 2) en un pedido eficiente. Dependiendo del pedido seleccionado, un trabajo inflige el costo en el otro. Nuestro axioma de justicia dice que cada trabajo debería al menos asumir tales costos esperados. Caracterizamos la regla de valor de Shapley usando estos axiomas de equidad. También ampliamos los resultados de envidia en [2] a nuestro entorno y discutimos una clase de mecanismos razonables de costo compartido.2. El modelo hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como n = {1 ,..., n}.σ: N → N es un orden de trabajos en n y σi denota la posición del trabajo I en el orden σ. Dado un orden σ, defina fi (σ) = {j ∈ N: σi <σj} y pi (σ) = {j ∈ N: σi> σj}. Cada trabajo I es identificado por dos parámetros: (PI, θi).Pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de cola se define mediante una lista q = (n, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un orden de trabajos σ, el costo incurrido por el trabajo I está dado por Ci (σ) = Piθi + θi j∈Pi (σ) PJ. El costo total incurrido por todos los trabajos debido a un pedido σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C (n, σ) = i∈N ci (σ) = i∈N piθi + i∈N ¡θi j∈Pi (σ) pj ¢.= i∈N piθi + i∈N ¡pi j∈Fi (σ) θj ¢. Un orden eficiente σ ∗ es el que minimiza el costo total incurrido por todos los trabajos. Entonces, c (n, σ ∗) ≤ c (n, σ) ∀ σ ∈ σ. Para lograr una simplicidad de notación, escribiremos el costo total en un orden eficiente de trabajos de n como c (n) siempre que no sea confuso. A veces, lidiaremos solo con un subconjunto de trabajos S ⊆ N. El orden σ se definirá solo en trabajos en S solo y escribiremos el costo total de un orden eficiente de trabajos en S como C (S). El siguiente lema muestra que los trabajos se ordenan para disminuir el γ en un pedido eficiente. Esto también se conoce como la regla de tiempo de procesamiento más corta ponderada, introducida por primera vez por Smith [26]. Lema 1. Para cualquier s ⊆ n, deje σ ∗ un orden eficiente de trabajos en S. para cada i = j, i, j ∈ S, si σ ∗ i> σ ∗ j, entonces γi ≤ γj. Prueba. Suponga por contradicción que el estebo del lema no es cierto. Esto significa que podemos encontrar dos trabajos consecutivos I, j ∈ S (σ ∗ i = σ ∗ j + 1) tal que γi> γj. Defina un nuevo orden σ intercambiando I y J en σ ∗. Los costos de los trabajos en S \ {i, J} no cambian de σ ∗ a σ. La diferencia entre los costos totales en σ ∗ y σ viene dada por, c (s, σ) - c (s, σ ∗) = θjpi - θipj. De la eficiencia obtenemos θjpi - θipj ≥ 0. Esto nos da γj ≥ γi, que es una contradicción. Una asignación para q = (n, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia Ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dada una transferencia Ti y un orden σ, el costo compartido del trabajo I se define como, πi = ci (σ) - ti = θi j∈N: σj ≤σi pj - ti.233 Una asignación (σ, t) es eficiente para q = (n, p, θ) siempre que σ sea un orden eficiente y £ i∈N ti = 0. El conjunto de ordenamientos eficientes de Q se denota como σ ∗ (Q) y σ ∗ (Q) se utilizará para referirse a un elemento típico del conjunto. El siguiente lema sencillo dice que para dos pedidos eficientes diferentes, la participación de costos en una asignación eficiente es posible lograr en el otro modificando adecuadamente las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π el vector de las acciones de costos de los trabajos de esta asignación. Si σ ∗ = σ será un orden eficiente y t ∗ i = ci (σ ∗) - πi ∀ i ∈ N, entonces (σ ∗, t ∗) también es una asignación eficiente. Prueba. Ya que (σ, t) es eficiente, £ i∈N ti = 0. Esto da £ i∈N πi = c (n). Dado que σ ∗ es un orden eficiente, £ i∈N ci (σ ∗) = c (n). Esto significa, £ i∈N t ∗ i = £ i∈N [ci (σ ∗) - πi] = 0. Entonces, (σ ∗, t ∗) es una asignación eficiente. Dependiendo de las transferencias, las acciones de costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ se asocia con cada q ∈ Q un subconjunto no vacío ψ (q) de asignaciones.3. Costos compartidos utilizando el valor de Shapley en esta sección, definimos el costo de coalición de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de s ⊆ n trabajos en la cola se define como el costo incurrido por los trabajos en s si estos son los únicos trabajos atendidos en la cola utilizando un pedido eficiente. Formalmente, el costo de una coalición s ⊆ n es, c (s) = i∈S j fueronsolo. El valor de una coalición de trabajos S es solo −c (s). Maniquet [15] observa que otra forma equivalente de definir el valor de una coalición es usar la función dual de la función de costo C (·). Chun [1] discute otras formas interesantes de definir el valor de una coalición en tales juegos, quienes asumen que se sirve una coalición de empleos después de que se sirven los empleos que no en la coalición. El valor de Shapley (o los costos compartidos) de un trabajo I se define como, svi = s⊆n \ {i} | s |!(| N | - | s | - 1)!| N |!¡C (S∪ {i}) - C (s) ¢.(1) La regla de asignación de valor de Shapley dice que los trabajos se ordenan utilizando un pedido eficiente y las transferencias se asignan a trabajos de manera que el costo del trabajo I esté dado por la ecuación 1. Lema 3. Sea σ ∗ un orden eficiente de trabajos en el conjunto N. Para todos los i ∈ N, el valor de Shapley viene dado por SVI = Piθi + 1 2 ¡li + ri ¢, donde li = θi £ j∈Pi (σ ∗)PJ y Ri = Pi £ j∈Fi (σ ∗) θj. Prueba. Otra forma de escribir la fórmula de valor Shapley es la siguiente [10], svi = s⊆n: i∈S ∆ (s) | s |, donde ∆ (s) = c (s) if | s |= 1 y ∆ (s) = c (s) - £ t s ∆ (t). Esto da ∆ ({i}) = c ({i}) = piθi ∀i ∈ N. para cualquier i, j ∈ N con i = j, tenemos ∆ ({i, j}) = c ({i,j}) - c ({i}) - c ({j}) = min (piθi + pjθj + pjθi, piθi + pjθj + piθj) - piθi - pjθj = min (pjθi, piθj). Mostraremos por inducción que ∆ (s) = 0 si | s |> 2. Para | s |= 3, deje s = {i, j, k}. Sin pérdida de generalidad, suponga θi pi ≥ θj pj ≥ θk pk. Entonces, ∆ (s) = c (s) - ∆ ({i, j}) - ∆ ({j, k}) - ∆ ({i, k}) - ∆ ({i}) - ∆ ({j}) - ∆ ({k}) = c (s) −piθj −pjθk - piθk - piθi - pjθj - pkθk = c (s) - c (s) = 0. Ahora, suponga para t s, ∆ (t) = 0 si | t |> 2. Sin pérdida de generalidad supone que σ es el mapeo de identidad. Ahora, ∆ (s) = C (s) - t s ∆ (t) = c (s) - i∈S j∈S: j <i ∆ ({i, j}) - i∈S ∆ ({i}) = C (s) - i∈S j∈S: j <i pjθi - i∈S Piθi = c (s) - c (s) = 0. Esto demuestra que ∆ (s) = 0 si | s |> 2. Usando la fórmula de valor Shapley ahora, svi = s⊆n: i∈S ∆ (s) | s |= ∆ ({i}) + 1 2 j∈N: j = i ∆ ({i, j}) = piθi + 1 2 ¡j <i ∆ ({i, j}) + j> i ∆ ({i, j}) ¢ = piθi + 1 2 ¡j <i pjθi + j> i piθj ¢ = piθi + 1 2 ¡li + ri ¢.4. Caracterización axiomática del valor de Shapley En esta sección, definiremos varios axiomas en la equidad y caracterizaremos el valor de Shapley utilizándolos. Para un q ∈ Q dado, denotaremos ψ (q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de costos compartidos asociado con una regla de asignación (σ, t) como π y que con la regla de asignación (σ, t) como π etc. 4.1 Los axiomas de equidad definiremos tres tipos de axiomas de equidad: (i (i) relacionado con la eficiencia, (ii) relacionado con la equidad, y (iii) relacionado con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un pedido eficiente y las transferencias de trabajos deben sumar cero (saldo presupuestario). Definición 1. Una regla de asignación ψ satisface la eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ (q), (σ, t) es una asignación eficiente.234 El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de acciones de empleos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ (q) y (σ, t) ∈ σ (q), tenemos πi = πi ∀ i ∈ N ¢ ⇒ ¡(σ, t) ∈ ψ (q) ¢. Una implicación del axioma de indiferencia de Pareto y el lema 2 es que para cada orden eficiente hay un conjunto de transferencias de trabajos de manera que forma parte de una regla eficiente y la participación de costos de un trabajo en todas estas asignaciones es la misma. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de equidad que nos ayudan a responder esta pregunta. Proporcionamos cinco de estos axiomas. Algunos de estos axiomas (por ejemplo, el anonimato, el trato igual de iguales) son estándar en la literatura, mientras que algunos son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denota ρ: n → n como una permutación de elementos en N. goza ρ (σ, t) denota la asignación obtenida al permitir elementos en σ y t de acuerdo con ρ. Del mismo modo, deje que ρ (p, θ) denote la nueva lista de (p, θ) obtenida permitiendo elementos de p y θ según ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a dicha permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todas q ∈ Q, (σ, t) ∈ ψ (q) y cada permutación ρ, entonces ρ (σ, t) ∈ ψ (n, ρ (q)). El siguiente axioma de capital es clásico en literatura y dice que dos trabajos similares deben ser compensados de manera que sus acciones de costos sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir igualmente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual de iguales (ete) si para todas q ∈ Q, (σ, t) ∈ ψ (q), i, j ∈ N, entonces ¡Pi = Pj;θi = θj ¢ ⇒ ok πi = πj ¢. ETE nos dirige a compartir los costos por igual entre los trabajos si son del mismo por unidad de costo de espera y tiempo de procesamiento. Pero no está en silencio sobre el costo de las acciones de dos trabajos I y J que satisfacen θi pi = θj pj. Presentamos un nuevo axioma para esto. Si una regla eficiente elige σ tal que σi <σj para algunos i, j ∈ N, entonces el trabajo I está infligiendo un costo de piθj en el trabajo j y el trabajo j está infligiendo cero costo en el trabajo i. Definir para algunos γ ≥ 0, s (γ) = {i ∈ N: γi = γ}. En una regla eficiente, los elementos en S (γ) se pueden ordenar de cualquier manera (en | S (γ) |! Si i, j ∈ S (γ) entonces tenemos pjθi = piθj. La probabilidad de σi <σj es 1 2 y también la probabilidad de σi> σj. El costo esperado que inflige en J es 1 2 Piθj y J se infla en I es 1 2 PJθi. Nuestro próximo axioma de justicia dice que yo y J deberían ser responsables de su propio costo de procesamiento y este costo esperado se infligen el uno al otro. Argumentando por cada par de trabajos I, j ∈ S (γ), establecemos un límite en la parte de los costos de los trabajos en S (γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el costo esperado (ECB) si para todas q ∈ Q, (σ, t) ∈ ψ (q) con π es el costo resultante compartido, para cualquier γ ≥ 0, y para cada i ∈ S (γ), tenemos πi ≥ Piθi + 1 2 ¡j∈S (γ): σj <σi pjθi + j∈S (γ): σj> σi piθj ¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo I en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en el costo de un trabajo debería ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Tenga en cuenta que el límite anterior no plantea restricciones sobre cómo se comparten los costos entre los diferentes grupos. También observe que si S (γ) contiene solo un trabajo, el BCE dice que el trabajo debería al menos tener su propio costo de procesamiento. Una consecuencia directa del BCE es el siguiente lema. Lema 4. Sea ψ una regla eficiente que satisface el BCE. Para un q ∈ Q if s (γ) = n, entonces para cualquier (σ, t) ∈ ψ (q) que da un costo compartido de π, πi = piθi + 1 2 ¡li + ri ¢ ∀ i ∈ N. prueba. De ECB, obtenemos πi ≥ Piθi + 1 2 ¡li + ri ¢ ∀ i ∈ N. Suponga la contradicción que existe j ∈ N tal que πj> pjθj + 1 2 ¡li + ri ¢. Usando la eficiencia y el hecho de que £ i∈N li = £ i∈N ri, obtenemos £ i∈N πi = c (n)> £ i∈N piθi + 1 2 £ i∈N ¡li + ri ¢ = c(NORTE). Esto nos da una contradicción. A continuación, presentamos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo deja del sistema, entonces el pedido no necesita cambiar. Pero la transferencia al último trabajo debe compartirse entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento porque cada trabajo influyó en el último trabajo en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de P (PRP) si para todas q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = | n |, q = (n \ {k}, p, θ) ∈ Q, de modo que para todos los i ∈ N \ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tal que para todos los i ∈ N \ {k}: σi = σi y ti = ti + tk pi £ j = k pj. Un axioma de justicia análoga si eliminamos el trabajo del comienzo de la cola. Dado que la presencia del primer trabajo influyó en cada trabajo dependiendo de sus valores θ, su transferencia debe compartirse en proporción a los valores θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (prθ) si para todas q ∈ Q, para todos (σ, t) ∈ ψ (q), k ∈ N tal que σk = 1, q = (n \ {k},,p, θ) ∈ Q, de modo que para todos los i ∈ N \ {k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ (q) tales que para todos i ∈ N \ {k}: σi = σi y ti = ti + tk θi £ j = k θj. Los axiomas de responsabilidad proporcional son las generalizaciones de igual responsabilidad axiomas introducidos por Maniquet [15].235 Axiomas de independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera infligido por un trabajo a sus siguientes trabajos es independiente de los tiempos de procesamiento de los siguientes trabajos. Estas propiedades de independencia deben transferirse a las reglas de costo compartido. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de los trabajos anteriores θ (ipjθ) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \ {k}: θi = θi, pi = pi y γk <γk, pk = pk, entonces para todos j ∈ N tal que σj> σk: πj= πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los siguientes trabajos p (ifjp) si para todos q = (n, p, θ), q = (n, p, θ) ∈ Q, (σ, t) ∈ ψ (q), (((σ, t) ∈ ψ (q), si para todo i ∈ N \ {k}: θi = θi, pi = pi y γk> γk, θk = θk, entonces para todos j ∈ N tal que σj <σk: πj= πj, donde π es el costo compartido en (σ, t) y π es el costo compartido en (σ, t).4.2 Los resultados de la caracterización han declarado los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla de valor de Shapley usando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y BCE. Pero si tenemos IPJθ, necesitamos IFJP o PRP. Del mismo modo, si tenemos IFJP, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ e IFJP es una regla implícita por la regla de valor de Shapley. Prueba. Defina para cualquier I, J ∈ N, θi J = γipj y Pi J = θj γi. Suponga sin pérdida de generalidad que σ es un orden eficiente con σi = i ∀ i ∈ N. Considere el siguiente q = (n, p, θ) correspondiente al trabajo I con pj = pj si j ≤ i y pj = pi j sij> i, θj = θi j if j <i y θj = θj si j ≥ i. Observe que todos los trabajos tienen el mismo γ: γi. Por Lemma 2 y eficiencia, (σ, t) ∈ ψ (q) para algún conjunto de transferencias t. Usando Lemma 4, obtenemos costos compartidos de I de (σ, t) como πi = piθi + 1 2 ¡li + ri ¢. Ahora, para cualquier j <i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de J es γj ≥ γi. Aplicando IPJθ, la parte de los costos del trabajo no debería cambiar. Del mismo modo, para cualquier trabajo j> i, si cambiamos PJ a PJ sin cambiar θj, el nuevo γ de J es γj ≤ γi. Aplicando IFJP, la parte de costos del trabajo no debería cambiar. Aplicando este procedimiento para cada j <i con IPJθ y para cada j> i con IFJP, llegamos a Q = (n, p, θ) y el pago de I no cambia de πi. Usando este argumento para cada i ∈ N y usando la expresión para el valor de Shapley en Lemma 3, obtenemos la regla de valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad para compartir la transferencia de un trabajo. Esto se muestra en las proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que satisfaga el BCE, IPJθ y PRP es una regla implícita por la regla de valor de Shapley. Prueba. Como en la prueba de la Proposición 1, defina θi j = γipj ∀ i, j ∈ N. Suponga sin pérdida de generalidad que σ es un orden eficiente con σi = i ∀ i ∈ N. Considere una cola con trabajos en el conjunto k = {1 ,..., i, i + 1}, donde i <n.Defina q = (k, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un orden eficiente para q. Por BCB y Lemma 4 El costo compartido del trabajo i+1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1+1 2 ¡£ j <i+1 pjθi+1 ¢. Ahora, considere q = (k, p, θ) de modo que θj = θi j ∀ j ≤ i y θi+1 = θi+1.σ sigue siendo un orden eficiente en q y por IPJθ el costo compartido de i + 1 permanece πi + 1. En q = (k \ {i + 1}, p, θ), podemos calcular el costo compartido del trabajo I usando el ECB y el lema 4 como πi = piθi + 1 2 £ j <i pjθi. Entonces, usando PRP obtenemos el nuevo costo compartido del trabajo I en q como πi = πi + ti + 1 pi j <i + 1 pj = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 ¢. Ahora, podemos establecer k = k ∪ {i + 2}. Como antes, podemos encontrar la participación de los costos de i+2 en esta cola como πi+2 = pi+2θi+2+1 2 ¡£ j <i+2 pjθi+2 ¢. Usando PRP obtenemos el nuevo costo compartido del trabajo I en la nueva cola como πi = piθi + 1 2 ¡£ j <i pjθi + piθi + 1 + piθi + 2 ¢. Este proceso se puede repetir hasta que agregamos trabajo n en el que el costo de costo de i es piθi + 1 2 ¡£ j <i pjθi + £ j> i piθj ¢. Luego, podemos ajustar el θ de los trabajos anteriores de I a su valor original y aplicar IPJθ, los pagos de los trabajos i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n.Configuración I = 1, obtenemos acciones de todos los trabajos de ψ como valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que satisfaga el BCE, IFJP y PRθ es una regla implícita por la regla de valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un boceto corto. Análogo a la prueba de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan a PI+1 J. Esto nos permite usar IFJP. Además, en contraste con la Proposición 2, consideramos k = {i, i + 1 ,..., n} y agregue repetidamente trabajos al comienzo de la cola que mantiene el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo de los trabajos en cada iteración y convergimos a la regla de valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley satisface todos los axiomas de equidad discutidos. Proposición 4. La regla de valor de Shapley satisface la eficiencia, la indiferencia de Pareto, el anonimato, el ETE, el ECB, IPJθ, IFJP, PRP y PRθ. Prueba. La regla de valor de Shapley elige un pedido eficiente y, por definición, los pagos se suman hasta cero. Entonces, satisface la eficiencia. El valor de Shapley asigna el mismo costo compartido a un trabajo independientemente del orden eficiente elegido. Entonces, es Pareto indiferente. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su pedido o parte de los costos. Para Ete, considere dos trabajos I, J ∈ N tal que Pi = Pj y θi = θj. Sin pérdida de generalidad suponga que el orden eficiente es 1 ,..., i, ..., J ,..., n.Ahora, el valor de Shapley del trabajo I es 236 SVI = Piθi + 1 2 ¡li + ri ¢ (de lemma 3) = pjθj + 1 2 ¡lj + rj ¢ - 1 2 ¡li - lj + ri - rj ¢ = svj = svj− 1 2 ¡i <k≤j piθk - i≤k <j pkθi ¢ = svj - 1 2 i <k≤j (piθk - pkθi) (usando pi = pj y θi = θj) = svj (usando θk pk =θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface el BCE por su expresión en Lemma 3. Considere cualquier trabajo I, en un orden eficiente σ, si aumentamos el valor de γj para algunos j = I tal que σj> σi, entonces el conjunto PI (trabajos anteriores) no cambia en el nuevo orden eficiente. Si γj se cambia de tal manera que PJ sigue siendo la misma, entonces la expresión £ j∈Pi θipj no cambia. Si (p, θ) no se cambian los valores de otros trabajos, entonces el valor de Shapley no cambia al aumentar γj para algunos j ∈ Pi mientras mantiene PJ sin cambios. Por lo tanto, la regla de valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJP. Para PRP, suponga sin pérdida de generalidad que los trabajos se ordenan 1 ,..., n en un pedido eficiente. Denota la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos n y el conjunto de trabajos n \ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £ j <n PJ. Ahora, ti = 1 2 ¡θi j <i pj - pi j> i θj ¢ = 1 2 ¡θi j <i pj - pi j> i: j = n θj ¢ - 1 2 piθn = ti - 1 2 θn j<n pj pi £ j <n pj = ti - tn pi £ j <n pj. Un argumento similar muestra que la regla de valor de Shapley satisface PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) para cada q ∈ Q, ψ (q) selecciona todas las acciones de asignación de asignación de trabajos implícitos por el valor de Shapley.2) ψ satisface la eficiencia, el BCE, IFJP y IPJθ.3) ψ satisface la eficiencia, el BCE, IFJP y PRθ.4) ψ satisface la eficiencia, el BCE, PRP y IPJθ. Prueba. La prueba se deduce de las Propuestas 1, 2, 3 y 4. 5. Discusiones 5.1 Una clase razonable de mecanismos de costo compartido en esta sección, definiremos una clase razonable de mecanismos de costo compartido. Mostraremos cómo estos mecanismos razonables conducen al mecanismo de valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todas q ∈ Q y (σ, t) ∈ ψ (q) tenemos para todos los i ∈ N, ti = α ¡θi j∈Pi (σ) pj - pi j∈Fi (σ) θj ¢ ∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo razonable de costo compartido dice que a cada trabajo se le debe pagar una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige en otros trabajos. Si α = 0, cada trabajo tiene su propio costo. Si α = 1, cada trabajo se compensa por su costo de espera, pero compensa a otros por el costo que inflige a los demás. La regla de valor de Shapley viene como resultado de ETE como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que satisfaga ETE es una regla implícita por la regla de valor de Shapley. Prueba. Considere una q ∈ Q en la que pi = pj y θi = θj. Sea (σ, t) ∈ ψ (q) y π el costo de costo resultante. De Ete, obtenemos, πi = πj ⇒ ci (σ) - ti = cj (σ) - tj ⇒ piθi + (1 - α) li + αri = pjθj + (1 - α) lj + αrj (ya que ψ es eficientey razonable) ⇒ (1 - α) (li - lj) = α (rj - ri) (usando pi = pj, θi = θj) ⇒ 1 - α = α (usando li - lj = rj - ri = 0) ⇒α = 1 2. Esto nos da la regla de valor de Shapley de Lemma 3. 5.2 Resultados en Envy Chun [2] discute una condición de femircinidad llamada no-envidia para el caso cuando los tiempos de procesamiento de todos los trabajos son la unidad. Definición 11. Una regla de asignación satisface sin modificación si para todas q ∈ Q, (σ, t) ∈ ψ (q) e I, j ∈ N, tenemos πi ≤ ci (σij)-tj, donde π es el costo compartido deLa regla de asignación (σ, t) y σij es el ordenamiento que obtiene intercambiando i y j. A partir del resultado en [2], la regla de valor de Shapley no satisface también a no tener en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envoltura ajustada, que muestra que está satisfecho en la regla de valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son la unidad. Aquí, mostramos que la envidia ajustada continúa en la regla de valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesitan ser la unidad). Como antes denota σij ser un orden en el que la posición de I y J se intercambia de un orden σ. Para el noenvía ajustado, If (σ, t) es una asignación para algunos q ∈ Q, deje que Tij sea la transferencia 237 del trabajo I cuando la transferencia de I se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de TIJ. Por ejemplo, si ψ es eficiente, entonces Tij no se puede calcular si σij tampoco es eficiente. Para simplificar, indicamos la definición de no envoltura ajustada para aplicar a todas esas reglas. Definición 12. Una regla de asignación satisface el noenvio ajustado si para todas q ∈ Q, (σ, t) ∈ ψ (q), y i, j ∈ N, tenemos πi ≤ ci (σij) - tij i. Proposición 6. La regla de valor de Shapley satisface el no envoltorio ajustado. Prueba. Sin pérdida de generalidad, suponga que el orden eficiente de los trabajos es: 1 ,..., n.Considere dos trabajos I y I + K.De Lemma 3, svi = piθi + 1 2 ¡j <i θipj + j> i θjpi ¢. Sea ˆπi el costo compartido de I debido a la transferencia ajustada tii+k i en el orden σii+k.ˆΠi = ci (σii+k) - tii+k i = piθi+1 2 ¡j <i θipj+θipi+k+i <j <i+k θipj+j> i θjpi - θi+kpi - i <j <i+k θjpi ¢ = svi +1 2 i <j≤i +k ¡θipj - θjpi ¢ ≥ svi (usando el hecho de que θi pi ≥ θj pj para i <j).6. Conclusión Estudiamos el problema de compartir costos para un problema de programación de trabajo en un solo servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera de tiempo de unidad. Tomamos un enfoque de teoría de juegos cooperativo y mostramos que la famosa regla del valor de Shapley satisface muchas propiedades de justicia. Caracterizamos la regla de valor de Shapley utilizando diferentes axiomas de equidad intuitiva. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo al BCE y también discutimos la implicación de las transferencias entre trabajos (en lugar de transferencias de trabajos a un servidor central). También planeamos analizar los mecanismos de costo compartido que no sean el valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura.7. Referencias [1] Youngsub Chun. Una nota sobre la caracterización de Maniquets del valor de Shapley en los problemas de cola. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Sin modificación en problemas de cola. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuencia: una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría del juego. Teoría y Biblioteca de Decisiones, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuencia. European Journal of Operational Research, 40: 344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y cooperación. Operations Research, 42 (3): 566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de intercambio de costos a prueba de estrategias para juegos de cubierta y ubicación de la instalación. En Actas de la cuarta conferencia ACM anual sobre comercio electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Bell Journal of Economics, 9: 421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartir el costo de las transmisiones de multidifusión. En Actas del Simposio ACM anual de treinta segundos sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para los juegos de secuenciación. Juegos y comportamiento económico, 15: 165-176, 1996. [10] John C. Harsanyi. Contribuciones a la teoría de los Juegos IV, Capítulo Un modelo de negociación para los juegos cooperativos de N-persona. Princeton University Press, 1959. Editores: A. W. Tucker, R. D. Luce.[11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primario de dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela S´anchez. Juegos de secuencia sin un orden inicial completamente especificado. Informe en Estadísticas e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04.[14] Flip Klijn y Estela Sánchez. Juegos de secuencia sin orden inicial. Documento de trabajo, Universitat Aut´onoma de Barcelona, julio de 2004. [15] Franois Maniquet. Una caracterización del valor de Shapley en los problemas de cola. Journal of Economic Theory, 109: 90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Costos compartidos en un problema de programación de trabajo. Documento de trabajo, Core, 2005. [17] Manipushpak Mitra. Ensayos sobre los primeros mejores problemas de incentivos implementables. Doctor.Tesis, Instituto Estadístico Indio, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismo en problemas de cola. Teoría económica, 17 (2): 277-305, 2001. [19] Manipushpak Mitra. Lograr lo primero en problemas de secuenciación. Review of Economic Design, 7: 75-91, 2002. [20] Herv´e Moulin. Manual de elección social y bienestar, costo axiomático del capítulo y intercambio excedente. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura.[21] Herv´e Moulin. Al programar tarifas para evitar que se fusionen, dividirse y transferir 238 empleos. Documento de trabajo, Universidad de Rice, 2004. [22] Herv´e Moulin. Programación probabilística a prueba de división. Documento de trabajo, Universidad de Rice, 2004. [23] Herv´e Moulin y Rakesh Vohra. Caracterización de métodos de costo compartido aditivo. Letras económicas, 80: 399-407, 2003. [24] Martin P´al y ´Eva Tardos. Mecanismos de grupos a prueba de estrategias a través de algoritmos Primal-Dual. En Actas del 44º Simposio IEEE anual sobre los fundamentos de la informática (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la teoría de los Juegos II, Capítulo Un valor para los juegos N-Persona, páginas 307-317. Anales de Estudios de Matemáticas, 1953. EDIORS: H. W. Kuhn, A. W. Tucker.[26] Wayne E. Smith. Varios optimizadores para la producción de una sola etapa. Naval Research Logistics Quarterly, 3: 59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y la equilibrio del presupuesto en la toma de decisiones públicas. Diseño económico, 2, 2002. 239