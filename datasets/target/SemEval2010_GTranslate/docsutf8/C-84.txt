El almacenamiento en caché egoísta en los sistemas distribuidos: un análisis teórico del juego porgung-gon chun ∗ bgchun@cs.berkeley.edu kamalika chaudhuri † kamalika@cs.berkeley.edu hoeteck wee ‡ hoeteck@cs.berkeley.edu marco barreno § barreno@cs.Berkeley.edu Christos H. Papadimitriou † Christos@cs.berkeley.edu John Kubiatowicz ∗ kubitron@cs.berkeley.edu División de Ciencias de la Computación Universidad de California, Berkeley Resumen. Analizamos la replicación de los recursos por nodos de servidores que actúan egoísta, usando un juego-enfoque teórico. Nos referimos a esto como el problema de almacenamiento egoísta. En nuestro modelo, los nodos incurren en el costo de replicar los recursos o el costo de acceso a una réplica remota. Mostramos la existencia de pura estrategia Nash Equilibrios e investigamos el precio de la anarquía, que es el costo relativo de la falta de coordinación. El precio de la anarquía puede ser alto debido a los problemas de suboficial, pero con ciertas topologías de red tiene mejores límites. Con un esquema de pago, el juego siempre puede implementar el óptimo social en el mejor de los casos dando a los servidores incentivos para replicar. Categorías y descriptores de sujetos c.2.4 [Redes de comunicación por computadora]: Sistemas distribuidos Algoritmos de términos generales, economía, teoría, rendimiento 1. INTRODUCCIÓN Los sistemas de archivos entre pares de área amplia [2,5,22,32,33], cachés de pares [15, 16] y cachés web [6, 10] se han vuelto populares en los últimos pocosaños. Caching1 de los archivos en servidores seleccionados se usa ampliamente para mejorar el rendimiento, la disponibilidad y la confiabilidad de estos sistemas. Sin embargo, la mayoría de estos sistemas suponen que los servidores cooperan entre sí siguiendo protocolos optimizados para el rendimiento general del sistema, independientemente de los costos incurridos por cada servidor. En realidad, los servidores pueden comportarse egoístamente, buscando maximizar su propio beneficio. Por ejemplo, las partes en diferentes dominios administrativos utilizan sus recursos locales (servidores) para apoyar mejor a los clientes en sus propios dominios. Tienen incentivos obvios para almacenar en caché de objetos2 que maximizan el beneficio en sus dominios, posiblemente a expensas del comportamiento globalmente óptimo. Ha sido una pregunta abierta si estos escenarios y protocolos de almacenamiento en caché mantienen sus propiedades globales deseables (bajo costo social total, por ejemplo) frente al comportamiento egoísta. En este artículo, adoptamos un enfoque teórico del juego para analizar el problema del almacenamiento en caché en las redes de servidores egoístas a través de análisis y simulaciones teóricas. Modelamos el almacenamiento en caché egoísta como un juego no cooperativo. En el modelo básico, los servidores tienen dos acciones posibles para cada objeto. Si una réplica de un objeto solicitado se encuentra en un nodo cercano, el servidor puede ser mejor acceder a la réplica remota. Por otro lado, si todas las réplicas se encuentran demasiado lejos, el servidor está mejor en caché del objeto en sí. Las decisiones sobre el almacenamiento en caché de las réplicas localmente se llegan localmente, teniendo en cuenta solo los costos locales. También definimos un modelo de pago más elaborado, en el que cada servidor oferta por tener un objeto replicado en otro sitio. Cada sitio ahora tiene la opción de replicar un objeto y recopilar las ofertas relacionadas. Una vez que todos los servidores han elegido una estrategia, cada juego especifica una configuración, es decir, el conjunto de servidores que replican el objeto y los costos correspondientes para todos los servidores. La teoría del juego predice que tal situación terminará en un equilibrio de Nash, es decir, un conjunto de estrategias (posiblemente aleatorias) con la propiedad que ningún jugador puede beneficiar al cambiar su estrategia, mientras que los otros jugadores mantienen sus estrategias sin cambios [28]. A pesar de las consideraciones fundamentales, no es fácil aceptar estrategias aleatorias como el comportamiento de los agentes racionales en un sistema distribuido (ver [28] para una discusión extensa), pero esto es lo que la teoría clásica de los juegos puede garantizar. Sin embargo, en ciertas situaciones muy afortunadas (ver [9]), se puede predecir la existencia de equilibrios de Nash puro (es decir, determinista). Sin embargo, con o sin aleatorización, la falta de coordinación inherente a la toma de decisiones egoístas puede incurrir en costos mucho más allá de lo que sería globalmente óptimo. Esta pérdida de eficiencia es 1 Utilizaremos el almacenamiento en caché y la replicación indistintamente.2 Usamos el objeto de término como una entidad abstracta que representa archivos y otros objetos de datos.21 Cuantificado por el precio de la anarquía [21]. El precio de la anarquía es la proporción del costo social (total) del peor equilibrio de Nash posible al costo del óptimo social. El precio de la anarquía limita el peor comportamiento posible de un sistema egoísta, cuando se deja completamente solo. Sin embargo, en realidad hay formas en que el sistema puede guiarse, a través de la siembra o incentivos, a un equilibrio de Nash preseleccionado. Esta versión optimista del precio de la anarquía [3] es capturada por la relación más pequeña entre un equilibrio de Nash y el óptimo social. En este documento abordamos las siguientes preguntas: • ¿Existen los equilibrios de Nash de estrategia pura en el juego de almacenamiento en caché?• Si existen equilibrios de Nash de estrategia pura, ¿cuán eficientes son (en términos del precio de la anarquía, o su contraparte optimista) bajo diferentes costos de colocación, topologías de red y distribuciones de demanda?• ¿Cuál es el efecto de adoptar pagos? ¿Se mejorará los equilibrios Nash? Mostramos que la estrategia pura Equilibrios de Nash siempre existen en el juego de almacenamiento en caché. El precio de la anarquía del modelo de juego básico puede ser o (n), donde n es el número de servidores;La razón intuitiva es la subida. Bajo ciertas topologías, el precio de la anarquía tiene límites más estrictos. Para gráficos y estrellas completos, es O (1). Para las cuadrículas D-dimensionales, es O (N D D+1). Incluso el precio optimista de la anarquía puede ser o (n). Sin embargo, en el modelo de pago, el juego siempre puede implementar un equilibrio de Nash que sea el mismo que el óptimo social, por lo que el precio optimista de la anarquía es uno. Nuestros resultados de simulación muestran varias fases interesantes. A medida que el costo de colocación aumenta de cero, el precio de la anarquía aumenta. Cuando el costo de colocación excede por primera vez la distancia máxima entre los servidores, el precio de la anarquía está en su punto más alto debido a los problemas de suboficial. A medida que aumenta aún más el costo de la colocación, el precio de la anarquía disminuye y el efecto de la réplica extravagante domina el precio de la anarquía. El resto del documento está organizado de la siguiente manera. En la Sección 2 discutimos el trabajo relacionado. La Sección 3 analiza los detalles del juego básico y analiza los límites del precio de la anarquía. En la Sección 4 discutimos el juego de pago y analizamos su precio de la anarquía. En la Sección 5 describimos nuestra metodología de simulación y estudiamos las propiedades de los equilibrios NASH observados. Discutimos las extensiones del juego y las direcciones para el trabajo futuro en la Sección 6. 2. Trabajo relacionado ha habido una investigación considerable sobre sistemas de archivos entre pares de área de amplio área como OceanStore [22], CFS [5], Pasado [32], Farsite [2] y Pangea [33], caché web, comoNetCache [6] y ResumenCache [10], y cachés entre pares como Squirrel [16]. La mayoría de estos sistemas usan almacenamiento en caché para el rendimiento, la disponibilidad y la confiabilidad. Los protocolos de almacenamiento en caché asumen obediencia al protocolo e ignoran los incentivos de los participantes. Nuestro trabajo comienza desde la suposición de que los servidores son egoístas y cuantifican el costo de la falta de coordinación cuando los servidores se comportan egoístamente. La colocación de réplicas en el problema del almacenamiento en caché es el tema más importante. Hay mucho trabajo en la colocación de réplicas web, servidores de instrumentación y recursos replicados. Todos los protocolos asumen la obediencia e ignoran los incentivos de los participantes. En [14], Gribble et al.Discuta el problema de colocación de datos en sistemas entre pares. Ko y Rubenstein proponen un algoritmo de coloración de gráficos distribuido y autoestabilizado para la colocación de recursos replicados [20]. Chen, Katz y Kubiatowicz proponen un algoritmo de colocación de réplica dinámica que explota tablas de hash distribuidas subyacentes [4]. Douceur y Wattenhofer describen un algoritmo de escalada para intercambiar réplicas por fiabilidad en la farsa [8]. Radar es un sistema que replica y migra objetos para un servicio de alojamiento de Internet [31]. Tang y Chanson proponen un almacenamiento web coordinado en ruta en ruta que almacena objetos a lo largo de la ruta de enrutamiento [34]. Los algoritmos centralizados para la colocación de objetos, proxies web, espejos y servidores de instrumentación en Internet se han estudiado ampliamente [18,19,23,30]. El problema de ubicación de la instalación se ha estudiado ampliamente como un problema de optimización centralizado en la investigación teórica de informática y operaciones de operaciones [27]. Dado que el problema es NP-HARD, se han explorado algoritmos de aproximación basados en técnicas primarias-duales, algoritmos codiciosos y búsqueda local [17, 24, 26]. Nuestro juego de almacenamiento en caché es diferente de todo esto, ya que el proceso de optimización se realiza entre los servidores egoístas distribuidos. Hay poca investigación en los juegos de ubicación de las instalaciones no cooperativas, hasta donde sabemos. Vetta [35] considera una clase de problemas en los que la utilidad social es submodular (la submodularidad significa disminución de la utilidad marginal). En el caso de la ubicación de las instalaciones competitivas entre las corporaciones, demuestra que cualquier equilibrio de Nash ofrece una utilidad social esperada dentro de un factor de 2 de óptimo más un término aditivo que depende del costo de apertura de la instalación. Sin embargo, sus resultados no son directamente aplicables a nuestro problema, ya que consideramos que cada servidor está vinculado a una ubicación particular, mientras que en su modelo un agente puede abrir instalaciones en múltiples ubicaciones. Tenga en cuenta que en ese documento el aumento del precio de la anarquía proviene de problemas de exceso de oferta debido al hecho de que las corporaciones competidoras pueden abrir instalaciones en el mismo lugar. Por otro lado, los problemas importantes en nuestro juego son la subida y la falta de colocación. En un artículo reciente, Goemans et al.Analice la distribución de contenido en redes inalámbricas ad-hoc utilizando un enfoque teórico del juego [12]. Al igual que en nuestro trabajo, proporcionan incentivos monetarios a los usuarios móviles para almacenar en caché de elementos de datos, y proporcionan límites ajustados sobre el precio de la anarquía y la velocidad de convergencia a los equilibrios (aproximados) Nash. Sin embargo, sus resultados son incomparables para los nuestros porque sus funciones de pago descuidan las latencias de red entre los usuarios, consideran múltiples elementos de datos (mercados), y cada nodo tiene un presupuesto limitado para almacenar en caché. El problema de la ubicación de la instalación se ha estudiado utilizando la teoría de juegos cooperativos [7, 13, 29]. Goemans y Skutella muestran fuertes conexiones entre las asignaciones de costos justos y las relajaciones de programación lineal para los problemas de ubicación de las instalaciones [13]. P´Al y Tardos desarrollan un método para el intercambio de costos compartidos que es aproximadamente el presupuesto equilibrado y a prueba de estrategias grupales y muestran que el método recupera 1/3 del costo total para el juego de ubicación de la instalación [29]. Devanur, Mihail y Vazirani ofrecen una asignación de costos a prueba de estrategias para el problema de ubicación de la instalación, pero no pueden lograr la prueba de estrategia grupal [7].3. Juego básico El problema de almacenamiento en caché que estudiamos es encontrar una configuración que cumpla con ciertos objetivos (por ejemplo, costo total mínimo). La Figura 1 muestra ejemplos de almacenamiento en caché entre cuatro servidores. En la red (a), un almacena un objeto. Supongamos que B quiere acceder al objeto. Si es más barato acceder a la réplica remota que en caché, B accede a la réplica remota como se muestra en la red (b). En la red (c), C quiere acceder al objeto. Si C está lejos de A, C almacena el objeto en lugar de acceder al objeto desde A. Es posible que en una configuración óptima sea mejor colocar réplicas en A y B. Comprender la colocación de réplicas por servidores egoístas es el foco de nuestro estudio. El problema del almacenamiento en caché se abstrae de la siguiente manera. Hay un conjunto de N de N servidores y un conjunto M de objetos M. La distancia entre los servidores se puede representar como una matriz de distancia D (es decir, DIJ es el servidor de servidor del servidor de servidor de distancia 22 A B C D (A) Server del servidor del servidor de servidor A B C D (B) Server del servidor del servidor de servidor A B C D (C) Figura 1: almacenamiento en caché. Hay cuatro servidores etiquetados A, B, C y D. Los rectángulos son réplicas de objetos. En (a), un almacena un objeto. Si B incurra a menos acceso a costos como réplica de lo que almacenaría en caché el objeto en sí, accede al objeto desde A como en (b). Si el costo de distancia es demasiado alto, el servidor almacena en caché el objeto en sí, como C lo hace en (c). Esta figura es un ejemplo de nuestro modelo de juego de almacenamiento en caché.Desde el servidor I al servidor j). D modela una topología de red subyacente. Para nuestro análisis, suponemos que las distancias son simétricas y la desigualdad del triángulo se mantiene en las distancias (para todos los servidores I, J, K: DIJ + DJK ≥ DIK). Cada servidor tiene la demanda de los clientes representados por una matriz de demanda w (es decir, WIJ es la demanda del servidor I para el objeto j). Cuando un servidor se pone en caché los objetos, el servidor incurre en algún costo de colocación representado por una matriz α (es decir, αij es un costo de colocación del servidor I para el objeto j). En este estudio, suponemos que los servidores no tienen límite de capacidad. Como discutimos en la siguiente sección, este hecho significa que el comportamiento de almacenamiento en caché con respecto a cada objeto puede examinarse por separado. En consecuencia, podemos hablar sobre las configuraciones del sistema con respecto a un objeto dado: Definición 1. Una configuración x para algún objeto o es el conjunto de servidores que replica este objeto. El objetivo del juego básico es encontrar configuraciones que se logren cuando los servidores optimizan sus funciones de costo localmente.3.1 Modelo de juego Tomamos un enfoque teórico del juego para analizar el problema de almacenamiento en caché no capacitado entre los servidores egoístas en red. Modelamos el problema de almacenamiento egoísta como un juego no cooperativo con N jugadores (servidores/nodos) cuyas estrategias son conjuntos de objetos para caché. En el juego, cada servidor elige una estrategia pura que minimiza su costo. Nuestro enfoque es investigar la configuración resultante, que es el equilibrio NASH del juego. Debe enfatizarse que consideramos solo la estrategia pura Equilibrios de Nash en este documento. El modelo de costos es una parte importante del juego. Deje que Ai sea el conjunto de estrategias factibles para el servidor I, y deje Si ∈ Ai sea la estrategia elegida por el servidor i. Dado un perfil de estrategia S = (S1, S2, ..., Sn), el costo incurrido por el servidor I se define como: CI (S) = j∈Si αij + j /∈Si wij di (i, j).(1) donde αij es el costo de colocación del objeto J, wij es la demanda que el servidor que tiene para el objeto J, (i, j) es el servidor más cercano a i que almacena el objeto J, y DIK es la distancia entre I y K.Cuando ningún servidor almacena en caché el objeto, definimos el costo de distancia di (i, j) para ser lo suficientemente grande como para que al menos un servidor elija almacenar en caché el objeto. El costo de colocación se puede dividir en el costo de instalación y el costo de mantenimiento por primera vez: αij = K1i + K2I actualizadas por objetojejej 1 t pj k wkj, (2) donde k1i es el costo de instalación, k2i es el peso relativo entre el costo de mantenimiento y el mantenimientoEl costo de instalación, PJ es la relación de la cantidad de escrituras sobre el número de lecturas y escrituras, UpdateSizej es el tamaño de una actualización, ObjectSizej es el tamaño del objeto y T es el período de actualización. Vemos compensaciones entre diferentes parámetros en esta ecuación. Por ejemplo, colocar réplicas se vuelve más costosa a medida que aumenta las actualizaciones, aumenta PJ o T disminuye. Sin embargo, tenga en cuenta que al variar αIJ en sí podemos capturar el rango completo de comportamientos en el juego. Para nuestro análisis, usamos solo αij. Dado que no hay límite de capacidad en los servidores, podemos ver cada objeto como un juego separado y combinar los equilibrios de estrategia pura de estos juegos para obtener un equilibrio de estrategia pura del juego de objetos múltiples. Fabrikant, Papadimitriou y Talwar discuten este argumento de existencia: si se sabe que dos juegos tienen equilibrios puros, y sus funciones de costo son intermonotónicas, entonces también se garantiza que su unión tenga equilibrios de nash puros, mediante un argumento de continuidad [9]. Un equilibrio de Nash para el juego de objetos múltiples es el producto cruzado de los equilibrios NASH para los juegos de un solo objeto. Por lo tanto, podemos centrarnos en el juego de un solo objeto en el resto de este documento. Para el almacenamiento egoísta de un solo objeto, cada servidor I tiene dos estrategias: caché o no para cachear. El objeto bajo consideración es j. Definimos que SI sea 1 cuando el servidor i cachome j y 0 de lo contrario. El costo incurrido por el servidor I es CI (S) = αIJ Si + WIJ DI (I, J) (1 - Si).(3) Nos referimos a este juego como el juego básico. La medida en que CI (s) representa el costo real incurrido por el servidor I está más allá del alcance de este documento;Asumiremos que se puede definir una función de costo apropiada de la forma de la ecuación 3.3.2 Soluciones de equilibrio de Nash En principio, podemos comenzar con una configuración aleatoria y dejar que esta configuración evolucione a medida que cada servidor altera su estrategia e intenta minimizar su costo. La teoría del juego está interesada en soluciones estables llamadas Equilibrios Nash. Se alcanza una estrategia pura que se alcanza el equilibrio de Nash cuando ningún servidor puede beneficiarse cambiando unilateralmente su estrategia. Un equilibrio NASH3 (s ∗ i, s ∗ −i) para el juego básico especifica una configuración x tal que ∀i ∈ N, i ∈ X ⇔ s ∗ i = 1. Por lo tanto, podemos considerar un conjunto E de todas las configuraciones de equilibrio de Nash de estrategia pura: x ∈ E ⇔ ∀i ∈ N, ∀si ∈ Ai, Ci (S ∗ I, S ∗ −i) ≤ Ci (Si, S ∗ −i) (4) Según esta definición, ningún servidor tiene un incentivo para desviarse en las configuraciones, ya que no puede reducir su costo. Para el juego básico, podemos ver fácilmente que: x ∈ E ⇔ ∀i ∈ N, ∃j ∈ X S.T.DJI ≤ α y ∀j ∈ X, ¬∃K ∈ X S.T.DKJ <α (5) La primera condición garantiza que hay un servidor que coloca la réplica dentro de la distancia α de cada servidor i. Si la réplica no se coloca 3, la notación para el perfil de estrategia (S ∗ I, S ∗ −i) separa la estrategia del nodo I (S ∗ I) de las estrategias de otros nodos (S ∗ −i).23 A B1 - α 0 0 0 0 0 0 0 0 0 0 0 2 N Nodos 2 N Nodos (a) A B1 - α 0 0 0 0 0 0 0 0 0 0 0 2 N Nodos 2 N Nodos (B) A B1−α 2 N ganglios 2 N ganglios N2 N2 N2 N2 N2 N2 N2 N2 N2 N2 N2 (C) Figura 2: ineficiencia potencial de equilibrios NASH ilustrados por dos grupos de servidores N 2. Las distancias intra-clúster son todas cero y la distancia entre los grupos es α-1, donde α es el costo de colocación. Los nodos oscuros replican el objeto. La red (a) muestra un equilibrio NASH en el juego básico, donde un servidor en un clúster almacena en caché el objeto. La red (b) muestra el óptimo social donde se colocan dos réplicas, una para cada clúster. El precio de la anarquía es o (n) e incluso el precio optimista de la anarquía es o (n). Este alto precio de la anarquía proviene de la subida de las réplicas debido a la naturaleza egoísta de los servidores. La red (c) muestra un equilibrio de Nash en el juego de pago, donde se colocan dos réplicas, una para cada clúster. Cada nodo de luz en cada clúster paga 2/n al nodo oscuro, y el nodo oscuro replica el objeto. Aquí, el precio optimista de la anarquía es uno.En I, luego se coloca en otro servidor a la distancia α de I, por lo que no tengo ningún incentivo para el almacenamiento en caché. Si la réplica se coloca en I, la segunda condición asegura que no haya incentivo para soltar la réplica porque no hay dos servidores separados por una distancia inferior a α ambas réplicas.3.3 Social Optimum El costo social de un perfil de estrategia determinado se define como el costo total incurrido por todos los servidores, a saber: c (s) = n - 1 i = 0 CI (s) (6) donde CI (s) es el costoincurrido por el servidor I dada por la ecuación 1. El costo óptimo social, denominado C (SO) para el resto del documento, es el costo social mínimo. El costo óptimo social servirá como un caso base importante contra el cual medir el costo del almacenamiento en caché egoísta. Definimos C (SO) AS: C (SO) = Min S C (S) (7) donde S varía sobre todos los perfiles de estrategia posibles. Tenga en cuenta que en el juego básico, esto significa una configuración variable X sobre todas las configuraciones posibles. En cierto sentido, C (SO) representa el mejor comportamiento de almacenamiento en caché posible, si solo los nodos pudieran ser convencidos de cooperar entre sí. La configuración Social Optimum es una solución de un problema de ubicación de la instalación de mini suma, que es NP-Hard [11]. Para encontrar tales configuraciones, formulamos un problema de programación entero: minimizar èi èj ¢ αij xij + èk wij dikyijk £ sujeto a ∀i, j èk yijk = i (wij) ∀i, j, k xij - ykji ≥ 0 ∀i,,j xij ∈ {0, 1} ∀i, j, k yijk ∈ {0, 1} (8) Aquí, xij es 1 si el servidor i replica el objeto j y 0 de lo contrario;Yijk es 1 si el servidor i accesa el objeto J desde el servidor k y 0 de lo contrario;I (W) Devuelve 1 si W no es cero y 0 de lo contrario. La primera restricción especifica que si el servidor tengo demanda de objeto j, entonces debe acceder a J desde exactamente un servidor. La segunda restricción asegura que el servidor I replique el objeto J si cualquier otro servidor accede a J desde i.3.4 Análisis Para analizar el juego básico, primero damos una prueba de la existencia de pura estrategia Nash Equilibrios. Discutimos el precio de la anarquía en general y luego en topologías subyacentes específicas. En este análisis usamos simplemente α en lugar de αIJ, ya que tratamos con un solo objeto y suponemos que el costo de colocación es el mismo para todos los servidores. Además, cuando calculamos el precio de la anarquía, suponemos que todos los nodos tienen la misma demanda (es decir, ∀i ∈ N wij = 1). Teorema 1. La estrategia pura Equilibrios de Nash existe en el juego básico. PRUEBA. Mostramos una prueba constructiva. Primero, inicialice el conjunto V a N. Luego, elimine todos los nodos con cero demanda de v. Cada nodo X define βx, donde βx = α wxj. Además, deje z (y) = {z: dzy ≤ βz, z ∈ V};Z (y) representa todos los nodos z para los cuales Y se encuentra dentro de βz de z. Elija un nodo y ∈ V tal que βy ≤ βx para todos x ∈ V. Coloque una réplica en y y luego elimine y y todas z ∈ Z (y) de v. Ninguna Z puede tener un incentivo para replicar el objeto porque puede acceder a la réplica de YS a un costo inferior (o igual). Iterar este proceso de colocar réplicas hasta que V esté vacío. Debido a que en cada iteración y es el nodo restante con β mínimo, no se colocará una réplica dentro de la distancia βy de tal y por este proceso. La configuración resultante es un equilibrio NASH de estrategia pura del juego básico. El precio de la anarquía (POA): para cuantificar el costo de la falta de coordinación, utilizamos el precio de la anarquía [21] y el precio optimista de la anarquía [3]. El precio de la anarquía es la proporción de los costos sociales del peor equilibrio de Nash y el óptimo social, y el precio optimista de la anarquía es la relación de los costos sociales del mejor equilibrio de Nash y el óptimo social. Mostramos límites generales sobre el precio de la anarquía. A lo largo de nuestra discusión, usamos C (SW) para representar el costo del peor de los casos Nash Equilibrium, C (SO) para representar el costo del óptimo social y POA para representar el precio de la anarquía, que es C (SW) C (SO SO). El peor de los casos de equilibrio de Nash maximiza el costo total bajo la restricción de que la configuración cumple con la condición Nash. Formalmente, podemos definir C (SW) de la siguiente manera. C (sw) = max x∈E (α | x | + i min j∈X dij) (9) donde minj∈X dij es la distancia a la réplica más cercana (incluida la misma) del nodo I y x varía a través de NashConfiguraciones de equilibrio. Límites sobre el precio de la anarquía: mostramos límites del precio de la anarquía que varía α. Deje dmin = min (i, j) ∈N × n, i = j dij y dmax = max (i, j) ∈N × n dij. Vemos que si α ≤ dmin, POA = 1 24 Topología POA Gráfico completo 1 estrella ≤ 2 línea O (√ n) D-dimensional D-dimensional O (n d d+1) Tabla 1: POA en el juego básico para topologías específicas de manera trivialmente, dado que cada servidor almacena el objeto tanto para el equilibrio de Nash como para el óptimo social. Cuando α> dmax, hay una transición en los equilibrios de Nash: dado que el costo de colocación es mayor que cualquier costo de distancia, solo un servidor almacena el objeto y otros servidores acceden de forma remota. Sin embargo, el óptimo social aún puede colocar múltiples réplicas. Dado que α ≤ c (so) ≤ α+minj∈N èi dij cuando α> dmax, obtenemos α+maxj∈N èi dij α+minj∈N èi dij ≤ poa ≤ α+maxj∈N èi dij α. Tenga en cuenta que dependiendo de la topología subyacente, incluso el límite inferior de POA puede ser o (n). Finalmente, hay una transición cuando α> maxj∈N èi dij. En este caso, poa = α+maxj∈N èi dij α+minj∈N èi dij y está limitado superior por 2. La Figura 2 muestra un ejemplo de la ineficiencia de un equilibrio de Nash. En la red hay dos grupos de servidores cuyo tamaño es n 2. La distancia entre dos grupos es α - 1, donde α es el costo de colocación. La Figura 2 (a) muestra un equilibrio de Nash donde un servidor en un clúster almacena en caché del objeto. En este caso, C (SW) = α + (α - 1) n 2, ya que todos los servidores en el otro clúster acceden a la réplica remota. Sin embargo, el óptimo social coloca dos réplicas, una para cada grupo, como se muestra en la Figura 2 (b). Por lo tanto, C (SO) = 2α. POA = α+(α - 1) n 2 2α, que es O (N). Este mal precio de la anarquía proviene de una suministra de réplicas debido a la naturaleza egoísta de los servidores. Tenga en cuenta que todos los equilibrios de Nash tienen el mismo costo;Por lo tanto, incluso el precio optimista de la anarquía es o (n). En el Apéndice A, analizamos el precio de la anarquía con topologías subyacentes específicas y mostramos que POA puede tener límites más ajustados que O (N) para el gráfico completo, la estrella, la línea y la cuadrícula D-dimensional. En estas topologías, establecemos la distancia entre nodos directamente conectados a uno. Describimos el caso donde α> 1, ya que POA = 1 trivialmente cuando α ≤ 1. Un resumen de los resultados se muestra en la Tabla 1. 4. Juego de pago En esta sección, presentamos una extensión al juego básico con pagos y analizamos el precio de la anarquía y el precio optimista de la anarquía del juego.4.1 Modelo del juego El nuevo juego, al que referimos el juego de pago, permite a cada jugador ofrecer un pago a otro jugador para dar este último incentivo para replicar el objeto. El costo de la replicación se comparte entre los nodos que pagan el servidor que replica el objeto. La estrategia para cada jugador I se especifica mediante un triplete (vi, bi, ti) ∈ {n, ê+, ê+}.VI especifica al jugador a quien hago una oferta, BI ≥ 0 es el valor de la oferta, y ti ≥ 0 denota un umbral para pagos más allá de los cuales replicaré el objeto. Además, usamos RI para denotar la cantidad total de ofertas recibidas por un nodo I (ri = èj: vj = i bj). Un nodo I replica el objeto si y solo si ri ≥ ti, es decir, la cantidad de ofertas que recibe es mayor o igual a su umbral. Deje que II denote la variable indicadora correspondiente, es decir, II es igual a 1 si I replica el objeto, y 0 de lo contrario. Hacemos la regla de que si es un nodo, hace una oferta a otro nodo j y j replica el objeto, entonces debo pagar la cantidad bi. Si J no replica el objeto, no pago j. Dado un perfil de estrategia, el resultado del juego es el conjunto de tuplas {(ii, vi, bi, ri)}. II nos dice si el jugador I replica el objeto o no, BI es el jugador de pago que ha hecho al Jugador VI, y RI es la cantidad total de ofertas recibidas por el jugador I. Para calcular los pagos dado el resultado, ahora debemos tener en cuenta los pagos que realiza un nodo, además de los costos de colocación y los costos de acceso del juego básico. Según nuestras reglas, un nodo del servidor i paga BI al nodo VI si VI replica el objeto, y recibe un pago de RI si replica el objeto en sí. Su pago neto es biivi - riii. El costo total incurrido por cada nodo es la suma de su costo de colocación, costo de acceso y pago neto. Se define como CI (S) = αij II + WIJ di (I, J) (1 - II) + Biivi - RIII.(10) El costo de las óptimas sociales para el juego de pago es el mismo que para el juego básico, ya que los pagos netos se cancelaron.4.2 Análisis En el análisis del modelo de pago, primero mostramos que un equilibrio de Nash en el juego básico también es un equilibrio de Nash en el juego de pago. Luego presentamos un resultado positivo importante: en el juego de pago, la configuración socialmente óptima siempre puede ser implementada mediante un equilibrio NASH. Sabemos por el contraejemplo en la Figura 2 que esto no está garantizado en el juego básico. En este análisis usamos α para representar αij. Teorema 2. Cualquier configuración que sea una estrategia pura Equilibrio de Nash en el juego básico también es un equilibrio de NASH de estrategia pura en el juego de pago. Por lo tanto, el precio de la anarquía del juego de pago es al menos el del juego básico. PRUEBA. Considere cualquier configuración de equilibrio de Nash en el juego básico. Para cada nodo que replica el objeto, establezca su umbral Ti en 0;Todos los demás tienen umbral α. Además, para todos i, bi = 0. Un nodo que replica el objeto no tiene incentivo para cambiar su estrategia: cambiar el umbral no disminuye su costo, y tendría que pagar al menos α para acceder a una réplica remota o incentivar un nodo cercano a la memoria caché. Por lo tanto, es mejor mantener su umbral y ofertar en 0 y replicar el objeto. Un nodo que no replica el objeto puede acceder al objeto de forma remota a un costo menor o igual a α. Bajar su umbral no disminuye su costo, ya que todos los BI son cero. El pago necesario para que otro servidor coloque una réplica es al menos α. Ningún jugador tiene un incentivo para desviarse, por lo que la configuración actual es un equilibrio de Nash. De hecho, el Apéndice B muestra que el POA del juego de pago puede ser más que el del juego básico en una topología dada. Ahora veamos lo que sucede con el ejemplo que se muestra en la Figura 2 en el mejor caso. Supongamos que los vecinos de Node BS deciden pagar el nodo B una cantidad 2/n. B no tiene un incentivo para desviarse, ya que acceder a la réplica remota no disminuye su costo. El mismo argumento es válido para A debido a la simetría en el gráfico. Como nadie tiene un incentivo para desviarse, la configuración es un equilibrio de Nash. Su costo total es 2α, lo mismo que en la configuración socialmente óptima que se muestra en la Figura 2 (b). A continuación, demostramos que, de hecho, el juego de pago siempre tiene un perfil de estrategia que implementa la configuración socialmente óptima como un equilibrio de Nash. Primero presentamos la siguiente observación, que se usa en la prueba, sobre los umbrales en el juego de pago. Observación 1. Si el nodo I replica el objeto, J es el nodo más cercano a I entre los otros nodos que replican el objeto, y dij <α en un equilibrio de Nash, entonces debería tener un umbral al 25 mínimo (α - dij). De lo contrario, no puede recaudar suficiente pago para compensar el costo de replicar el objeto y es mejor acceder a la réplica en j.Teorema 3. En el juego de pago, siempre hay una estrategia pura Equilibrio Nash que implementa la configuración social óptima. El precio optimista de la anarquía en el juego de pago es, por lo tanto, siempre uno. PRUEBA. Considere la configuración socialmente óptima φopt. No sea el conjunto de nodos que replican el objeto y nc = n - no ser el resto de los nodos. Además, para cada i en no, deje que Qi denote el conjunto de nodos que acceden al objeto desde i, sin incluirlo en sí. En la configuración socialmente óptima, DIJ ≤ α para todos J en Qi. Queremos encontrar un conjunto de pagos y umbrales que haga que esta configuración sea implementable. La idea es mirar cada nodo I en No y distribuir el pago mínimo necesario para hacer que replicar el objeto entre los nodos que acceden al objeto desde i. Para cada i en no, y para cada j en qi, definimos ΔJ = min {α, min k∈No− {i} djk} - dji (11) Tenga en cuenta que ΔJ es la diferencia entre el costo JS para acceder a la réplica enYo y JS la siguiente mejor opción entre replicar el objeto y acceder a alguna réplica que no sea yo. Está claro que ΔJ ≥ 0. Reclamación 1. Para cada uno i ∈ No, sea el nodo más cercano a I en No. Entonces, èj∈Qi ΔJ ≥ α - Di. PRUEBA.(de afirmación) Suponga lo contrario, es decir, èj∈Qi ΔJ <α - di. Considere la nueva configuración φnew en la que no se replica y cada nodo en Qi elige su siguiente mejor estrategia (replicando o accediendo a la réplica en algún nodo en No - {i}). Además, todavía colocamos réplicas en cada nodo en No - {i}. Es fácil ver que el costo de φopt menos el costo de φnew es al menos: (α + j∈Qi diJ) - (di + j∈Qi min {α, min k∈No− {i} dik}) = α -−di - j∈Qi ΔJ> 0, que contradice la optimización de φopt. Establecimos ofertas de la siguiente manera. Para cada i en no, bi = 0 y para cada j en qi, j oferta a i (es decir, vj = i) la cantidad: bj = max {0, ΔJ - i/(| qi | + 1)}, j∈ Qi (12) donde i = èj∈Qi ΔJ - α + DI ≥ 0 y | Qi |es la cardinalidad de Qi. Para los umbrales, tenemos: ti = α si i ∈ Nc; èj∈Qi bj Si i ∈ No. (13) Esto especifica completamente el perfil de estrategia de los nodos, y es fácil ver que el resultado es de hecho el socialmente el socialmenteConfiguración óptima. A continuación, verificamos que las estrategias estipuladas constituyan un equilibrio de Nash. Haber establecido Ti en α para I en NC significa que cualquier nodo en N está al menos tan bien reduciendo su umbral y replicando como una oferta α a algún nodo en NC para replicarlo, por lo que podemos ignorar este último como una estrategia rentable. Mediante la observación 1, para asegurar que cada i en NO no se desvíe, requerimos que si es el nodo más cercano a i en no, entonces èj∈Qi bj es al menos (α - di). De lo contrario, elevaré Ti por encima de èj∈Qi bj para que no se replique y, en su lugar, acceda a la réplica en. Podemos verificar fácilmente que j∈Qi bj ≥ j∈Qi ΔJ - | qi |i | qi |+ 1 = α - di + i | qi |+ 1 ≥ α - Di.1 1.5 2 2.5 3 3.5 4 4.5 5 5.5 0 20 40 60 80 100 120 140 160 180 200 1 10 100 C (NE)/C (SO) Averagenumberofreplicas Alpha PoA Relation Opoa Replica (SO) Réplica (NE) Figura 3: nosotrosPresente los resultados de P OA, Ratio y Op OA para el juego básico, variando α en una topología de la línea de 100 nodos, y mostramos el número de réplicas colocadas por los equilibrios NASH y por la solución óptima. Vemos picos grandes en p oa y op oa en α = 100, donde una transición de fase provoca una transición abrupta en las líneas. Por lo tanto, cada nodo I ∈ No no tiene incentivo para cambiar TI ya que pierde sus pagos recibidos o no hay cambios, y no tengo incentivo a BI ya que replica el objeto. Cada nodo J en NC no tiene incentivos para cambiar TJ ya que cambiar TJ no reduce su costo. Tampoco tiene incentivos para reducir BJ ya que el nodo donde J accesos no se replica y J tiene que replicar el objeto o acceder a la siguiente réplica más cercana, que cuesta al menos lo mismo de la definición de BJ. Ningún jugador tiene un incentivo para desviarse, por lo que este perfil de estrategia es un equilibrio de Nash.5. Simulación Ejecutamos simulaciones para comparar los equilibrios NASH para el juego de almacenamiento en caché de un solo objeto con el óptimo social calculado resolviendo el programa lineal entero descrito en la Ecuación 8 usando Mosek [1]. Examinamos el precio de la anarquía (POA), el precio optimista de la anarquía (OPOA) y la relación promedio de los costos de los equilibrios NASH y el Optima Social (relación), y cuando es relevante también mostramos el número promedio de réplicas colocadas por el equilibrio NASH(Réplica (NE)) y el óptimo social (réplica (SO)). El POA y OPOA están tomados de los peores y mejores equilibrios de Nash, respectivamente, que observamos sobre las carreras. Cada punto de datos en nuestras cifras se basa en 1000 ejecuciones, variando aleatoriamente el perfil de estrategia inicial y el orden de los reproductores. Los detalles de las simulaciones, incluidos los protocolos y una discusión de la convergencia, se presentan en el Apéndice C. En nuestra evaluación, estudiamos los efectos de la variación en cuatro categorías: costo de colocación, topología subyacente, distribución de la demanda y pagos. A medida que variamos el costo de colocación α, influyimos directamente en la compensación entre el almacenamiento en caché y no el almacenamiento en caché. Para obtener una imagen clara de la dependencia de POA en α en un caso simple, primero analizamos el juego básico con una topología de línea de 100 nodos cuya distancia de borde es una. También exploramos las topologías de stub de tránsito generadas utilizando la biblioteca GTITM [36] y las topologías de la ley de potencia (modelo Barabasialbert a nivel de enrutador) generadas utilizando el generador de topología de Brite [25]. Para estas topologías, generamos un gráfico físico subyacente de 3050 nodos físicos. Ambas topologías tienen distancias de nodo físicas mínimas, promedio y máximas similares. La distancia promedio es 0.42. Creamos una superposición de 100 nodos del servidor y usamos la misma superposición para todos los experimentos con la topología dada. En el juego, cada servidor tiene una demanda cuya distribución es Bernoulli (P), donde P es la probabilidad de tener demanda del objeto;El valor predeterminado a menos que se especifique lo contrario es p = 1.0.26 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8 3 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C (NE)/C (SO) AverageNumberOfReplicas Alpha POA Ratio OpoA Replica (SO) Réplica (NE) ((NE) ((a) 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8 3 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C (NE)/C (SO) AverageNumberOfReplicas Alpha PoA Ratio OpoA Replica (SO) Replica (NE)(b) Figura 4: Topología de tránsito: (a) Juego básico, (b) Juego de pago. Mostramos el P oA, la relación, OP OA y el número de réplicas colocadas mientras variamos α entre 0 y 2 con 100 servidores en una topología de stub de tránsito de nodo 3050-fisical.0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C (NE)/C (SO) AverageNumberofreplicas Alpha PoA Relation Opoa Réplica (SO) Réplica (NE) (A) 0.8 1 1 11.2 1.4 1.6 1.8 2 2.2 2.4 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C (ne)/c (SO) AveraGenumberofreplicas Alpha PoA Relation OpoA Réplica (SO) REPLICA (NE) (B) Figura 5: Figura 5:-Law Topology: (a) Juego básico, (b) juego de pago. Mostramos el P oA, la relación, Op OA y el número de réplicas colocadas mientras variamos α entre 0 y 2 con 100 servidores en una topología de la ley de potencia de nodo 3050-nodo.5.1 Costo de colocación variable La Figura 3 muestra POA, OPOA y relación, así como el número de réplicas colocadas, para la topología de la línea a medida que α varía. Observamos dos fases. A medida que α aumenta, el POA aumenta rápidamente a un pico en 100. Después de 100, hay una disminución gradual. OPOA y el comportamiento de la relación muestran similar al POA. Estos comportamientos pueden explicarse examinando el número de réplicas colocadas por los equilibrios NASH y por soluciones óptimas. Vemos que cuando α está por encima de uno, las soluciones de equilibrio de Nash colocan menos réplicas que óptimas en promedio. Por ejemplo, cuando α es 100, el óptimo social coloca cuatro réplicas, pero el equilibrio de Nash coloca solo una. El pico en POA en α = 100 ocurre en el punto para una línea de 100 nodos donde el peor costo de acceder a una réplica remota es ligeramente menor que el costo de colocar una nueva réplica, por lo que los servidores egoístas nunca colocarán una segunda réplica. Sin embargo, la solución óptima coloca múltiples réplicas para disminuir el alto costo global de acceso. A medida que α continúa aumentando, el problema de la suboficial disminuye a medida que la solución óptima coloca menos réplicas.5.2 Diferentes topologías subyacentes en la Figura 4 (a) Examinamos un gráfico de superposición en la topología más realista de tránsito. Las tendencias para el POA, OPOA y la relación son similares a los resultados de la topología de la línea, con un pico en POA a α = 0.8 debido a la subida máxima. En la Figura 5 (a) examinamos un gráfico de superposición en la topología de la ley de potencia. Observamos varias diferencias interesantes entre los resultados de la ley de potencia y el tránsito. Primero, el POA alcanza su punto máximo en un nivel más bajo en el gráfico de la ley de potencia, alrededor de 2.3 (en α = 0.9), mientras que el POA máximo en la topología de tránsito es casi 3.0 (en α = 0.8). Después del pico, el POA y la relación disminuyen más lentamente a medida que aumenta α. OPOA está cerca de uno para todo el rango de valores α. Esto puede explicarse por la observación en la Figura 5 (a) que no hay un problema significativo de suboficial aquí como lo había en el gráfico de tránsito. De hecho, el alto POA se debe principalmente a problemas de exclusión cuando α es de 0.7 a 2.0, ya que hay poca disminución en POA cuando el número de réplicas en óptimo social cambia de dos a uno. El OPOA es igual a uno en la figura cuando se colocan el mismo número de réplicas.5.3 Distribución de demanda variable Ahora examinamos los efectos de variar la distribución de la demanda. El conjunto de servidores con demanda es aleatorio para p <1, por lo que calculamos el POA esperado promediando más de 5 ensayos (cada punto de datos se basa en 5000 ejecuciones). Ejecutamos simulaciones para los niveles de demanda de p ∈ {0.2, 0.6, 1.0} a medida que α varía en los 100 servidores en la parte superior del gráfico de stub de tránsito. Observamos que a medida que cae la demanda, también lo hace el POA esperado. A medida que disminuye P, el número de réplicas colocadas en el óptimo social disminuye, pero el número en los equilibrios de Nash cambia poco. Además, cuando α excede el diámetro de superposición, el número en los equilibrios de Nash permanece constante cuando P varía. Por lo tanto, la P más baja conduce a un problema menor de suboficial, de acuerdo con la intuición. No presentamos el gráfico debido a limitaciones de espacio y redundancia;El POA para P = 1.0 es idéntico a POA en la Figura 4 (a), y las líneas para p = 0.6 y p = 0.2 son similares pero más bajas y más plana.27 5.4 Efectos del pago Finalmente, discutimos los efectos de los pagos sobre la eficiencia de los equilibrios de Nash. Los resultados se presentan en la Figura 4 (b) y la Figura 5 (b). Como se muestra en el análisis, las simulaciones logran OPOA cerca de uno (no es exactamente uno debido a la aleatoriedad en las simulaciones). La relación para el juego de pago es mucho más baja que la relación para el juego básico, ya que el protocolo para el juego de pago tiende a explorar buenas regiones en el espacio de los equilibrios de Nash. Observamos en la Figura 4 que para α ≥ 0.4, el número promedio de réplicas de los equilibrios de Nash se acerca más con los pagos a los del óptimo social que lo hace sin. Observamos en la Figura 5 que se colocan más réplicas con pagos que sin cuando α está entre 0.7 y 1.3, el único rango de suboficial significativo en el caso de la ley de potencia. Los resultados confirman que los pagos dan a los servidores incentivos para replicar el objeto y esto conduce a mejores equilibrios.6. Discusión y trabajo futuro Sugerimos varias extensiones y direcciones interesantes. Una extensión es considerar múltiples objetos en el juego de almacenamiento en caché capacitado, en el que los servidores tienen límites de capacidad al colocar objetos. Dado que el almacenamiento en caché de un objeto afecta la capacidad de almacenar en caché a otro, no hay separabilidad de un juego de objetos múltiples en múltiples juegos de objetos individuales. Como se estudió en [12], una forma de formular este problema es encontrar la mejor respuesta de un servidor resolviendo un problema de mochila y calcular los equilibrios de Nash. En nuestros análisis, suponemos que todos los nodos tienen la misma demanda. Sin embargo, los nodos podrían tener una demanda diferente según los objetos. Tenemos la intención de examinar los efectos de las demandas heterogéneas (o costos de colocación heterogéneos) analíticamente. También queremos ver el siguiente efecto de agregación. Suponga que hay nodos agrupados N - 1 con una distancia de α - 1 desde un nodo que aloja una réplica. Todos los nodos tienen demandas de uno. En ese caso, el precio de la anarquía es o (n). Sin embargo, si agregamos los nodos N - 1 en un nodo con la demanda N - 1, el precio de la anarquía se convierte en O (1), ya que α debería ser mayor que (N - 1) (α - 1) para replicar solo un objeto. Dicha agregación puede reducir la ineficiencia de los equilibrios de NASH. Tenemos la intención de calcular los límites del precio de la anarquía bajo diferentes topologías subyacentes, como gráficos aleatorios o métricas Growrestledict. Queremos investigar si hay ciertas limitaciones de distancia que garantizan o (1) precio de la anarquía. Además, queremos ejecutar simulaciones a gran escala para observar el cambio en el precio de la anarquía a medida que aumenta el tamaño de la red. Otra extensión es considerar la congestión del servidor. Suponga que la distancia es la distancia de red más γ × (número de accesos) donde γ es un retraso adicional cuando un servidor adicional accede a la réplica. Luego, cuando α> γ, se puede demostrar que POA está limitado por α γ. A medida que aumenta γ, el precio del límite de la anarquía disminuye, ya que la carga de accesos se equilibra entre los servidores. Mientras exploramos el problema del almacenamiento en caché, hicimos varias observaciones que parecen contradictorio. Primero, el POA en el juego de pago puede ser peor que el POA en el juego básico. Otra observación que hicimos fue que el número de réplicas en un equilibrio de Nash puede ser más que el número de réplicas en el óptimo social incluso sin pagos. Por ejemplo, un gráfico con diámetro ligeramente más que α puede tener una configuración de equilibrio NASH con dos réplicas en los dos extremos. Sin embargo, el óptimo social puede colocar una réplica en el centro. Dejamos la investigación de más ejemplos como un problema abierto.7. Conclusiones En este trabajo presentamos un nuevo modelo de juego no cooperativo para caracterizar el problema de almacenamiento en caché entre los servidores egoístas sin ninguna coordinación central. Mostramos que los equilibrios de estrategia pura Nash existen en el juego y que el precio de la anarquía puede ser o (n) en general, donde n es el número de servidores, debido a problemas de subida. Con topologías específicas, mostramos que el precio de la anarquía puede tener límites más estrictos. Más importante aún, con los pagos, los servidores están incentivados para replicarse y el precio optimista de la anarquía siempre es uno. El almacenamiento en caché no cooperativo es un modelo más realista que el almacenamiento en caché cooperativo en Internet competitivo, por lo tanto, este trabajo es un paso importante hacia los sistemas de caché federados viables.8. Agradecimientos Agradecemos a Kunal Talwar por la iluminación de discusiones sobre este trabajo.9. Referencias [1] http://www.mosek.com.[2] A. Adya et al. Lejano: almacenamiento federado, disponible y confiable para un entorno de confianza incompleta. En Proc.de Usenix Osdi, 2002. [3] E. Anshelevich, A. Dasgupta, E. Tardos y T. Wexler. Diseño de red casi óptimo con agentes egoístas. En Proc.de ACM Stoc, 2003. [4] Y. Chen, R. H. Katz y J. D. Kubiatowicz. Escaneo: una red de distribución de contenido dinámico, escalable y eficiente. En Proc.de intl. Conferencia.Sobre la computación generalizada, 2002. [5] F. Dabek et al. Almacenamiento cooperativo de área de amplio área con CFS. En Proc.de ACM Sosp, octubre de 2001. [6] P. B. Danzig. Arquitectura e implementación de NetCache. En Networks e ISDN Systems, 1998. [7] N. Devanur, M. Mihail y V. Vazirani. Mecanismos de intercambio de costos a prueba de estrategias para juegos de cubierta y ubicación de la instalación. En Proc.de ACM EC, 2003. [8] J. R. Douceur y R. P. Wattenhofer. Simulación a gran escala de algoritmos de colocación de réplicas para un sistema de archivos distribuidos sin servidor. En Proc.de Mascots, 2001. [9] A. Fabrikant, C. H. Papadimitriou y K. Talwar. La complejidad de los equilibrios puros de Nash. En Proc.de ACM Stoc, 2004. [10] L. Fan, P. Cao, J. Almeida y A. Z. Broder. Resumen de caché: un protocolo escalable de intercambio de caché web de área ancha. IEEE/ACM Trans.En Networking, 8 (3): 281-293, 2000. [11] M. R. Garey y D. S. Johnson. Computadoras e intratabilidad: una guía de la teoría de la completitud de NP. W. H. Freeman and Co., 1979. [12] M. X. Goemans, L. Li, V. S. Mirrokni y M. Thottan. Juegos para compartir el mercado aplicados a la distribución de contenido en redes ad-hoc. En Proc.de ACM Mobihoc, 2004. [13] M. X. Goemans y M. Skutella. Juegos de ubicación de la instalación cooperativa. En Proc.de ACM-Siam Soda, 2000. [14] S. Gribble et al. ¿Qué pueden hacer las bases de datos para igual a igual? En el taller de WebDB en bases de datos y la web, junio de 2001. [15] K. P. Gummadi et al. Medición, modelado y análisis de una carga de trabajo de intercambio de archivos entre pares. En Proc.de ACM Sosp, octubre de 2003. [16] S. Iyer, A. Rowstron y P. Druschel. Squirrel: un caché web de pares descentralizado. En Proc.de ACM Podc, 2002. [17] K. Jain y V. V. Vazirani. Algoritmos de aproximación primaria para la ubicación de la instalación métrica y problemas de K-mediano. En Proc.de IEEE FOCS, 1999. 28 [18] S. Jamin et al. Sobre la colocación de la instrumentación de Internet. En Proc.de IEEE Infocom, páginas 295-304, 2000. [19] S. Jamin et al. Colocación de espejo restringida en Internet. En Proc.de IEEE Infocom, páginas 31-40, 2001. [20] B.-J. Ko y D. Rubenstein. Un protocolo distribuido y autoestabilizador para la colocación de recursos replicados en redes emergentes. En Proc.de IEEE ICNP, 2003. [21] E. Koutsoupias y C. Papadimitriou. Los peores equilibrios. En Stacs, 1999. [22] J. Kubiatowicz et al. Oceanstore: una arquitectura para el almacenamiento persistente a escala global. En Proc.de ACM asplos. ACM, noviembre de 2000. [23] B. Li, M. J. Golin, G. F. Italiano y X. Deng. Sobre la colocación óptima de los proxies web en Internet. En Proc.de IEEE Infocom, 1999. [24] M. Mahdian, Y. Ye y J. Zhang. Algoritmos de aproximación mejorados para problemas de ubicación de la instalación métrica. En Proc.de intl. Taller sobre algoritmos de aproximación para problemas de optimización combinatoria, 2002. [25] A. Medina, A. Lakhina, I. Matta y J. Byers. Brite: Generación de topología universal desde la perspectiva de los usuarios. Informe técnico 2001-003, 1 2001. [26] R. R. Mettu y C. G. Plaxton. El problema mediano en línea. En Proc.de IEEE FOCS, 2000. [27] P. B. Mirchandani y R. L. Francis. Teoría de la ubicación discreta. Serie Wiley-Interscience en Matemáticas y Optimización discreta, 1990. [28] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. MIT Press, 1994. [29] M. Pal y E. Tardos. Mecanismos de grupos a prueba de estrategias a través de algoritmos Primal-Dual. En Proc.de IEEE FOCS, 2003. [30] L. Qiu, V. N. Padmanabhan y G. M. Voelker. Sobre la colocación de réplicas del servidor web. En Proc.de IEEE Infocom, 2001. [31] M. Rabinovich, I. Rabinovich, R. Rajaraman y A. Aggarwal. Un protocolo dinámico de replicación y migración de objetos para un servicio de alojamiento de Internet. En Proc.de IEEE ICDCS, 1999. [32] A. Rowstron y P. Druschel. Gestión de almacenamiento y almacenamiento en caché en el pasado, una utilidad de almacenamiento de pares a gran escala y a gran escala. En Proc.de ACM Sosp, octubre de 2001. [33] Y. Saito, C. Karamanolis, M. Karlsson y M. Mahalingam. Domesticar la replicación agresiva en el sistema de archivos de área ancha de Pangea. En Proc.de Usenix Osdi, 2002. [34] X. Tang y S. T. Chanson. Enfermano web en ruta coordinado. En IEEE trans. Computadoras, 2002. [35] A. Vetta. Equilibrios de NASH en sociedades competitivas, con aplicaciones a la ubicación de las instalaciones, el enrutamiento de tráfico y las subastas. En Proc.de IEEE FOCS, 2002. [36] E. W. Zegura, K. L. Calvert y S. Bhattacharjee. Cómo modelar un internetwork. En Proc.de IEEE Infocom, 1996. Apéndice A. Análisis de topologías específicas Ahora analizamos el precio de la anarquía (POA) para el juego básico con topologías subyacentes específicas y mostramos que POA puede tener mejores límites. Miramos el gráfico completo, la estrella, la línea y la cuadrícula ddimensional. En todas estas topologías, establecemos la distancia entre dos nodos directamente conectados a uno. Describimos el caso donde α> 1, ya que POA = 1 trivialmente cuando α ≤ 1. A BC D3 α 3 α 4 3α 4 α 4 α Figura 6: Ejemplo donde el juego de pago tiene un equilibrio NASH que es peor que cualquier equilibrio de Nash en el juego básico. Las distancias no etiquetadas entre los nodos en el clúster son todas 1. Los umbrales de los nodos blancos son todos α y los umbrales de los nodos oscuros son todos α/4. Los dos nodos oscuros replican el objeto en este juego de pago Nash Equilibrio. Para un gráfico completo, PoA = 1, y para una estrella, POA ≤ 2. Para un gráfico completo, cuando α> 1, tanto Nash Equilibria como Social Optima colocan una réplica en un servidor, por lo que PoA = 1. Para Star, cuando 1 <α <2, el peor de los casos de equilibrio Nash coloca réplicas en todos los nodos de hoja. Sin embargo, el óptimo social coloca una réplica en el nodo central. Por lo tanto, POA = (N - 1) α+1 α+(N - 1) ≤ 2 (N - 1) +1 1+ (N - 1) ≤ 2. Cuando α> 2, el peor de los casos de equilibrio de Nash coloca una réplica en un nodo de hoja y los otros nodos acceden a la réplica remota, y la óptima social coloca una réplica en el centro. POA = α+1+2 (n - 2) α+(n - 1) = 1+n α+(n - 1) ≤ 2. Para una línea, el precio de la anarquía es o (√ n). Cuando 1 <α <n, el peor de los casos de equilibrio de Nash coloca réplicas cada 2α para que no haya superposición entre las áreas cubiertas por dos servidores adyacentes que almacenan en caché el objeto. El óptimo social coloca réplicas al menos cada √ 2α. La colocación de réplicas para el óptimo social es la siguiente. Supongamos que hay dos réplicas separadas por la distancia d.Al colocar una réplica adicional en el medio, queremos que la reducción de la distancia sea al menos α. La reducción de la distancia es d/2 + 2 {((d/2 - 1) - 1) + ((d/2 - 2) - 2) + ... + ((d/2 - d/4) - D/4)} ≥ D2 /8.D debería ser como máximo 2 √ 2α. Por lo tanto, la distancia entre las réplicas en el óptimo social es como máximo √ 2α. C (SW) = α (N - 1) 2α + α (α + 1) 2 (N - 1) 2α = θ (αN). C (SO) ≥ α N - 1√ 2α + 2 √ 2α/2 (√ 2α/2 + 1) 2 N - 1√ 2α. C (SO) = ω (√ αn). Por lo tanto, poa = o (√ α). Cuando α> N - 1, el peor de los casos de equilibrio de Nash coloca una réplica en un nodo de hoja y C (SW) = α + (N - 1) n 2. Sin embargo, el óptimo social todavía coloca réplicas cada √ 2α. Si vemos POA como una función continua de α y calculamos un derivado de POA, la derivada se convierte en 0 cuando α es θ (N2), lo que significa que la función disminuye a medida que α aumenta de n.Por lo tanto, el POA es máximo cuando α es n, y poa = θ (n2) Ω (√ nn) = o (√ n). Cuando α> (n - 1) n 2, el óptimo social también coloca solo una réplica, y POA está limitada trivialmente por 2. Este resultado se cumple para el anillo y se puede generalizar a la cuadrícula D-dimensional. A medida que aumenta la dimensión en la cuadrícula, la reducción de la distancia de la colocación de réplicas adicionales se convierte en Ω (DD+1) donde D es la distancia entre dos réplicas adyacentes. Por lo tanto, poa = θ (n2) ω (n 1 d+1 n) = o (n d d+1). B. El pago puede ser peor Considere la red en la Figura 6 donde α> 1+α/3. Cualquier equilibrio de Nash en el modelo de juego básico tendría exactamente dos réplicas: una en el clúster izquierdo y otra en la derecha. Es fácil verificar que la peor colocación (en términos de costo social) de dos réplicas ocurra cuando se colocan en los nodos A y B. Esta colocación se puede lograr como un equilibrio de Nash en el juego de pago, pero no en el juego básico, ya que A y B son una distancia de 3α/4 aparte.29 Algoritmo 1 Inicialización para el juego básico L1 = un subconjunto aleatorio de servidores para cada nodo I en n si i ∈ L1 entonces si = 1;Replicar el objeto más si = 0 Algoritmo 2 Mueve la selección de I para el juego básico Costo1 = α Costo2 = Minj∈X− {i} Dij;X es la configuración actual Costmin = min {cost1, cost2} si costnow> costmin entonces si costmin == cost1 entonces si = 1 else si = 0 C. Protocolos de dinámica nash El simulador inicializa el juego de acuerdo con los parámetros dados y una inicial aleatoria y una inicial aleatoriaPerfil de estrategia y luego itera a través de rondas. Inicialmente, el orden de las acciones del jugador se elige al azar. En cada ronda, cada servidor realiza el protocolo Nash Dynamics que ajusta sus estrategias con avidez en el orden elegido. Cuando una ronda pasa sin que ningún servidor cambie su estrategia, la simulación termina y se alcanza un equilibrio de Nash. En el juego básico, elegimos un subconjunto inicial aleatorio de servidores para replicar el objeto como se muestra en el algoritmo 1. Después de la inicialización, cada jugador ejecuta el procedimiento de selección de movimiento descrito en el algoritmo 2 (en los algoritmos 2 y 4, CostNow representa el costo actual para el nodo I). Este procedimiento elige codiciosamente entre la replicación y la no replicación. No es difícil ver que este protocolo de dinámica Nash converge en dos rondas. En el juego de pago, elegimos un subconjunto inicial aleatorio de servidores para replicar el objeto estableciendo sus umbrales en 0. Además, inicializamos un segundo subconjunto aleatorio de servidores para replicar el objeto con pagos de otros servidores. Los detalles se muestran en el Algoritmo 3. Después de la inicialización, cada jugador ejecuta el procedimiento de selección de movimiento descrito en el algoritmo 4. Este procedimiento elige con avidez entre la replicación y el acceso a una réplica remota, con las posibilidades de recibir y hacer pagos, respectivamente. En el protocolo, cada nodo aumenta su valor umbral al aumentar si no replica el objeto. Mediante este procedimiento de aumento, el costo de replicar un objeto se comparte de manera justa entre los nodos que acceden a una réplica desde un servidor que hace caché. Si INC es pequeño, el costo se comparte de manera más justa, y el juego tiende a alcanzar equilibrios que alientan a más servidores a almacenar réplicas, aunque la convergencia lleva más tiempo. Si INV es grande, el protocolo converge rápidamente, pero puede perder equilibrios eficientes. En las simulaciones establecemos Aver en 0.1. La mayoría de nuestro a b c a b c α/3+1 2α/3−1 2α/3 Figura 7: Un ejemplo en el que el protocolo de dinámica Nash no converge en el juego de pago. Algoritmo 3 Inicialización para el juego de pago L1 = un subconjunto aleatorio de servidores para cada nodo i en n do bi = 0 si i ∈ L1 entonces ti = 0;Replique el objeto más ti = α l2 = {} para cada nodo i en n do si monedas de moneda == head entonces mi = {j: d (j, i) <mink∈L1∪l2 d (j)} siMi! = ∅ Entonces para cada nodo j ∈ Mi do bj = max {α+ èk∈Mi d (i, k) | mi |- d (i, j), 0} l2 = l2 ∪ {i} algoritmo 4 Selección de movimiento de I para el juego de pago Costo1 = α - ri cost2 = minj∈N− {i} {tj - rj + dij} costmin =min {cost1, costo2} si costnow> costmin entonces si costmin == cost1 entonces ti = ri else ti = ri + incr vi = argMinj {tj - rj + dij} bi = tvi - rvi simulación se converge, pero hubo muyPocos casos en los que la simulación no convergió debido a los ciclos de la dinámica. El protocolo no garantiza la convergencia dentro de un cierto número de rondas como el protocolo para el juego básico. Proporcionamos un gráfico de ejemplo y una condición inicial de tal manera que el protocolo Nash Dynamics no converja en el juego de pago si se inicia desde esta condición inicial. El gráfico está representado por una métrica de ruta más corta en la red que se muestra en la Figura 7. En la configuración inicial, solo un replica el objeto, y A le paga una cantidad α/3 para hacerlo. Los umbrales para A, B y C son α/3 cada uno, y los umbrales para A, B y C son 2α/3. No es difícil verificar que el Protocolo de Dinámica Nash nunca convergerá si comenzamos con esta condición. El Protocolo Nash Dynamics para el juego de pago necesita más investigación. El protocolo de dinámica para el juego de pago debe evitar ciclos de acciones para lograr la estabilización del protocolo. Encontrar un protocolo de dinámica autoestabilizador es un problema interesante. Además, un valor fijo de incrementos no puede adaptarse a entornos cambiantes. Un pequeño valor de ENUR puede conducir a equilibrios eficientes, pero puede llevar mucho tiempo converger. Un área importante para futuras investigaciones es analizar el cambio de forma adaptativa.30