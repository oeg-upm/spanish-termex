Diseño e implementación de un sistema de gestión de contenido distribuido C. D. Cranor, R. Erhington, A. Sehgal †, D. Shur, C. Sreenan ‡ y J.E. Van der Merwe AT&T Labs - Investigación † Universidad de Kentucky ‡ University College Cork Florham Park, NJ, EE. UU. Lexington, KY, EE. UU. Cork, Irlanda Resumen La convergencia de los avances en el almacenamiento, la codificación y las tecnologías de redes nos han llevado a un entorno dondeCantidades de contenido de medios continuos se almacenan e intercambian rutinariamente entre los dispositivos habilitados para la red. Hacer un seguimiento de (o administrar) dicho contenido sigue siendo desafiante debido al gran volumen de datos. El almacenamiento de medios continuos en vivo (como TV o contenido de radio) se suma a la complejidad en que este contenido no tiene un inicio o final bien definido y, por lo tanto, es engorroso para tratar. El almacenamiento en red permite que el contenido que se considera lógicamente como parte de la misma colección, de hecho, se distribuya en una red, lo que hace que la tarea de la gestión de contenido sea casi imposible de manejar sin un sistema de gestión de contenido. En este documento presentamos el diseño e implementación del sistema de gestión de contenido de Spectrum, que trata el contenido de los medios ricos de manera efectiva en este entorno. Spectrum tiene una arquitectura modular que permite su aplicación tanto para escenarios independientes y de varios escenarios en red. Un aspecto único del espectro es que requiere una (o más) políticas de retención para aplicarse a cada pieza de contenido que se almacena en el sistema. Esto significa que no hay políticas de desalojo. El contenido que ya no tiene una política de retención aplicada a ella simplemente se elimina del sistema. Las diferentes políticas de retención se pueden aplicar fácilmente al mismo contenido, por lo tanto, facilitar naturalmente el intercambio sin duplicación. Este enfoque también permite que Spectrum aplique fácilmente las políticas basadas en el tiempo que son bloques de construcción básicos necesarios para lidiar con el almacenamiento de medios continuos en vivo, al contenido. No solo describimos los detalles de la arquitectura del espectro, sino que también damos casos de uso típicos. Categorías y descriptores de sujetos C.2.4 [Organización de sistemas informáticos]: sistemas distribuidos por redes de comunicación informática;H.3.4 [Sistemas de información]: Almacenamiento de información y sistemas de recuperación y software Términos generales Diseño, Gestión 1. Introducción Manipular y administrar el contenido es y siempre ha sido una de las funciones principales de una computadora. Las aplicaciones informáticas iniciales incluyen formateros de texto y compiladores de programas. El contenido se administró inicialmente mediante la interacción explícita del usuario mediante el uso de archivos y sistemas de archivos. A medida que la tecnología ha avanzado, tanto los tipos de contenido como la forma en que las personas desean usarla han cambiado considerablemente. Los nuevos tipos de contenido, como las transmisiones multimedia continuas, se han vuelto comunes debido a la convergencia de los avances en las tecnologías de almacenamiento, codificación y redes. Por ejemplo, al combinar mejoras en el almacenamiento y la codificación, ahora es posible almacenar muchas horas de video codificado con calidad de televisión en una sola unidad de disco. Esto ha llevado a la introducción de la grabación de video digital independiente o los sistemas de grabación de video personal (PVR), como Tivo [8] y RePlayTV [7]. Otro ejemplo es la combinación de la codificación y la tecnología de redes de banda ancha. Esta combinación ha permitido a los usuarios acceder y compartir contenido multimedia en redes de área local y remota con la red en sí que actúa como un gran repositorio de datos. La proliferación de contenido de alta calidad habilitado por estos avances en la tecnología de almacenamiento, codificación y red crea la necesidad de nuevas formas de manipular y administrar los datos. El enfoque de nuestro trabajo está en el almacenamiento de contenido rico en medios y, en particular, el almacenamiento de contenido de medios continuos en formas preenvasadas o en vivo. La necesidad de gestión de contenido en esta área es evidente cuando uno considera lo siguiente: • Los aumentos en la capacidad y las disminuciones en el costo del almacenamiento significa que incluso los sistemas de escritorio modestos hoy en día tienen la capacidad de almacenar grandes cantidades de contenido. La administración de dicho contenido manualmente (o más correctamente manual no gestión de dicho contenido) conduce a grandes ineficiencias donde no se puede encontrar el almacenamiento de residuos de contenido no deseado y olvidado y dónde se puede encontrar contenido deseado.• Si bien es cierto para todo tipo de contenido, el almacenamiento de contenido de medios continuos es especialmente problemático. El primer contenido de medios continuos sigue siendo muy exigente en términos de recursos de almacenamiento, lo que significa que un enfoque sin políticas para almacenarlo no funcionará para todos los sistemas menos pequeños. En segundo lugar, el almacenamiento de contenido en vivo como TV o radio es inherentemente problemático ya que estas señales son transmisiones continuas sin puntos finales. Esto significa que antes de que uno pueda pensar en administrar dicho contenido, es necesario abstraerlo en algo que pueda ser manipulado y administrado.4 • Cuando se trata de medios continuos almacenados, es necesario administrar dicho contenido tanto en un nivel de grano fino como en un nivel agregado. Por ejemplo, un usuario individual de PVR que desee mantener solo los aspectos más destacados de un evento deportivo particular no se debe requerir que tenga que almacenar el contenido relacionado con el evento completo. Al mismo tiempo, el usuario puede querer pensar en el contenido en el agregado, p.Elimine todo el contenido que no he observado durante el último mes, excepto ese contenido que fue marcado explícitamente para el archivo.• Como se indicó anteriormente, tratar de realizar un seguimiento del contenido en un sistema independiente sin un sistema de gestión de contenido es muy difícil. Sin embargo, cuando los dispositivos de almacenamiento reales se distribuyen en una red, la tarea de realizar un seguimiento del contenido es casi imposible. Este escenario es cada vez más común en los sistemas de distribución de contenido basados en la red y es probable que también se vuelva importante en los escenarios de redes domésticas. Parece claro entonces que se necesita un sistema de gestión de contenido que pueda manejar eficientemente el contenido rico en medios y al mismo tiempo que explota la capacidad en red de los dispositivos de almacenamiento. Este sistema debe permitir un almacenamiento eficiente y acceso al contenido en dispositivos de almacenamiento de red heterogéneos de acuerdo con las preferencias del usuario. El sistema de gestión de contenido debe traducir las preferencias del usuario en políticas de almacenamiento de bajo nivel apropiadas y debe permitir que esas preferencias se expresen a un nivel fino de granularidad (sin requerirlo en general). El sistema de gestión de contenido debe permitir al usuario manipular y razonar (es decir, cambiar la política de almacenamiento asociada con) el almacenamiento de (partes de) contenido de medios continuos. Abordar este problema de gestión de contenido distribuido es difícil debido a la cantidad de requisitos establecidos en el sistema. Por ejemplo: • El sistema de gestión de contenido debe operar en una gran cantidad de sistemas heterogéneos. En algunos casos, el sistema puede administrar contenido almacenado en un sistema de archivos local, mientras que en otros el contenido puede almacenarse en un dispositivo de almacenamiento de red separado. El administrador de contenido puede ser responsable de implementar las políticas que utiliza para hacer referencia al contenido o ese rol puede delegarse a una computadora separada. Se necesitan una interfaz del programa de aplicación (API) y protocolos de red asociados para que el sistema de gestión de contenido proporcione una interfaz uniforme.• El sistema de gestión de contenido debe ser flexible y poder manejar diferentes requisitos para las políticas de gestión de contenido. Estas políticas reflejan qué contenido debe obtenerse, cuándo debe obtenerse, cuánto tiempo debe retenirse y en qué circunstancias debe descartarse. Esto significa que el sistema de gestión de contenido debería permitir que múltiples aplicaciones haga referencia al contenido con un rico conjunto de políticas y que todo debería funcionar juntos sin problemas.• El sistema de administración de contenido debe poder monitorear las referencias de contenido y usar esa información para colocar el contenido en la ubicación correcta en la red para un acceso eficiente de aplicaciones.• El sistema de gestión de contenido debe manejar la interacción entre la población implícita y explícita de contenido en el borde de la red.• El sistema de contenido debe poder administrar eficientemente grandes conjuntos de contenido, incluidas las transmisiones continuas. Debe poder empaquetar este contenido de tal manera que sea conveniente que los usuarios accedan. Para abordar estos problemas, hemos diseñado e implementado la arquitectura del sistema de gestión de contenido de Spectrum. Nuestra arquitectura en capas es flexible: su API permite que las capas residen en una sola computadora o en múltiples computadoras heterogéneas en red. Permite múltiples aplicaciones para referencia al contenido utilizando políticas diferentes. Tenga en cuenta que la arquitectura del espectro asume la existencia de una red de distribución de contenido (CDN) que puede facilitar la distribución eficiente del contenido (por ejemplo, la arquitectura de CDN Prism [2]). El resto de este documento está organizado de la siguiente manera. La Sección 2 describe la arquitectura de nuestro sistema de gestión de contenido. En la Sección 3 describimos nuestra implementación de la arquitectura del espectro y ejemplos de su uso. El trabajo relacionado se describe en la Sección 4, y la Sección 5 contiene nuestra conclusión y sugerencias para el trabajo futuro.2. La arquitectura del sistema de gestión de contenido distribuido Spectrum La arquitectura del espectro consta de tres capas de gestión distintas que pueden o no distribuirse en múltiples máquinas, como se muestra en la Figura 1. Las tres capas son: Content Manager: Contiene información específica de la aplicación que se utiliza para administrar todo un contenido de aplicaciones de acuerdo con las preferencias del usuario. Por ejemplo, en una aplicación de grabadora de video personal (PVR), el administrador de contenido recibe solicitudes de contenido de una interfaz de usuario e interactúa con las capas inferiores de la arquitectura del espectro para almacenar y administrar el contenido en el dispositivo.Gerente de políticas: implementa y aplica varias políticas de almacenamiento que el administrador de contenido utiliza para referirse al contenido. El administrador de políticas exporta una interfaz al administrador de contenido que permite al administrador de contenido solicitar que una pieza sea tratada de acuerdo con una política específica. El espectro permite que las políticas arbitrarias se realicen proporcionando un conjunto fijo de plantillas de política base que se pueden parametrizar fácilmente. Creemos que para la mayoría de las implementaciones esto será adecuado (si no, el espectro se puede extender fácilmente para cargar dinámicamente el nuevo código de plantilla de política base en el momento de ejecución). Un aspecto clave del gerente de políticas es que permite que diferentes políticas se apliquen simultáneamente al mismo contenido (o partes del mismo contenido). Además, el contenido solo puede existir en el sistema siempre que se haga referencia por al menos una política existente. Los conflictos de políticas se eliminan al hacer que el gerente de políticas se ocupe exclusivamente de las políticas de retención en lugar de con una combinación de políticas de retención y desalojo. Esto significa que el contenido sin política asociada con ella se elimina de inmediato y automáticamente del sistema. Este enfoque nos permite apoyar naturalmente el intercambio de contenido en diferentes políticas, lo cual es crítico para el almacenamiento eficiente de objetos grandes. Tenga en cuenta que una diferencia clave entre el administrador de contenido y el administrador de políticas es que el administrador de contenido administra referencias a múltiples piezas de contenido, es decir, tiene una vista de aplicaciones de contenido. Por otro lado, el gerente de políticas solo se refiere a la política utilizada para administrar piezas de contenido independientes. Por ejemplo, en una aplicación de PVR, la capa de Content Manager sabría sobre los diferentes grupos de contenido administrado, como Keep-Indefinitamente, mantenga un día y mantenga si está disponible Diskspace. Sin embargo, a nivel de gerente de políticas, cada pieza de contenido tiene 5 contenido administrador de pólizas gerentes de almacenamiento administrador de contenido gerente de contenido gerente de contenido gerente de políticas gerente de políticas gerente de almacenamiento administrador de almacenamiento administrador de almacenamiento invocación remota Figura 1: los componentes de la arquitectura de espectro yLas cuatro formas en que se pueden configurar su propia política (o políticas) aplicadas a ella y es independiente de otro contenido.Manager de almacenamiento: almacena el contenido de manera eficiente al tiempo que facilita los objetivos de las capas superiores. Específicamente, el Manager de Storage almacena contenido en fragmentos de subobjetos. Este enfoque tiene ventajas para la recuperación eficiente del contenido, pero lo más importante permite que las políticas se apliquen a nivel de subobjetos que es críticamente importante cuando se trata de objetos muy grandes como partes de medios continuos, p.Las piezas seleccionadas de contenido de TV se almacenan en un PVR. Tenga en cuenta que el Manager de Storage no tiene conocimiento de las políticas utilizadas por los gerentes de contenido y políticas. Otra parte única de nuestro enfoque es que las interfaces entre las capas pueden ser locales o distribuidas. La Figura 1 muestra los cuatro casos posibles. El caso en el extremo izquierdo de la figura muestra el caso más simple (no distribuido) donde todas las capas se implementan en un solo cuadro. Esta configuración se utilizaría en aplicaciones autoalimentadas como PVRS. El siguiente caso corresponde al caso en el que hay un administrador de contenido centralizado que controla los dispositivos de almacenamiento distribuido, cada uno de los cuales es responsable de implementar el almacenamiento basado en políticas. En este caso, aunque los dispositivos remotos están controlados por el gerente central, operan mucho más independientemente. Por ejemplo, una vez que reciben instrucciones del gerente central, normalmente operan de manera autónoma. Un ejemplo de este tipo de configuración es una red de distribución de contenido (CDN) que distribuye y almacena contenido basado en un programa determinado por algún controlador centralizado. Por ejemplo, el CDN podría prepoblar dispositivos de borde con contenido que se espera que sea muy popular o distribuir archivos grandes a las ramas de las ramas durante las horas de picos en un entorno empresarial limitado de ancho de banda. Permitir que un solo gerente de políticas controle varios gerentes de almacenamiento conduce a la próxima combinación de funciones y el caso más distribuido. La necesidad de este tipo de separación puede ocurrir por razones de escalabilidad o cuando se requiere que diferentes dispositivos o electrodomésticos especializados sean controlados por un solo administrador de políticas. El caso final muestra un administrador de contenido combinado con un administrador de políticas que controla un administrador de almacenamiento remoto. Esta separación sería posible si el administrador de almacenamiento es algo autónomo y no requiere un control continuo de grano fino por parte del gerente de políticas. Ahora examinamos la función de las tres capas en detalle.2.1 Content Manager La capa de Content Manager es la interfaz principal a través de la cual las aplicaciones específicas utilizan la arquitectura del espectro. Como tal, la capa de Content Manager proporciona una API para que la aplicación manipule todos los aspectos de la arquitectura del espectro en diferentes niveles de granularidad. La API de Content Manager tiene funciones que manejan: dispositivos físicos: este conjunto de funciones permite que los dispositivos de almacenamiento físico se agregan al espectro, lo que los pone bajo control del administrador de contenido y pone el almacenamiento a disposición del sistema. Los dispositivos físicos pueden ser locales o remotos: este es el único lugar en la arquitectura donde se requiere la aplicación para conocer esta distinción. Una vez que un dispositivo se asigna a la aplicación a través de esta interfaz, el sistema rastrea su tipo y ubicación. Los usuarios simplemente se refieren al contenido a través de una etiqueta proporcionada por la aplicación. Tiendas: las tiendas son subconjuntos de dispositivos de almacenamiento físico. A través de estas funciones, una aplicación puede crear una tienda en un dispositivo físico y asignar recursos (por ejemplo, espacio en disco). Las tiendas solo se pueden crear en dispositivos físicos que se asignan al sistema. Grupos de políticas: los grupos de políticas son los medios por los cuales una aplicación especifica, instancia y modifica las políticas que se aplican al contenido del espectro. El uso típico de este conjunto de funciones es seleccionar uno de un pequeño conjunto de políticas base y parametrizar esta instancia específica de la política. Los grupos de políticas se crean dentro de las tiendas existentes en el sistema. La arquitectura del espectro tiene políticas que normalmente se asocian con el almacenamiento que tienen como objetivo optimizar el uso del disco. Además, un conjunto de políticas que toman una sofisticada especificación de tiempo permite el almacenamiento que es consciente del tiempo. Por ejemplo, una política simple basada en el tiempo podría desalojar el contenido del sistema en un momento absoluto o relativo. Una política basada en el tiempo ligeramente más involucrada habilitada por la arquitectura del espectro podría permitir que el contenido se almacene en la ventana de rodadura de varias horas (por ejemplo, el número N más reciente de las horas se mantiene en el sistema). Las políticas basadas en el tiempo son de uso particular cuando se trata de contenido continuo como una transmisión en vivo.6 Contenido: en el mejor nivel de granularidad, se puede agregar o eliminar el contenido del sistema. El contenido se especifica al sistema mediante un localizador de recursos uniforme (URL) que indica concisamente la ubicación del contenido, así como el protocolo que se utilizará para recuperarlo. Opcionalmente, una especificación de tiempo puede estar asociada con el contenido. Esto permite que el contenido se obtenga en el sistema en algún momento futuro, o en futuros intervalos de tiempo. Nuevamente, esto es particularmente útil para lidiar con el almacenamiento y la gestión del contenido en vivo.2.2 Gerente de políticas La capa de Gerente de Políticas de la arquitectura del espectro tiene dos tipos principales de funciones de API. Primero, hay funciones que operan en áreas de almacenamiento administradas y referencias basadas en políticas (prefs) al contenido almacenado allí. En segundo lugar, hay conjuntos de funciones utilizadas para implementar cada política de gestión. La primera clase de funciones es utilizada por la capa de Content Manager para acceder al almacenamiento. Las operaciones incluyen: Crear, abrir y cerrar: Content Manager utiliza estas operaciones para controlar su acceso al almacenamiento. La operación de creación de gerentes de políticas se utiliza para establecer contacto con una tienda por primera vez. Una vez hecho esto, la tienda puede estar abierta y cerrada utilizando las rutinas apropiadas. Tenga en cuenta que los parámetros utilizados para crear una tienda contienen información sobre cómo alcanzarlo. Por ejemplo, las tiendas locales tienen una ruta asociada con ellas, mientras que las tiendas remotas tienen un host remoto y una ruta remota asociada con ellas. La información solo debe pasarse al gerente de políticas una vez en la hora de creación. Para operaciones abiertas, el Gerente de Política utilizará información en caché para contactar a la tienda.Búsqueda: la operación de búsqueda proporciona una forma para que el gerente de contenido consulte al administrador de políticas sobre qué contenido está presente actualmente para una URL determinada. Para los rangos de tiempo de medios continuos de los medios actuales se devolverán.Recurso: las rutinas de recursos se utilizan para consultar al gerente de políticas sobre su uso actual de recursos. Hay dos rutinas de recursos: una que se aplica a la tienda en su conjunto y otra que se aplica a una referencia de política en particular. La API de recursos es extensible, actualmente admitimos consultas sobre el uso del disco y la carga de E/S.Pref Establecer/Actualizar: El Administrador de contenido utiliza la operación de establecimiento de pref para hacer referencia al contenido en la tienda. Si el contenido no está presente, esta llamada dará como resultado que el contenido se obtenga (o se programe para ser recuperado si el contenido no está disponible actualmente). Los parámetros de esta función incluyen la URL para almacenarla, la URL para obtener datos de si no está presente, la política para almacenar el contenido bajo y los argumentos utilizados para parametrizar la política. El resultado de una operación previa exitosa para establecer es una cadena de identificación de referencia de política. Esta ID se puede utilizar con la operación de actualización para cambiar los parámetros de la política de almacenamiento o eliminar la referencia por completo. El segundo grupo de funciones de gerente de políticas se utilizan para implementar todas las políticas compatibles con Spectrum. Imaginamos un pequeño conjunto de funciones de política a nivel base que se pueden parametrizar para producir una amplia gama de políticas de almacenamiento. Por ejemplo, una política que implementa registrar una ventana de tiempo de repetición se puede parametrizar para funcionar diariamente, semanalmente o mensualmente. Tenga en cuenta que el gerente de políticas solo se refiere a ejecutar una política específica. Las razones de nivel superior para elegir una política determinada son manejadas por el administrador de contenido y aplicaciones. Se implementa una política base utilizando seis funciones: Establecer: Llamado cuando se establece un pref con las URL requeridas y los parámetros de políticas base. Establecer referencias de rutina Cualquier contenido ya presente en la tienda y luego determina la próxima vez que necesite tomar medidas (por ejemplo, comenzar una descarga) y programar una devolución de llamada para ese momento. También puede registrarse para recibir devoluciones de llamada si se recibe contenido nuevo para una URL dada.Actualización: llamado para cambiar los parámetros de un pref, o para descartar la referencia de la política.NEWCLIP: Llamado cuando se recibe una parte de contenido nuevo para una URL de interés. La política base generalmente organiza que el novato se convierta en una URL dada cuando se establece el pref. Cuando se llama a NewClip, la política base verifica sus parámetros para determinar si desea agregar una referencia al clip que se acaba de recibir.devolución de llamada: llamado cuando el pref programa una devolución de llamada basada en el temporizador. Este es un mecanismo de atención útil para prefs que deben estar inactivos durante un largo período de tiempo (por ejemplo, entre programas).Boot/shutdown: llamado cuando el sistema de administración de contenido está arrancando o apagando. La operación de arranque generalmente se usa para programar devoluciones de llamada iniciales o iniciar operaciones de E/S. La operación de cierre se utiliza para cerrar las transmisiones de E/S con gracia y salvar el estado.2.3 Manager de almacenamiento El papel de Spectrums Storage Manager es controlar todas las operaciones de E/S asociadas con una tienda determinada. Spectra Storage Manager admite almacenar contenido tanto en un sistema de archivos local como en un servidor de archivos remoto (por ejemplo, un dispositivo de almacenamiento). Para medios continuos, en el almacenamiento de almacenamiento, el contenido de nivel se almacena como una colección de fragmentos basados en el tiempo. Dependiendo del sistema de archivos subyacente, una fragmentación podría corresponder a un solo archivo o un nodo de datos en una base de datos de almacenamiento. Las dos operaciones principales del administrador de almacenamiento son la entrada y la salida. La rutina de entrada se utiliza para almacenar contenido en una tienda bajo un nombre de pila. La rutina de salida se utiliza para enviar datos del almacén a un cliente. Para los medios de transmisión, tanto las rutinas de entrada como de salida, toman rangos de tiempo que programan cuando la operación de E/S debe ocurrir, y ambas rutinas devuelven un mango de E/S que se puede usar para modificar o cancelar la solicitud de E/S en el futuro. Al igual que el gerente de políticas, el administrador de almacenamiento también proporciona funciones de API para crear, abrir y cerrar tiendas. También admite operaciones para consultar los usos y opciones de recursos compatibles con la tienda. Finalmente, Storage Manager también tiene una rutina de descarte que el administrador de políticas puede utilizar para informar a la tienda para eliminar el contenido de la tienda.3. Casos de implementación y uso En esta sección describimos nuestra implementación de Spectrum y describimos cómo se puede usar.3.1 Implementación Hemos implementado espectros tres capas en C como parte de una biblioteca que puede vincularse con aplicaciones basadas en espectro. Cada capa realiza un seguimiento de su estado a través de un conjunto de archivos de datos locales que persisten en los reinicios, lo que permite que Spectrum maneje suavemente los ciclos de energía. Para las capas que residen en sistemas remotos (por ejemplo, una tienda remota) solo la metainformación necesaria para contactar al remoto 7 Content Manager Policy Manager Storage Manager Fetcher Listados de programas de la interfaz de usuario gráfico Network habilitado Información del programa DVR Contenido DVR Figura 2: Spectrum In In InUn nodo DVR habilitado para la red se almacena localmente. Nuestra aplicación de prueba utiliza una política local y un administrador de almacenamiento para obtener contenido y almacenarlo en un sistema de archivos Normal Unix. Para manejar de manera eficiente las comunicaciones con capas que se ejecutan en sistemas remotos, todas las llamadas de API de los espectros admiten modos síncronos y asíncronos a través de una interfaz uniforme definida por la estructura Reqinfo. Cada llamada de API toma un puntero a una estructura de reqinfo como uno de sus argumentos. Esta estructura se utiliza para mantener el estado de llamada y el estado de retorno. Para las llamadas de Async, el Reqinfo también contiene un puntero a una función de devolución de llamada. Para usar una función API de Spectrum, la persona que llama elige primero el modo Sync o Async y asigna una estructura reqinfo. Para las llamadas de sincronización, el Reqinfo se puede asignar en la pila, de lo contrario se asigna con MALLOC. Para las llamadas de Async, se debe proporcionar una función de devolución de llamada cuando se asigna reqinfo. A continuación, la persona que llama invoca la función API de espectro deseada que pasa la estructura Reqinfo como argumento. Para las llamadas de sincronización, el resultado de las llamadas se devuelve inmediatamente en la estructura Reqinfo. Para llamadas de Async exitosas, se devuelve un valor de llamada en progreso. Más tarde, cuando se completa la llamada Async o se produce un tiempo de espera, se llama a la función de devolución de llamada Async con la información apropiada necesaria para completar el procesamiento. El diseño modular/en capas de la arquitectura del espectro simplifica el objetivo de distribución de la funcionalidad. Además, la comunicación entre funciones es típicamente de naturaleza maestra (s). Esto significa que son posibles varios enfoques para la operación distribuida que satisfarían los requisitos arquitectónicos. En nuestra implementación hemos optado por realizar esta funcionalidad con un diseño modular simple. Proporcionamos un conjunto de rutinas asincrónicas de acceso de acceso remoto que permiten a los usuarios seleccionar el protocolo de transporte para usar y seleccionar el método de codificación que debe usarse con los datos que se transferirán. Los protocolos de transporte pueden variar protocolos simples como UDP hasta protocolos más complejos como HTTP. Actualmente estamos utilizando TCP simple para la mayor parte de nuestro transporte. Las llamadas de función en las diferentes API de espectro se pueden codificar utilizando una variedad de formatos que incluyen texto sin formato, XDR y XML. Actualmente estamos utilizando la biblioteca XML Expat [4] para codificar nuestras llamadas. Si bien estamos transfiriendo actualmente nuestros mensajes codificados XML utilizando una conexión TCP simple, en una configuración del mundo real, esto se puede reemplazar fácilmente con una implementación basada en la capa de enchufes seguras (SSL) para mejorar la seguridad al agregar SSL como un protocolo de transporte. Un aspecto importante del espectro es que puede administrar el contenido en función de una política dada en las plataformas heterogéneas. Como explicamos anteriormente en la Sección 2.2, imagine un pequeño conjunto de funciones de política a nivel base que se pueden parametrizar para producir una amplia gama de políticas de almacenamiento. Para que esto funcione correctamente, todas las aplicaciones de Spectumbased deben comprender las políticas de nivel base y cómo pueden ser parametrizadas. Para abordar este problema, tratamos cada política de nivel base como si fuera un programa separado. Cada política de nivel base debe tener un nombre bien conocido y opciones de línea de comando para la parametrización. De hecho, en nuestra implementación pasamos los parámetros a las políticas de nivel base como una cadena que se puede analizar utilizando una función similar a Getopt. Este formato se entiende fácilmente y proporciona portabilidad ya que el orden de bytes no es un problema en una cadena. Dado que esta parte del espectro no está en la ruta de datos críticos, este tipo de formato no es un problema de rendimiento.3.2 Utilizando el sistema de gestión de contenido de Spectrum en esta sección, mostramos dos ejemplos del uso del sistema de gestión de contenido de Spectrum en nuestro entorno. El enfoque de nuestro trabajo anterior ha sido la distribución de contenido para la transmisión de contenido de medios [2] y la grabación de video digital habilitada para la red [3]. El sistema Spectrum es aplicable a ambos escenarios de la siguiente manera. La Figura 2 muestra la arquitectura DVR (NED) habilitada para la red. En este caso, todas las capas de la arquitectura del espectro residen en el mismo dispositivo físico en una configuración local. La aplicación DVR obtiene listados de programas de alguna fuente de red, se ocupa de la presentación del usuario a través de una interfaz gráfica de usuario (GUI) e interactúa con el sistema Spectrum a través de las API de la capa de administración de contenido. Esta combinación de funciones de nivel superior permite al usuario seleccionar ambos contenido que se almacenará y qué políticas de almacenamiento a 8 Content Manager Centralized Content Administration Información Interface Interface Manager Manager de almacenamiento Manager de almacenamiento Fetcher Edge Portal Servidor Político Manager de almacenamiento Almacenamiento Fetcher Edge Server distribuidoContenido a puntos finales de medios a puntos finales de medios Figura 3: Espectro en una arquitectura de distribución de contenido se aplica a dicho contenido. La obtención del contenido (a través de la red o localmente) y el almacenamiento posterior en el sistema local es manejado por los gerentes de política y almacenamiento. El uso del espectro en una arquitectura de distribución de contenido de transmisión (p. Ej. Prism [2]) se representa en la Figura 3. En este entorno, se está distribuyendo el contenido de medios de transmisión (ambos en vivo, live-vive y bajo demanda) a los portales de borde desde donde se sirven puntos finales de transmisión. En nuestro entorno, la distribución y el almacenamiento de contenido se realiza desde una estación de administración de contenido centralizada que controla varios de los portales de borde. La estación centralizada permite a los administradores administrar la distribución y el almacenamiento de contenido sin requerir una comunicación continua entre el administrador de contenido y los dispositivos EDGE, es decir, una vez que se han dado instrucciones a los dispositivos EDGE, pueden operar de forma independiente hasta que se hagan cambios.3.3 Ejemplo operativo del espectro Para ilustrar cómo Spectrum maneja las referencias al contenido, considere una aplicación PVR basada en el espectro programada para almacenar un día de transmisión de contenido en una ventana rodante. Para configurar la ventana Rolling, la aplicación utilizaría la API de Content Manager para crear un grupo de políticas y una referencia de política al contenido deseado. El establecimiento de la referencia de política de la ventana de un día haría que el pesebre de la política le pidiera al administrador de almacenamiento que comience a recibir la transmisión. A medida que llega cada fragmento de datos de transmisión, el gerente de políticas ejecuta la función de referencia de política y referencia a la función de NewClip. La función NewClip agrega una referencia a cada fragmento que llega y programa una devolución de llamada un día después. En ese momento, la política lanzará su referencia de un día de día al contenido y el contenido se descartará a menos que se haga referencia por alguna otra política. Ahora, considere el caso en el que el usuario decida guardar parte del contenido (por ejemplo, un programa específico) en la ventana rodante durante una semana adicional. Para hacer esto, la aplicación solicita que el administrador de contenido agregue una nueva referencia de política adicional a la parte del contenido a preservado. Por lo tanto, el contenido preservado tiene dos referencias: una de la ventana rodante y otra de la solicitud para preservar el contenido durante una semana adicional. Después de un día, se descartará la referencia desde la ventana rodante, pero el contenido será 9 Ref2, etc. Datos base URL1 URL2 (archivos multimedia ...) (archivos multimedia ...) Meta Store (Información general ...)Url1 fragmentos prefs rangos de medios fragmentos, etc.Url2 poli host host Ref1 Ref1. Files Ref1.estate Figura 4: Diseño de datos del almacén de políticas de espectro preservado por la segunda referencia. Después de que haya pasado la semana adicional, se llamará a la función de devolución de llamada para la segunda referencia. Esta función descartará la referencia restante al contenido y, como no hay referencias restantes, el contenido será liberado. Para funcionar en escenarios como los descritos anteriormente, Spectrums Policy Manager debe administrar y mantener todas las referencias a varios fragmentos de medios. Estas referencias son persistentes y, por lo tanto, deben ser capaces de sobrevivir incluso si la máquina que las mantiene se reinicia. Nuestra implementación de Spectrum Policy Manager logra esto utilizando el archivo y la estructura del directorio que se muestra en la Figura 4. Hay tres clases de datos almacenadas, y cada clase tiene su propio directorio de nivel superior. Los directorios son: Datos: Storage Manager utiliza este directorio para almacenar cada fragmento de URL activo de los medios. Los archivos multimedia se pueden codificar en cualquier formato, por ejemplo, MPEG, Windows Media o QuickTime. Tenga en cuenta que este directorio se usa solo si el administrador de almacenamiento es local. Si el administrador de políticas está utilizando un administrador de almacenamiento externo (por ejemplo, un dispositivo de almacenamiento), los archivos multimedia se almacenan de forma remota y solo son remotamente referenciados por el administrador de políticas.Meta: este directorio contiene meta información general sobre el Manager de almacenamiento que se está utilizando y los datos que almacena. La información general se almacena en el subdirectorio de la tienda e incluye la ubicación de la tienda (local o remota) e información sobre los tipos de fragmentos de datos que el almacén puede manejar. El Meta Directorio también contiene un subdirectorio por eRL que contiene información sobre los fragmentos de datos almacenados. El archivo de fragmentos contiene una lista de fragmentos actualmente almacenados y sus recuentos de referencia. El archivo prefs contiene una lista de referencias de políticas activas que apuntan a esta URL. El archivo de rangos contiene una lista de rangos de tiempo de datos actualmente almacenados. Finalmente, el archivo de medios describe el formato de los medios que se almacenan bajo la URL actual.Poly: este directorio contiene un conjunto de subdirectorios host. Cada subdirectorio del host contiene el conjunto de referencias de políticas creadas por ese host. La información sobre cada referencia de política se divide en tres archivos. Por ejemplo, una referencia de política llamada Ref1 se almacenaría en Ref1, Ref1.files y Ref1.state. El archivo Ref1 contiene información sobre la referencia de política que no cambia con frecuencia. Esta información incluye la política base y los parámetros utilizados para crear la referencia. El archivo Ref1.files contiene la lista de referencias a fragmentos que posee Ref1 Ref1. Finalmente, el archivo Ref1.state contiene información de estado de política opcional que puede cambiar con el tiempo. Juntos, estos archivos y directorios se utilizan para rastrear las referencias en nuestra implementación de Spectrum. Tenga en cuenta que otras implementaciones son posibles. Por ejemplo, un administrador de espectro de grado portador podría almacenar toda su información de política e referencia en un sistema de base de datos de alto rendimiento.10 4. Trabajo relacionado Varios autores han abordado el problema de la gestión del contenido en redes distribuidas. Gran parte del trabajo se centra en el aspecto de gestión de políticas. Por ejemplo, en [5], se considera el problema de servir contenido multimedia a través de servidores distribuidos. El contenido se distribuye entre los recursos del servidor en proporción a la demanda del usuario utilizando un protocolo de difusión de demanda. El rendimiento del esquema se comparó mediante simulación. En [1] el contenido se distribuye entre subcaches. Los autores construyen un sistema que emplea varios componentes, como un enrutador central, una base de conocimiento de caché, subcaches y un juez de desalojo de subcache. La base de conocimiento de caché permite que se empleen políticas sofisticadas. La simulación se utiliza para comparar el esquema propuesto con algoritmos de reemplazo bien conocidos. Nuestro trabajo difiere en que estamos considerando más que los aspectos de gestión de políticas del problema. Después de considerar cuidadosamente la funcionalidad requerida para implementar la gestión de contenido en el entorno en red, hemos dividido el sistema en tres funciones simples, a saber, Content Manager, Policy Manager y Storage Manager. Esto nos ha permitido implementar y experimentar fácilmente con un sistema prototipo. Otro trabajo relacionado implica los llamados sistemas de recomendación de TV que se utilizan en PVRS para seleccionar automáticamente contenido para los usuarios, p.[6]. En el caso de que el espectro se use en una configuración de PVR, este tipo de sistema realizaría una función de nivel superior y podría beneficiarse claramente de las funcionalidades de la arquitectura del espectro. Finalmente, en los proveedores comerciales de entorno CDN (p. Ej. Cisco y NetApp) han desarrollado e implementado productos y herramientas de gestión de contenido. A diferencia de la arquitectura del espectro que permite que los dispositivos de borde funcionen de manera en gran medida autónoma, las soluciones de proveedores generalmente están más estrechamente acopladas a un controlador centralizado y no tienen las operaciones sofisticadas basadas en el tiempo ofrecidas por Spectrum.5. Conclusión y trabajo futuro En este documento presentamos el diseño y la implementación de la arquitectura de gestión de contenido del espectro. El espectro permite que las políticas de almacenamiento se apliquen a grandes volúmenes de contenido para facilitar el almacenamiento eficiente. Específicamente, el sistema permite aplicar diferentes políticas al mismo contenido sin replicación. Spectrum también puede aplicar políticas que sean conscientes del tiempo que se ocupan de manera efectiva del almacenamiento de contenido continuo de medios. Finalmente, el diseño modular de la arquitectura del espectro permite realizaciones independientes y distribuidas para que el sistema pueda implementarse en una variedad de aplicaciones. Hay una serie de problemas abiertos que requerirán trabajo futuro. Algunos de estos problemas incluyen: • Imaginamos que Spectrum es capaz de administrar el contenido en sistemas que van desde grandes CDN hasta electrodomésticos más pequeños como TiVo [8]. Para que estos sistemas más pequeños admitan Spectrum, requerirán redes y una API externa. Cuando esa API esté disponible, tendremos que resolver cómo se puede ajustar en la arquitectura del espectro.• Spectrum nombres contenido por URL, pero no hemos definido intencionalmente el formato de las URL de espectro, cómo se mapean al nombre real del contenido, o cómo se deben presentar los nombres y URL al usuario. Si bien anteriormente tocamos estos temas en otros lugares [2], creemos que hay más trabajo por hacer y que se deben escribir los estándares basados en consenso sobre el nombramiento.• En este documento, nos hemos centrado en la gestión de contenido para objetos de medios continuos. También creemos que la arquitectura del espectro se puede aplicar a cualquier tipo de documento que incluya archivos simples, pero aún no hemos creado los detalles necesarios para respaldar esto en nuestro entorno prototipo.• Cualquier proyecto que ayude a permitir que el contenido multimedia se comparta fácilmente a través de Internet tendrá obstáculos legales para superar antes de que pueda lograr una aceptación generalizada. La adaptación del espectro para cumplir con los requisitos legales probablemente requerirá más trabajo técnico.6. Referencias [1] K .. Cheng y Y. Kambayashi. Gestión de contenido basada en multicacias para almacenamiento en caché web. Actas de la Primera Conferencia Internacional sobre Ingeniería de Sistemas de Información Web, Jume 2000. [2] C. Cranor, M. Green, C. Kalmanek, D. Shur, S. Sibal, C. Sreenan y J. van der Merwe. Arquitectura de Prism: admitiendo servicios de transmisión mejorados en una red de distribución de contenido. IEEE Internet Computing, julio/agosto de 2001. [3] C. Cranor, C. Kalmanek, D. Shur, S. Sibal, C. Sreenan y J. van der Merwe. NED: una grabadora de video digital habilitada para la red.11º Taller IEEE en Redes de Área Local y Metropolitana, marzo de 2001. [4] Expat.expat.sourceForge.net.[5] Z. Ge, P. Ji y P. Shenoy. Una arquitectura de clúster de transmisión de medios de transmisión de medios adaptativa y de la localidad consciente de la localidad. Nossdav, mayo de 2002. [6] K. Kurapati y S. Gutta y D. Schaffer y J. Martino y J. Zimmerman. Un recomendador de televisión de múltiples agentes. Actas del taller UM 2001, julio de 2001. [7] Replaytv.www.sonicblue.com.[8] Tivo.www.tivo.com.11