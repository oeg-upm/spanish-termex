Coordinación de meta-nivel para resolver cadenas de negociación en sistemas semi-cooperativos de varios agentes Xiaoqin Zhang Departamento de Informática y Ciencias de la Información Universidad de Massachusetts en Dartmouth x2zhang@umassd.edu Victor Departamento de Ciencias de la Computación Lesser Universidad de Massachusetts en Amherst Lesser@cs.umass.eduResumen Se forma una cadena de negociación cuando se extienden múltiples negociaciones relacionadas en múltiples agentes. Para ordenar y estructurar adecuadamente las negociaciones que ocurren en la cadena para optimizar la utilidad esperada, presentamos una extensión a un marco de negociación concurrente single. Este trabajo está dirigido a sistemas semi-cooperativos múltiples de agentes, donde cada agente tiene sus propios objetivos y trabaja para maximizar su utilidad local;Sin embargo, el rendimiento de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el rendimiento general de los sistemas. Introducimos una fase previa a la negociación que permite a los agentes transferir información de meta-nivel. Usando esta información, el agente puede construir un modelo más preciso de la negociación en términos de modelar la relación de flexibilidad y probabilidad de éxito. Este modelo más preciso ayuda al agente a elegir una mejor solución de negociación en el contexto global de la cadena de negociación. El agente también puede usar esta información para asignar el tiempo apropiado para cada negociación, por lo tanto, para encontrar un buen orden de todas las negociaciones relacionadas. Los datos experimentales muestran que estos mecanismos mejoran significativamente los agentes y el rendimiento general de los sistemas. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial distribuida]: Sistemas multiagentes Algoritmos de términos generales, rendimiento, experimentación 1. Introducción La negociación sofisticada para la asignación de tareas y recursos es crucial para la próxima generación de aplicaciones de sistemas de agentes múltiples (MAS). Los grupos de agentes deben negociar eficientemente sobre múltiples cuestiones relacionadas simultáneamente en un entorno complejo y distribuido donde hay plazos por los cuales se deben completar las negociaciones. Esta es un área de investigación importante donde se ha realizado muy poco trabajo. Este trabajo está dirigido a sistemas semi-cooperativos múltiples de agentes, donde cada agente tiene sus propios objetivos y trabaja para maximizar su utilidad local;Sin embargo, el rendimiento de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el rendimiento general de los sistemas. No existe un objetivo global único en tales sistemas, ya sea porque cada agente representa una organización/usuario diferente, o porque es difícil/imposible diseñar un objetivo global único. Este problema surge debido a múltiples tareas concurrentes, restricciones de recursos e incertidumbres, y por lo tanto ningún agente tiene suficiente conocimiento o recursos computacionales para determinar qué es mejor para todo el sistema [11]. Un ejemplo de dicho sistema sería una organización virtual [12] (es decir, una cadena de suministro) formada dinámicamente en un mercado electrónico como el desarrollado por el Proyecto Conoise [5]. Para lograr tareas que lleguen continuamente a la organización virtual, se necesitan y prefieren la reubicación de la sub-tarta. No existe un objetivo global único ya que cada agente puede estar involucrado en múltiples organizaciones virtuales. Mientras tanto, el desempeño de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el desempeño general de las organizaciones virtuales. La negociación en tales sistemas no es un juego de suma cero, un acuerdo que aumenta los servicios públicos de ambos agentes se puede encontrar a través de una negociación eficiente. Además, hay múltiples encuentros entre los agentes ya que las nuevas tareas llegan todo el tiempo. En tales negociaciones, el precio puede o no ser importante, ya que se puede solucionar como resultado de un contrato a largo plazo. Otros factores como la calidad y el tiempo de entrega también son importantes. Los mecanismos de reputación en el sistema hacen que las trampas no sean atractivas desde un punto de vista a largo plazo debido a múltiples encuentros entre los agentes. En tales sistemas, los agentes se interesan porque se centran principalmente en sus propios objetivos;Pero también son semi-cooperativos, lo que significa que están dispuestos a ser sinceros y colaborar con otros agentes para encontrar soluciones que sean beneficiosas para todos los participantes, incluido sí mismo;Aunque no ascará voluntariamente su propia utilidad a cambio de otros beneficios. Otra gran diferencia entre este trabajo y otro trabajo sobre la negociación es que la negociación, aquí, no se considera un proceso independiente. Más bien, es una parte de la actividad de los agentes que está estrechamente entrelazada con la planificación, programación y ejecución de las actividades de los agentes, que también pueden relacionarse con otras negociaciones. Según este reconocimiento, este trabajo sobre negociación se refiere más al proceso de toma de decisiones de nivel meta en la negociación en lugar de los protocolos o idiomas básicos. El objetivo de esta investigación es desarrollar un conjunto de macroestrategias que permitan a los agentes administrar de manera efectiva múltiples negociaciones relacionadas, incluidas, entre otros, los siguientes temas: cuánto tiempo se debe dedicar a cada negociación, cuánta flexibilidad (verLa definición formal en la fórmula 3) debe asignarse para cada negociación, y en qué orden se deben realizar 50 978-81-904262-7-5 (RPS) c 2007 Ifaamas las negociaciones. Estas estrategias macro son diferentes de esas microestrategias que dirigen el hilo de negociación individual, como si el agente debe admitir y cuánto debe admitir el agente, etc. [3]. En este documento extendemos un modelo de negociación múltiple [10] desde una perspectiva de un solo agente a una perspectiva de múltiples agentes, de modo que un grupo de agentes involucrados en cadenas de negociaciones interrelacionadas puede encontrar estrategias de negociación macro casi óptimas para perseguir susnegociaciones. El resto de este documento está estructurado de la siguiente manera. La Sección 2 describe el proceso básico de negociación y revisa brevemente un modelo de negociación de múltiples agentes de agentes. La Sección 3 presenta un escenario complejo de cadena de suministro. La Sección 4 detalla cómo resolver los problemas que surgen en la cadena de negociación. Sección 5 Informes sobre el trabajo experimental. La Sección 6 discute el trabajo relacionado y la Sección 7 presenta conclusiones y áreas de trabajo futuro.2. Antecedentes sobre la negociación múltiple en este trabajo, el proceso de negociación entre cualquier par de agentes se basa en una versión extendida de la red del contrato [6]: el agente iniciador anuncia la propuesta que incluye múltiples características;El agente que responde lo evalúa y responde con una respuesta sí/no o una contrapropuesta con algunas características modificadas. Este proceso puede ir y venir hasta llegar a un acuerdo o los agentes deciden detenerse. Si se llega a un acuerdo y un agente no puede cumplir con el compromiso, debe pagarle a la otra parte una multa de desmontaje como se especifica en el compromiso. Una negociación comienza con una propuesta, que anuncia que se debe realizar una tarea (t) incluye los siguientes atributos: 1. Hora de inicio más temprana (EST): la hora de inicio más temprana de la tarea t;La tarea T no se puede iniciar antes del tiempo EST. 2. Fecha límite (DL): el último tiempo de finalización de la tarea;La tarea debe terminar antes de la fecha límite DL.3. Requisito de calidad mínimo (MINQ): la tarea debe terminar con un logro de calidad no menos que Minq.4. Recompensa regular (R): si la tarea se termina según lo solicitado el contrato, el agente del contratista obtendrá recompensa r.5. Tasa de recompensa de acabado temprano (e): si el agente del contratista puede terminar la tarea antes que DL, obtendrá el acabado temprano adicional de recompensa proporcional a esta tasa.6. Tasa de multa de desmantelamiento (P): si el agente del contratista no puede realizar la tarea como lo prometió en el contrato o si el agente del contratista debe cancelar el contrato después de que haya sido confirmado, también debe pagar una multa de desmontaje (P ∗r) al otro agente. Los atributos anteriores también se denominan atributo en la negociación que son las características del sujeto (problema) a negociar, y dependen del dominio. Otro tipo de atributo 1 es el atributo de negociación, que describe el proceso de negociación en sí y es independiente del dominio, como: 1 Estos atributos son similares a los utilizados en la gestión de proyectos;Sin embargo, el problema de negociación múltiple no puede reducirse a un problema de gestión de proyectos o un problema de programación. El problema de negociación múltiple tiene dos dimensiones: las negociaciones y los temas de negociaciones. Las negociaciones están interrelacionadas y los sujetos están interrelacionados;Los atributos de las negociaciones y los atributos de los sujetos también están interrelacionados. Esta complejidad bidimensional de las interrelaciones lo distingue del problema clásico de gestión de proyectos o el problema de programación, donde todas las tareas a programar son tareas locales y no se necesitan negociación.1. Duración de la negociación (δ (v)): el tiempo máximo permitió la negociación V para completar, ya sea alcanzando una propuesta acordada (éxito) o ningún acuerdo (falla).2. Tiempo de inicio de negociación (α (v)): la hora de inicio de la negociación v. Α (v) es un atributo que el agente debe decidir.3. Fecha límite de negociación ((v)): la negociación V debe terminar antes de esta fecha límite (v). La negociación ya no es válida después del tiempo (V), que es lo mismo que un resultado de falla de esta negociación.4. Probabilidad de éxito (PS (V)): la probabilidad de que V sea exitosa. Depende de un conjunto de atributos, incluidos ambos atributos en la negociación (es decir, recompensa, flexibilidad, etc.) y atributos de negociación (es decir, hora de inicio de negociación, fecha límite de negociación, etc.). Un agente involucrado en múltiples procesos de negociación relacionados debe razonar sobre cómo administrar estas negociaciones en términos de ordenarlos y elegir los valores apropiados para las características. Este es el problema de negociación múltiple [10]: Definición 2.1. Un problema de negociación múltiple se define como un gráfico no dirigido (más específicamente, un bosque como un conjunto de árboles enraizados): M = (V, E), donde v = {V} es un conjunto finito de negociaciones, y e ={(u, v)} es un conjunto de relaciones binarias en v.(u, v) ∈ E denota que la negociación U y la negociación V están directamente vinculadas. Las relaciones entre las negociaciones son descritas por un bosque, un conjunto de árboles enraizados {ti}. Existe un operador de relación asociado con cada negociación no hojas V (denotada como ρ (v)), que describe la relación entre la negociación V y sus hijos. Este operador de relación tiene dos valores posibles: y y o. La relación y la relación asociada con una negociación V significa que el logro exitoso del compromiso en V requiere que todos sus nodos infantiles tengan logros exitosos. La relación OR asociada con una negociación V significa que el logro exitoso del compromiso en V requiere que al menos un nodo infantil tenga un logro exitoso, donde los nodos de múltiples hijos representan alternativas para lograr el mismo objetivo. El problema de negociación múltiple es un problema de optimización local. Resolver un problema de negociación múltiple es encontrar una solución de negociación (φ, ϕ) con utilidad esperada optimizada EU (φ, ϕ), que se define como: Eu (φ, ϕ) = 2n x i = 1 p (χii, ϕ) ∗ (r (χi, ϕ) - c (χi, φ, ϕ)) (1) Un orden de negociación φ define un orden parcial de todos los problemas de negociación. Una asignación de características ϕ es una función de mapeo que asigna un valor a cada atributo que debe decidirse en la negociación. Un resultado de negociación χ para un conjunto de negociaciones {vj}, (j = 1, ..., n) especifica el resultado para cada negociación, ya sea el éxito o el fracaso. Hay un total de 2n resultados diferentes para n negociaciones: {chii}, (i = 1, ..., 2n). P (χi, ϕ) denota la probabilidad del resultado χi dada la asignación de características ϕ, que se calcula en función de la probabilidad de éxito de cada negociación. R (χi, ϕ) denota el aumento de la utilidad de los agentes dado el resultado χi y la asignación de características ϕ, y C (χi, φ, ϕ) es la suma de las sanciones de desmontaje de esas negociaciones, que son exitosas, pero necesitan ser abandonadasPorque el fracaso de otras negociaciones directamente relacionadas;Estas negociaciones directamente relacionadas se realizan simultáneamente con esta negociación o después de esta negociación de acuerdo con el orden de negociación φ. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 51 CPU de computadorEntregue el hardware de la computadora Orden de computadora Compra Figura 1: Se ha desarrollado un complejo escenario de la cadena de negociación. Se ha desarrollado un algoritmo de búsqueda heurística [10] para resolver el problema de negociación múltiple de agentes individuales que produce soluciones casi óptimas. Este algoritmo se usa como el núcleo de la toma de decisiones para cada agente individual en el escenario de la cadena de negociación. En el resto del documento, presentamos nuestro trabajo sobre cómo mejorar la solución local de un solo agente en el contexto global de la cadena de negociación.3. Problema de la cadena de negociación El problema de la cadena de negociación ocurre en un sistema de múltiples agentes, donde cada agente representa a un individuo, una empresa o una organización, y no hay autoridad absoluta en el sistema. Cada agente tiene su propia función de utilidad para definir las implicaciones de lograr sus objetivos. El agente está diseñado para optimizar su utilidad esperada dada su información limitada, computación y recursos de comunicación. Las tareas dinámicas llegan a los agentes individuales, la mayoría de las tareas que requieren la coordinación de múltiples agentes. Cada agente tiene la capacidad de programación y planificación para administrar sus actividades locales, algunas de estas actividades están relacionadas con las actividades de otros agentes. La negociación se utiliza para coordinar la programación de estas actividades relacionadas mutuas. La negociación está estrechamente relacionada con los procesos de programación/planificación locales de los agentes y también está relacionada con otras negociaciones. Un agente puede estar involucrado en múltiples negociaciones relacionadas con varios otros agentes, y cada uno de los otros agentes también puede estar involucrado en negociaciones relacionadas con otros. La Figura 1 describe un complejo escenario de la cadena de negociación. La tienda, el fabricante de PC, el productor de memoria y el centro de distribución están involucrados en problemas de negociación múltiples. La Figura 2 muestra un modelo distribuido de parte de la cadena de negociación descrita en la Figura 1. Cada agente tiene un problema de optimización local: el problema de negociación múltiple (representado como un árbol y árbol), que puede resolverse utilizando el modelo y los procedimientos descritos en la Sección 2. Sin embargo, la solución óptima local puede no ser óptima en el contexto global dado que el modelo local no es completo ni precisa. La línea DASH en la Figura 2 representa la conexión de este problema de optimización local a través del sujeto de negociación común. El problema de la cadena de negociación o es un grupo de problemas de optimización local estrechamente acoplados: O = {O1, O2, .... ON}, OI denota el problema de optimización local (problema de negociación múltiple) del agente AI AIS Solución óptima localSLO I maximiza la utilidad local esperada basada en una información y supuestos incompletos sobre las estrategias locales de otros agentes: definimos dicha información incompleta y supuestos imperfectos del Agente I como II): UEXP I (SLO I, II) ≥ UEXP I (SX I,Ii) para todos x = lo. Sin embargo, la combinación de estas soluciones óptimas locales {SLO I}: <SLO 1, SLO 2, .... SLO n> puede ser subóptimo a un conjunto de mejores soluciones óptimas locales {sblo i}: <sblo 1,SBLO 2, .... sblo n> Si la utilidad global se puede mejorar sin que los agentes se disminuyan la utilidad local usando {sblo i}. En otras palabras, {Slo I} está dominado por {sblo i} ({Slo I} ≺ {sblo i}) iff: ui (<slo 1, slo 2, .... slo n>) ≤ ui (<sblo1, sblo 2, .... sblo n>) para i = 1, ... n y pn i = 1 ui (<slo 1, slo 2, ... slo n>) <pn i = 1 ui(<Sblo 1, sblo 2, .... sblo n>) Hay múltiples conjuntos de mejores soluciones óptimas locales: {sblo1 i}, {sblo2 i}, ... {sblom i}. Algunos de ellos pueden estar dominados por otros. Un conjunto de mejores soluciones óptimas locales {S Blog I} que no está dominado por ningún otro se llama Best Local Optimal. Si un conjunto de mejores soluciones óptimas locales {s Blog I} domina a todos los demás, {S Blog I} se llama globalmente local óptimo. Sin embargo, a veces el conjunto óptimo local globalmente no existe, en cambio, existen múltiples conjuntos de las mejores soluciones óptimas locales. Incluso si la solución óptima local globalmente existe en teoría, encontrarla puede no ser realista dado que los agentes están tomando decisión simultáneamente, construir la información y suposiciones locales perfectas sobre otros agentes (ii) en este entorno dinámico es muy difícil y, a veces, es muy difícil y, a veces, es muy difícil y, a vecesincluso tarea imposible. El objetivo de este trabajo es mejorar el modelo local de cada agente sobre otros agentes (ii) a través de la coordinación de meta-nivel. A medida que se vuelven más precisa, los agentes soluciones óptimas locales a su problema local de negociación múltiple se convierten en una mejor solución óptima local en el contexto del problema global de la cadena de negociación. No estamos argumentando que esta declaración es una declaración válida universal que se mantiene en todas las situaciones, pero nuestro trabajo experimental muestra que la suma de los servicios públicos de los agentes en el sistema se ha mejorado en un 95% en promedio cuando la coordinación de nivel meta se usa para mejorarCada agente Modelo local II. En este trabajo, nos centramos en mejorar el modelo local de los agentes a través de dos direcciones. Una dirección es construir una mejor función para describir la relación entre la probabilidad de éxito de la negociación y la flexibilidad asignada a la negociación. La otra dirección es encontrar cómo asignar el tiempo de manera más eficiente para cada negociación en el contexto de la cadena de negociación.4. Nuevo mecanismo: coordinación de nivel meta Para que un agente obtenga un mejor modelo local sobre otros agentes en el contexto de la cadena de negociación, presentamos una fase previa a la negociación en el proceso de negociación local. Durante la fase previa a la negociación, los agentes se comunican con otros agentes que tienen tareas que contratan las relaciones con ellos, transfieren información de meta-nivel antes de decidir cómo y cuándo hacer las negociaciones. Cada agente le dice a otros agentes qué tipos de tareas les pedirán que realicen, y las distribuciones de probabilidad de algunos parámetros de esas tareas, es decir, los primeros tiempos de inicio y los plazos, etc. Cuando estas distribuciones de probabilidad no están disponibles directamente, los agentes pueden aprender dicha información de su experiencia pasada. En nuestro experimento descrito más adelante, dicha información distribuida se aprende en lugar de ser contada directamente por otros agentes. Específicamente, cada agente proporciona la siguiente información a otros agentes relacionados: • Si se necesita negociación adicional para tomar una decisión sobre la tarea de contratación;Si es así, cuántas negociaciones más se necesitan.NegCount representa el número total de negociaciones adicionales necesarias para una tarea, incluidas las negociaciones adicionales necesarias para sus subtareas que ocurren entre otros agentes. En una situación de la cadena de negociación, esta información se está propagando y actualizando a través de la cadena hasta 52 el Sexto INTL. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) E: Hardware de pedido F: Entregue la computadora H: Obtenga la memoria I: Entrega Hardware I: Entrega Hardware F: Entregue la computadora G: Obtenga CPU E: Obtenga hardware y centro de distribución A: CompreComputadora B: Memoria de compra C: Pedir computadora D: Ordene Memory Store Agent PC Fabricante y C: Pedir computadora Figura 2: Modelo distribuido de cadenas de negociación Cada agente tiene información precisa. Deje que Subneg (t) sea un conjunto de subtareas de la Tarea T que requieren negociaciones adicionales, luego tenemos: NegCount (t) = | SubNeg (t) |+ X t∈Subneg (t) (negcount (t)) (2) Por ejemplo, en el escenario descrito en la Figura 1, para el centro de distribución, el hardware de orden de tareas consta de tres subtareas que necesitan negociaciones adicionales con otros agentes: ordenar chips, Ordene la memoria y entrega hardware. Sin embargo, no se necesitan más negociaciones para que otros agentes tomen una decisión sobre estas subtareas, por lo tanto, el Negcount para estas subtareas es 0. La siguiente información es enviada al fabricante de PC por el Centro de distribución: NegCount (Hardware de pedido) = 3 Para la computadora de pedido de tareas del fabricante de PC contiene dos subtareas que requiere negociaciones adicionales: entregar hardware de computadora y pedido. Cuando el fabricante de la PC recibe el mensaje del Centro de distribución, actualiza su información local: NegCount (orden de orden) = 2+ NegCount (entregar computadora) (0)+ negcount (hardware de pedido) (3) = 5 y envía la información actualizadaal agente de la tienda.• Si hay otras tareas compitiendo con esta tarea y cuál es la probabilidad de conflicto. El conflicto significa que, dadas todas las restricciones, el agente no puede lograr todas las tareas a tiempo, debe rechazar algunas tareas. La probabilidad de conflicto PCIJ entre una tarea de tipo I y otra tarea del tipo J se calcula en función del modelo estadístico de cada tarea parámetros, incluida la hora de inicio más temprana (EST), la fecha límite (DL), la duración de la tarea (Dur) y el tiempo de holgura(sl), usando una fórmula [7]: pcij = p (dli - estj ≤ duri + durj ∧ dlj - esti ≤ duri + durj) Cuando hay más de dos tipos de tareas, la probabilidad de no conflicto entre la tarea I yEl resto de las tareas se calcula como: pnoconflict (i) = qn j = 1, j = i (1 - pcij) Por ejemplo, el productor de memoria le dice al centro de distribución sobre la memoria del orden de tareas. Su decisión local no implica negociación adicional con otros agentes (negcount = 0), sin embargo, hay otra tarea del agente de la tienda que compite con esta tarea, por lo que la probabilidad de que no hay conflicto es 0.5 (pnoconflict = 0.5). Por otro lado, el productor de la CPU le dice al centro de distribución sobre los chips de orden de tareas: su decisión local no implica negociación adicional con otros agentes, y no hay otras tareas que compitan con esta tarea (pnoconflict = 1.0) dada la configuración del entorno actual. Según la información anterior, el centro de distribución sabe que la memoria del orden de tareas necesita más flexibilidad que los chips de orden de tareas para tener éxito en la negociación. Mientras tanto, el centro de distribución le diría al fabricante de la PC que el hardware de orden de tareas implica una mayor negociación con otros agentes (negcount = 3), y que su decisión local depende de las decisiones de otros agentes. Esta información ayuda al fabricante de la PC asignar flexibilidad adecuada para el hardware de orden de tareas en la negociación. En este trabajo, presentamos un período corto y product_comuter get_software install_software entrega_computer Memoria Productor de memoria Productor Productor de Productor Agente de consumidor Order_Comuter Order_memory Order_hardware Order_hardware Process - Tiempo Tiempo: 4 Centro de distribución Fabricante de PC Order_chips Entrew_hardwareget_parts - TIEMPO: 11 Enases Ensables - Tiempo: 4 Proceso - Tiempo Tiempo - Tiempo PC: 3 y habilita el proceso: 4 y habilita el proceso - tiempo: 3 Process - Tiempo: 2 Figura 3: Estructuras de tareas del fabricante de PC y Centro de distribución para que los agentes aprendan las características de esas tareas entrantes, incluidas EST, DL, DURy SL, que se utilizan para calcular PCIJ y PNOCONFLIT para la coordinación de meta-nivel. Durante el rendimiento del sistema, los agentes monitorean continuamente estas características. Se enviará un mensaje actualizado a agentes relacionados cuando haya un cambio significativo de la información de nivel meta. A continuación, describiremos cómo el agente usa la información de meta-nivel transferida durante la fase de previogociación. Esta información se utilizará para mejorar el modelo local de los agentes, más específicamente, se utilizan en el proceso de toma de decisiones locales de los agentes al afectar los valores de algunas características. Especialmente, nos preocuparemos dos características que tienen fuertes implicaciones para la estrategia de la macro de los agentes para las negociaciones múltiples y, por lo tanto, también afectan significativamente el desempeño de una cadena de negociación. El primero es la cantidad de flexibilidad especificada en el parámetro de negociación. La segunda característica que exploraremos es el tiempo asignado para el proceso de negociación. El tiempo asignado para cada negociación afecta el posible orden de esas negociaciones, y también afecta el resultado de la negociación. Los detalles se discuten en las siguientes secciones.4.1 Flexibilidad y éxito Los agentes de probabilidad no solo necesitan lidiar con problemas de negociación complejos, sino que también necesitan manejar su propio proceso local de programación y planificación que están intercalados con el proceso de negociación. La Figura 3 muestra las estructuras de tareas locales del fabricante de PC y el centro de distribución. El fabricante de la PC puede realizar algunas de estas tareas localmente, como Get Software e Install Software, mientras que otras tareas (tareas no locales), como el hardware de pedido y la computadora, deben ser realizadas por otros agentes. El fabricante de la PC necesitaNegocie con el centro de distribución y el transportador sobre si pueden realizar estas tareas, y de ser así, cuándo y cómo las realizarán. Cuando el fabricante de la PC negocia con otros agentes sobre la tarea no local, necesita que el acuerdo de otros agentes se ajuste a su horario local. Dado que el fabricante de la PC está tratando con múltiples tareas no locales simultáneamente, también necesita garantizar que los compromisos en estas tareas no locales sean consistentes entre sí. Por ejemplo, la fecha límite del hardware del orden de tareas no puede ser posterior a la hora de inicio de la computadora que entrega la computadora. Figura 4 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 53 Order_hardware EntreT_Computer [34, 40] Tiempo de proceso: 4 Tiempo de proceso: 3 [11, 28] [11, 28] Tiempo de proceso: 11 get_software install_software [28, 34] ProcesoTiempo: 2 Order_Computer comienza en el tiempo 11 y termina por 40 Figura 4: Un programa local de muestra del fabricante de PC muestra un programa local de muestra del fabricante de PC. De acuerdo con este cronograma, siempre que el hardware de la orden de tareas se realice durante el tiempo [11, 28] y la computadora de entrega de tareas se realiza durante el tiempo [34, 40], existe un horario factible para todasTiempo 40, que es la fecha límite prometida al cliente. Estos rangos de tiempo asignados para el hardware de orden de tareas y la computadora de entrega de tareas se denominan rangos consistentes;Las negociaciones sobre estas tareas se pueden realizar de forma independiente dentro de estos rangos sin preocuparse por el conflicto. Observe que cada tarea debe asignarse con un rango de tiempo que sea lo suficientemente grande como para acomodar el tiempo de proceso de tarea estimado. Cuanto más grande sea el rango, más probabilidades de la negociación tendrá éxito, porque es más fácil para el otro agente encontrar un horario local para esta tarea. Entonces la pregunta es, ¿qué tan grande debería ser este rango de tiempo? Definimos una medida cuantitativa llamada flexibilidad: dada una tarea t, supongamos que el rango de tiempo asignado para t es [EST, DL], EST es el tiempo de inicio más temprano y DL significa la fecha límite, la flexibilidad (t) = DL - EST - ProcesoTiempo (t) Tiempo de proceso (t) (3) La flexibilidad es un atributo importante porque afecta directamente el posible resultado de la negociación. La probabilidad de éxito de una negociación puede describirse en función de la flexibilidad. En este trabajo, adoptamos la siguiente fórmula para la función de probabilidad de éxito en función de la flexibilidad del problema de la negociación: PS (V) = PBS (V) ∗ (2/π) ∗ (Arctan (F (V) + C))) (4) Esta función describe un fenómeno donde inicialmente la probabilidad de una negociación exitosa aumenta significativamente a medida que crece la flexibilidad, y luego se nivela después, lo que refleja nuestra experiencia de experimentos anteriores.PBS es la probabilidad de éxito básica de esta negociación v cuando la flexibilidad F (v) es muy grande.C es un parámetro utilizado para ajustar la relación. Los diferentes patrones de función pueden resultar de diferentes valores de parámetros, como se muestra en la Figura 5. Esta función describe la suposición de agentes sobre cómo el otro agente involucrado en esta negociación respondería a esta solicitud de negociación particular, cuando tiene flexibilidad F (v). Esta función es parte del modelo local de agentes sobre otros agentes. Para mejorar la precisión de esta función y acercarla a la realidad, el agente ajusta estos dos valores de acuerdo con la información de nivel meta transferida durante la fase previa a la negociación. Los valores de C dependen de si hay una negociación adicional involucrada y si hay otras tareas que compiten con esta tarea por los recursos comunes. Si es así, se necesita más flexibilidad para este problema y, por lo tanto, a C se le debe asignar un valor menor. En nuestra implementación, el siguiente procedimiento se utiliza para calcular C en función de la información de nivel meta-nivel neglic y pnoconflict: if (pnoconflict> 0.99) // no hay otra tarea competitiva c = clarge-negcount else // existe la tarea competitiva c = csmall estoEl procedimiento funciona de la siguiente manera: cuando no hay otra Figura 5 en competencia: Tarea de funciones de probabilidad de éxito diferentes, C depende del número de negociaciones adicionales necesarias. Cuantas negociaciones más adicionales se necesiten, más valor C tiene, por lo tanto, se asignará más flexibilidad a este tema para garantizar el éxito de la negociación. Si no se necesita más negociación, C se asigna a un gran número Clarge, lo que significa que se necesita menos flexibilidad para este problema. Cuando hay otras tareas en competencia, C se asigna a un pequeño número CSmall, lo que significa que se necesita más flexibilidad para este problema. En nuestro trabajo experimental, tenemos a Clarge como 5 y csmall como 1. Estos valores se seleccionan según nuestra experiencia;Sin embargo, un enfoque más práctico es hacer que los agentes aprendan y ajusten dinámicamente estos valores. Esto también es parte de nuestro trabajo futuro.PBS se calcula en base a Pnoconflict, F (V) (la flexibilidad de V en una negociación previa) y C, utilizando el formato inverso de la ecuación 4. PBS (V) = Min (1.0, Pnoconflict (V) ∗ (π/2)/(arctan (f (v)+c))) (5) Por ejemplo, según el escenario descrito anteriormente, los agentes tienen los siguientes valores para C y PBS basados en la información de nivel meta transferida: • Fabricante de PC,Hardware de pedido: PBS = 1.0, C = 2;• Centro de distribución, chips de orden: PBS = 1.0, c = 5;• Agente de almacenamiento, memoria de pedido: PBS = 0.79, C = 1;La Figura 5 muestra los diferentes patrones de la función de probabilidad de éxito dado diferentes valores de parámetros. Según tales patrones, el agente de la tienda asignaría más flexibilidad a la memoria del orden de tareas para aumentar la probabilidad de éxito en la negociación. En el proceso de negociación adicional de los agentes, la fórmula 4 con diferentes valores de parámetros se utiliza en el razonamiento sobre la cantidad de flexibilidad que se debe asignar a un determinado tema. La comunicación previa a la negociación ocurre antes de la negociación, pero no antes de cada sesión de negociación. Los agentes solo necesitan comunicarse cuando el entorno cambia, por ejemplo, se generan nuevos tipos de tareas, las características de las tareas cambian, el compañero de negociación cambia, etc. Si no ocurre un cambio importante, el agente solo puede usar el conocimiento actual de las comunicaciones anteriores. La sobrecarga de comunicación y cálculo de este mecanismo de prenegotiación es muy pequeño, dado el simple procedimiento de recopilación de información y el mensaje corto a transferir. Discutiremos el efecto de este mecanismo en la Sección 5. 4.2 Duración de negociación y fecha límite en el modelo local de los agentes, hay dos atributos que describen cuán pronto el agente espera que el otro agente responda a la negociación v: duración de la negociación δ (v)y fecha límite de negociación (v) 54 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Tabla 1: Ejemplos de negociaciones (δ (v): duración de la negociación, s.p.: probabilidad de éxito) Índice de la tarea δ (v) recompensa S.P.Penalización 1 Hardware de orden 4 6 0.99 3 2 CHIPS DE PEDIDO 4 1 0.99 0.5 3 Memoria de pedido 4 1 0.80 0.5 4 Entrega hardware 4 1 0.70 0.5. Estos dos atributos importantes que afectan la solución de negociación. Parte de la solución de negociación es una ordenación de negociación φ que especifica en qué orden deben realizarse las negociaciones múltiples. Para controlar el proceso de negociación, cada negociación debe finalizarse antes de su fecha límite de negociación, y la duración de la negociación es el tiempo asignado para esta negociación. Si no se puede terminar una negociación durante el tiempo asignado, el agente debe detener esta negociación y considerarla como un fracaso. La decisión sobre la orden de negociación depende de la probabilidad de éxito, la recompensa y la multa de desmontaje de cada negociación. Una buena orden de negociación debería reducir el riesgo de desafío y, por lo tanto, reducir la multa de desmotrices. Se ha desarrollado un algoritmo de búsqueda para encontrar dicha orden de negociación descrita en [10]. Por ejemplo, la Tabla 1 muestra algunas de las negociaciones para el centro de distribución y sus atributos relacionados. Dado suficiente tiempo (la fecha límite de negociación es mayor que 16), la mejor orden de negociación es: 4 → 3 → 2 → 1. La negociación más incierta (4: entrega hardware) se realiza primero. La negociación con la mayor penalización (1: hardware de pedido) se realiza después de todas las negociaciones relacionadas (2, 3 y 4) se han completado para reducir el riesgo de desmantelamiento. Si la fecha límite de negociación es inferior a 12 y más de 8, se prefiere la siguiente orden de negociación: (4, 3, 2) → 1, lo que significa que la negociación 4, 3, 2 se puede realizar en paralelo y se debe realizar 1después de ellos. Si la fecha límite de negociación es inferior a 8, entonces todas las negociaciones deben realizarse en paralelo, porque no hay tiempo para secuenciar negociaciones. En el modelo original para un solo agente [10], se supone que la fecha límite de negociación (V) está dada por el agente que inicia el contrato. La duración de la negociación δ (v) es una estimación de cuánto tiempo lleva la negociación en función de la experiencia. Sin embargo, la situación no es tan simple en un problema de cadena de negociación. Considerando el siguiente escenario. Cuando el cliente publica un contrato para la computadora de compra de tareas, podría requerir que el agente de la tienda responda por hora 20. El tiempo 20 puede considerarse como la fecha límite de negociación para la computadora de compra. Cuando el agente de la tienda negocia con el fabricante de PC sobre la computadora de pedido, ¿qué fecha límite de negociación debe especificar? Cuánto tiempo lleva la negociación en el pedido de la computadora depende de cómo el fabricante de la PC maneje sus negociaciones múltiples locales: si responde primero al agente de la tienda o espere hasta que se hayan resuelto todas las demás negociaciones relacionadas. Sin embargo, el orden de las negociaciones depende de la fecha límite de negociación en la computadora de orden, que debe ser proporcionada por el agente de la tienda. La fecha límite de negociación de la computadora de pedido para el fabricante de PC se decide en base a la computadora de negociación de la computadora del pedido para el agente de la tienda. El tiempo que el agente de la tienda le gustaría gastar en la computadora de la orden de negociación es su duración, y también determina la fecha límite de negociación para el fabricante de PC. Ahora surge la pregunta: ¿cómo debería un agente decidir cuánto tiempo debe dedicar a cada negociación, lo que realmente afecta las decisiones de negociación de los otros agentes? El modelo original no maneja esta pregunta, ya que supone que se conoce la duración de la negociación δ (v). Aquí proponemos tres enfoques diferentes para manejar este problema.1. Política de la misma línea. Use la misma fecha límite de negociación para todas las negociaciones relacionadas, lo que significa asignar todo el tiempo disponible a todas las negociaciones: δ (v) = Tiempo total disponible, por ejemplo, si la fecha límite de negociación para la computadora de compra es de 20, el agente de la tienda le dirá al fabricante de la PC que respondapor 20 para la computadora de pedido (ignorando el retraso de comunicación). Esta estrategia permite que cada negociación tenga la mayor duración posible, sin embargo, también elimina la posibilidad de realizar negociaciones en secuencia; todas las negociaciones deben realizarse en paralelo porque el tiempo total disponible es lo mismo que la duración de cada negociación.2. Política de meta-Info-Dudline. Asigne el tiempo para cada negociación de acuerdo con la información de meta-nivel transferida en la fase previa a la negociación. Una negociación más complicada, que implica negociaciones adicionales, debe asignarse tiempo adicional. Por ejemplo, el fabricante de PC asigna una duración de 12 para el hardware de la orden de negociación y una duración de 4 para la computadora de entrega. La razón es que la negociación con el centro de distribución sobre el hardware del orden es más complicada porque implica nuevas negociaciones entre el centro de distribución y otros agentes. En nuestra implementación, utilizamos el siguiente procedimiento para decidir la duración de la negociación δ (v): if (negScount (v)> = 3) // se necesita más negociación adicional δ (v) = (negScount (v) −1) ∗ básicociclo neg if (negcount (v)> 0) // una o dos negociaciones adicionales necesarias δ (v) = 2 ∗ ciclo básico de neg // no negociación adicional δ (v) = ciclo básico de neg + 1 ciclo básico de neg la representaEl tiempo mínimo necesario para un ciclo de negociación (propuesta-pensamiento-respuesta), que es 3 en nuestro entorno del sistema, incluido el retraso de comunicación. Se asigna una unidad de tiempo adicional para la negociación más simple porque permite al agente realizar un proceso de razonamiento más complicado en el pensamiento. Nuevamente, la estructura de este procedimiento se selecciona según la experiencia, y los agentes pueden aprender y ajustarla dinámicamente.3. Política de diádina de punto uniformemente dividido. Divida uniformemente el tiempo disponible entre las N negociaciones relacionadas: δ (v) = Tiempo total disponible/N Por ejemplo, si el tiempo actual es 0, y la fecha límite de negociación para la computadora de pedido es de 21, dadas otras dos negociaciones relacionadas, hardware de pedidos yEntregue la computadora, cada negociación se asigna con una duración de 7. Intuitivamente creemos que la Estrategia 1 puede no ser buena, porque realizar todas las negociaciones en paralelo aumentaría el riesgo de desmantelamiento y, por lo tanto, también de desmontaje. Sin embargo, no está muy claro cómo funcionan la estrategia 2 y 3, y discutiremos algunos resultados experimentales en la Sección 5. 5. Experimentos Para verificar y evaluar los mecanismos presentados para el problema de la cadena de negociación, implementamos el escenario descrito en la Figura 1. Las nuevas tareas se generaron aleatoriamente con la tasa de penalización de desmontaje p ∈ [0, 1], la tasa de recompensa de acabado temprano e ∈ [0, 0.3] y la fecha límite dl ∈ [10, 60] (este rango permite diferentes flexibilidades disponibles para aquellos subcontratadostareas), y llegó al agente de la tienda periódicamente. Realizamos dos conjuntos de experimentos para estudiar el sexto INTL. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 55 Tabla 2: Valores de parámetros sin/con información de nivel meta fijo negociación metainfo-flex PBS PBS C Orden Computadora 0.95 1.0 0 Memoria de pedido (1) 0.95 0.79 1Orden Hardware 0.95 1.0 2 Entrega Computadora 0.95 1.0 1 Entregue hardware 0.95 1.0 5 CHIPS DE PEDIDO 0.95 1.0 1 Memoria de pedido (2) 0.95 0.76 1 Figura 6: Políticas de flexibilidad diferentes cómo las funciones de probabilidad de éxito y los plazos de negociación afectan el resultado de la negociación, los agentes Utilities de los agentesy la utilidad general de los sistemas. En este experimento, los agentes deben tomar una decisión sobre el pedido de negociación y la asignación de características para múltiples atributos que incluyen: hora de inicio más temprana, fecha límite, tiempo de finalización prometido y esos atributos de negociación. Para centrarse en el estudio de la flexibilidad, en este experimento, las recompensas regulares para cada tipo de tareas son fijas y no están bajo negociación. Aquí solo describimos cómo los agentes manejan la duración de la negociación y los plazos de negociación porque son los atributos afectados por la fase previa a la negociación. Todos los demás atributos involucrados en la negociación se manejan de acuerdo con cómo afectan la viabilidad del cronograma local (atributos relacionados con el tiempo) y cómo afectan la probabilidad de éxito de la negociación (atributos relacionados con el tiempo y los costos) y cómo afectan la utilidad de esperar. Un algoritmo de búsqueda [10] y un conjunto de algoritmos de programación de pedidos parciales se utilizan para manejar estos atributos. Probamos dos políticas de flexibilidad diferentes.1. Política de flexibilidad fija: el agente utiliza un valor fijo como la probabilidad de éxito (PS (V) = PBS (v)), de acuerdo con su conocimiento y estimación local.2. Política de metainfo-flexibilidad: el agente usa la función ps (v) = pbs (v) ∗ (2/π) ∗ (arctan (f (v) + c))) para modelar la probabilidad de éxito. También ajusta esos parámetros (PBS (V) y C) de acuerdo con la información de nivel meta obtenida en la fase de prenegotiación como se describe en la Sección 4. La Tabla 2 muestra los valores de esos parámetros para algunas negociaciones. La Figura 6 muestra los resultados de este experimento. Este conjunto de experimentos incluye 10 ejecuciones del sistema, y cada ejecución es para 1000 unidades de tiempo simuladas. En las primeras 200 unidades horarias, los agentes están aprendiendo sobre las características de la tarea, que se utilizarán para calcular las probabilidades de conflicto PCIJ. En el momento 200, los agentes realizan comunicación de información de meta nivel, y en las próximas 800 unidades horarias, los agentes usan la información de meta-nivel en su proceso de razonamiento local. Los datos se recopilaron durante las 800 unidades de tiempo después de la Figura 7 de la pre-negociación: diferentes políticas de fecha límite de negociación Fase 2. Se genera una tarea de computadora de compra cada 20 unidades de tiempo, y se generan dos tareas de memoria de compra cada 20 unidades de tiempo. La fecha límite para la computadora de compra de tareas se genera aleatoriamente en el rango de [30, 60], la fecha límite para la memoria de compra de tareas está en el rango de [10, 30]. La tasa de penalización de desmontaje se genera aleatoriamente en el rango de [0, 1]. Este entorno crea múltiples situaciones de cadena de negociación concurrente;Hay una cadena larga: Cliente - Tienda - Fabricante de PC - Centro de distribución - Productores - Transportador y dos cadenas cortas: Cliente - Tienda - Productor de memoria Esto demuestra que este mecanismo es capaz de manejar múltiples cadenas de negociación concurrentes. Todos los agentes funcionan mejor en este ejemplo (obtengan más utilidad) cuando están utilizando la información de nivel meta para ajustar su control local a través de los parámetros en la función de probabilidad de éxito (política metainfo-flex). Especialmente para aquellos agentes en el medio de la cadena de negociación, como el fabricante de PC y el centro de distribución, la política de flexibilidad marca una diferencia significativa. Cuando el agente tiene una mejor comprensión del escenario de negociación global, es capaz de asignar más flexibilidad para aquellas tareas que implican negociaciones complicadas y contenciones de recursos. Por lo tanto, el aumento de la probabilidad de éxito y las menos tareas se rechazan o cancelan (el 90% de las tareas se han negociado con éxito cuando se usa información de meta-nivel, en comparación con el 39% cuando no se usa la pre-negociación), lo que resulta en el agente y en el agente y en el agente y enEl sistema logra un mejor rendimiento. En el segundo conjunto de estudios de experimentos, comparamos tres políticas de fecha límite de negociación descritas en la Sección 4.2 cuando utilizan la política de flexibilidad metainfo descrita anteriormente. El resultado inicial muestra que la misma política de la misma línea de línea y la política de meta-Info-Dudline funcionan casi la misma cuando la cantidad de nivel de carga de trabajo del sistema es moderada, las tareas pueden acomodarse dada la flexibilidad suficiente. En esta situación, con cualquiera de las políticas, la mayoría de las negociaciones son exitosas, y hay pocos acontecimientos de desafío, por lo que el orden de las negociaciones no hace demasiada diferencia. Por lo tanto, en este segundo conjunto de experimentos, aumentamos el número de nuevas tareas generadas para elevar la carga de trabajo promedio en el sistema. Se genera una tarea de computadora de compra cada 15 unidades de tiempo, se generan tres tareas de memoria de compra cada 2, solo medimos la utilidad recolectada después de la fase de aprendizaje porque la fase de aprendizaje es relativamente corta en comparación con la fase de evaluación, también durante la fase de aprendizaje, no.Se utiliza información de nivel meta, por lo que algunas de las políticas no son válidas.56 El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), 15 unidades horarias, y una tarea entrega un regalo (directamente del cliente al transportador) se genera cada 10 unidades de tiempo. Esta configuración genera un mayor nivel de carga de trabajo del sistema, lo que resulta en algunas tareas que no se completan sin importar qué orden de negociación se utilice. En esta situación, encontramos que la política de meta-Info-Dadline funciona mucho mejor que la misma política de la misma línea (ver Figura 7). Cuando un agente usa la misma política de la línea dura, todas las negociaciones deben realizarse en paralelo. En el caso de que una negociación falle, todas las tareas relacionadas deben cancelarse, y el agente debe pagar múltiples sanciones de desmontaje. Cuando el agente usa la política de meta-Info-Dudline, las negociaciones complicadas se asignan más tiempo y, en consecuencia, las negociaciones más simples se asignan menos tiempo. Esto también tiene el efecto de permitir que algunas negociaciones se realicen en secuencia. La consecuencia de la negociación de secuenciación es que, si hay un fracaso, un agente simplemente puede cancelar las otras negociaciones relacionadas que no se han iniciado. De esta manera, el agente no tiene que pagar la multa de desmantelamiento por esas negociaciones canceladas porque todavía no se ha establecido un compromiso. La política de diadra dividida uniformemente funciona mucho peor que la política de metainfo-diadline. En la política de DividedDeadline, el agente asigna el tiempo de negociación de manera uniforme entre las negociaciones relacionadas, por lo tanto, la negociación complicada no tiene suficiente tiempo para completar. Los resultados del experimento anterior muestran que la información de nivel meta transferida entre los agentes durante la fase previa a la negociación es fundamental para construir un modelo más preciso del problema de negociación. El proceso de razonamiento basado en este modelo más preciso produce una solución de negociación eficiente, que mejora significativamente los agentes y la utilidad general de los sistemas. Esta conclusión es de aquellos entornos en los que el sistema se enfrenta a una carga pesada moderada y las tareas tienen una fecha límite de tiempo relativamente ajustada (la configuración de nuestro experimento es producir dicho entorno);La negociación eficiente es especialmente importante en tales entornos.6. El trabajo relacionado Fátima, Wooldridge y Jennings [1] estudiaron los múltiples problemas en la negociación en términos de la agenda y el procedimiento de negociación. Sin embargo, este trabajo es limitado ya que solo involucra una perspectiva de agentes individuales sin ningún entendimiento de que el agente puede ser parte de una cadena de negociación. Mailler y Lesser [4] han presentado un enfoque para un problema de asignación de recursos distribuido donde ocurre el escenario de la cadena de negociación. Modela el problema de negociación como un problema de optimización de restricciones distribuidas (DCOP) y se utiliza un mecanismo de mediación cooperativa para centralizar las porciones relevantes del DCOP. En nuestro trabajo, la negociación implica problemas más complicados como recompensa, penalización y utilidad;Además, adoptamos un enfoque de distribución donde no se necesita control centralizado. Se ha aplicado un enfoque centralizado parcial basado en mediador a la coordinación y programación de la red de tareas complejas [8], que es diferente de nuestro trabajo ya que el sistema es un sistema cooperativo completo y la utilidad individual del agente único no se refiere en absoluto. Una subasta combinatoria [2, 9] podría ser otro enfoque para resolver el problema de la cadena de negociación. Sin embargo, en una subasta combinatoria, el agente no razona sobre el orden de las negociaciones. Esto conduciría a un problema similar a los que discutimos cuando se usa la misma política de línea de salida.7. Conclusión y trabajo futuro En este documento, hemos resuelto problemas de la cadena de negociación al extender nuestro modelo de negociación múltiple desde la perspectiva de un solo agente a múltiples agentes. En lugar de resolver el problema de la cadena de negociación en un enfoque centralizado, adoptamos un enfoque distribuido donde cada agente tiene un modelo local extendido y un proceso de toma de decisiones. Hemos introducido una fase previa a la negociación que permite a los agentes transferir información de meta-nivel sobre cuestiones de negociación relacionadas. Usando esta información, el agente puede construir un modelo más preciso de la negociación en términos de modelar la relación de flexibilidad y probabilidad de éxito. Este modelo más preciso ayuda al agente a elegir la solución de negociación adecuada. Los datos experimentales muestran que estos mecanismos mejoran significativamente los agentes y el rendimiento general de los sistemas. En la extensión futura de este trabajo, nos gustaría desarrollar mecanismos para verificar cuán confiables son los agentes. También reconocemos que el enfoque actual de aplicar la información de nivel meta es principalmente heurístico, por lo que nos gustaría desarrollar un mecanismo de aprendizaje que permita al agente aprender cómo usar dicha información para ajustar su modelo local de la experiencia previa. Para verificar aún más este enfoque distribuido, nos gustaría desarrollar un enfoque centralizado, para que podamos evaluar cuán buena se compara la solución de este enfoque distribuido con la solución óptima que se encuentra con el enfoque centralizado.8. Referencias [1] S. S. Fátima, M. Wooldridge y N. R. Jennings. Estrategias de negociación óptimas para agentes con información incompleta. En documentos revisados del 8º Taller Internacional sobre Agentes Inteligentes VIII, páginas 377-392. Springer-Verlag, 2002. [2] L. Hunsberger y B. J. Grosz. Una subasta combinatoria para la planificación colaborativa. En Actas de la Cuarta Conferencia Internacional sobre Sistemas de Aguos Multi-Agentes (ICMAS-2000), 2000. [3] N. R. Jennings, P. Faratin, T. J. Norman, P. Obrien, B. Odgers y J. L. Alty. Implementación de un sistema de gestión de procesos comerciales utilizando ADEPT: un estudio de caso del mundo real. En t. Journal of Applied Artificial Intelligence, 2000. [4] R. Mailler y V. Lesser. Un protocolo cooperativo basado en mediación para la asignación dinámica de recursos distribuidos. Transacción IEEE sobre sistemas, hombre y cibernética, Parte C, número especial sobre análisis teórico del juego y simulación estocástica de agentes de negociación, 2004. [5] T. J. Norman, A. Preece, S. Chalmers, N. R. Jennings, M. Luck,V. D. Dang, T. D. Nguyen, V. Deora, J. Shao, A. Gray y N. Fiddian. Formación basada en agentes de organizaciones virtuales. En t. J. Sistemas basados en el conocimiento, 17 (2-4): 103-111, 2004. [6] T. Sandholm y V. Lesser. Problemas en negociación automatizada y comercio electrónico: extender el marco neto del contrato. En Actas de la primera conferencia internacional sobre sistemas de múltiples agentes (ICMAS95), páginas 328-335, 1995. [7] J. Shen, X. Zhang y V. Lesser. Grado de cooperación local y su implicación en la utilidad global. Actas de la Tercera Conferencia Internacional Conjunta sobre Agentes Autónomos y Sistemas Multiagentes (Aamas 2004), julio de 2004. [8] M. Sims, H. Mostafa, B. Horling, H. Zhang, V. Lesser y D. Corkill. La centralización parcial lateral y jerárquica para la coordinación distribuida y la programación de redes de tareas jerárquicas complejas. AAAI 2006 Simposio de primavera sobre gestión de planes y planes distribuidos, 2006. [9] W. Walsh, M. Wellman y F. Ygge. Subastas combinatorias para la formación de la cadena de suministro. En la segunda Conferencia ACM sobre Comercio Electrónico, 2000. [10] X. Zhang, V. Lesser y S. Abdallah. Gestión eficiente de la negociación múltiple basada en un modelo formal. Agentes autónomos y sistemas multiagentes, 10 (2): 165-205, 2005. [11] X. Zhang, V. Lesser y T. Wagner. Negociación integradora entre agentes situados en organizaciones. Transacciones IEEE en Sistema, Hombre y Cibernética: Parte C, Número especial sobre análisis teórico del juego y simulación estocástica de agentes de negociación, 36 (1): 19-30, enero de 2006. [12] Q. Zheng y X. Zhang. Formación automática y análisis de la organización virtual de múltiples agentes. Revista de la Sociedad de Computación Brasileña: Número especial en organizaciones de agentes, 11 (1): 74-89, julio de 2005. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 57