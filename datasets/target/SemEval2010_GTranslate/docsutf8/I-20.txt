Calculación del índice de potencia Banzhaf en juegos de flujo de red Yoram Bachrach Jeffrey S. Rosenschein Escuela de Ingeniería e Informática La Universidad Hebrea de Jerusalén, Israel {Yori, Jeff}@cs.huji.ac.il La agregación de preferencias abstractas se usa en variedad de variedad de la variedad deAplicaciones múltiples y, como resultado, la teoría de votación se ha convertido en un tema importante en la investigación de sistemas múltiples. Sin embargo, los índices de potencia (que reflejan cuánto poder real tiene un votante en un sistema de votación ponderado) han recibido relativamente poca atención, aunque durante mucho tiempo han sido estudiados en ciencias políticas y economía. El índice de potencia Banzhaf es uno de los más populares;También está bien definido para cualquier juego de coalición simple. En este documento, examinamos la complejidad computacional de calcular el índice de potencia Banzhaf dentro de un dominio multiagente particular, un juego de flujo de red. Los agentes controlan los bordes de un gráfico;Una coalición gana si puede enviar un flujo de un tamaño dado desde un vértice de origen a un vértice de destino. La potencia relativa de cada borde/agente refleja su importancia en habilitar dicho flujo, y en las redes del mundo real podrían usarse, por ejemplo, asignar recursos para mantener partes de la red. Mostramos que calcular el índice de potencia Banzhaf de cada agente en este dominio de flujo de red es #P-complete. También mostramos que para algunos dominios de flujo de red restringidos existe un algoritmo polinomial para calcular los índices de potencia Banzhaf de los agentes. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;I.2.11 [Inteligencia artificial]: Sistemas de inteligencia artificiales distribuidos degengentes;J.4 [Aplicaciones informáticas]: Ciencias sociales y de comportamiento. Ciencias generales Algoritmos de términos generales, Teoría, Economía 1. Introducción La teoría de la elección social puede servir como una base apropiada sobre la cual construir aplicaciones multiagentes. Existe una rica literatura sobre el tema de la votación1 de las ciencias políticas, las matemáticas y la economía, con importantes resultados teóricos, y los constructores de agentes automatizados pueden beneficiarse de este trabajo a medida que diseñan sistemas que alcanzan el consenso grupal. De hecho, el interés en la teoría de la economía y la elección social se ha generalizado en toda la informática, porque se reconoce que tiene implicaciones directas en la construcción de sistemas compuestos por múltiples agentes automatizados [16, 4, 22, 17, 14, 15, 15] Lo que distingue el trabajo de informática en estas áreas es su preocupación por los problemas computacionales: ¿cómo se llegan los resultados (por ejemplo, puntos de equilibrio)? ¿Cuál es la complejidad del proceso? ¿Se puede utilizar la complejidad para protegerse contra fenómenos no deseados? ¿La complejidad del cálculo evita la implementación realista de una técnica? Las aplicaciones prácticas de votación entre los agentes automatizados ya están generalizadas. Ghosh et al.[6] construyó un sistema de recomendación de películas;Las preferencias de los usuarios se representaron como agentes, y las películas a sugerir se seleccionaron a través de la votación de agentes. Los candidatos en las elecciones virtuales también han sido creencias, planes conjuntos [5] y horarios [7]. De hecho, para ver la generalidad del escenario de votación (automatizado), considere la búsqueda en la web moderna. Uno de los esquemas de agregación de preferencias más masivos que existen es el algoritmo de PageRank Googles, que puede verse como un voto entre las páginas web indexadas en los candidatos determinados por una cadena de búsqueda de entrada de usuario;Los ganadores están clasificados (Tennenholtz y Altman [21] consideran los cimientos axiomáticos de los sistemas de clasificación como este). En este documento, consideramos un tema que se ha estudiado menos en el contexto de la votación de agentes automatizados, a saber, los índices de energía. Un índice de potencia es una medida del poder que un subgrupo, o de manera equivalente un votante en un entorno de votación ponderado, tiene sobre las decisiones de un grupo más grande. El índice de poder Banzhaf es una de las medidas más populares del poder de voto, y aunque se ha utilizado principalmente para medir el poder en los juegos de votación ponderados, está bien definida para cualquier juego de coalición simple. Observamos algunos aspectos computacionales del índice de potencia Banzhaf en un entorno específico, a saber, un juego de flujo de red. En este juego, una coalición de agentes gana si puede enviar un flujo de tamaño K desde un vértice de origen a un vértice T para el objetivo, con la potencia relativa de cada borde que refleja su importancia para permitir tal flujo. Mostramos que calcular el índice de potencia Banzhaf de cada agente en este dominio de flujo de red general es #P-complete. También mostramos que para algunos dominios de flujo de red restringidos (específicamente, de Con1 usamos el término en su sentido intuitivo aquí, pero en la literatura de elección social, la agregación de preferencias y la votación son básicamente sinónimos. 335 978-81-904262-7-7-5(RPS) C 2007 Juegos de nectividad de Ifaamas en gráficos de capa limitadas), existe un algoritmo polinomial para calcular el índice de potencia Banzhaf de un agente. Hay implicaciones en este escenario para las redes del mundo real;Por ejemplo, el índice de energía podría usarse para asignar recursos de mantenimiento (un borde más poderoso es más crítico), para mantener un flujo de datos dado entre dos puntos. El documento procede de la siguiente manera. En la Sección 2 damos algunos antecedentes sobre los juegos de coalición y el índice de potencia Banzhaf, y en la Sección 3 presentamos nuestro juego de flujo de red específico. En la Sección 4 discutimos el índice de potencia Banzhaf en los juegos de flujo de red, presentando nuestro resultado de complejidad en el caso general. En la Sección 5 consideramos un caso restringido del juego de flujo de red y presentamos resultados. En la Sección 6 discutimos el trabajo relacionado y concluimos en la Sección 7. 2. Antecedentes técnicos Un juego de coalición está compuesto por un conjunto de n agentes, i y una función mapeando cualquier subconjunto (coalición) de los agentes a un valor real V: 2i → R. En un juego de coalición simple, V solo obtiene valores de 0o 1 (V: 2i → {0, 1}). Decimos una coalición c ⊂ i gana si v (c) = 1, y decimos que pierde si v (c) = 0. Denotamos el conjunto de todas las coaliciones ganadoras como w (v) = {c ⊂ 2i | v (c) = 1}. Un agente I es un swinger (o pivote) en una coalición ganadora C si la extracción de los agentes de esa coalición lo convertiría en una coalición perdedora: v (c) = 1, v (c \ {i}) = 0. Un swing es un par <i, s> tal que el agente I es un swinger en Coalition S. Una pregunta que surge en este contexto es la medición de la influencia que un agente determinado tiene en el resultado de un juego simple. Un enfoque para medir el poder de los agentes individuales en juegos de coalición simples es el índice Banzhaf.2.1 El índice Banzhaf Una interpretación común del poder que posee un agente es la de su probabilidad a priori de tener un papel importante en el juego. Diferentes supuestos sobre la formación de coaliciones y diferentes definiciones de tener un papel importante han causado que los investigadores definan diferentes índices de potencia, uno de los más prominentes es el índice Banzhaf [1]. Este índice se ha utilizado ampliamente, aunque principalmente con el fin de medir el poder individual en un sistema de votación ponderado. Sin embargo, también se puede aplicar fácilmente a cualquier juego de coalición simple. El índice Banzhaf depende del número de coaliciones en las que un agente es un swinger, de todas las coaliciones posibles.2 El índice Banzhaf está dado por β (v) = (β1 (v), ..., βn (v))donde βi (v) = 1 2n - 1 s⊂n | i∈S [v (s) - v (s \ {i})]. Diferentes modelos probabilísticos en la forma en que se forma una coalición produce diferentes índices de potencia apropiados [20]. El índice de potencia Banzhaf refleja la suposición de que los agentes son independientes en sus elecciones.3. Juegos de flujo de red 3.1 Motivación Considere una red de comunicación, donde es crucial poder enviar una cierta cantidad de información entre dos sitios. Dados los recursos limitados para mantener enlaces de red, ¿qué bordes deberían obtener esos recursos?2 Banzhaf en realidad consideró el porcentaje de tales coaliciones de todas las coaliciones ganadoras. Esto se llama el índice Banzhaf normalizado. Modelamos este problema considerando un juego de flujo de red. El juego consta de agentes en un gráfico de flujo de red, con una determinada fuente de vértices y vértice de destino t.Cada agente controla uno de los bordes de gráficos, y una coalición de agentes controla todos los bordes que controlan sus miembros. Una coalición de agentes gana el juego si logra enviar un flujo de al menos K de Source S a Target T, y pierde lo contrario. Para garantizar que la red sea capaz de mantener el flujo deseado entre S y T, podemos elegir asignar nuestros recursos de mantenimiento limitados a los bordes de acuerdo con su impacto en permitir este flujo. En otras palabras, los recursos podrían dedicarse a los enlaces cuya falla es más probable que perdamos la capacidad de enviar la cantidad de información requerida entre la fuente y el objetivo. Bajo un modelo probabilístico razonable, el índice Banzhaf nos proporciona una medida del impacto que cada borde tiene al permitir que se envíe esta cantidad de información entre los sitios y, por lo tanto, proporciona una base razonable para la asignación de recursos de mantenimiento escasos.3.2 Definición formal formalmente, un juego de flujo de red se define de la siguiente manera. El juego consta de un gráfico de flujo de red G = <V, E>, con capacidades en los bordes C: E → R, un vértice de origen, un vértice de destino y un conjunto I de agentes, donde el agente I controla el bordeei. Dada una coalición c, que controla los bordes ec = {ei | i ∈ C}, podemos verificar si la coalición permite un flujo de k de s a t.Definimos el simple juego de coalición de flujo de red como el juego donde la coalición gana si permite dicho flujo y pierde lo contrario: v (c) = 1 si EC permite un flujo de k de s a t;0 en lo contrario;Una versión simplificada del juego de flujo de red es el juego de conectividad;En un juego de conectividad, una coalición quiere tener algún camino de origen a objetivo. Más precisamente, un juego de conectividad es un juego de flujo de red donde cada uno de los bordes tiene una capacidad idéntica, c (e) = 1, y el valor del flujo de destino es k = 1. En tal escenario, el objetivo de una coalición es tener al menos un camino de S a T: V (C) = 1 si CE contiene una ruta de S a T;0 en lo contrario;Dado un juego de flujo de red (o un juego de conectividad), podemos calcular los índices de potencia del juego. Cuando se elige una coalición de bordes al azar, y cada coalición es equipable, el índice apropiado es el índice Banzhaf.3 Podemos usar el valor Banzhaf de un agente i ∈ I (o el borde que controla, ei), βei (V (V (V (V (V (V (V) = βi (v), para medir su impacto en permitir un flujo dado entre S y T.4. El índice Banzhaf en los juegos de flujo de red ahora definimos el problema de calcular el índice Banzhaf en el juego de flujo de red. Definición 1. Network-Flow-Banzhaf: se nos da un gráfico de flujo de red G = <V, e> con un vértice de origen y un vértice de destino T, una función de capacidad C: E → R, y un valor de flujo de destino k.Consideramos el juego de flujo de red, como se define anteriormente en la Sección 3. Se nos da un agente I, que controla el borde EI, y se les pide que calculemos el índice Banzhaf para ese agente. En la red 3, cuando cada pedido de bordes es equipable, el índice apropiado es el índice Shapley-Shubik.336 El sexto intl. Conf.En los agentes autónomos y el juego de flujo de sistemas múltiples (AAMAS 07), deje que CEI sea el conjunto de todos los subconjuntos de E que contienen ei: cei = {c ⊂ e | ei ∈ C}. En este juego, el índice Banzhaf de EI es: βi (v) = 1 2 | e | −1 e ⊂cei [v (e) - v (e \ {ei})]. Sea W (CEI) el conjunto de subconjuntos ganadores de bordes en CEI, es decir, los subconjuntos e ∈ Cei donde se puede enviar un flujo de al menos k de S a t usando solo los bordes en e. El índice Banzhaf de EI es la proporción de subconjuntos en W (CEI) donde EI es crucial para mantener el flujo K. Todos los subconjuntos de borde en W (CEI) contienen ei y están ganando, pero solo para algunos de ellos, e ∈ W (CEI), tenemos que v (e \ {ei}) = 0 (es decir, e ya no esganando si eliminamos EI). El índice Banzhaf de EI es la proporción de dichos subconjuntos.4.1 #P-COMPLETIDAD de calcular el índice Banzhaf en el juego de flujo de red ahora mostramos que el caso general de red-flujo de red-banzhaf es #P-completado, mediante una reducción de #matching. Primero, observamos que Network-Flow-Banzhaf está en #P.Existen varios algoritmos polinomiales para calcular el flujo de red máximo, por lo que es fácil verificar si un cierto subconjunto de bordes e ⊂ e contiene EI y permite un flujo de al menos k de s a t.También es fácil verificar si un flujo de al menos K ya no es posible cuando eliminamos EI de E (nuevamente, ejecutando un algoritmo polinomial para calcular el flujo máximo). El índice Banzhaf de EI es exactamente el número de tales subconjuntos e ⊂ E, por lo que la red-flujo de nube está en #P.Para mostrar que Network-Flow-Banzhaf es #P-Complete, reducimos un problema #Caltado4 a un problema de red de flujo de red. Definición 2. #matching: se nos da un gráfico bipartito g = <u, v, e>, tal que | u |= | V |= n, y se les pide que cuenten el número de coincidencias perfectas posibles en G. 4.2 El enfoque de reducción general La reducción se realiza de la siguiente manera. Desde la entrada #matching, g = <u, v, e>, construimos dos entradas para el problema NetworkFlow-Banzhaf. La diferencia entre las respuestas obtenidas de las ejecuciones de red de flujo de red de red es la respuesta al problema de #matching. Ambas ejecuciones del problema NetworkFlow-Banzhaf se construyen con el mismo gráfico G = <V, E>, con el mismo vértice de la fuente y el vértice Target T, y con el mismo borde EF para el cual calcular el índice Banzhaf. Difieren solo en el valor del flujo objetivo. La primera ejecución es con un flujo objetivo de K, y la segunda ejecución es con un flujo objetivo de K +. Una elección de la EC de subconjunto refleja una posible coincidencia en el gráfico original. G es un subgrafio de la construcción G. Identificamos un borde en g, e ∈ E, con el mismo borde en G. Este borde indica una coincidencia particular entre algún vértice u ∈ U y otro vértice v ∈ V. Por lo tanto, si EC ⊂ E es un subconjunto de bordes en G que contiene solo bordes en el subgrafio de G, lo identificamos con un subconjunto de bordes en G, o con algún candidato de una coincidencia. Decimos que la EC ⊂ e coincide con algunos vértices v ∈ V, si EC contiene algún borde que se conecta a V, es decir, para algunos u ∈ U tenemos (u, v) ∈ EC. La CE es una posible coincidencia si no coincide con un vértice v ∈ V con más de un vértice en u, es decir, no hay dos vértices u1 = u2 en u que ambos (u1, v) ∈ EC y (u2, v)∈ EC. Una combinación perfecta coincide con todos los vértices en v. Si la CE no coincide con un vértice en V (el lado derecho de la partición), el flujo máximo posible que EC permite en G es inferior a k.Si coincide con todos los vértices en V, es posible un flujo de k. Si coincide con 4, este es uno de los problemas de combate #P más conocidos.Todos los vértices en V, pero coinciden con algún vértice en V más de una vez (lo que significa que esta no es una verdadera coincidencia), es posible un flujo de K+.se elige para que si un solo vértice v ∈ V no se comparta, el flujo máximo posible sería menor que | V |, incluso si todos los demás vértices coincidan más de una vez. En otras palabras, se elige para que coincida con varios vértices en V más de una vez nunca pueda compensar por no coincidir con algún vértice en V, en términos del flujo máximo posible. Por lo tanto, cuando verificamos el índice Banzhaf de EF cuando el flujo requerido es al menos k, obtenemos el número de subconjuntos que coinciden con todos los vértices en V al menos una vez. Cuando verificamos el índice Banzhaf de EF con un flujo requerido de al menos K+, obtenemos el número de subconjuntos e ⊂ e que coinciden con todos los vértices en V al menos una vez, y coinciden al menos un vértice v ∈ V más de una vez. La diferencia entre los dos es exactamente el número de coincidencias perfectas en G. Por lo tanto, si existiera un algoritmo polinomial para NetworkFlow-Banzhaf, podríamos usarlo para construir un algoritmo polinomial para #matching, por lo que Network-Flow-Banzhaf es #Pcomplete.4.3 Detalles de reducción La reducción toma la entrada #matching, el gráfico bipartito g = <u, v, e>, donde | u |= | V |= k.Luego genera un gráfico de flujo de red G de la siguiente manera. El gráfico G se mantiene como un subgrafio de G, y cada borde en G tiene una capacidad de 1. Se agrega una nueva fuente de vértices S, junto con un nuevo vértice T y un nuevo vértice de destino.Let = 1 k+1 para que · k <1. La fuente S está conectada a cada uno de los vértices en U, la partición izquierda de G, con un borde de capacidad 1 +. Cada uno de los vértices en V está conectado a T con un borde de capacidad 1 +.T está conectado a t con un borde EF de capacidad 1 +. Como se mencionó anteriormente, realizamos dos ejecuciones de red de red de red, ambos verificando el índice Banzhaf del borde EF en la red de flujo g. Denotamos el juego de flujo de red definido en G con el flujo objetivo K como V (G, K). La primera carrera se realiza en el juego con un flujo objetivo de K, V (G, K), devolviendo el índice βEF (V (G, K)). La segunda carrera se realiza en el juego con un flujo objetivo de K+, V (G, K+), devolviendo el índice βEF (V (G, K+)). El número de coincidencias perfectas en G es la diferencia entre las respuestas en las dos corridas, βEF (V (G, K)) - βEF (V (G, K+)). Esto está probado en el Teorema 5. La Figura 1 muestra un ejemplo de construcción de G de G. a la izquierda está el gráfico original G, y a la derecha está el gráfico de flujo de red construido G.4.4 Prueba de la reducción Ahora probamos que la reducción anterior es correcta. En toda esta sección, llevamos la entrada al problema de #matching para ser g = <u, v, e> con | u |= | V |= k, el gráfico de flujo de red construido en la reducción para ser g = <v, e> con capacidades C: E → R como se define en la Sección 4.3, el borde para calcular el índice Banzhaf para ser EF, y los valores de flujo de destinode K y K +. Proposición 1. Deje que EC ⊂ e sea un subconjunto de bordes que carece de uno o más bordes de los siguientes: 1. Los bordes conectados a S;2. Los bordes conectados a t;3. El borde ef = (t, t). Llamamos a tal subconjunto un subconjunto faltante. El flujo máximo entre S y T usando solo los bordes en el subconjunto de EC faltante es menor que K.El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 337 Figura 1: Reducción de #Ching a prueba de red-flujo de red. El gráfico es un gráfico de capa, siendo S el vértice en la primera capa, u los vértices en la segunda capa, v Los vértices en el tercero, t el vértice en el cuarto y t en el quinto. Los bordes en G solo van entre capas consecutivas. El flujo máximo en un gráfico de capa está limitado por la capacidad total de los bordes entre cada dos capas consecutivas. Si falta alguno de los bordes entre S y U, el flujo está limitado por (| V | - 1) (1 +) <k.Si falta alguno de los bordes entre V y T, el flujo también está limitado por (| V | - 1) (1 +) <k.Si falta el borde EF, no hay bordes que van a la última capa, y el flujo máximo es 0. Dado que tales subconjuntos de bordes faltantes no afectan el índice Banzhaf de EF (agregan 0 a la suma), a partir de ahora consideraremos solo subconjuntos no falsos. Como se explica en la Sección 4.2, identificamos los bordes en G que se copiaron de G (los bordes entre U y V en G) con sus contrapartes en G. cada uno de estos borde (U, V) ∈ E representa una coincidencia entre U y VEn G. EC es una coincidencia perfecta si coincide con cada vértice u con un solo vértice V y viceversa. Proposición 2. Deje que EC ⊂ e sea un subconjunto de bordes que no coincide con algún vértice v ∈ V. El flujo máximo entre S y T usando solo los bordes en el subconjunto de EC faltante es menor que K.Llamamos a un submarcado así, y no es una coincidencia perfecta. PRUEBA. Si la CE no coincide con algún vértice v ∈ V, el flujo máximo que puede alcanzar los vértices en la capa V es (1+) (k - 1) <k, por lo que este es también el flujo máximo que puede alcanzar t.Proposición 3. Deje que la EC sea un subconjunto de bordes que es una coincidencia perfecta en G. Entonces el flujo máximo entre S y T usando solo los bordes en la CE es exactamente k.PRUEBA. Es posible un flujo de k. Enviamos un flujo de 1 de s a cada uno de los vértices en u, enviamos un flujo de 1 de cada vértice u ∈ U a su coincidencia v ∈ V, y envía un flujo de 1 de cada v ∈ V a t.T obtiene un flujo total de exactamente k y lo envía a t.No es posible un flujo de más de K ya que hay exactamente K bordes de la capacidad 1 entre la capa U y la capa V, y el flujo máximo está limitado por la capacidad total de los bordes entre estas dos capas consecutivas. Proposición 4. Deje que EC ⊂ E sea un subconjunto de bordes que contiene una coincidencia perfecta M ⊂ E en G y al menos un borde más ex entre algún vértice Ua ∈ U y Va ∈ V. Entonces el flujo máximo entre S y T usando solo los bordes en la CE es al menos K+. Llamamos a tal conjunto un súper coincidente, y no es una coincidencia perfecta. PRUEBA. Es posible un flujo de K, utilizando los bordes de la combinación perfecta como en la Propuesta 3. Enviamos un flujo de 1 de s a cada uno de los vértices en u, enviamos un flujo de 1 de cada vértice u ∈ U a su coincidencia v ∈ V, y envía un flujo de 1 de cada v ∈ V a t.T obtiene un flujo total de exactamente k y lo envía a t.Después de usar los bordes de la coincidencia perfecta, enviamos un flujo de S a UA (esto es posible ya que la capacidad del borde (S, UA) es 1 + y solo hemos usado 1). Luego enviamos un flujo de UA a VA. Esto es posible ya que no hemos usado este borde en todo, es el borde que no es parte de la coincidencia perfecta. Luego enviamos un flujo de VA a t. Nuevamente, esto es posible ya que hemos usado 1 de la capacidad total de 1 + que tiene ese borde. Ahora T obtiene un flujo total de K +, y lo envía todo a T, por lo que hemos logrado un flujo total de K +. Por lo tanto, el flujo máximo posible es al menos K +. Teorema 5. Considere una instancia de #matching g = <u, v, e> reducida a una instancia de flujo de network banzhaf como se explica en la sección 4.3. Sea V (G, K) el juego de flujo de red definido en G con el flujo objetivo K, y V (G, K+) sea el juego definido con un flujo objetivo de K+. Deje que el índice resultante de la primera ejecución sea βEF (v (g, k)), y βEF (v (g, k+)) sea el índice resultante de la segunda ejecución. Entonces, el número de coincidencias perfectas en G es la diferencia entre las respuestas en las dos corridas, βEF (V (G, K)) - βEF (V (G, K+)). PRUEBA. Considere el Juego V (G, K). Según la Propuesta 1, en este juego, el índice Banzhaf de EF no cuenta con los subconjuntos faltantes EC ∈ E, ya que están perdiendo en este juego. Según la Proposición 2, no cuenta los subconjuntos EC ∈ E que son submatchings, ya que también están perdiendo. Según la Proposición 3, agrega 1 al recuento para cada coincidencia perfecta, ya que dichos subconjuntos permiten un flujo de k y están ganando. Según la Proposición 3, agrega 1 al recuento para cada súper coincidencia, ya que dichos subconjuntos permiten un flujo de K (y más que K) y están ganando. Considere el Juego V (G, K+). Nuevamente, según la Propuesta 1, en este juego el índice Banzhaf de EF no cuenta con los subconjuntos faltantes Ec ∈ E, ya que están perdiendo en este juego. Según la Proposición 2, no cuenta los subconjuntos EC ∈ E que son submatchings, ya que también están perdiendo. Según la Proposición 3, agrega 0 al recuento para cada coincidencia perfecta, ya que dichos subconjuntos permiten un flujo de K pero no K +, y así están perdiendo. Según la Proposición 3, agrega 1 al recuento para cada súper coincidencia, ya que dichos subconjuntos permiten un flujo de K + y están ganando. Por lo tanto, la diferencia entre los dos índices, βEF (v (g, k))-βEF (v (g, k+)), es exactamente el número de coincidencias perfectas en G. Hemos reducido un problema de ##Catching a una red de flujo de redproblema. Esto significa que dado un polinomio 338 el sexto intl. Conf.En los agentes autónomos y el algoritmo de sistemas múltiples (AAMAS 07) para calcular el índice BanzHAF de un agente en un juego de flujo de red general, podemos construir un algoritmo para resolver el problema de #matching. Por lo tanto, el problema de calcular el índice Banzhaf de agentes en los juegos de flujo de red general también es #P-COMPLETO.5. Calculando el índice Banzhaf en juegos de conectividad de gráficos de capa limitada aquí presentamos un algoritmo polinomial para calcular el índice Banzhaf de un borde en un juego de conectividad, donde la red es un gráfico de capa limitada. Este resultado positivo indica que para algunos dominios restringidos de los juegos de flujo de red, es posible calcular el índice Banzhaf en un tiempo razonable. Definición 3. Un gráfico de capa es un gráfico g = <v, e>, con vértice de origen y vértice de destino T, donde los vértices del gráfico se dividen en capas n + 1, l0 = {s}, l1, ..., ln= {t}. Los bordes solo funcionan entre capas consecutivas. Definición 4. Un gráfico de capa unida a C es un gráfico de capa donde el número de vértices en cada capa está limitado por algún número constante c.Aunque no hay límite en el número de capas en un gráfico de capas limitadas, la estructura de tales gráficos permite calcular el índice Banzhaf de bordes en juegos de conectividad en tales gráficos. El algoritmo que se proporciona a continuación es de hecho polinomio en el número de vértices dado que la red es un gráfico de capa de C. Sin embargo, hay un factor constante en el tiempo de ejecución, que es exponencial en c.Por lo tanto, este método solo es manejable para gráficos donde el C Bound C es pequeño. Los gráficos de capa limitados pueden ocurrir en las redes cuando los nodos se encuentran en varios segmentos ordenados, donde los nodos solo se pueden conectar entre segmentos consecutivos. Sea V un vértice en la capa LI. Decimos que un borde E ocurre antes de V si conecta dos vértices en VS Capa o una capa anterior: E = (U, W) conecta el vértice u ∈ Lj a Vértice w ∈ Lj + 1 y J + 1 ≤ i. Deje que Predv ⊂ e sea el subconjunto de bordes que ocurren antes de v. Considere un subconjunto de estos bordes, E ⊂ Predv. E puede contener una ruta de S a V, o no. Definimos PV como el número de subconjuntos E ⊂ PredV que contienen una ruta de S a V Deje que Predvi ⊂ e sea el subconjunto de bordes que ocurren antes de VI (todos los vértices en VI están en la misma capa, por lo que cualquier borde que ocurra antes de que se produzca vi vi antes de cualquier otro vértice w ∈ Vi). Considere un subconjunto de estos bordes, E ⊂ Predv. Sea vi (e) el subconjunto de vértices en VI que se pueden accesibles de S usando solo los bordes en E: Vi (E) = {V ∈ Vi | E contiene una ruta de S a V}. Decimos que E ∈ PredV conecta exactamente los vértices en Si ⊂ VI si todos los vértices en Si son accesibles desde S usando los bordes en E, pero no se pueden accesibles otros vértices en VI de S, por lo que VI (E) = Si. Deje que V ⊂ VI sea un subconjunto de los vértices en la capa LI. Definimos PV como el número de subconjuntos E ⊂ PredV que conectan exactamente los vértices en V: PV = | {E ⊂ Predv | Vi (E) = V} |. Lema 1. Sea S1, S2 ⊂ VI donde S1 = S2 sean dos subconjuntos diferentes de vértices en la misma capa. Sea E, E ⊂ Predvi dos conjuntos de subconjuntos de borde, de modo que E conecta exactamente los vértices en S1 y E conecta exactamente los vértices en S2: VI (E) = S1 y VI (E) = S2. Entonces E y E no contienen los mismos bordes: E = E. PRUEBA. Si E = E, ambos conjuntos de bordes permiten las mismas rutas de S, por lo que vi (e) = vi (e). Deje que Si ⊂ VI sea un subconjunto de vértices en la capa LI. Deje que Ei ⊂ e sea el conjunto de bordes entre los vértices en la capa LI y la capa LI+1. Sea e ⊂ ei un subconjunto de estos bordes. Denotamos por Dests (Si, E) el conjunto de vértices en la capa LI+1 que están conectados a algún vértice en Si por un borde en E: Dests (Si, E) = {V ∈ Vi+1 | Existe algunos w∈ Si y algunos e ∈ E que e = (W, V)}. Deje que Si ⊂ VI sea un subconjunto de vértices en Li y E ⊂ ei, un subconjunto de los bordes entre la capa LI y la capa LI+1. PSI cuenta el número de subconjuntos de borde en PredVI que conectan exactamente los vértices en SI. Considere tal subconjunto e contado en PSI. E ∪ E es un subconjunto de bordes en PredVI+1 que se conecta exactamente a Dest (SI, E). Según Lemma 1, si iteramos sobre los diferentes SIS en la capa LI, el PSI s cuenta diferentes subconjuntos de bordes y, por lo tanto, cada expansión que usa los bordes en E también es diferente. El algoritmo 1 calcula Pt. Se itera a través de las capas y actualiza los datos para la siguiente capa dados los datos para la capa actual. Para cada capa LI y cada subconjunto de bordes en esa capa si ⊂ VI, calcula PSI. Lo hace usando los valores calculados en la capa anterior. El algoritmo considera cada subconjunto de posibles vértices en la capa actual, y cada subconjunto posible de bordes en expansión a la siguiente capa, y actualiza el valor del subconjunto apropiado en la siguiente capa. Algoritmo 1 1: Procedimiento que conecta-Exactamente subconjuntos (G, V) 2: P {S} ← 1 Inicialización 3: Para todos los demás subconjuntos de vértices s Do Initialization 4: PS ← 0 5: Fin para 6: Para I ← 0a n - 1 iterer a través de las capas 7: para todos los subconjuntos de vértices si en li do 8: para todos los subconjuntos de borde e entre li, li+1 do 9: d ← desestimados (Si, E) subconjunto en li+1 10: PD← PD + PSI 11: Fin para 12: Fin para 13: Fin para 14: Procedimiento final Un gráfico de capa unida a C contiene en la mayoría de los vértices C en cada capa, por lo que para cada capa hay en la mayoría de los 2 ° C diferentes subconjuntos de vértices en los quecapa. También hay como máximo los bordes C2 entre 2 capas consecutivas y, por lo tanto, como máximo 2 (C2) subconjuntos de borde entre dos capas. Si el gráfico contiene K capas, el tiempo de ejecución del algoritmo está limitado por K · 2C · 2 (C2). Como C es una constante, este es un algoritmo polinomial. Considere el juego de conectividad en un gráfico de capa G, con una sola fuente de vértices S y vértice de destino T.El índice Banzhaf del borde E es el número de subconjuntos de bordes que permiten una ruta entre S y T, pero no permiten tal ruta cuando E se elimina (dividido por una constante). Podemos calcular p {t} = p {t} (g) para g usando el algoritmo para contar el número de subconjuntos de bordes que permiten una ruta de s a t.Luego podemos eliminar E de G para obtener el gráfico g = <v, e \ {e}>, y calcular p {t} = p {t} (g). La diferencia p {t} (g) - p {t} (g) es el número de subconjuntos de bordes que contienen una ruta de s a t pero ya no contienen dicha ruta cuando se elimina E. El índice Banzhaf para E es p {t} (g) −p {t} (g) 2 | e | −1. Por lo tanto, este algoritmo nos permite calcular el índice Banzhaf en un borde en los juegos de conectividad en gráficos de capa limitadas. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 339 6. El trabajo relacionado que mide el poder de los jugadores individuales en los juegos de coalición se ha estudiado durante muchos años. Los índices más populares sugeridos para dicha medición son el índice Banzhaf [1] y el índice Shapley-Shubik [19]. En su artículo seminal, Shapley [18] consideró juegos de coalición y la asignación justa de la utilidad obtenida por la Gran Coalición (la coalición de todos los agentes) a sus miembros. El índice Shapley-Shubik [19] es la aplicación directa del valor de Shapley a juegos de coalición simples. El índice Banzhaf surgió directamente del estudio de la votación en cuerpos de toma de decisiones. El índice Banzhaf normalizado mide la proporción de coaliciones en las que un jugador es un swinger, de todas las coaliciones ganadoras. Este índice es similar al índice Banzhaf discutido en la Sección 1, y se define como: βi = βi (v) k∈N βK. El índice Banzhaf se analizó matemáticamente en [3], donde se demostró que esta normalización carece de ciertas propiedades deseables, y se introduce el índice Banzhaf más natural. Tanto los índices Shapley-Shubik como los Banzhaf se han estudiado ampliamente, y Straffin [20] ha demostrado que cada índice refleja condiciones específicas en un organismo de votación.[11] considera estos dos índices junto con varios otros y describe los axiomas que caracterizan los diferentes índices. La implementación ingenua de un algoritmo para calcular el índice Banzhaf de un agente que enumera todas las coaliciones que contienen i. Hay 2N - 1 de esas coaliciones, por lo que el rendimiento es exponencial en el número de agentes.[12] contiene una encuesta de algoritmos para calcular los índices de potencia de los juegos mayoritarios ponderados. Deng y Papadimitriou [2] muestran que calcular el valor de Shapley en los juegos mayoritarios ponderados es #P-Completo, utilizando una reducción de la mochila. Dado que el valor Shapley de cualquier juego simple tiene el mismo valor que su índice Shapley-Shubik, esto muestra que calcular el índice Shapley-Shubik en los juegos mayoritarios ponderados es #Pcomplete. Matsui y Matsui [13] han demostrado que calcular los índices Banzhaf y Shapley-Shubik en juegos de votación ponderados es NP Completo. El problema de los índices de potencia informáticos en juegos simples depende de la representación elegida del juego. Dado que el número de posibles coaliciones es exponencial en el número de agentes, calcular los índices de potencia en el polinomio de tiempo en el número de agentes solo se puede lograr en dominios específicos. En este documento, hemos considerado el dominio del flujo de red, donde una coalición de agentes debe lograr un flujo más allá de un cierto valor. El juego de flujo de red que hemos definido es un juego simple.[10, 9] han considerado un dominio de flujo de red similar, donde cada agente controla un borde de un gráfico de flujo de red. Sin embargo, introdujeron un juego no simple, donde el valor que logra una coalición de agentes es el flujo total máximo. Han demostrado que ciertas familias de juegos de flujo de red y juegos similares tienen núcleos no vacíos.7. Conclusiones y direcciones futuras que hemos considerado los juegos de flujo de red, donde una coalición de agentes gana si logra enviar un flujo de más de algún valor K entre dos vértices. Hemos evaluado el poder relativo de cada agente en este escenario utilizando el índice Banzhaf. Este índice de energía puede usarse para decidir cómo asignar recursos de mantenimiento en redes del mundo real, a fin de maximizar nuestra capacidad de mantener un cierto flujo de información entre dos sitios. Aunque el índice Banzhaf teóricamente nos permite medir el poder de los agentes en el juego de flujo de red, hemos demostrado que el problema de calcular el índice Banzhaf en este dominio en #P-Complete. A pesar de este resultado desalentador para el dominio general de flujo de red, también hemos proporcionado un resultado más alentador para un dominio restringido. En el caso de los juegos de conectividad (donde solo se requiere que una coalición contenga una ruta desde el origen hasta el destino) jugado en gráficos de capa limitadas, es posible calcular el índice Banzhaf de un agente en tiempo polinomial. Sigue siendo un problema abierto para encontrar formas de aproximar el índice Banzhaf en el dominio de flujo de red general. También podría ser posible encontrar otros dominios restringidos útiles donde sea posible calcular exactamente el índice Banzhaf. Solo hemos considerado la complejidad de calcular el índice Banzhaf;Sigue siendo un problema abierto para encontrar la complejidad de calcular el Shapley-Shubik u otros índices en el dominio de flujo de red. Finalmente, creemos que hay muchos dominios interesantes adicionales además de los juegos de votación ponderados y los juegos de flujo de red, y valdría la pena investigar la complejidad de calcular el índice Banzhaf u otros índices de potencia en dichos dominios.8. Reconocimiento Este trabajo fue parcialmente respaldado por la subvención #898/05 de la Israel Science Foundation.9. Referencias [1] J. F. Banzhaf. La votación ponderada no funciona: un análisis matemático. Rutgers Law Review, 19: 317-343, 1965. [2] X. Deng y C. H. Papadimitriou. Sobre la complejidad de los conceptos de solución cooperativa. Matemáticas. Operación Res., 19 (2): 257-266, 1994. [3] P. Dubey y L. Shapley. Propiedades matemáticas del índice de potencia Banzhaf. Matemáticas de la investigación de operaciones, 4 (2): 99-131, 1979. [4] E. Ephrati y J. S. Rosenschein. El impuesto de Clarke como mecanismo de consenso entre los agentes automatizados. En Actas de la Novena Conferencia Nacional sobre Inteligencia Artificial, páginas 173-178, Anaheim, California, julio de 1991. [5] E. Ephrati y J. S. Rosenschein. Una técnica heurística para la planificación multiagente. Annals of Mathematics and Artificial Intelligence, 20: 13-67, primavera de 1997. [6] S. Ghosh, M. Mundhe, K. Hernández y S. Sen. Votando por películas: la anatomía de un sistema de recomendación. En Actas de la tercera conferencia anual sobre agentes autónomos, páginas 434-435, 1999. [7] T. Haynes, S. Sen, N. Arora y R. Nadella. Un sistema de programación de reuniones automatizado que utiliza preferencias de usuario. En Actas de la Primera Conferencia Internacional sobre Agentes Autónomos, páginas 308-315, 1997. [8] E. Hemaspaandra, L. Hemaspaandra y J. Rothe. Cualquiera menos él: la complejidad de impedir una alternativa. En Actas de la 20ª Conferencia Nacional sobre Inteligencia Artificial, Pittsburgh, julio de 2005. [9] E. Kalai y E. Zemel. En juegos y juegos de flujo totalmente equilibrados. Papeles de discusión 413, Universidad Northwestern, Centro de Estudios Matemáticos en Economía y Ciencias de la Gestión, enero de 1980. Disponible en http://ideas.repec.org/p/nwu/cmsems/413.html.340 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) [10] E. Kalai y E. Zemel. Problemas de red generalizados que producen juegos totalmente equilibrados. Operations Research, 30: 998-1008, septiembre de 1982. [11] A. Laruelle. Sobre la elección de un índice de potencia. Documentos 99-10, Valencia - Instituto de Investigaciones Economonas, 1999. [12] Y. Matsui y T. Matsui. Una encuesta de algoritmos para calcular los índices de potencia de los juegos mayoritarios ponderados. Revista de la Sociedad de Investigación de Operaciones de Japón, 43, 2000. [13] Y. Matsui y T. Matsui. NP-Completimiento para calcular los índices de potencia de los juegos mayoritarios ponderados. Teórico de la informática, 263 (1-2): 305-310, 2001. [14] N. Nisan y A. Ronen. Diseño de mecanismo algorítmico. Juegos y comportamiento económico, 35: 166-196, 2001. [15] A. D. Procaccia y J. S. Rosenschein. Distribuciones de juntas y la complejidad de casos promedio de manipular las elecciones. En la Quinta Conferencia Internacional Conjunta sobre Agentes Autónomos y Sistemas Multiagentes, páginas 497-504, Hakodate, Japón, mayo de 2006. [16] J. S. Rosenschein y M. R. Genesereth. Acuerdos entre agentes racionales. En Actas de la Novena Conferencia Internacional Conjunta sobre Inteligencia Artificial, páginas 91-99, Los Ángeles, California, agosto de 1985. [17] T. Sandholm y V. Lesser. Problemas en negociación automatizada y comercio electrónico: extender el marco neto del contrato. En Actas de la Primera Conferencia Internacional sobre Sistemas Multiagentes (ICMAS-95), páginas 328-335, San Francisco, 1995. [18] L. S. Shapley. Un valor para los juegos N-persona. Contribuciones a la teoría de los juegos, páginas 31-40, 1953. [19] L. S. Shapley y M. Shubik. Un método para evaluar la distribución del poder en un sistema de comité. American Political Science Review, 48: 787-792, 1954. [20] P. Straffin. Homogeneidad, independencia y índices de potencia. Public Choice, 30: 107-118, 1977. [21] M. Tennenholtz y A. Altman. En el axiomático el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 341