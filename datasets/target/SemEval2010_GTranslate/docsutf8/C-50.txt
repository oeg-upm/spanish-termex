CENWITS: un sistema de búsqueda y rescate acoplado libremente basado en un sensor utilizando testigos jyh-how Huang Departamento de Ciencias de la Computación Universidad de Colorado, Campus Box 0430 Boulder, CO 80309-0430 huangjh@cs.colorado.edu saqib Amjad Departamento de Ciencias de la Computación de la Universidad de Informática deColorado, Campus Box 0430 Boulder, CO 80309-0430 saqib.amjad@colorado.edu Shivakant Mishra Departamento de Ciencias de la Computación Universidad de Colorado, Campus Box 0430 Boulder, CO 80309-0430 Mishras@cs.colorado.Edu Resumen Este documento describe el diseño del diseño, Implementación y evaluación de un sistema de búsqueda y rescate llamado CENWITS. CENWITS utiliza varios sensores pequeños, comúnmente disponibles basados en RF, y una pequeña cantidad de dispositivos de almacenamiento y procesamiento. Está diseñado para la búsqueda y el rescate de las personas en situaciones de emergencia en áreas silvestres. Una característica clave de CENWITS es que no requiere una red de sensores conectada continuamente para su funcionamiento. Está diseñado para una red conectada intermitentemente que proporciona solo conectividad ocasional. Hace un uso juicioso de la capacidad de almacenamiento combinada de los sensores para filtrar, organizar y almacenar información importante, la potencia combinada de la batería de los sensores para garantizar que el sistema permanezca operativo durante períodos de tiempo más largos y la conectividad de la red intermitente para propagar información a un centro de procesamiento. Se ha implementado un prototipo de CENWITS utilizando Berkeley Mica2 Motes. El documento describe esta implementación e informes sobre el rendimiento medido a partir de él. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: Sistemas distribuidos Algoritmos de términos generales, diseño, experimentación 1. Introducción La búsqueda y el rescate de las personas en situación de emergencia de manera oportuna es un servicio extremadamente importante. Ha sido difícil proporcionar dicho servicio debido a la falta de información oportuna necesaria para determinar la ubicación actual de una persona que puede estar en una situación de emergencia. Con la aparición de computación generalizada, se han desarrollado varios sistemas [12, 19, 1, 5, 6, 4, 11] en los últimos años que utilizan pequeños dispositivos como teléfonos celulares, sensores, etc. Todos estos sistemas requieren una red conectada a través de satélites, estaciones base GSM o dispositivos móviles. Este requisito limita severamente su aplicabilidad, particularmente en áreas de desierto remotas donde mantener una red conectada es muy difícil. Por ejemplo, un transmisor GSM debe estar en el rango de una estación base para transmitir. Como resultado, no puede operar en la mayoría de las áreas silvestres. Si bien un transmisor satelital es la única solución viable en las áreas del desierto, es típicamente costosa y engorrosa. Además, se requiere una línea de visión para transmitir al satélite, y eso hace que no sea conectado en cañones estrechos, grandes ciudades con rascacielos, bosques tropicales o incluso cuando hay un techo o alguna otra obstrucción por encima del transmisor, p.en un auto. Un transmisor de RF tiene un rango de transmisión relativamente más pequeño. Por lo tanto, si bien un sensor in situ es barato como una sola unidad, es costoso construir una red grande que pueda proporcionar conectividad en un gran área silvestre. En un entorno móvil donde los sensores son transportados por personas en movimiento, el enrutamiento de eficiencia eléctrica es difícil de implementar y mantener en un gran área silvestre. De hecho, construir una red de sensores ADHOC que use solo los sensores usados por los excursionistas es casi imposible debido a un número relativamente pequeño de sensores extendidos sobre un área desierto grande. En este artículo, describimos el diseño, implementación y evaluación de un sistema de búsqueda y rescate llamado CENWITS (sistema de seguimiento basado en sensores sin conexión utilizando testigos). CENWITS se compone de sensores móviles, in situ que usan sujetos (personas, animales salvajes o objetos inanimados), puntos de acceso (AP) que recopilan información de estos sensores y receptores GPS y puntos de ubicación (LP) queProporcione información de ubicación a los sensores. Un sujeto utiliza receptores GPS (cuando puede conectarse a un satélite) y LPS para determinar su ubicación actual. La idea clave de Cenwits es que utiliza un concepto de testigos para transmitir un movimiento de temas y información de ubicación al mundo exterior. Esto evita la necesidad de mantener una red conectada para transmitir información de ubicación al mundo exterior. En particular, no hay necesidad de transmisores costosos de GSM o satélite, o mantener una red ADHOC de sensores in situ en CENWITS.180 CENWITS emplea varios mecanismos importantes para abordar el problema clave de las restricciones de recursos (baja resistencia a la señal, baja potencia y memoria limitada) en los sensores. En particular, hace un uso juicioso de la capacidad de almacenamiento combinada de los sensores para filtrar, organizar y almacenar información importante, potencia combinada de la batería de los sensores para garantizar que el sistema permanezca operativo durante períodos de tiempo más largos y conectividad de red intermitente para propagar información a uncentro de procesamiento. El problema de las fuerzas de señal bajas (comunicación de RF de corto alcance) se aborda evitando la necesidad de mantener una red conectada. En cambio, CenWits propaga la información de ubicación de los sensores utilizando el concepto de testigos a través de una red conectada intermitentemente. Como resultado, este sistema se puede implementar en áreas de desierto remotas, así como en grandes áreas urbanas con rascacielos y otras estructuras altas. Además, esto hace que Cenwits sea rentable. Un sujeto solo necesita usar sensores livianos y de bajo costo que tengan receptores GPS pero que no hay transmisores caros de GSM o satélite. Además, dado que no hay necesidad de una red de sensores conectados, no hay necesidad de implementar sensores en cantidades muy grandes. El problema de la duración limitada de la batería y la memoria limitada de un sensor se aborda incorporando los conceptos de grupos y particiones. Los grupos y las particiones permiten que los sensores permanezcan en el sueño o reciban modos la mayor parte del tiempo. Utilizando grupos y particiones, la información de ubicación recopilada por un sensor se puede distribuir entre varios sensores, reduciendo así la cantidad de memoria necesaria en un sensor para almacenar esa información. De hecho, CENWITS proporciona una compensación adaptativa entre la memoria y el consumo de energía de los sensores. Cada sensor puede ajustar dinámicamente su potencia y consumo de memoria en función de su potencia restante o memoria disponible. Se ha observado ampliamente que la resistencia de las redes de sensores proviene del hecho de que varios nodos de sensores se pueden distribuir en un área relativamente grande para construir una red multihop. Este documento demuestra que se pueden construir importantes aplicaciones a gran escala utilizando sensores integrando juiciosamente las capacidades de almacenamiento, comunicación y cálculo de los sensores. El documento describe técnicas importantes para combinar la memoria, la transmisión y la potencia de la batería de muchos sensores para abordar las limitaciones de recursos en el contexto de una aplicación de búsqueda y rescate. Sin embargo, estas técnicas son bastante generales. Discutimos varias otras aplicaciones basadas en sensores que pueden emplear estas técnicas. Si bien CENWITS aborda el problema general de seguimiento de ubicaciones e informes en una red de área amplia, hay dos diferencias importantes con respecto al trabajo anterior realizado en esta área. Primero, a diferencia de las soluciones de seguimiento de ubicaciones anteriores, Cenwits no requiere una red conectada. En segundo lugar, a diferencia de las soluciones de seguimiento de ubicaciones anteriores, CenWits no apunta a una precisión muy alta de localización. En cambio, el objetivo principal es proporcionar un área aproximada y pequeña donde se puedan concentrarse los esfuerzos de búsqueda y rescate. El resto de este documento está organizado de la siguiente manera. En la Sección 2, generalizamos algunos de los proyectos y tecnologías recientes relacionadas con el seguimiento de movimiento y ubicación, y los sistemas de búsqueda y rescate. En la Sección 3, describimos la arquitectura general de Cenwits y proporcionamos una descripción de alto nivel de su funcionalidad. En la siguiente sección, Sección 4, discutimos la gestión de energía y memoria en Cenwits. Para simplificar nuestra presentación, nos centraremos en una aplicación específica del seguimiento de los excursionistas perdidos/lesionados en todas estas secciones. En la Sección 6, describimos una implementación prototipo de CENWITS y el rendimiento actual medido a partir de esta implementación. Discutimos cómo las ideas de CENWITS se pueden usar para construir varias otras aplicaciones en la Sección 7. Finalmente, en la Sección 8, discutimos algunos temas relacionados y concluimos el documento.2. Trabajo relacionado Se proporciona una encuesta de sistemas de ubicación para la informática ubicua en [11]. En [17] se propone un sistema de seguimiento de ubicación para las redes de sensores ADHOC que utiliza sensores de anclaje como referencia para obtener información de ubicación y extenderlo al nodo exterior [17]. La mayoría de los sistemas de seguimiento de ubicación en las redes de sensores ADHOC son para beneficiar el enrutamiento geográfico. No encajan bien para nuestros propósitos. El conocido sistema de insignias activas [19] permite a un usuario llevar una insignia. Un sensor infrarrojo en la habitación puede detectar la presencia de una insignia y determinar la ubicación y la identificación de la persona. Este es un sistema útil para el entorno interior, donde el GPS no funciona. La ubicación con dispositivos 802.11 es probablemente la solución más barata para el seguimiento de la posición interior [8]. Debido a la popularidad y al bajo costo de los dispositivos 802.11, se han desarrollado varias soluciones comerciales basadas en esta tecnología [1]. Un sistema que combina dos tecnologías maduras y es viable en el área suburbana donde un usuario puede ver el cielo transparente y tiene recepción celular GSM al mismo tiempo que está disponible actualmente [5]. Este sistema recibe una señal GPS de un satélite y se ubica, extrae la ubicación en un mapa y envía información de ubicación a través de la red GSM a las demás que están interesadas en la ubicación de los usuarios. Un sistema muy simple para monitorear a los niños consiste en un transmisor de RF y un receptor. El sistema alarma el titular del receptor cuando el transmisor está a punto de quedarse sin rango [6]. Las balizas de localización personal (PLB) se han utilizado para el rescate de avalancha durante años. Un esquiador lleva un transmisor de RF que emite balizas periódicamente, para que un equipo de rescate pueda encontrar su ubicación basada en la fuerza de la señal de RF. La versión de lujo de PLB combina un receptor GPS y un transmisor satelital CospasSarsat que puede transmitir la ubicación de los usuarios en latitud y longitud al equipo de rescate cada vez que ocurre un accidente [4]. Sin embargo, el dispositivo se enciende todo el tiempo, lo que resulta en un drenaje rápido de la batería, o debe activarse después del accidente para que funcione. Otra tecnología relacionada en uso generalizado hoy en día es el sistema OnStar [3], típicamente utilizado en varios automóviles de lujo. En este sistema, una unidad GPS proporciona información de posición, y un poderoso transmisor transmite esa información a través del satélite a un centro de servicio al cliente. Diseñado para emergencias, el usuario puede activar el sistema, ya sea con la presentación de un botón o por un accidente catastrófico. Una vez que se ha activado el sistema, un representante humano intenta obtener comunicación con el usuario a través de un teléfono celular construido como un dispositivo INCAR. Si no se puede hacer contacto, los servicios de emergencia se envían a la ubicación proporcionada por el GPS. Al igual que las PLB, este sistema tiene varias limitaciones. Primero, es pesado y costoso. Requiere un transmisor satelital y una red conectada. Si no se puede mantener la conectividad con la red GPS o un satélite de comunicación, el sistema falla. Desafortunadamente, estos son obstáculos comunes encontrados en cañones profundos, calles estrechas en grandes ciudades, estacionamientos y varios otros lugares.181 El sistema de vida utiliza la placa receptor GPS combinada con un transmisor GSM/GPRS y un transmisor de RF en un nodo del sensor inalámbrico llamado Unidad de Comunicación Inteligente (UCI). Una UCI primero intenta transmitir su ubicación a un centro de control a través de la red GSM/GPRS. Si eso falla, se conecta con otras ICUS (Network ADHOC) para reenviar su información de ubicación hasta que la información llegue a una UCI que tiene recepción GSM/GPRS. Esta UCI luego transmite la información de ubicación de la UCI original a través de la red GSM/GPRS. Zebranet es un sistema diseñado para estudiar los patrones móviles de las cebras [13]. Utiliza dos protocolos: protocolo basado en la historia y protocolo de inundación. El protocolo basado en la historia se usa cuando las cebras pasajan y no se mueven demasiado. Si bien esto podría ser útil para rastrear cebras, no es adecuado para rastrear a los excursionistas porque es más probable que dos excursionistas se encuentren solo una vez en un sendero. En el protocolo de inundación, un nodo arroja sus datos a un vecino cada vez que encuentra uno y no elimina su propia copia hasta que encuentre una estación base. Sin considerar los bucles de enrutamiento, el filtrado y la agrupación de paquetes, el tamaño de los datos en un nodo crecerá exponencialmente y drenará la potencia y la memoria de un nodo sensor en poco tiempo. En su lugar, Cenwits utiliza un protocolo de sacudida a mano de cuatro fases para garantizar que un nodo transmita solo tanta información como el otro nodo esté dispuesto a recibir. Si bien Zebranet está diseñado para un gran grupo de sensores que se mueven juntos en la misma dirección con la misma velocidad, Cenwits está diseñado para usarse en el escenario donde los sensores se mueven en diferentes direcciones a diferentes velocidades. Retraso La arquitectura de red tolerante aborda algunos problemas importantes en las redes desafiadas (limitadas por recursos) [9]. Si bien este trabajo se ocupa principalmente de la interoperabilidad de las redes desafiadas, algunos problemas relacionados con las redes conectadas ocasionalmente son similares a las que hemos abordado en CENWITS. Entre todos estos sistemas, Luxury PLB y Lifetch están diseñados para el seguimiento de la ubicación en áreas del desierto. Sin embargo, ambos sistemas requieren una red conectada. Luxury PLB requiere que el usuario transmita una señal a un satélite, mientras que Lifetch requiere conexión a la red GSM/GPRS. PLB de lujo transmite información de ubicación, solo cuando ocurre un accidente. Sin embargo, si el usuario está enterrado en la nieve o cae en un cañón profundo, casi no hay posibilidad de que la señal pase y se transmita al equipo de rescate. Esto se debe a que la transmisión satelital necesita línea de visión. Además, dado que no hay un historial conocido de la ubicación de los usuarios, no es posible que el equipo de rescate infiera la ubicación actual del usuario. Otra desventaja de Luxury PLB es que un transmisor satelital es muy costoso, y cuesta en el rango de $ 750. Lifetch intenta transmitir la información de ubicación por GSM/GPRS y ADHOC Sensor Network que utiliza AODV como protocolo de enrutamiento. Sin embargo, tener una recepción celular en áreas remotas en áreas silvestres, p. Los parques nacionales estadounidenses son poco probables. Además, es extremadamente poco probable que las UCI que usen los excursionistas puedan formar una red ADHOC en una gran área silvestre. Esto se debe a que los excursionistas son móviles y es muy poco probable que se coloquen varias UCI lo suficientemente densas como para reenviar paquetes incluso en una ruta de caminata muy popular. CENWITS está diseñado para abordar las limitaciones de sistemas como Luxury PLB y Lifetch. Está diseñado para proporcionar a los excursionistas, esquiadores y escaladores que tienen sus actividades principalmente en áreas silvestres una oportunidad mucho más alta de transmitir su información de ubicación a un centro de control. No depende de conectividad constante con ningún medio de comunicación. Más bien, comunica información a lo largo de un usuario a otro, y finalmente llega a un centro de control. A diferencia de varios de los sistemas discutidos hasta ahora, no requiere que una unidad de usuarios esté constantemente activada. De hecho, puede descubrir una ubicación de las víctimas, incluso si el sensor de víctimas estaba fuera en el momento del accidente y ha permanecido desde entonces. Cenwits resuelve uno de los mayores problemas que afectan a los sistemas modernos de búsqueda y rescate: tiene una capacidad de almacenamiento inherente en el sitio. Esto significa que alguien dentro de la red tendrá acceso a la última información de ubicación conocida de una víctima, y tal vez también su información sobre el rodamiento y la velocidad. Figura 1: el excursionista A y el excursionista B no están en el rango del otro 3. Cenwits describimos Cenwits en el contexto de la ubicación de excursionistas perdidos/lesionados en áreas silvestres. Cada excursionista usa un sensor (Mica2 Motes en nuestro prototipo) equipado con un receptor GPS y un transmisor de RF. A cada sensor se le asigna una ID única y mantiene su ubicación actual en función de la señal recibida por su receptor GPS. También emite balizas periódicamente. Cuando dos sensores están en el rango entre sí, registran la presencia entre sí (información de testigos), y también intercambian la información de los testigos que registraron anteriormente. La idea clave aquí es que si dos sensores vienen en el rango uno del otro en cualquier momento, se convierten en testigos de los demás. Más tarde, si se pierde el excursionista que usa uno de estos sensores, el otro sensor puede transmitir la última ubicación conocida (presenciada) del excursionista perdido. Además, al intercambiar la información del testigo que cada sensor registró anteriormente, la información de los testigos se propaga más allá de un contacto directo entre dos sensores. Para transmitir información de testigos a un centro de procesamiento o a un equipo de rescate, se establecen puntos de acceso en lugares bien conocidos por los que se espera que pasen los excursionistas, p.En los caminos de senderos, los extremos del sendero, la intersección de diferentes senderos, puntos de vista panorámicos, áreas de descanso, etc. Cada vez que un nodo del sensor está cerca de un punto de acceso, toda la información de los testigos almacenada en ese sensor se descarta automáticamente al punto de acceso. Los puntos de acceso están conectados a un centro de procesamiento a través de satélite o alguna otra red1. La información del testigo se descarga al centro de procesamiento desde varios puntos de acceso a intervalos regulares. En el caso de que se pierda la conexión a un punto de acceso, la información de eso 1 Una conexión solo se necesita entre los puntos de acceso y un centro de procesamiento. No hay necesidad de ninguna conexión entre diferentes puntos de acceso.182 El punto de acceso se puede descargar manualmente, p.por uavs. Para estimar la velocidad, la ubicación y la dirección de un excursionista en cualquier momento, se procesa toda la información de los testigos de ese excursionista que se ha recopilado desde varios puntos de acceso. Figura 2: Hiker A y Hiker B están en el rango del otro. A registra la presencia de B y B registra la presencia de A. A y B se convierten en testigos de los demás. Figura 3: El excursionista A está en el rango de un punto de acceso. Sube la información de su testigo grabado y borra su memoria. Un ejemplo de cómo opera Cenwits se ilustra en las Figuras 1, 2 y 3. Primero, los excursionistas A y B están en dos senderos cercanos, pero fuera del alcance del otro (Figura 1). Este es un escenario muy común durante una caminata. Por ejemplo, en una popular caminata de cuatro horas, un excursionista podría encontrarse con hasta otros 20 excursionistas. Esto representa un encuentro cada 12 minutos en promedio. Un excursionista lento puede ir 1 milla (5,280 pies) por hora. Así, en 12 minutos, un excursionista lento puede llegar hasta 1056 pies. Esto implica que si tuviéramos que colocar 20 excursionistas en una caminata de 4 horas y unidireccional de manera uniforme, el rango de cada nodo del sensor debe tener al menos 1056 pies para que se comuniquen entre sí continuamente. La intensidad de la señal comienza a caer rápidamente para que dos nodos de Mica2 se comuniquen entre sí cuando están a 180 pies de distancia, y se pierden por completo cuando están a 230 pies de distancia entre sí [7]. Entonces, para que los sensores formen una red de sensores en una ruta de senderismo de 4 horas, debería haber al menos 120 excursionistas dispersos uniformemente. Claramente, esto es extremadamente improbable. De hecho, en una ruta de senderismo menos popular de 4 horas, uno solo podría encontrarse con otros cinco excursionistas. Cenwits aprovecha el hecho de que los sensores pueden comunicarse entre sí y registrar su presencia. Dada una velocidad de caminar de una milla por hora (88 pies por minuto) y un rango de mica2 de aproximadamente 150 pies para la transmisión de radio sin línea de visión, dos excursionistas tienen aproximadamente 150/88 = 1.7 minutos para descubrir la presencia entre síe intercambiar su información de testigos. Por lo tanto, diseñamos nuestro sistema para que cada sensor emita un faro cada minuto y medio. En la Figura 2, el sensor BS de Hiker emite un faro cuando A está en el rango, esto desencadena A para intercambiar datos con B. A comunica la siguiente información a B: Mi identificación es A;Vi C a las 1:23 pm a (39◦ 49.3277655, 105◦ 39.1126776), vi E a las 3:09 pm a (40◦ 49.2234879, 105◦ 20.3290168). B Entonces responde con mi identificación es B;Vi K a las 11:20 am a las (39 ° 51.4531655, 105◦ 41.6776223). Además, los registros que vi B a las 4:17 pm a (41◦ 29.3177354, 105◦ 04.9106211) y B Records Vi A a las 4:17 pm a (41◦ 29.3177354, 105◦ 04.9106211). B se dirige a acampar durante la noche mientras se dirige a la cabeza del sendero donde hay un AP, que emite una baliza cada 5 segundos para evitar perderse a cualquier excursionista. Un testigo de la información que ha recopilado al punto de acceso. Esto se muestra en la Figura 3. 3.1 Información de los testigos: el almacenamiento Una preocupación crítica es que hay una cantidad limitada de memoria disponible en motas (memoria SDRAM de 4 kb, memoria flash de 128 kb y 4-512 kb EEPROM). Por lo tanto, es importante organizar la información de los testigos de manera eficiente. Cenwits almacena información de testigos en cada nodo como un conjunto de registros de testigos (el formato se muestra en la Figura 4. 1 B BOD ID Registro Tiempo de registro X, y Tiempo de ubicación Conteo de salto 1 B 3 B 8 B 3 B Figura 4: Formato de un registro de testigos. Cuando dos nodos I y J se encuentran entre sí, cada nodo genera un nuevo registro de testigos. En el registro de testigos generado por I, el ID de nodo es J, la hora de registro es la hora actual en el reloj, (x, y) son las coordenadas de la ubicación de I que grabé más recientemente (ya sea de satélite o LP),La hora de ubicación es el momento en que se registró esta ubicación, y el recuento de lúpulos es 0. A cada nodo se le asigna una ID de nodo única cuando ingresa a un sendero. En nuestro prototipo actual, hemos asignado un byte para la ID de nodo, aunque esto se puede aumentar a dos o más bytes si se espera que un gran número de excursionistas estén presentes al mismo tiempo. Podemos representar el tiempo en 17 bits a una segunda precisión. Por lo tanto, hemos asignado 3 bytes cada uno para tiempo de registro y tiempo de ubicación. La circunferencia de la Tierra es de aproximadamente 40.075 km. Si usamos un número de 32 bits para representar tanto longitud como latitud, la precisión que obtenemos es 40,075,000/232 = 0.0093 metros = 0.37 pulgadas, lo cual es bastante precisa para nuestras necesidades. Entonces, hemos asignado 4 bytes cada uno para coordenadas X e Y de la ubicación de un nodo. De hecho, se puede lograr una precisión de pie usando solo 27 bits.3.2 Punto de ubicación e inferencia de ubicación Aunque un receptor GPS proporciona una información de ubicación precisa, tiene su limitación. En cañones y bosques lluviosos, un receptor GPS no funciona. Cuando hay una gran cubierta en la nube, los usuarios de GPS también han experimentado inexactitud en la ubicación informada. Desafortunadamente, muchas rutas de senderismo están en bosques y cañones densos, y no es tan raro llover después de que los excursionistas comienzan a caminar. Para abordar esto, Cenwits incorpora la idea de los puntos de ubicación (LP). Un punto de ubicación puede actualizar un nodo del sensor con su ubicación actual siempre que el nodo esté cerca de ese LP. Los LP se colocan en diferentes ubicaciones en un área silvestre donde los receptores GPS no funcionan. Un LP es un dispositivo muy simple que emite información de ubicación previamente grabada en un intervalo de tiempo regular. Se puede colocar en lugares difíciles de alcanzar, como cañones profundos y densas bosques de la selva simplemente dejándolos de un avión. LPS permite que un nodo sensor determine su ubicación actual con mayor precisión. Sin embargo, no son 183 un requisito esencial de Cenwits. Si un LP se queda sin energía, los Cenwits continuarán funcionando correctamente. Figura 5: El receptor GPS no funciona correctamente. Luego, los sensores tienen que confiar en LP para proporcionar coordinación en la Figura 5, B no puede obtener la recepción GPS debido al mal tiempo. Luego se encuentra en un sendero que tampoco tiene recepción GPS. Sus sensores registran la presencia el uno del otro. Después de 10 minutos, A está en el alcance de un LP que proporciona una información de ubicación precisa a A. Cuando A regresa a la cabeza del sendero y carga sus datos (Figura 6), el sistema puede dibujar un círculo centrado en el LP desde el cual una información de ubicación obtenida para el rango de ubicación de encuentro de A y B. Al superponer este círculo con el mapa de senderos, se pueden inferir dos o tres ubicaciones posibles del encuentro. Por lo tanto, cuando se requiere un rescate, la posible ubicación de B puede inferirse mejor (ver Figuras 7 y 8). Figura 6: A ha vuelto a la cabeza del sendero, informa el momento del encuentro con B a AP, pero no hay información de ubicación para AP Figura 7: B todavía falta después del atardecer. Cenwits infiere el último punto de contacto y dibuja el círculo de posibles ubicaciones de corriente basadas en la velocidad de senderismo promedio, Cenwits requiere que los relojes de diferentes nodos de sensores se sincronizen libremente entre sí. Tal sincronización es trivial cuando la cobertura GPS está disponible. Además, los nodos sensores en CENWITS sincronizan sus relojes cada vez que están en el rango de un AP o un LP. La Figura 8: Basado en un paisaje superpuesto, B podría haber caminado a la rama equivocada y caído de un acantilado. Por lo tanto, las áreas de rescate en caliente pueden determinar la precisión de sincronización que las necesidades de CENWITS es del orden de un segundo más o menos. Mientras los relojes se sincronizen con en un segundo rango, si A Met B a las 12: 3745 o 12: 3746 no importa en el orden de los eventos de los testigos e inferir el camino.4. Memoria y gestión de energía CENWITS emplea varios mecanismos importantes para conservar la potencia y la memoria. Es importante tener en cuenta que mientras que los nodos sensores actuales tienen una cantidad limitada de memoria, se espera que los nodos sensores futuros tengan mucha más memoria. Con esto en mente, el enfoque principal en nuestro diseño es proporcionar una compensación entre la cantidad de memoria disponible y la cantidad de consumo de energía.4.1 Gestión de la memoria El tamaño de la información de los testigos almacenada en un nodo puede ser muy grande. Esto se debe a que el nodo puede encontrarse con varios otros nodos durante una caminata, y puede terminar acumulando una gran cantidad de información de testigos con el tiempo. Para abordar este problema, CenWits permite que un nodo libere de manera proactiva algunas partes de su memoria periódicamente. ¿Esto plantea una pregunta interesante de cuándo y qué registro de testigos debe eliminarse de la memoria de un nodo? CENWITS utiliza tres criterios para determinar esto: recuento de registros, recuento de lúpulos y brecha de registro. El recuento de registros se refiere al número de registros de testigos con la misma identificación de nodo que un nodo ha almacenado en su memoria. Un nodo mantiene un recuento de registros máximo del parámetro entero. Las tiendas en la mayoría de los registros de Max cuentan los registros de testigos de cualquier nodo. Cada registro de testigos tiene un campo de conteo de lúpulo que almacena los tiempos de número (lúpulo) Este registro se ha transferido desde que se creó. Inicialmente, este campo se establece en 0. Cada vez que un nodo recibe un registro de testigos de otro nodo, incrementa el recuento de lúpulo de ese registro en 1. Un nodo mantiene un parámetro entero llamado Max Hop Count. Mantiene solo esos registros de testigos en su memoria, cuyo recuento de lúpulo es menos que el recuento máximo de lúpulo. El parámetro de conteo máximo de lúpulo proporciona un equilibrio entre dos objetivos conflictivos: (1) para garantizar que un registro de testigos se haya propagado y, por lo tanto, almacenado en tantos nodos como sea posible, de modo que tenga una alta probabilidad de ser abandonado en algún AP AS ASlo mas rapido posible;y (2) para garantizar que un registro de testigos se almacene solo en unos pocos nodos, de modo que no obstruya demasiado la memoria combinada de todos los nodos sensores. Elegimos usar el recuento de lúpulo en lugar del tiempo de vida para decidir cuándo soltar un paquete. La razón principal de esto es que la probabilidad de que un paquete alcance un AP aumente a medida que el recuento de saltos se suma. Por ejemplo, cuando el lúpulo cuenta si 5 para un registro específico, 184 el registro está en al menos 5 nodos de sensores. Por otro lado, si descartamos los registros antiguos, sin considerar el recuento de lúpulos, no hay garantía de que el registro esté presente en cualquier otro nodo del sensor. La brecha de registro se refiere a la diferencia horaria entre los tiempos de registro de dos registros de testigos con la misma identificación del nodo. Para guardar la memoria, un nodo N asegura que la brecha de registro entre dos registros de testigos con la misma ID de nodo sea al menos mínimo de brecha de registro. Para cada identificación del nodo i, N almacena el registro del testigo con el tiempo récord más reciente RTI, el testigo con el tiempo récord más reciente que es al menos un mínimo de unidades de tiempo de brecha récord antes de RTI, y así) es alcanzado. Cuando un nodo está apretado en la memoria, ajusta los tres parámetros, el recuento de registros máximos, el recuento máximo de lúpulo y la brecha de registro MIN para liberar algo de memoria. Disminuye el recuento de registros máximos y el recuento máximo de lúpulo, y los incrementos mínimos brecha de registro. Luego primero borra todos los registros de testigos cuyo recuento de lúpulo excede el valor reducido del conteo de lúpulo máximo, y luego borra los registros de testigos para satisfacer los criterios de brecha de registro. Además, cuando un nodo tiene espacio de memoria adicional disponible, p.Después de descargar su información de testigos en un punto de acceso, restablece el recuento de registros máximos, el recuento máximo de lúpulo y la brecha de registro MIN a algunos valores predefinidos.4.2 Gestión de energía Una ventaja importante del uso de sensores para fines de seguimiento es que podemos regular el comportamiento de un nodo sensor en función de las condiciones actuales. Por ejemplo, mencionamos anteriormente que un sensor debe emitir un faro cada 1.7 minutos, dada una velocidad de senderismo de 1 milla/hora. Sin embargo, si un usuario se mueve 10 pies/seg, se debe emitir un faro cada 10 segundos. Si un usuario no se mueve en absoluto, se puede emitir una baliza cada 10 minutos. En la noche, un sensor se puede poner en modo de suspensión para ahorrar energía, cuando no es probable que un usuario se mueva durante un período de tiempo relativamente más largo. Si un usuario está activo durante solo ocho horas en un día, podemos poner el sensor en modo de suspensión durante las otras 16 horas y, por lo tanto, ahorrar 2/3 de la energía. Además, un nodo del sensor puede optar por no enviar balizas durante algunos intervalos de tiempo. Por ejemplo, suponga que Hiker A ha comunicado su información de testigos a otros tres excursionistas en los últimos cinco minutos. Si se está ejecutando con poca potencia, puede ir al modo de recibir o modo de suspensión durante los próximos diez minutos. Va al modo de recibir si aún está dispuesto a recibir información adicional de testigos de los excursionistas que encuentra en los próximos diez minutos. Va al modo de suspensión si es extremadamente bajo en potencia. El ancho de banda y las limitaciones de energía de los nodos sensores requieren que la cantidad de datos transferidos entre los nodos se reduzca al mínimo. Se ha observado que en algunos escenarios se podrían ejecutar 3000 instrucciones para el mismo costo de energía de enviar un poco de 100 m por radio [15]. Para reducir la cantidad de transferencia de datos, Cenwits emplea un protocolo de apretón de manos que ejecutan dos nodos cuando se encuentran entre sí. El objetivo de este protocolo es garantizar que un nodo transmita solo tanta información de testigos como el otro nodo está dispuesto a recibir. Este protocolo se inicia cuando un nodo I recibe una baliza que contiene la ID del nodo del nodo del remitente J y yo no ha intercambiado información de testigos con J en las últimas unidades de tiempo de δ. Suponga que yo <j. El protocolo consta de cuatro fases (ver Figura 9): 1. Fase I: Nodo I envía sus limitaciones de recibir y el número de registros de testigos que tiene en su memoria.2. Fase II: Al recibir este mensaje de I, J envía sus limitaciones de recibir y el número de registros de testigos que tiene en su memoria.3. Fase III: Al recibir el mensaje anterior de J, envía su información de testigos (filtrada en función de las restricciones de recepción recibidas en la Fase II).4. Fase IV: Después de recibir los registros de testigos de I, J envía su información de testigos (filtrada en función de las restricciones de recepción recibidas en la Fase I).J <Constaints, Tamaño de información de testigo> <Constaints, Tamaño de información de testigo> <Información de testigos filtrado> <Información de testigos filtrados> I J J J I I I Figura 9: Protocolo de sacudida de manos de cuatro fases (i <j) Las limitaciones de recibir son una función de la memoria y la potencia. En el caso más general, están compuestos por los tres parámetros (recuento de registros, recuento de lúpulos y brecha de registro) utilizados para la gestión de la memoria. Si tengo poca memoria, especifica el número máximo de registros que está dispuesto a aceptar de j. Del mismo modo, puedo pedirle a J que envíe solo aquellos registros que tienen un valor de conteo de lúpulo menor que el recuento máximo de lúpulo - 1. Finalmente, puedo incluir su valor de brecha de registro MIN en sus restricciones de recepción. Tenga en cuenta que el protocolo de apretón de manos es beneficioso tanto para I como para J. Guarden la memoria al recibir tanta información como están dispuestos a aceptar y conservar energía enviando solo tantos registros de testigos como sea necesario. Resulta que filtrar registros de testigos basados en MIN Record Gap es complejo. Requiere que los registros de testigos de cualquier nodo dado se organicen en un orden ordenado por sus valores de tiempo de registro. Mantener este orden ordenado es complejo en la memoria, porque los nuevos registros de testigos con la misma ID de nodo pueden llegar más tarde que pueden insertarse en el medio para preservar el orden ordenado. Por esta razón, las restricciones de recepción en el prototipo actual de CENWITS no incluyen la brecha de registro. Supongamos que especifica un valor de conteo de lúpulo de 3. En este caso, J verifica el campo de conteo de lúpulo de cada registro de testigos antes de enviarlos. Si el valor de conteo de salto es mayor que 3, el registro no se transmite.4.3 Grupos y particiones Para reducir aún más la comunicación y aumentar la vida útil de nuestro sistema, presentamos la noción de grupos. La idea se basa en el concepto de regiones abstractas presentadas en [20]. Un grupo es un conjunto de N nodos que se pueden definir en términos de conectividad de radio, ubicación geográfica u otras propiedades de los nodos. Todos los nodos dentro de un grupo pueden comunicarse directamente entre sí y comparten información para mantener su visión del mundo externo. En cualquier momento, un grupo tiene exactamente un líder que comunica 185 con nodos externos en nombre de todo el grupo. Un grupo puede ser estático, lo que significa que la membresía del grupo no cambia durante el período de tiempo, o podría ser dinámico en qué caso los nodos pueden salir o unirse al grupo. Para simplificar nuestro análisis y explicar las ventajas del grupo, primero discutimos grupos estáticos. Se forma un grupo estático al comienzo de una ruta de senderismo o pendiente de esquí. Supongamos que hay cinco miembros de la familia que quieren ir a una caminata en el Parque Nacional Rocky Mountain. Antes de que estos miembros comiencen su caminata, a cada uno de ellos recibe un nodo del sensor y la información se ingresa en el sistema de que los cinco nodos forman un grupo. Cada miembro del grupo recibe una identificación única y cada miembro del grupo sabe sobre otros miembros del grupo. Al grupo, en su conjunto, también se le asigna una ID para distinguirlo de otros grupos en el sistema. Figura 10: Un grupo de cinco personas. El nodo 2 es el líder del grupo y se comunica en nombre del grupo con un nodo externo 17. Todos los demás (que se muestran en un tono más ligero) están en modo de suspensión. A medida que el grupo se mueve por el sendero, intercambia información con otros nodos o grupos que se encuentra. En cualquier momento, solo un miembro del grupo, llamado líder, envía y recibe información en nombre del grupo y todos los demás miembros del grupo N - 1 se colocan en el modo de suspensión (ver Figura 10). Es esta propiedad de los grupos la que nos ahorra energía. El liderazgo del grupo es multiplexado por el tiempo entre los miembros del grupo. Esto se hace para asegurarse de que un solo nodo no se quede sin batería debido al intercambio continuo de información. Por lo tanto, después de cada segundo lugar, el liderazgo se transmite a otro nodo, llamado sucesor, y el líder (ahora un miembro ordinario) se pone a dormir. Como la energía es querida, no implementamos un extenso algoritmo electoral para elegir al sucesor. En cambio, elegimos el sucesor sobre la base de la identificación del nodo. El nodo con la siguiente identificación más alta del grupo se elige como sucesor. El último nodo, por supuesto, elige el nodo con la identificación más baja como sucesor. Ahora discutimos los esquemas de almacenamiento de datos para grupos. La memoria es un recurso escaso en los nodos de sensores y, por lo tanto, es importante que la información de los testigos se almacene de manera eficiente entre los miembros del grupo. El almacenamiento de datos eficiente no es una tarea trivial cuando se trata de grupos. La compensación es entre la simplicidad del esquema y el ahorro de memoria. Un esquema más simple incurre en un costo de energía menor en comparación con un esquema más sofisticado, pero también ofrece un ahorro de memoria menor. Esto se debe a que en un esquema más complicado, los miembros del grupo tienen que coordinar para actualizar y almacenar información. Después de considerar varios esquemas diferentes, hemos llegado a una conclusión de que no existe un esquema de almacenamiento óptimo para los grupos. El sistema debería poder adaptarse de acuerdo con sus requisitos. Si los miembros del grupo tienen poca batería, entonces el grupo puede adaptar un esquema que sea más eficiente energéticamente. Del mismo modo, si los miembros del grupo se están quedando sin memoria, pueden adaptar un esquema que sea más eficiente en la memoria. Primero presentamos un esquema simple que es muy eficiente en energía pero que no ofrece ahorros de memoria significativos. Luego presentamos un esquema alternativo que es mucho más eficiente en la memoria. Como ya se mencionó, un grupo solo puede recibir información a través del líder del grupo. Cada vez que el líder se encuentra con un nodo E externo E, recibe información de ese nodo y la guarda. En nuestro primer esquema, cuando expira el intervalo de tiempo para el líder, el líder aprueba esta nueva información que recibió de E a su sucesor. Esto es importante porque durante el próximo espacio de tiempo, si el nuevo líder se encuentra con otro nodo externo, debería poder pasar información sobre todos los nodos externos que este grupo ha presenciado hasta ahora. Por lo tanto, la información se replica completamente en todos los nodos para mantener la visión correcta del mundo. Nuestro primer esquema no ofrece ningún ahorro de memoria, pero es muy eficiente en energía y puede ser una buena opción cuando los miembros del grupo se están quedando sin batería. Excepto por el momento en que se cambia el liderazgo, todos los miembros N - 1 están dormidos en un momento dado. Esto significa que un solo miembro está hasta los segundos una vez cada n ∗ t segundos y, por lo tanto, tiene que gastar aproximadamente 1/nth de su energía. Por lo tanto, si hay 5 miembros en un grupo, ahorramos 80% de energía, lo cual es enorme. Se puede ahorrar más energía aumentando el tamaño del grupo. Ahora presentamos un esquema de almacenamiento de datos alternativo que tiene como objetivo ahorrar memoria a costa de energía. En este esquema dividimos al grupo en lo que llamamos particiones. Las particiones pueden considerarse subgrupos dentro de un grupo. Cada partición debe tener al menos dos nodos. Los nodos dentro de una partición se llaman pares. Cada partición tiene un par designado como líder de partición. El líder de la partición permanece en modo de recepción en todo momento, mientras que todos los otros compañeros se mantienen en el modo de suspensión. El liderazgo de partición es multiplexado por el tiempo entre los pares para asegurarse de que un solo nodo no se quede sin batería. Como antes, un grupo tiene exactamente un líder y el liderazgo es multiplexado por el tiempo entre las particiones. El líder del grupo también sirve como líder de partición para la partición a la que pertenece (ver Figura 11). En este esquema, todos los líderes de partición participan en el intercambio de información. Cada vez que un grupo se encuentra con un nodo E externo, cada líder de partición recibe toda la información de los testigos, pero solo almacena un subconjunto de esa información después del filtrado. La información se filtra de tal manera que cada líder de partición tiene que almacenar solo bytes de datos B/K, donde K es el número de particiones y B es el número total de bytes recibidos de E.Del mismo modo, cuando un grupo quiere enviar información de testigos a E, cada líder de la partición envía solo bytes B/K que se almacenan en la partición a la que pertenece. Sin embargo, antes de que un líder de partición pueda enviar información, debe cambiar del modo de recepción al modo de envío. Además, los líderes de partición deben coordinarse entre sí para asegurarse de que no envíen su información de testigos al mismo tiempo, es decir, su mensaje no chocan. Todo esto se logra haciendo que el líder del grupo envíe una señal a cada líder de partición a su vez.186 Figura 11: La figura muestra un grupo de ocho nodos divididos en cuatro particiones de 2 nodos cada uno. El nodo 1 es el líder del grupo, mientras que los nodos 2, 9 y 7 son líderes de partición. Todos los demás nodos están en el modo de suspensión. Dado que el liderazgo de la partición es multiplexado en el tiempo, es importante que cualquier información recibida por el líder de la partición, P1, se transfiera al próximo líder, P2. Esto debe hacerse para asegurarse de que P2 tenga toda la información que pueda necesitar enviar cuando se encuentra con otro nodo externo durante su intervalo de tiempo. Una forma de lograr esto es despertar P2 justo antes de que expire el horario de P1 y luego tener información de transferencia P1 solo a P2. Una alternativa es despertar a todos los compañeros en el momento del cambio de liderazgo, y luego hacer que P1 transmitiera la información a todos los compañeros. Cada par guía la información enviada por P1 y luego vuelve a dormir. En ambos casos, los pares envían reconocimiento al líder de la partición después de recibir la información. En el método anterior, solo un nodo necesita despertarse en el momento del cambio de liderazgo, pero la cantidad de información que debe transmitirse entre los nodos aumenta a medida que pasa el tiempo. En el último caso, todos los nodos deben ser despertados en el momento del cambio de liderazgo, pero se debe transmitir una pequeña información cada vez entre los pares. Dado que la comunicación es mucho más costosa que traer los nodos, preferimos el segundo método sobre el primero. Un grupo se puede dividir en particiones de más de una forma. Por ejemplo, supongamos que tenemos un grupo de seis miembros. Podemos dividir este grupo en tres particiones de dos pares cada uno, o dos particiones con tres pares cada uno. La elección una vez más depende de los requisitos del sistema. Algunas particiones grandes harán que el sistema sea más eficiente energéticamente. Esto se debe a que en esta configuración, una mayor cantidad de nodos permanecerán en modo de suspensión en cualquier momento dado. Por otro lado, varias particiones pequeñas harán que la memoria del sistema sea eficiente, ya que cada nodo tendrá que almacenar información menor (ver Figura 12). Un grupo que se divide en particiones debe ser capaz de reajustarse cuando un nodo salga o se queda sin batería. Esto es crucial porque una partición debe tener al menos dos nodos en cualquier momento para tolerar la falla de un nodo. Por ejemplo, en la Figura 3 (a), si el nodo 2 o el nodo 5 muere, la partición se deja con solo un nodo. Más tarde, si ese solo nodo en la partición muere, toda la información de los testigos almacenada en esa partición se perderá. Hemos ideado un protocolo muy simple para resolver este problema. Primero explicamos cómo Partifigura 12: la figura muestra dos formas diferentes de dividir un grupo de seis nodos. En (a), un grupo se divide en tres particiones de dos nodos. El nodo 1 es el líder del grupo, los nodos 9 y 5 son líderes de partición, y los nodos 2, 3 y 6 están en modo de suspensión. En (b) el grupo se divide en dos particiones de tres nodos. El nodo 1 es el líder del grupo, el nodo 9 es el líder de la partición y los nodos 2, 3, 5 y 6 están en modo de suspensión.Las ciones se ajustan cuando un compañero muere y luego explica qué sucede si un líder de partición muere. Supongamos que el nodo 2 en la Figura 3 (a) muere. Cuando el nodo 5, el líder de la partición, envía información al nodo 2, no recibe un reconocimiento y concluye que el nodo 2 ha muerto2. En este punto, el nodo 5 contacta a otros líderes de partición (nodos 1 ... 9) usando un mensaje de transmisión y les informa que uno de sus compañeros ha muerto. Al escuchar esto, cada líder de la partición informa el nodo 5 (i) el número de nodos en su partición, (ii) un nodo candidato que el nodo 5 puede tomar si el número de nodos en su partición es mayor que 2 y (iii) elCantidad de información de testigos almacenada en su partición. Al escuchar a todos los líderes, el nodo 5 elige el nodo candidato de la partición con un número máximo (debe ser mayor que 2) de sus compañeros, y envía un mensaje a todos los líderes. El nodo 5 luego envía datos a su nuevo par para asegurarse de que la información se replica dentro de la partición. Sin embargo, si todas las particiones tienen exactamente dos nodos, entonces el nodo 5 debe unirse a otra partición. Elige la partición que tiene la menor cantidad de información de testigos para unirse. Envía su información de testigos al nuevo líder de partición. La información de los testigos y la actualización de la membresía se propagan a todos los pares durante el siguiente cambio de liderazgo de partición. Ahora consideramos el caso en el que muere el líder de la partición. Si esto sucede, entonces esperamos a que el liderazgo de la partición cambie y que el nuevo líder de la partición finalmente descubra que un compañero ha muerto. Una vez que el nuevo líder de la partición descubre que necesita más compañeros, procede con el protocolo explicado anteriormente. Sin embargo, en este caso, perdemos información que el líder de la partición anterior podría haber recibido justo antes de morir. Este problema se puede resolver implementando un protocolo más riguroso, pero hemos decidido renunciar a la precisión para ahorrar energía. Nuestro diseño actual utiliza la multiplexación de división de tiempo para programar modos de despertar y dormir en los nodos del sensor. Sin embargo, el trabajo reciente en los sensores de activación de radio [10] se puede usar para hacer esta programación de manera más eficiente.Planeamos incorporar sensores de despido de radio en Cenwits cuando el hardware es maduro.2 El algoritmo para concluir que un nodo ha muerto puede hacerse más riguroso al hacer que el líder de la partición consulte el nodo sospechoso varias veces.187 5. Evaluación del sistema Un sensor está limitado en la cantidad de memoria y potencia. En general, la cantidad de memoria necesaria y el consumo de energía depende de una variedad de factores, como la densidad de nodo, el número de encuentros de excursionistas y el número de puntos de acceso. En esta sección, proporcionamos una estimación de cuánto tiempo durará el poder de una mota de Mica2 bajo ciertas supuestas. Primero, suponemos que cada nodo del sensor lleva alrededor de 100 registros de testigos. Al encontrarse con otro excursionista, un nodo del sensor transmite 50 registros de testigos y recibe 50 nuevos registros de testigos. Dado que cada registro tiene 16 bytes de largo, tomará 0.34 segundos transmitir 50 registros y otros 0.34 segundos para recibir 50 registros en un enlace de 19200 BPS. El consumo de energía de Mica2 debido al procesamiento, transmisión y recepción de la CPU es de aproximadamente 8.0 mA, 7.0 mA y 8.5 mA por hora respectivamente [18], y la capacidad de una batería alcalina es de 2500 mAh. Dado que el módulo de radio de Mica2 es medio dúplex y supone que la CPU siempre está activa cuando un nodo está despierto, el consumo de energía debido a la transmisión es 8 + 8.5 = 16.5 mA por hora y debido a la recepción es 8 + 7 = 15 mA por hora. Por lo tanto, el consumo promedio de energía debido a la transmisión y la recepción es (16.5 + 15)/2 = 15.75 mA por hora. Dado que la capacidad de una batería alcalina es de 2500 mAh, una batería debe durar 2500/15.75 = 159 horas de transmisión y recepción. Un encuentro entre dos excursionistas resulta a cambio de unos 50 registros de testigos que tarda aproximadamente 0.68 segundos como se calcula anteriormente. Por lo tanto, una sola batería alcalina puede durar (159 ∗ 60 ∗ 60) /0.68 = 841764 Encuentros de excursionistas. Suponiendo que un nodo emite una baliza cada 90 segundos y un encuentro de excursionistas ocurre cada vez que se emite un faro (peor de los casos), una sola batería alcalina durará (841764 ∗ 90)/(30 ∗ 24 ∗ 60 ∗ 60) = =29 días. Dado que un Mica2 está equipado con dos baterías, un sensor de Mica2 puede permanecer en funcionamiento durante aproximadamente dos meses. Observe que este cálculo es preliminar, porque supone que los excursionistas están activos las 24 horas del día y se produce un encuentro de excursionistas cada 90 segundos. En un escenario más realista, se espera que el poder dure un período de tiempo mucho más largo. Además, este período de tiempo aumentará significativamente cuando los grupos de excursionistas se muevan juntos. Finalmente, la vida útil de un sensor que se ejecuta en dos baterías definitivamente se puede aumentar significativamente mediante el uso de técnicas de eliminación de energía y técnicas de recolección de energía [16, 14].6. Implementación de prototipo Hemos implementado un prototipo de CENWITS en el sensor de mica2 900MHz que ejecuta Mantis OS 0.9.1b. Uno de los sensores está equipado con el módulo GPS MTS420CA, que es capaz de presión barométrica y detección de aceleración de dos ejes, además del seguimiento de ubicación GPS. Utilizamos SIRF, el protocolo de comunicación en serie, para controlar el módulo GPS. Sirf tiene un rico conjunto de comandos, pero solo registramos coordenadas X e Y. Un registro de testigos tiene 16 bytes de largo. Cuando se inicia un nodo, almacena su ubicación actual y emite una baliza periódicamente en el prototipo, un nodo emite un faro cada minuto. Hemos realizado una serie de experimentos con este prototipo. Un informe detallado sobre estos experimentos con los datos sin procesar recopilados y fotografías de excursionistas, puntos de acceso, etc. está disponible en http://csel.cs.colorado.edu/∼huangjh/ cenwits.index.htm. Aquí informamos los resultados de tres de ellos. En todos estos experimentos, hay tres puntos de acceso (A, B y C) donde los nodos arrojan su información de testigos. Estos puntos de acceso también proporcionan información de ubicación a los nodos que vienen en su rango. Primero mostramos cómo se puede usar Cenwits para determinar la ruta de senderismo que un excursionista es muy probable y la velocidad a la que está caminando, e identificar áreas de búsqueda en caliente en caso de que se lo reporta que desaparece. A continuación, mostramos los resultados de las técnicas de gestión de potencia y memoria de CENWITS para conservar la potencia y la memoria de un nodo sensor en uno de nuestros experimentos.6.1 Localización de excursionistas perdidos El primer experimento se llama contacto directo. Es un experimento muy simple en el que un solo excursionista comienza desde A, va a B y luego a C, y finalmente regresa a A (ver Figura 13). El objetivo de este experimento es ilustrar que Cenwits puede deducir el sendero que toma un excursionista procesando la información de los testigos. Figura 13: Registro de ID del nodo del experimento de contacto directo (x, y) Ubicación Tiempo de tiempo HOP Recuento 1 15 (12,7) 15 0 1 33 (31,17) 33 0 1 46 (12,23) 46 0 1 10 (12 (12, 7) 10 0 1 48 (12,23) 48 0 1 16 (12,7) 16 0 1 34 (31,17) 34 0 Tabla 1: Información de testigos recopilada en el experimento de contacto directo. La información del testigo arrojada en los tres puntos de acceso fue recopilada y procesada en un centro de control. Parte de la información del testigo recopilada en el centro de control se muestra en la Tabla 1. Las ubicaciones x, y en esta tabla corresponden a la información de ubicación proporcionada por los puntos de acceso A, B y C. A se encuentra en (12,7), B se encuentra en (31,17) y C se encuentra en (12, 23). Tres puntos de encuentro (entre el excursionista 1 y los tres puntos de acceso) extraídos de 188 Esta información de testigos se muestra en la Figura 13 (que se muestra en cajas rectangulares). Por ejemplo, A, 1 a 16 significa que 1 entró en contacto con A en el tiempo 16. Usando esta información, podemos inferir la dirección en la que el excursionista 1 se estaba moviendo y la velocidad en la que se estaba moviendo. Además, dado un mapa de senderos de senderismo en esta área, es claramente posible identificar la ruta de senderismo que tomó el excursionista 1. El segundo experimento se llama inferencia indirecta. Este experimento está diseñado para ilustrar que Cenwits puede inferir la ubicación, la dirección y la velocidad de un excursionista, incluso si el excursionista nunca viene en el rango de ningún punto de acceso. Ilustra la importancia de la información de los testigos en las aplicaciones de búsqueda y rescate. En este experimento, hay tres excursionistas, 1, 2 y 3. Hiker 1 toma un sendero que va a lo largo de los puntos de acceso A y B, mientras que Hiker 3 toma un sendero que avanza los puntos de acceso C y B. Hiker 2 toma un sendero que no viene en el rango de ningún punto de acceso. Sin embargo, este excursionista se encuentra con el excursionista 1 y 3 durante su caminata. Esto se ilustra en la Figura 14. Figura 14: Registro de ID de nodo de experimento de inferencia indirecta (x, y) Ubicación Tiempo de tiempo HORO Recuento 2 16 (12,7) 6 0 2 15 (12,7) 6 0 1 4 (12,7) 4 0 1 6 (12 (12, 7) 6 0 1 29 (31,17) 29 0 1 31 (31,17) 31 0 Tabla 2: Información de testigos recopilada de Hiker 1 en el experimento de inferencia indirecta. Parte de la información del testigo recopilada en el centro de control de los puntos de acceso A, B y C se muestra en las Tablas 2 y 3. Hay algunos datos interesantes en estas tablas. Por ejemplo, el tiempo de ubicación en algunos registros de testigos no es lo mismo que el tiempo de registro. Esto significa que el nodo que generó ese registro no tenía su ubicación más actualizada en el momento del encuentro. Por ejemplo, cuando los excursionistas 1 y 2 se reúnen en el tiempo 16, el último tiempo de ubicación registrada del registro de ID de nodo (x, y) ubicación de tiempo de hop -tiempo recuento 3 78 (12,23) 78 0 3 107 (31,17) 107 03 106 (31,17) 106 0 3 76 (12,23) 76 0 3 79 (12,23) 79 0 2 94 (12,23) 79 0 1 16 (?,?)?1 1 15 (?,?)?1 Tabla 3: Información de testigos recopilada de Hiker 3 en el experimento de inferencia indirecta.Hiker 1 está (12,7) registrado en el momento 6. Entonces, el nodo 1 genera un registro de testigos con el tiempo de registro 16, la ubicación (12,7) y la hora de ubicación 6. De hecho, los dos últimos registros en la Tabla 3 tienen (?,?) Como su ubicación. Esto ha sucedido porque estos registros de testigos fueron generados por Hiker 2 durante su encuentro con 1 en el tiempo 15 y 16. Hasta este momento, Hiker 2 no había entrado en contacto con ningún punto de ubicación. Curiosamente, una información de ubicación más precisa del encuentro 1 y 2 o 2 y 3 encuentros se puede calcular mediante el proceso de la información de los testigos en el centro de control. Hiker 1 tardó 25 unidades en pasar de A (12,7) a B (31,17). Suponiendo una velocidad de senderismo constante y una caminata relativamente recta, se puede calcular que en el momento 16, el excursionista 1 debe haber estado en la ubicación (18,10). Así (18,10) es una ubicación más precisa del encuentro entre 1 y 2. Finalmente, nuestro tercer experimento llamado identificación de áreas de búsqueda en caliente está diseñada para determinar el sendero que un excursionista ha tomado e identificando áreas de búsqueda en caliente para rescate después de que se informa que desaparece. Hay seis excursionistas (1, 2, 3, 4, 5 y 6) en este experimento. La Figura 15 muestra los senderos que tomaron los excursionistas 1, 2, 3, 4 y 5, junto con los puntos de encuentro obtenidos de los registros de testigos recopilados en el centro de control. Para la brevedad, no hemos mostrado toda la información del testigo recopilada en el centro de control. Esta información está disponible en http://csel.cs.colorado.edu/∼huangjh/cenwits/index.htm. Figura 15: Identificación del experimento del área de búsqueda en caliente (sin excursionista 6) 189 Ahora suponga que el excursionista 6 se informa que falta en el momento 260. Para determinar las áreas de búsqueda en caliente, los registros de testigos de Hiker 6 se procesan para determinar el sendero en el que es más probable, la velocidad a la que se había estado moviendo, dirección en la que se había movido y su última ubicación conocida. Basado en esta información y en el mapa de senderismo, se identifican áreas de búsqueda en caliente. La ruta de senderismo tomada por Hiker 6 como se infiere por Cenwits se muestra mediante una línea punteada y las áreas de búsqueda en caliente identificadas por Cenwits se muestran mediante líneas oscuras dentro del círculo punteado en la Figura 16. Figura 16: Identificar el experimento del área de búsqueda en caliente (con el excursionista 6) 6.2 Resultados de la gestión de potencia y memoria La información del testigo que se muestra en las Tablas 1, 2 y 3 no se ha filtrado utilizando los tres criterios descritos en la Sección 4.1. Por ejemplo, los registros de testigos generados por 3 en los tiempos de registro 76, 78 y 79 (ver Tabla 3) se han generado debido a un solo contacto entre el punto de acceso C y el nodo 3. Al aplicar los criterios de brecha de registro, se borrarán dos de estos tres registros. Del mismo modo, los registros de testigos generados por 1 en los tiempos de registro 10, 15 y 16 (ver Tabla 1) se han generado debido a un solo contacto entre el punto de acceso A y el nodo 1. Nuevamente, al aplicar los criterios de brecha de registro, se borrarán dos de estos tres registros. Nuestros experimentos no generaron suficientes datos para probar el impacto del recuento de registros o los criterios de conteo de lúpulo. Para evaluar el impacto de estos criterios, simulamos CENWITS para generar una cantidad significativamente grande de registros para un número dado de excursionistas y puntos de acceso. Generamos registros de testigos haciendo que los excursionistas caminaran al azar. Aplicamos los tres criterios para medir la cantidad de ahorro de memoria en un nodo sensor. Los resultados se muestran en la Tabla 4. El número de excursionistas en esta simulación fue de 10 y el número de puntos de acceso fue 5. El número de registros de testigos reportados en esta tabla es un número promedio de registros de testigos un nodo sensor almacenado en el momento del volcado a un punto de acceso. Estos resultados muestran que los tres criterios de gestión de memoria reducen significativamente el consumo de memoria de los nodos sensores en CENWITS. Por ejemplo, pueden reducir el máximo mínimo max # de registro registro de registro de testimonio de testimonio de testimonio de la brecha registros 5 5 5 628 4 5 5 421 3 5 5 316 5 10 5 311 5 20 5 207 5 5 4 462 5 5 3 341 3 20 3 3 3 3 3 3161 Tabla 4: Impacto de las técnicas de gestión de memoria.El consumo de memoria hasta en un 75%. Sin embargo, estos resultados son prematuros en la actualidad por dos razones: (1) se generan mediante la simulación de excursionistas que caminan al azar;y (2) no está claro qué impacto tiene el borde de los registros de testigos en la precisión de la ubicación inferida/áreas de búsqueda en caliente de los excursionistas perdidos. En nuestro trabajo futuro, planeamos realizar un estudio importante para abordar estas dos preocupaciones.7. Otras aplicaciones además de la caminata en áreas silvestres, CENWITS se pueden usar en varias otras aplicaciones, p.Esquí, escalada, monitoreo de la vida salvaje y seguimiento de personas. Dado que Cenwits se basa solo en la conectividad intermitente, puede aprovechar las tecnologías baratas y maduras existentes y, por lo tanto, hacer que el seguimiento sea más barato y bastante preciso. Dado que Cenwits no depende de realizar un seguimiento de un titular de sensor todo el tiempo, pero se basa en mantener testigos, el sistema es relativamente más barato y ampliamente aplicable. Por ejemplo, hay algunos acantilados peligrosos en la mayoría de las estaciones de esquí. Pero es demasiado costoso para una estación de esquí desplegar una red de sensores inalámbricos conectados a través de la montaña. Usando Cenwits, podemos implementar algunos sensores en los límites del acantilado. Estos sensores límite emiten balizas con bastante frecuencia, p.Cada segundo, y así puede registrar la presencia de esquiadores que cruzan el límite y se caen del acantilado. Las patrullas de esquí pueden navegar por las montañas cada hora y consultar automáticamente el sensor de límite cuando están en el rango usando PDA. Si un PDA muestra que un esquiador ha estado cerca del sensor de límites, la Patrulla de esquí puede usar un Walkie-Talkie de largo alcance para consultar el Centro de control en la base del resort para verificar el registro de testigos del esquiador. Si no hay un registro de testigos después del tiempo registrado en el sensor de límite, existe una gran posibilidad de que se necesite un rescate. En el monitoreo de la vida silvestre, un método muy popular es unir un receptor GPS a los animales. Para recopilar datos, se usa un transmisor satelital o el recopilador de datos tiene que esperar hasta que se caiga la abrazadera del receptor GPS (después de un año más o menos) y luego buscar el receptor GPS. Los transmisores GPS son muy caros, p.El utilizado en el seguimiento de gansos es de $ 3,000 cada uno [2]. Además, aún no se sabe si la señal de radio continua es perjudicial para las aves. Además, un transmisor GPS es bastante voluminoso e incómodo, y como resultado, las aves siempre intentan deshacerse de él. Usando Cenwits, no solo podemos registrar la presencia de vida silvestre, sino que también podemos registrar el comportamiento de los animales salvajes, p.Los leones pueden seguir la migración de los ciervos. Cenwits ni requiere transmisores satelitales voluminosos y caros, ni es necesario esperar un año y buscar los aparatos ortopédicos. Cenwits proporciona una solución muy simple y rentable en este caso. Además, los puntos de acceso 190 pueden ubicarse estratégicamente, p.Cerca de una fuente de agua, para aumentar las posibilidades de recopilar datos actualizados. De hecho, los puntos de acceso no necesitan ser ubicados estáticamente. Se pueden colocar en un plano de baja altitud (por ejemplo, un UAV) y ser trasladados sobre un área silvestre para recopilar datos de la vida silvestre. En las grandes ciudades, Cenwits se puede usar para complementar el GPS, ya que el GPS no funciona de interior y cerca de los rascacielos. Si se informa que una persona A falta, y de los registros de testigos encontramos que sus últimos contactos fueron C y D, podemos rastrear una ubicación aproximada de manera rápida y eficiente.8. Discusión y trabajo futuro Este documento presenta un nuevo sistema de búsqueda y rescate llamado Cenwits que tiene varias ventajas sobre los sistemas de búsqueda y rescate actuales. Estas ventajas incluyen un sistema LooselyCoupled que se basa solo en la conectividad de red intermitente, la eficiencia de energía y almacenamiento, y bajo costo. Resuelve uno de los mayores problemas que afectan a los sistemas modernos de búsqueda y rescate: tiene una capacidad de almacenamiento inherente en el sitio. Esto significa que alguien dentro de la red tendrá acceso a la última información de ubicación conocida de una víctima, y tal vez también su información sobre el rodamiento y la velocidad. Utiliza el concepto de testigos para propagar información, inferir la posible ubicación y velocidad actuales de un sujeto, e identificar áreas de búsqueda y rescate en caso de emergencias. Una gran parte del diseño de Cenwits se centra en abordar las limitaciones de potencia y memoria de los nodos sensores actuales. De hecho, las limitaciones de potencia y memoria dependen de cuánto peso (del nodo del sensor) un excursionista está dispuesto a llevar y el costo de estos sensores. Un objetivo importante de Cenwits es construir pequeñas chips que se puedan implantar en botas de senderismo o chaquetas de esquí. Este objetivo es similar a las balizas de avalancha que actualmente se implantan en chaquetas de esquí. Anticipamos que el poder y la memoria continuarán siendo limitados en dicho entorno. Si bien el documento se centra en el desarrollo de un sistema de búsqueda y rescate, también proporciona algunas ideas innovadoras de nivel de sistema para el procesamiento de información en un sistema de red de sensores. Hemos desarrollado y experimentado con un prototipo básico de CENWITS en la actualidad. El trabajo futuro incluye desarrollar un prototipo más maduro que aborde temas importantes como seguridad, privacidad y alta disponibilidad. Existen varias preocupaciones apremiantes con respecto a la seguridad, la privacidad y la alta disponibilidad en CENWITS. Por ejemplo, un adversario puede oler la información de los testigos para localizar animales en peligro de extinción, hembras, niños, etc. Puede inyectar información falsa en el sistema. Es posible que un individuo no se sienta cómodo proporcionando su información de ubicación y movimiento, a pesar de que definitivamente está interesado en estar ubicado de manera oportuna en el momento de la emergencia. En general, las personas en la comunidad de senderismo son amables y generalmente confiables. Por lo tanto, no se requiere una seguridad a prueba de balas. Sin embargo, cuando CENWITS se usa en el contexto de otras aplicaciones, los requisitos de seguridad pueden cambiar. Dado que los nodos sensores utilizados en Cenwits son frágiles, pueden fallar. De hecho, la naturaleza y el nivel de seguridad, privacidad y soporte de alta disponibilidad que se necesita en CENWITS depende en gran medida de la aplicación para la cual se está utilizando y los sujetos individuales involucrados. En consecuencia, planeamos diseñar un soporte de varios niveles para seguridad, privacidad y alta disponibilidad en CENWITS. Hasta ahora, hemos experimentado con Cenwits en un entorno muy restringido con un pequeño número de sensores. Nuestro próximo objetivo es implementar este sistema en un entorno mucho más grande y más realista. En particular, se están realizando discusiones para desplegar centavos en los Parques Nacionales de Rocky Mountain y Yosemite.9. Referencias [1] Sistema de seguimiento basado en 802.11.http://www.pangonetworks.com/locator.htm.[2] Brent Geese 2002. http://www.wwt.org.uk/brent/.[3] El sistema OnStar.http://www.onstar.com.[4] Beacons de localización personal con receptor GPS y transmisor satelital.http://www.aeromedix.com/.[5] Seguimiento personal utilizando el sistema GPS y GSM.http://www.ulocate.com/trimtrac.html.[6] Sistema de seguimiento de niños basado en RF.http://www.ion-kids.com/.[7] F. Alessio. Mediciones de rendimiento con tecnología de motas. MSWIM04, 2004. [8] P. Bahl y V. N. Padmanabhan. Radar: un sistema de seguimiento y ubicación de usuario basado en RF en la construcción. IEEE Infocom, 2000. [9] K. Fall. Una arquitectura de red tolerante a retrasos para internets desafiados. En Sigcomm, 2003. [10] L. Gu y J. Stankovic. La capacidad de activación de radio activada para redes de sensores. En Simposio de aplicaciones en tiempo real, 2004. [11] J. Hightower y G. Borriello. Sistemas de ubicación para computación ubicua. IEEE Computer, 2001. [12] W. Jaskowski, K. Jedrzejek, B. Nyczkowski y S. Skowronek. Sistema de salvación de vida de vida útil. CSIDC, 2004. [13] P. Juang, H. Oki, Y. Wang, M. Martonosi, L. Peh y D. Rubenstein. Computación de eficiencia energética para el seguimiento de la vida silvestre: diseño de compensaciones y experiencias tempranas con Zebranet. En Asplos, 2002. [14] K. Kansal y M. Srivastava. Cosecha de energía Gestión de energía consciente. En redes de sensores inalámbricos: una perspectiva de sistemas, 2005. [15] G. J. Pottie y W. J. Kaiser. Incrustando Internet: sensores de red integrados inalámbricos. Comunicaciones de la ACM, 43 (5), mayo de 2000. [16] S. Roundy, P. K. Wright y J. Rabaey. Un estudio de vibraciones de bajo nivel como fuente de energía para redes de sensores inalámbricos. Computer Communications, 26 (11), 2003. [17] C. Savarese, J. M. Rabaey y J. Beutel. Ubicación en redes distribuidas de sensores inalámbricos ad-hoc. Icassp, 2001. [18] V. Shnayder, M. Hempstead, B. Chen, G. Allen y M. Welsh. Simulando el consumo de energía de aplicaciones de red de sensores a gran escala. En Sensys, 2004. [19] R. Want y A. Hopper. Insignias activas y objetos de computación interactivos personales. Transacciones IEEE de Electronics de Consumer, 1992. [20] M. Welsh y G. Continland. Redes de sensores de programación utilizando regiones abstractas. Primer Simposio de USENIX/ACM sobre diseño e implementación de sistemas en red (NSDI 04), 2004. 191