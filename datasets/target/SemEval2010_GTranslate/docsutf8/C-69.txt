PTHINC: Una arquitectura de cliente fino para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Columbia University, Nueva York, NY, EE. UU. {JK2438, Ricardo, Nieh}@cs.columbia.edu abstracto aunque aunque abstractoLas aplicaciones web están ganando popularidad en PDA inalámbricos móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidades adecuadas para acceder a muchos sitios web. Hemos desarrollado PTHINC, una solución PDA ThinClient que aprovecha los servidores más potentes para ejecutar navegadores web de funciones completas y otra lógica de aplicaciones, luego envía actualizaciones de pantalla simples al PDA para la pantalla.PTHINC utiliza escala de pantalla del lado del servidor para proporcionar visualización de alta fidelidad y movilidad perfecta en una amplia gama de diferentes clientes y tamaños de pantalla, incluidos los modos de visualización de retratos y paisajistas.PTHINC también aprovecha los botones de control PDA existentes para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de la aplicación. Hemos implementado PTHINC en Windows Mobile y evaluamos su rendimiento en dispositivos inalámbricos móviles. Nuestros resultados en comparación con los navegadores web PDA locales y otros enfoques de cliente delgado demuestran que PTHINC proporciona un rendimiento de navegación web superior y es el único cliente delgado PDA que admite efectivamente aplicaciones de ayuda de navegador crucial como la reproducción de video. Categorías y descriptores de asignaturas: C.2.4 Computersommunication -Networks: Sistemas distribuidos - Términos generales del cliente/ servidor: diseño, experimentación, rendimiento 1. Introducción La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están alimentando una proliferación de dispositivos de mano inalámbricos móviles, tanto como asistentes digitales personales inalámbricos independientes (PDA) y populares dispositivos PDA/teléfonos celulares integrados. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para entregar acceso web generalizado, y los usuarios web móviles ya usan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico y guías y mapas de viajes localizados. Es probable que en unos pocos años, la mayoría de los dispositivos que acceden a la web sean móviles. Los usuarios generalmente acceden al contenido web ejecutando un navegador web y aplicaciones auxiliar asociadas localmente en el PDA. Aunque los navegadores web nativos existen para PDA, ofrecen un rendimiento inferior y tienen un conjunto de características mucho más pequeño y una funcionalidad más limitada que sus contrapartes informáticas de escritorio [10]. Como resultado, los navegadores web PDA a menudo no pueden mostrar contenido web de sitios web que aprovechan las tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que los PDA tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web deben reescribirse y personalizarse para PDA, si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y más maduro, la mayor parte del esfuerzo de desarrollo generalmente termina gastando en aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes PDA. En segundo lugar, los PDA tienen un entorno más limitado de recursos que las computadoras de escritorio tradicionales para proporcionar un factor de forma más pequeño y una mayor duración de la batería. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en un PDA. En cambio, los desarrolladores se ven obligados a eliminar significativamente estos navegadores web para proporcionar un navegador web PDA utilizable, paralizando así la funcionalidad del navegador PDA. La informática del cliente delgado proporciona un enfoque alternativo para habilitar el acceso web generalizado desde los dispositivos portátiles. Un sistema informático de cliente delgado consiste en un servidor y un cliente que se comunica a través de una red utilizando un protocolo de pantalla remota. El protocolo permite que las pantallas gráficas se virtualicen y sirvan en una red a un dispositivo de cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de pantalla remota, el cliente transmite la entrada del usuario al servidor y el servidor devuelve las actualizaciones de la pantalla de las aplicaciones desde el servidor al cliente. Utilizando un modelo de cliente delgado para dispositivos de mano móviles, PDA puede convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente delgado proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web de escritorio estándar se pueden usar para entregar contenido web a PDA sin reescribir o adaptar aplicaciones para ejecutar un PDA, reduciendo los costos de desarrollo y aprovechando las inversiones de software existentes. En segundo lugar, las aplicaciones web complejas se pueden ejecutar en servidores potentes en lugar de ejecutar versiones despojadas en PDA más restringidas, proporcionando una mayor funcionalidad y un mejor rendimiento [10]. En tercer lugar, las aplicaciones web pueden aprovechar los servidores con redes más rápidas y una mejor conectividad, lo que aumenta el rendimiento de la aplicación. Cuarto, los PDA pueden ser dispositivos aún más simples, ya que no necesitan realizar una lógica de aplicación compleja, potencialmente reduciendo el consumo de energía y extender la duración de la batería. Finalmente, los clientes PDA delgados pueden ser esencialmente aparatos apátridos que no necesitan ser respaldados o restaurados, no requieren casi ningún mantenimiento ni actualizaciones, y no almacenan ningún datos confidenciales que se puedan perder o robar. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA [6] mientras adoptan las computadoras de mano móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes delgados no han podido proporcionar la gama completa de estos beneficios en la entrega de aplicaciones web a dispositivos de mano móviles. Los clientes delgados existentes no fueron diseñados para PDA y no tienen en cuenta los problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeña, lo que resulta en dificultades para navegar por el contenido web. Además, los clientes delgados existentes son ineficaces para proporcionar una movilidad perfecta en la combinación heterogénea de tamaños y resoluciones de visualización de dispositivos. Si bien los clientes delgados existentes ya pueden proporcionar un rendimiento más rápido que los navegadores web nativos de PDA en la entrega de contenido web HTML, no admiten efectivamente aplicaciones de ayuda web de WebS BeTwelper más efectivamente, como Video Multimedia, que es cada vez más una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática del cliente delgado para proporcionar una red inalámbrica móvil en PDA, hemos desarrollado PTHINC (PDA Computación de Internet de Cliente delgado).Pthinc se basa en nuestro trabajo anterior sobre Thinc [1] para proporcionar una arquitectura de Client Tlin para dispositivos de mano móviles.PTHINC Virtualiza y cambia el tamaño de la pantalla en el servidor para entregar eficientemente actualizaciones de pantalla de alta fidelidad a una amplia gama de diferentes clientes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización de retratos y paisajes. Esto permite que PTHINC proporcione la misma sesión web persistente en diferentes dispositivos de clientes. Por ejemplo, PTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para visualizar en una computadora de escritorio y un PDA para que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente.El enfoque de visualización virtual de PTHINCS aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del lado del cliente para proporcionar mecanismos de pantalla remotos más eficientes que sean cruciales para admitir aplicaciones web más intensivas en pantalla. Dada la resolución de visualización limitada en PDA, PTHINCC maximiza el uso de bienes inmuebles de pantalla para visualización remota mediante la funcionalidad de control móvil desde la pantalla a los botones de control PDA disponibles, mejorando la usabilidad del sistema. Hemos implementado PTHINC en Windows Mobile y demostramos que funciona de manera transparente con aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompensar o relacionar el software existente. Hemos evaluado cuantitativamente PTHINC contra navegadores web PDA locales y otros enfoques de cliente delgado en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que PTHINC proporciona un rendimiento de navegación web superior y es el único cliente delgado de PDA que admite efectivamente aplicaciones cruciales para ayudantes del navegador, como la reproducción de video. Este documento presenta el diseño e implementación de PTHINC. La Sección 2 describe el modelo de uso general y las características de usabilidad de PTHINC. La Sección 3 presenta el diseño y la arquitectura del sistema de PTHINC. La Sección 4 presenta resultados experimentales que miden el rendimiento de PTHINC en aplicaciones web y lo comparan con los navegadores PDA nativos y otros sistemas populares de cliente delgado PDA. La Sección 5 discute el trabajo relacionado. Finalmente, presentamos algunos comentarios finales.2. PTHINC Modelo de uso PTHINC es un sistema de cliente delgado que consiste en una aplicación simple de visor de clientes que se ejecuta en el PDA y un servidor que se ejecuta en una PC de productos básicos. El servidor aprovecha las PC más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente toma la entrada del usuario del teclado PDA Stylus y Virtual y los envía al servidor para pasar a las aplicaciones. Las actualizaciones de la pantalla se envían desde el servidor al cliente para que se muestre al usuario. Cuando se inicia el cliente PTHINC PDA, se presenta al usuario una interfaz gráfica simple donde se puede proporcionar información como la dirección del servidor y el puerto, la información de autenticación del usuario y la configuración de la sesión.Pthinc primero intenta conectarse al servidor y realizar el apretón de manos necesario. Una vez que este proceso se ha completado, PTHINCC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes se pueden continuar sin problemas sin cambios en la configuración de la sesión o la configuración del servidor. A diferencia de otros sistemas de cliente delgado, PTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión que ejecuta un navegador web y aplicaciones asociadas en el servidor, luego desconecte de esa sesión y vuelva a conectarse a él en cualquier momento. Cuando un usuario se vuelve a conectar a la sesión, todas las aplicaciones continúan ejecutándose donde el usuario lo dejó, para que el usuario pueda continuar trabajando como si nunca se desconectara. La capacidad de desconectarse y reconectarse en una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricos móviles que pueden tener conectividad de red intermitente.El modelo de sesión web persistente de PTHINCS permite a un usuario reconectarse a una sesión web de dispositivos distintos de la que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad perfecta en diferentes dispositivos. Si un usuario pierde su PDA, puede usar fácilmente otro PDA para acceder a su sesión web. Además, PTHINC permite a los usuarios usar dispositivos no PDA para acceder a las sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio que en un PDA, lo que permite a un usuario usar la misma sesión web de cualquier computadora.PTHINCS El modelo de sesión web persistente aborda un problema clave encontrado por los usuarios web móviles, la falta de un entorno web común en las computadoras. Los navegadores web a menudo almacenan información importante, como marcadores, cookies e historia, que les permiten funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre las computadoras es que estos datos, que son específicos para la instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenido de medios, y esas aplicaciones pueden no estar disponibles consistentemente en todas las computadoras.Pthinc aborda este problema al permitir que un usuario use de forma remota exactamente el mismo entorno del navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, PTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles que intenten sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, PTHINC debe proporcionar mecanismos para admitir diferentes tamaños y resoluciones de visualización. Con este fin, PTHINC proporciona una función de zoom que permite a un usuario acercarse y salir de una pantalla y permite la visualización de una sesión de teclas de acceso directo de la web 144 Figura 1: Pthinc para cambiar el tamaño de la pantalla del dispositivo que se utiliza. Por ejemplo, si el servidor está ejecutando una sesión web en 1024 × 768, pero el cliente es un PDA con una resolución de visualización de 640 × 480, PTHINC cambiará la pantalla de escritorio para que se ajuste a la pantalla completa en la pantalla más pequeña del PDA.PTHINC proporciona al usuario de PDA la opción de aumentar el tamaño de la pantalla zoom en diferentes partes de la pantalla. Los usuarios a menudo están familiarizados con el diseño general de los sitios web comúnmente visitados, y pueden aprovechar esta función de cambio de tamaño para navegar mejor a través de las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar hipervínculos, luego acercarse a una región de interés para una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, PTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de visualización. En un entorno de escritorio, los usuarios generalmente están acostumbrados a tener pantallas presentadas en modo paisajista donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo de retrato, ya que es más fácil mantener el dispositivo en sus manos, mientras que otros pueden preferir el modo de paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para acomodar las preferencias de usuario de PDA, PTHINC proporciona una característica de orientación que le permite rotar perfectamente la pantalla entre el paisaje y el modo de retrato. El modo de paisaje es particularmente útil para los usuarios de PTHINC que con frecuencia acceden a sus sesiones web en dispositivos de escritorio y PDA, proporcionando a esos usuarios la misma configuración de paisaje familiar en diferentes dispositivos. Debido a que el espacio de pantalla es un recurso relativamente escaso en PDA, PTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder usar toda la pantalla en el PDA y aún permitir que el usuario controle e interactúe con ella, Pthinc reutiliza los botones de acceso directo típicos que se encuentran en PDA para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por PTHINC no requieren cambios en el entorno del sistema operativo;Simplemente son interceptados por la aplicación del cliente PTHINC cuando se presionan. La Figura 1 muestra cómo PTHINC utiliza los botones de acceso directo para proporcionar una navegación fácil y mejorar la experiencia general del usuario. Estos botones no son específicos del dispositivo, y el diseño que se muestra es común a los dispositivos PocketPC ampliamente utilizados.PTHINC proporciona seis accesos directos para admitir su modelo de uso: • Rotar la pantalla: el botón de registro en el borde izquierdo se usa para rotar la pantalla entre el retrato y el modo de paisaje cada vez que se presiona el botón.• Zoom Out: el botón más a la izquierda en la parte inferior delantera se usa para alejar la visualización de la sesión web que proporciona una vista de los ojos de las aves de la sesión web.• Acercar: el segundo botón más a la izquierda en la parte delantera inferior se usa para ampliar la sesión web para ver más claramente el contenido de interés.• Scroll direccional: el botón central en la parte inferior delantera se usa para desplazarse por la pantalla usando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta característica es particularmente útil cuando el usuario se ha acercado a una región de la pantalla, de modo que solo la parte de la pantalla es visible en la pantalla.• Mostrar/ocultar el teclado: el segundo botón más derecho en la parte inferior delantera se usa para levantar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar de PDA OS, proporcionando portabilidad en diferentes entornos PDA.• Sesión de cierre: el botón más a la derecha en la parte inferior delantera se usa para desconectarse de la sesión de PTHINC.PTHINC utiliza la pantalla táctil PDA, el lápiz óptico y los mecanismos estándar de la interfaz de usuario para proporcionar una metáfora de interfaz de usuario puntiaguda similar a la proporcionada por el mouse en un entorno de computación de escritorio tradicional.PTHINC no usa un cursor ya que los entornos PDA no proporcionan uno. En su lugar, un usuario puede usar el lápiz para tocar diferentes secciones de la pantalla táctil para indicar el enfoque de entrada. Un solo toque en la pantalla táctil genera un evento de mouse de clic único correspondiente. Un doble toque en la pantalla táctil genera un evento de mouse de doble clic correspondiente.PTHINC proporciona una emulación de mouse de dos botones mediante el uso del lápiz para presionar en la pantalla durante un segundo para generar un clic derecho del mouse. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones PDA en el entorno Common PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y centrarse en los cuadros de entrada simplemente aprovechando el área de interés deseada de interés. A diferencia de los navegadores web locales de PDA y otras aplicaciones PDA, PTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicaciones abiertas en lugar de estar limitadas a una sola ventana de aplicación en cualquier momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está disponible actualmente en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones se pueden mover presionando hacia abajo y arrastrando el lápiz similar a un mouse.3. Arquitectura del sistema PTHINC PTHINC se basa en la arquitectura de pantalla remota Thinc [1] para proporcionar un sistema de cliente delgado para PDA.PTHINC virtualiza la pantalla en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra debajo del servidor del servidor y por encima del FrameBuffer. Esta es una capa bien definida, de bajo nivel y dependiente del dispositivo que expone el hardware de video al sistema de visualización.Pthinc logra esto a través de un controlador de visualización virtual simple que intercepta los comandos de dibujo, los empaquetan y los envía a través de la red.145 Mientras que otros enfoques del cliente delgado interceptan comandos de visualización en otras capas del subsistema de pantalla, el enfoque de virtualización de la pantalla PTHINCS proporciona algunos beneficios clave para soportar eficientemente clientes PDA. Por ejemplo, la interceptación de comandos de visualización en una capa más alta entre las aplicaciones y el sistema de ventanas, como lo hace X [17], requiere replicar y ejecutar una gran funcionalidad en el PDA que tradicionalmente proporciona el sistema de ventanas de escritorio. Dado tanto el tamaño como la complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno PDA restringido habría demostrado ser una tarea desalentadora y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una estrecha sincronización en su operación e imponer una red inalámbrica entre ellas al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior al extraer píxeles del marrebuffer, ya que se representan proporciona una solución simple que requiere muy poca funcionalidad en el cliente PDA, pero también puede dar como resultado un rendimiento degradado. La razón es que para cuando el servidor de pantalla remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que puede haberle ayudado a codificar de manera eficiente, y debe recurrir a un mecanismo de codificación genérico y costoso en el servidor, así como.Un mecanismo de decodificación potencialmente costoso en el cliente PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de PTHINCS de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y el servidor, y la capacidad de codificar y decodificar eficientemente las actualizaciones de la pantalla. Al usar un enfoque de visualización virtual de bajo nivel, PTHINC puede codificar eficientemente los comandos de visualización de aplicaciones utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno PDA con restricciones de recursos. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. Copiar instruye al cliente que copie una región de la pantalla desde su FrameBuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de la ventana opaca sin tener que reenviar los datos de la pantalla del servidor. Sfill, Pfill y Bitmap son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. Sfill llena una región considerable en la pantalla con un solo color. Pfill replica un mosaico sobre una región de pantalla. Bitmap realiza un relleno con un mapa de bits y ceros como un colorante para aplicar un color de primer plano y fondo. Finalmente, RAW se usa para transmitir datos de píxeles no codificados para mostrarse literalmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede comprimirse para mitigar su impacto en el ancho de banda de la red.PTHINC ofrece sus comandos utilizando un mecanismo de actualización de servidor sin bloqueo, donde tan pronto como se generan actualizaciones de visualización en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de visualización, minimizando así el impacto que la latencia de red variable típica de los enlaces inalámbricos puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que la descripción del comando de recursos copia copiar un área de búfer de cuadro a coordenadas especificadas Sfill llena un área con un valor de color de color de píxeles dado un área con un patrón de píxel dado llena una región con un patrón de bits de pantalla cruda de visualización sin procesar en unDada ubicación Tabla 1: Los comandos de visualización del protocolo PTHINC PDA limitados y las redes inalámbricas pueden no poder mantener un servidor rápido que genere una gran cantidad de actualizaciones, PTHINCC puede unirse, recortar y descartar actualizaciones automáticamente si se produce la pérdida de red o la congestión, o el cliente no puede mantenerse al día con la tasa de actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde, por ejemplo, una página puede ser redactada varias veces a medida que el navegador lo representa en la marcha. En este caso, el PDA solo recibirá y representará el resultado final, lo que claramente es que todo el usuario es interesante en ver.Pthinc prioriza la entrega de actualizaciones al PDA utilizando un programador de actualización preventiva de tamaño más corto (SRSF). SRSF es análogo a la programación del tiempo de procesamiento más corto, que se sabe que es óptimo para minimizar el tiempo de respuesta medio en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes a menudo son elementos de embellecimiento de menor prioridad o, lo que es peor, pancartas y anuncios de página web, que tienen un valor cuestionable para el usuario mientras está navegando por la página. Usando SRSF, PTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre el PDA y el servidor.3.1 Mostrar administración para permitir a los usuarios acceder a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde un PDA mientras está en la carretera, PTHINC proporciona un mecanismo de cambio de tamaño para acercarse y salir de la visualización de una sesión web.El cambio de cambio de PTHINC es completamente compatible con el servidor, no por el cliente. El servidor resume las actualizaciones para que se ajusten dentro de la vista PDAS antes de transmitirse a través de la red.PTHINC usa algoritmo de remuestreo de los Fants para cambiar el tamaño de las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visuales con antialiasing adecuadamente y solo tiene requisitos computacionales modestos.El enfoque de cambio de tamaño de PTHINC tiene una serie de ventajas. Primero, permite que el PDA aproveche la potencia computacional ampliamente superior del servidor para usar algoritmos de remuestreo de alta calidad y producir actualizaciones de mayor calidad para que la PDA lo muestre. En segundo lugar, cambiar el tamaño de la pantalla no se traduce en requisitos de recursos adicionales para el PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se alcanza una mejor utilización de la red inalámbrica, ya que reescalar las actualizaciones reduce sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en un PDA para proporcionar una experiencia de visualización que mejor acomode las preferencias de los usuarios y el diseño de páginas o aplicaciones web, PTHINC proporciona un mecanismo de rotación de visualización para cambiar entre modos de visualización de paisajes y retratos.La rotación de la pantalla PTHINC es completamente compatible con el cliente, no por el servidor.PTHINC no recalcula explícitamente la ometría GE146 de las actualizaciones de visualización para realizar la rotación, lo que sería computacionalmente costoso. En cambio, PTHINC simplemente cambia la forma en que los datos se copian en el FrameBuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del FrameBuffer de izquierda a derecha. Cuando está en modo paisajista, los datos se copian a lo largo de las columnas del FrameBuffer de arriba a abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia con otra e imponen una sobrecarga de rendimiento.PTHINC proporciona su propio mecanismo de rotación para admitir una amplia gama de dispositivos sin imponer requisitos de características adicionales en el PDA. Aunque algunos dispositivos PDA más nuevos proporcionan soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario gire la interfaz de usuario completa PDAS antes de comenzar el cliente PTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones PDA rotaran su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un bajo rendimiento y la calidad de la visualización a medida que la rotación se realiza ingenuamente y no es completamente precisa.3.2 Video de reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo continuará aumentando. Los sitios web hoy en día no solo usan gráficos animados y flash para entregar contenido web de manera atractiva, sino que también utilizan videos de transmisión para enriquecer la interfaz web. Los usuarios pueden ver noticias previamente grabadas y en vivo en CNN, ver lo más destacados de los deportes en ESPN e incluso buscar en una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones.PTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivos virtuales para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admite transparentemente la reproducción de video. Además de esta arquitectura, PTHINC utiliza el espacio de colores YUV para codificar el contenido de video, que proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video PDA admite de forma nativa YUV y pueda realizar la conversión y escala del espacio de colores automáticamente. Como resultado, PTHINC puede proporcionar reproducción de video de pantalla completa sin ningún éxito de rendimiento. En segundo lugar, el uso de YUV permite una representación más eficiente de los datos de RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en el brillo que en el color. En particular, PTHINC usa el formato YV12, que permite codificar datos RGB a todo color utilizando solo 12 bits por píxel. En tercer lugar, los datos de YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite que PTHINC proporcione reproducción de video de una manera que sea independiente del formato. Finalmente, incluso si el hardware de video PDAS no puede acelerar la reproducción, el proceso de conversión del espacio de colores es lo suficientemente simple como para no imponer requisitos irrazonables en el PDA. Un ejemplo más concreto de cómo PTHINCC aprovecha el hardware de video PDA para admitir la reproducción de video en nuestra implementación de prototipo en el popular PDA Dell Axim X51V, que está equipado con el Acelerador Multimedia Intel 2700G. En este caso, PTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee a partir de esta región de memoria datos en el formato YV12. Cuando llega un nuevo marco de video, los datos de video se copian desde el búfer a la Figura 2: Test Bode Experimental Una superficie de superposición en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el Acelerator Intel realiza automáticamente la conversión y la escala del espacio de color. Al usar la superficie de superposición, PTHINC no tiene necesidad de volver a dibujar la pantalla una vez que termina la reproducción de video ya que la superficie superpuesta no se ve afectada. Además, se pueden manipular regiones de superposición específicas aprovechando el hardware de video, por ejemplo, para realizar la interpolación lineal de hardware para suavizar el marco y mostrarlo con pantalla completa, y para hacer una rotación automática cuando el cliente se ejecuta en modo paisajista.4. Resultados experimentales Hemos implementado un prototipo PTHINC que ejecuta el cliente en dispositivos Pocket PC de Windows Mobile ampliamente utilizados y el servidor en los sistemas operativos de Windows y Linux. Para demostrar su efectividad en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en las aplicaciones web. Presentamos resultados experimentales en diferentes dispositivos PDA para dos aplicaciones web populares, navegando por páginas web y reproduciendo contenido de video desde la web. Comparamos PTHINC con aplicaciones web nativas que se ejecutan localmente en el PDA para demostrar la mejora que PTHINC puede proporcionar sobre el enfoque tradicional del cliente grasa. También comparamos PTHINC con tres de los clientes delgados más utilizados que pueden ejecutarse en PDA, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (arquitectura informática independiente) y RDP (protocolo de escritorio remoto).4.1 Testbed experimental realizamos nuestros experimentos web utilizando dos PDA de PC de bolsillo inalámbrico diferentes en un Bed de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El Testbed consistió en dos dispositivos de clientes PDA, un monitor de paquetes, un servidor de cliente delgado y un servidor web. A excepción de los PDA, todas las otras máquinas eran servidores IBM Netfinity 4500R con CPU Dual de 933 MHz Intel PIII y 512 MB RAM y se conectaron en una red rápida conmutada de 100 Mbps. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue Nistnet 2.0.12 y el monitor de paquetes fue etéreo 0.10.9. Los clientes PDA conectados a la prueba de prueba a través de un punto de acceso inalámbrico 802.11b Lucent Orinoco AP-2000. Todos los experimentos que usan la red inalámbrica se realizaron a menos de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes es insignificante en nuestros experimentos. Se usaron dos PDA de PC de bolsillo para proporcionar resultados en modelos más antiguos y menos potentes y modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024 × 768 640 × 480 CLIC DE RESIONA DE RESIMENTO DE LA PROFUNDSí No Tabla 2: Configuración de la configuración de la prueba de cliente delgado una CPU PXA255 PXA255 de 400 MHz y 64 MB RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 2.4GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51V con una CPU XPA270 XPA270 de 624 MHz y 64 MB RAM con Windows Mobile 5.0 y una red inalámbrica integrada 802.11b. El X51V tiene un acelerador multimedia Intel 2700G con memoria de video de 16 MB. Ambos PDA son capaces de color de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con resolución de 240 × 320. El X51V tiene una pantalla diagonal de 3.7 pulgadas con 480 × 640. Los cuatro clientes delgados que utilizamos admiten diferentes niveles de calidad de pantalla como se resume en la Tabla 2. El cliente RDP solo admite una resolución fija de pantalla de 640 × 480 en el servidor con profundidad de color de 8 bits, mientras que otras plataformas proporcionan niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente delgado configurados para dos posibles resoluciones, 1024 × 768 y 640 × 480. Tanto ICA como VNC se configuraron para usar la resolución PDA nativa de profundidad de color de 16 bits. El prototipo PTHINC actual utiliza el color de 24 bits directamente y el cliente muestra las actualizaciones de la profundidad de color de 16 bits disponibles en el PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits, ya que no admite una mejor profundidad de color. Dado que tanto PTHINC como ICA proporcionan la capacidad de ver la pantalla redimensionada para que se ajuste a la pantalla, medimos a ambos clientes con y sin la pantalla redimensionada para que se ajuste a la pantalla PDA. Cada cliente delgado fue probado utilizando el paisaje en lugar del modo de retrato cuando está disponible. Todos los sistemas se ejecutan en el X51V podrían ejecutarse en modo paisajista porque el hardware proporciona una función de modo de paisaje. Sin embargo, el X5 no proporciona esta funcionalidad. Solo PTHINC admite directamente el modo de paisaje, por lo que fue el único sistema que podría ejecutarse en modo paisajista tanto en X5 como en X51V. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor NetFinity como el servidor de cliente delgado. Para los dos sistemas diseñados para servidores de Windows, ICA y RDP, ejecutamos el servidor Windows 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, VNC y PTHINC, ejecutamos la distribución inestable de Debian Linux con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones del servidor de cliente delgado disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix Metaframe XP Server para la versión de la función Windows 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 usando RDP 5.2 y VNC 4.0.4.2 Benchmarks de aplicaciones Utilizamos dos puntos de referencia de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicaciones comunes, navegar por páginas web y reproducir contenido de video desde la web. Dado que muchos sistemas de cliente delgado, incluidos dos de los probados están cerrados y patentados, medimos su rendimiento de manera no invasiva al capturar el tráfico de red con un monitor de paquetes y usar una variante de evaluación comparativa de cámara lenta [13] desarrollada previamente para medir delgadas-Cliente rendimiento en entornos PDA [10]. Esta metodología de medición representa tanto el desacoplamiento de visualización que puede ocurrir entre el cliente y el servidor en los sistemas de cliente delgado, así como el tiempo de procesamiento del cliente, lo que puede ser significativo en el caso de PDA. Para medir el rendimiento de la navegación web, utilizamos un punto de referencia de navegación web basada en la prueba de carga de la página de texto web desde la suite de referencia de bench Ziff-Davis [7]. El punto de referencia consiste en una carga controlada de JavaScript de 55 páginas desde el servidor web. Las páginas contienen texto y gráficos con páginas que varían en tamaño. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El punto de referencia I-Bench original se modificó para la evaluación comparativa de cámara lenta al introducir retrasos de varios segundos entre las páginas usando JavaScript. Luego se ejecutaron dos pruebas, una donde los retrasos se agregaron entre cada página, y una donde las páginas se cargan continuamente sin esperar que se muestren en el cliente. En la primera prueba, los retrasos se ajustaron suficientemente en cada caso para garantizar que cada página se pueda recibir y mostrar en el cliente por completo sin superposición temporal para transferir los datos que pertenecen a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución del punto de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La relación entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera contabilidad de latencia para el tiempo de procesamiento del cliente. Para ejecutar el punto de referencia de navegación web, utilizamos Mozilla Firefox 1.0.4 que se ejecuta en el servidor de cliente delgado para los clientes delgados y Windows Internet Explorer (IE) Mobile para 2003 y móvil para 5.0 para los navegadores nativos en los PDA X5 y X51V, respectivamente. En todos los casos, el navegador web utilizado fue dimensionado para llenar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un punto de referencia de video que consistía en reproducir un video clip MPEG-1 de 34.75s que contiene una combinación de noticias y programación de entretenimiento en resolución de pantalla completa. El video clip es de 5.11 MB y consta de 834 marcos de 352x240 píxeles con una velocidad de cuadro ideal de 24 cuadros/seg. Medimos el rendimiento del video utilizando la evaluación comparativa de cámara lenta mediante el monitoreo del tráfico de paquetes resultante a dos tasas de reproducción, 1 cuadros/segundo (FPS) y 24 fps, y comparando los resultados para determinar los retrasos de reproducción y las caídas de cuadros que ocurren a 24 FPS para medir el video generalCalidad [13]. Por ejemplo, el 100% de calidad significa que todos los cuadros de video se reproducían a velocidad en tiempo real. Por otro lado, el 50% de calidad podría significar que la mitad de los datos de video se eliminaron, o que el clip tardó el doble en reproducirse a pesar de que se mostraron todos los datos de video. Para ejecutar el punto de referencia de video, utilizamos Windows Media Player 9 para servidores de cliente delgado basados en Windows, Mplayer 1.0 Pre 6 para servidores de cliente delgado basado en X y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmenteen los PDA x5 y x51v, respectivamente. En todos los casos, el reproductor de video utilizado fue dimensionado para llenar toda la región de visualización disponible.4.3 Mediciones Las Figuras 3 y 4 muestran los resultados de la ejecución de las cejas web148 0 1 10 100 PTHINC DIGEL DISTE HTHINCICA DIZED ICAVNCRDPLOCAL LATORMA (S) AXIMA X5 (640x480 o menos) Axim x51V (640x480) Axim X5 (1024x768) Axim X51V (1024x768)Figura 3: Bencillo de navegación: punto de referencia de latencia de página promedio. Para cada plataforma, mostramos resultados para hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51V, dependiendo de si cada configuración fue compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta en la resolución de visualización del PDA, 480 × 680 o menos para el X51V y el X5. RDP solo funciona a 640 × 480. Ninguna plataforma podría admitir la resolución de visualización 1024 × 768. ICA solo funcionó en el X5 y no pudo ejecutarse en el X51V porque no funcionó en Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma.PTHINC proporciona la latencia de navegación web promedio más baja en ambos PDA. En el X5, PTHINC funciona hasta 70 veces mejor que otros sistemas de cliente delgado y 8 veces mejor que el navegador local. En el X51V, PTHINCC se desempeña hasta 80 veces mejor que otros sistemas de cliente delgado y 7 veces mejor que el navegador nativo. De hecho, todos los clientes delgados, excepto VNC, superan el navegador PDA local, lo que demuestra los beneficios de rendimiento del enfoque de cliente delgado. Los estudios de usabilidad han demostrado que las páginas web deberían tardar menos de un segundo en descargar para que el usuario experimente una experiencia de navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados entregan latencias de página web de Subsecond. En contraste, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor, ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y hacer toda la representación utilizando las capacidades limitadas del PDA. Los clientes delgados pueden aprovechar el hardware del servidor más rápido y un navegador web altamente sintonizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la próxima plataforma más rápida después de PTHINC. Sin embargo, RDP solo puede funcionar a una resolución fija de 640 × 480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla PDA para que no sea necesario enviar actualizaciones que no sean visibles en la pantalla PDA. Esto proporciona un beneficio de rendimiento suponiendo que el contenido web restante no se ve, pero degrada el rendimiento cuando un usuario se desplaza por la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de pantalla significativamente más baja en comparación con los otros clientes delgados y con un recorte de visualización adicional no utilizado por otros sistemas. Como resultado, RDP Performance solo no proporciona una comparación completa con las otras plataformas. En contraste, PTHINC proporciona el rendimiento más rápido y al mismo tiempo proporciona una calidad de visualización igual o mejor que los otros sistemas.0 1 10 100 1000 PTHINC DISELED PTHINCICA DISET DISET ICAVNCRDPLOCAL DataSize (KB) Plataforma Axim X5 (640x480 o menos) Axim X51V (640x480) Axim X5 (1024x768) Axim X51V (1024x768) Figura 4: Benchmark de browsing: Página de promedio de datos acreditado y videos y vales de datos de la página de promedio.ICA proporciona una calidad de visualización similar a PTHINC, estos sistemas proporcionan una comparación más justa de los diferentes enfoques de cliente delgado. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de clientes del cliente y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles sin procesar. En ambos casos, su rendimiento fue limitado en parte porque sus clientes de PDA no pudieron mantenerse al día con la tasa a la que se mostraban páginas web. La Figura 3 también muestra mediciones para aquellos clientes delgados que admiten el cambio de tamaño de la pantalla para que se ajuste a la pantalla PDA, a saber, ICA y PTHINC. El cambio de tamaño requiere un procesamiento adicional, lo que da como resultado latencias de página web promedio más lenta. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño versus no cambiar el tamaño es mucho más sustancial que para PTHINC. ICA realiza un cambio de tamaño en el cliente PDA más lento. En contraste, PTHINCC aprovecha el servidor más potente para cambiar el tamaño, reduciendo la diferencia de rendimiento entre cambiar el tamaño y no el cambio de tamaño. A diferencia de ICA, PTHINC puede proporcionar latencias de descarga de la página web de Subsecond en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de movimiento lento de las pruebas. Todas las plataformas tienen modestos requisitos de transferencia de datos de aproximadamente 100 kb por página o menos. Esto está dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML a menudo se considera una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente de ancho de banda, en gran parte como resultado de usar solo profundidad de color de 8 bits y recorte de pantalla para que no transfiera la página web completa al cliente.En general, por ejemplo, los requisitos de datos más grandes, un poco más que VNC. Esto es en gran parte el resultado de los prototipos PTHINC actuales que falta de soporte nativo para datos de color de 16 bits en el protocolo de cable. Sin embargo, este resultado también destaca el rendimiento de PTHINC, ya que es más rápido que todos los demás sistemas, incluso mientras se transfiere más datos. Además, como los modelos PDA más nuevos admiten un color completo de 24 bits, estos resultados indican que PTHINC continuará proporcionando un buen rendimiento de navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes delgados al mostrar una página web, en este caso del popular sitio web de noticias de la BBC. Except for ICA, all of the screenshots were taken on the X51v in landscape mode 149 Figure 5: Browser Screenshot: RDP 640x480 Figure 6: Browser Screenshot: VNC 1024x768 Figure 7: Browser Screenshot: ICA Resized 1024x768 Figure 8: Browser Screenshot: pTHINC Resized1024x768 Uso de la configuración de resolución de visualización máxima para cada plataforma dada en la Tabla 2. La captura de pantalla ICA se tomó en el X5 ya que ICA no se ejecuta en el X51V. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla del dispositivo real, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio de pantalla para controles y elementos de UI, lo que requiere que el usuario se desplace para acceder al contenido completo de la sesión de navegación web. La Figura 6 muestra que VNC hace un mejor uso del espacio de pantalla y proporciona una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a su falta de soporte para cambiar el tamaño. La Figura 7 muestra la capacidad de ICAS para mostrar la página web completa dada su soporte de cambio de tamaño, pero que su falta de capacidad de paisaje y algoritmo de cambio de tamaño más pobre comprometen significativamente la calidad de la visualización. En contraste, la Figura 8 muestra PTHINC utilizando el cambio de cambio para proporcionar una pantalla completa de alta calidad del ancho completo de la página web.Pthinc maximiza toda la región de observación moviendo todos los controles a los botones PDA. Además, PTHINC aprovecha el poder computacional del servidor para usar un algoritmo de cambio de tamaño de alta calidad para cambiar el tamaño de la pantalla para que se ajuste a la pantalla PDA sin sobrecarga significativa. Las figuras 9 y 10 muestran los resultados de ejecutar el punto de referencia de reproducción de video. Para cada plataforma, excepto ICA, mostramos resultados para una configuración X5 y X51V. ICA no pudo funcionar en el X51V como se señaló anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaron el entorno que un usuario tendría que acceder a una sesión web desde una computadora de escritorio y un PDA. Como tal, se usó una resolución de visualización del servidor 1024 × 768 siempre que fue posible y el video se mostró en pantalla completa. RDP se limitó a la resolución de visualización de 640 × 480 como se señaló anteriormente. Dado que ver toda la pantalla de video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajuste a la pantalla PDA para aquellas plataformas que admitieron esta función, a saber, ICA y PTHINC. La Figura 9 muestra la calidad del video para cada plataforma.Pthinc es el único cliente delgado capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video PDA nativo. Todos los otros clientes delgados ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51V que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo lograr una calidad de video del 10%. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5.El soporte de video nativo de PTHINCS permite un rendimiento de video superior, mientras que otros clientes delgados sufren de su incapacidad para distinguir el video de las actualizaciones de visualización normales. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con el flujo de actualizaciones generadas, lo que resulta en marcos caídos o largos tiempos de reproducción. VNC sufre más lejos de su modelo de actualización del cliente-Pull porque los marcos de video se generan más rápido que la tasa a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de visualización. La Figura 10 muestra los datos totales transferidos durante 150 0% 20% 40% 60% 80% 100% PthincicaVncrdplocal Videoquality Platform Axim x5 Axim x51v Figura 9: Benchmark de videos: Calidad de video de pantalla completa 0 1 10 100 PthincicaVncrdplocal VideodataSize (MB) Plataforma AXX X5 AXIMX51V Figura 10: Video Benchmark: Full -Screen Video Data Reproducción de video para cada sistema. El reproductor nativo es la plataforma más eficiente de ancho de banda, que envía menos de 6 MB de datos, que corresponde a aproximadamente 1.2 Mbps de ancho de banda.La calidad de video del 100% de PTHINCS requiere aproximadamente 25 MB de datos que corresponden a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes delgados envían menos datos que Thinc, lo hacen porque están dejando caer datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los diferentes clientes delgados al mostrar el videoclip. A excepción de ICA, todas las capturas de pantalla se tomaron en el X51V en modo paisajista utilizando la configuración de resolución de visualización máxima para cada plataforma dada en la Tabla 2. La captura de pantalla ICA se tomó en el X5 ya que ICA no se ejecuta en el X51V. Las Figuras 11 y 12 muestran que RDP y VNC no pueden mostrar todo el marco de video en la pantalla PDA. RDP desata el espacio de pantalla para elementos de interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que ICA proporciona un cambio de tamaño para mostrar todo el marco de video, pero no cambió el tamaño proporcional de los datos de video, lo que resultó en artefactos de visualización extraños. En contraste, la Figura 14 muestra PTHINC utilizando el cambio de cambio para proporcionar una pantalla completa de alta calidad de todo el marco de video.PTHINC proporciona una pantalla de video visualmente más atractiva que RDP, VNC o ICA.5. Trabajo relacionado Varios estudios han examinado el rendimiento de la navegación web de la computación del cliente delgado [13, 19, 10]. La capacidad de los clientes delgados para mejorar el rendimiento de la navegación web en los PDA inalámbricos se demostró cuantitativamente en un estudio previo por uno de los autores [10]. Este estudio demostró que los clientes delgados pueden proporcionar un rendimiento de navegación web más rápido y una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web que incluye contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio anterior y considere cuestiones importantes, como cómo los clientes delgados existentes utilizables se encuentran en los entornos PDA, las compensaciones entre la usabilidad y el rendimiento del cliente delgado, el rendimiento en diferentes dispositivos PDA y el rendimiento de los clientes delgados en la web común-Las aplicaciones relacionadas como el video. Se han desarrollado muchos clientes delgados y algunos tienen clientes PDA, incluidos Microsofts Remote Desktop [3], Citrix MetRAframe XP [2], Virtual Network Computing [16, 12], GotomyPC [5] y Tarantella [18]. Estos sistemas se diseñaron primero para informática de escritorio y modernizados para PDA. A diferencia de PTHINC, no abordan los problemas clave de la arquitectura del sistema y la usabilidad importantes para los PDA. Esto limita su calidad de pantalla, rendimiento del sistema, espacio de pantalla disponible y usabilidad general en PDA.PTHINC se basa en trabajos anteriores de dos de los autores en Thinc [1], extendiendo la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir de manera eficiente los dispositivos PDA para aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en usar proxies de transcodificación y almacenamiento en caché junto con el modelo de cliente FAT [11, 9, 4, 8]. Funcionan empujando la funcionalidad a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de ThinClient difiere fundamentalmente de estos enfoques de cliente grasa al empujar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en los navegadores web de escritorio y las aplicaciones auxiliares para trabajar sin problemas con los sistemas de producción sin ninguna configuración proxy adicional o modificaciones de navegador web. Con el surgimiento de la navegación web en pequeños dispositivos de visualización, los sitios web se han rediseñado utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptar las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web de Opera Mini [15], que utiliza un enfoque similar al modelo de cliente delgado para proporcionar acceso en varios dispositivos móviles que normalmente serían incapaces de ejecutar un navegador web. En lugar de requerir que el dispositivo procese páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarlo al teléfono.6. Conclusiones Hemos introducido PTHINC, una arquitectura de cliente delgado para PDA inalámbricos.PTHINC proporciona mecanismos de arquitectura y usabilidad clave, como cambiar el tamaño de la pantalla del lado del servidor, la rotación de la pantalla junto al cliente utilizando técnicas de copia simple, soporte de video YUV y maximización del espacio de pantalla para mostrar actualizaciones y aprovechar los botones de control PDA existentes para elementos de interfaz de usuario.Pthinc admite transparentemente los navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y máquinas de escritorio, proporcionando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y con todas las funciones en dispositivos heterogéneos. Hemos implementado PTHINC y medimos su rendimiento en las aplicaciones web en comparación con los sistemas existentes del cliente delgado y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos inalámbricos móviles demuestran que PTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente delgado existentes, y 8 veces mejor que un navegador PDA nativo. Además, PTHINC es el único cliente delgado de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Video Screenshot: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA RESED 1024X768 Figura 14: Video de videos: PTHINC RESED 1024X768 que proporciona transparentemente a completo-Pantalla, reproducción de video de velocidad de fotograma completo, que hace sitios web con contenido multimedia accesible para usuarios web móviles.7. Agradecimientos Este trabajo fue apoyado en parte por NSF ITR Otorges CCR0219943 y CNS-0426623, y un premio IBM SUR.8. Referencias [1] R. Baratto, L. Kim y J. Nieh. THINC: una arquitectura de pantalla virtual para la informática del cliente delgado. En Actas del Simposio 20 ACM sobre Principios de sistemas operativos (SOSP), octubre de 2005. [2] Metaframe de Citrix.http://www.citrix.com.[3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia técnica. Microsoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3com Palmpilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] Gotomypc.http://www.gotomypc.com/.[6] Ley de portabilidad y responsabilidad del seguro de salud.http://www.hhs.gov/ocr/hipaa/.[7] I-Bench versión 1.5.http: //etestinglabs.com/benchmarks/i-bench/i-bench.asp.[8] A. Joshi. En agentes proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5 (4): 233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e implementación de un proxy de almacenamiento en caché suave. Redes informáticas y sistemas ISDN, 30 (22-23): 2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejora de la navegación web en PDA inalámbricos utilizando computación de cliente delgado. En Actas de la 13ª Conferencia Internacional de la World Wide Webs (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. Transquid: proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre temas de investigación en Ingeniería de Datos (Ride 02), febrero de 2002. [12] .NET VNC Viewer para PocketPC.http://dotnetvnc.sourceforge.net/.[13] J. Nieh, S. J. Yang y N. Novik. Medición del rendimiento del cliente delgado utilizando evaluación comparativa de cámara lenta. ACM trans. Sistemas informáticos, 21 (1): 87-115, febrero de 2003. [14] J. Nielsen. Diseño de usabilidad web. New Riders Publishing, Indianapolis, IN, 2000. [15] Opera Mini Browser.http://www.opora.com/products/mobile/operamini/.[16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de red virtual. IEEE Internet Computing, 2 (1), enero/feb.1998. [17] R. W. Scheifler y J. Gettys. El sistema de ventana X. ACM trans. Gr., 5 (2): 79-106, abril de 1986. [18] Sun Secure Global Desktop.http://www.sun.com/software/products/sgd/.[19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de navegación web de la computación inalámbrica del cliente delgado. En Actas de la 12ª Conferencia Internacional de la World Wide Webs (WWW), mayo de 2003. 152