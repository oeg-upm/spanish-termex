Conciencia del contexto para el soporte de interacción grupal Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut Für Pevasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {Ferscha, Holzmann, Oppl}@Soft.Uni-Linz.ac.Ac Abstract en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en este resumen en estaDocumento, presentamos un sistema implementado para admitir la interacción grupal en entornos informáticos distribuidos móviles. Primero, se proporciona una introducción a la informática de contexto y una motivación para usar información contextual para facilitar la interacción grupal. Luego presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios y las proximidades espaciales entre ellos, y una para la aplicación real de contexto, que brinda servicios parainteracción grupal. Categorías y descriptores de sujetos c.2.4 [Redes de comunicación por computadora]: sistemas distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y principios]: Sistemas de usuario/máquina - Factores humanos. H.5.3 [Interfaces de información y presentación]: interfaces de grupo y organización: interacción asíncrona, computación colaborativa, teoría y modelos, interacción sincrónica. Diseño de términos generales, experimentación 1. Introducción Los entornos informáticos de hoy se caracterizan por un número creciente de poderosos dispositivos móviles conectados de forma inalámbrica. Los usuarios pueden moverse a través de un entorno mientras llevan sus computadoras con ellos y tienen acceso remoto a la información y los servicios, en cualquier momento y en cualquier lugar. Aparecen nuevas situaciones, donde el contexto de los usuarios, por ejemplo, su ubicación actual o personas cercanas, es más dinámica;El cálculo no ocurre en una sola ubicación y en un solo contexto ya, sino que comprende una multitud de situaciones y ubicaciones. Este desarrollo lleva a una nueva clase de aplicaciones, que son conscientes del contexto en el que se ejecutan y que unen mundos virtuales y reales. Motivado por esto y el hecho de que solo se han realizado solo unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema, al que referimos como Sistema de soporte de interacción grupal (GISS). Admite la interacción grupal en entornos informáticos distribuidos móviles de una manera que los miembros del grupo no necesitan en el mismo lugar más tiempo para interactuar entre sí o simplemente para ser conscientes de la situación de los demás. En los siguientes subcapteres, daremos una breve descripción general sobre la computación consciente del contexto y motivaremos sus beneficios para respaldar la interacción grupal. Se presenta un marco de software para desarrollar aplicaciones sensibles a los contextos, que sirve como middleware para GISS. El Capítulo 2 presenta la arquitectura de GISS, y el Capítulo 3 y 4 discuten los conceptos de detección y interacción grupal de GISS con más detalle. El Capítulo 5 ofrece un resumen final de nuestro trabajo.1.1 ¿Qué es la computación de contexto? Según el diccionario en línea de Merriam-Websters, el contexto se define como las condiciones interrelacionadas en las que existe algo o ocurre. Debido a que esta definición es muy general, se han hecho muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para el contexto. El término contexto se ha introducido primero en [10] donde el contexto se conoce como ubicación, identidades de personas y objetos cercanos, y cambios a esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, a saber, la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación de los usuarios, el entorno, la identidady tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información de la que puede usarse para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluidos el usuario y las aplicaciones.[4] [4] identifica cuatro tipos principales de información de contexto (a veces denominado dimensiones de contexto), que son, con respecto a la caracterización de la situación de una entidad, más importante que otras. Estos son ubicación, identidad, tiempo y actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundario). Por ejemplo, si conocemos la identidad de una persona, podemos obtener fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). De acuerdo con esta definición, [4] define que un sistema es contextable si utiliza contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea de los usuarios.[4] también ofrece una clasificación de las características para aplicaciones conscientes de contexto, que comprende la presentación de información y servicios a un usuario, ejecución automática de un servicio y etiquetado de contexto a información para una recuperación posterior. Figura 1. Las capas de una computación de contexto de sistema consciente de contexto se basan en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y usar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas entre (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe transformarse, agregarse e interpretarse (transformación del contexto) y representada en un modelo mundial de contexto abstracto (representación del contexto), ya sea centralizada o descentralizada. Finalmente, la información de contexto almacenado se utiliza para desencadenar ciertos eventos de contexto (activación de contexto).[7] 1.2 Interacción grupal en contexto después de estas definiciones abstractas y formales sobre qué es el contexto y la informática del contexto, ahora nos centraremos en el objetivo principal de este trabajo, a saber, cómo se puede apoyar la interacción de los miembros del grupo móvil utilizando información de contexto. En [6] hemos identificado que los sistemas organizacionales son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, debe haber un sistema de gestión de información y conocimiento, que es capaz de apoyar a un equipo con sus necesidades de recopilación de procesos y conocimientos de procesamiento de información. La siguiente parte es el sistema de concientización, que se dedica a la perceptualización de los efectos de la actividad del equipo. Lo hace comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea sincrónicos o asíncronos, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad implementan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como a la captura y entrega de información de conciencia de y en cualquier lugar. Finalmente, pero es importante, el sistema de innovación organizacional integra aspectos del equipo en sí, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos del soporte del equipo, nos centramos en la interacción y cubrimos en parte la movilidad y el apoyo a la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para admitir la interacción grupal. Creemos que la información sobre la situación actual de una persona proporciona un valor excedente a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro tenga en cuenta el estado de disponibilidad o la ubicación actual de otro miembro del grupo, lo que hace posible formar grupos dinámicamente, colocar post-its virtuales en el mundo real o determinar cuálLa gente está cerca. Figura 2. Soporte para grupos móviles [6] La mayoría de las aplicaciones de contexto de hoy en día usan solo ubicación y tiempo, y la ubicación se conoce como un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo está en la utilización de la información de ubicación e información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizado, no es suficiente para apoyar la interacción grupal, por lo que también aprovechamos los otros tres tipos principales, a saber, la identidad, el tiempo y la actividad. Esto proporciona una descripción completa de la situación actual de los usuarios y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen en detalle en el Capítulo 4.4. Cuando observamos los tipos de información de contexto establecida anteriormente, podemos ver que todos están centrados en el usuario, teniendo en cuenta solo el contexto del propio usuario. Creemos que para el apoyo de la interacción grupal, el estado del grupo en sí también se ha tenido en cuenta. Por lo tanto, hemos agregado un quinto contexto del grupo contextidimensional, que comprende más que la suma de los contextos de miembros individuales. El contexto grupal incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un determinado grupo se reúne en este momento.1.3 Middleware de contexto El Sistema de soporte de interacción de grupo (GISS) utiliza el softwareFramework introducido en [1], que sirve como un middleware para desarrollar aplicaciones sensibles al contexto. Este llamado marco de contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes.89 Una característica principal del marco es la abstracción de la recuperación de la información de contexto a través de varios sensores y su entrega a un nivel en el que no aparece ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes tipos de mecanismos de recuperación de contexto;La recuperación de información está oculta al desarrollador de aplicaciones. Esto se logra por las llamadas entidades, que describen Objectse.g.Un usuario humano, que es importante para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, que se pueden cargar en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también se pueden utilizar para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre los cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos del almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad tiene que hacer referencia a un cargador de clase y una capa de transporte y búsqueda, que administra el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atribuye estas entidades poseen. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo puede activar eventos, que se dirigen a otros atributos y entidades respectivamente, independientemente de qué computadora física está ejecutando. Entre otras cosas, y el evento contiene el nombre del evento y una lista de parámetros que entregan información sobre el evento en sí. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (eventos-condición-acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un interprendedor de reglas, que atrapa eventos activados, verifica las condiciones asociadas con ellos y causa ciertas acciones. Estas reglas son referenciadas por la configuración de XML Entitys. Una regla en sí incluso puede desencadenar la inserción de nuevas reglas o la descarga de las reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar datos de sensores de bajo nivel de aplicaciones de alto nivel y oculta los detalles de comunicación externa del desarrollador de aplicaciones. Además, puede adaptar su comportamiento dinámicamente cargando atributos, entidades o ecarules en tiempo de ejecución.2. Descripción general de la arquitectura Como GISS utiliza el marco de contexto descrito en el Capítulo 1.3 Como middleware, cada usuario está representado por una entidad, así como el servidor central, que es responsable de la transformación del contexto, la representación del contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo es sobre la adquisición automatizada de la información de posición y su provisión independiente del sensor a nivel de aplicación. No solo sentimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos centramos en mantener al cliente lo más simple posible y reducir la comunicación entre el cliente y el servidor al mínimo. Cada cliente puede tener varios sensores de ubicación y/o proximidad conectados, que están encapsulados por los respectivos atributos del marco de contexto (encapsulación del sensor). Estos atributos son responsables de integrar implementaciones de sensores nativos en el marco de contexto y enviar información de posición dependiente del sensor al servidor. Consideramos que es muy importante apoyar diferentes tipos de sensores incluso al mismo tiempo, para mejorar la precisión de la ubicación, por un lado, al tiempo que proporciona un entorno generalizado de detección de ubicación con una transición perfecta entre diferentes técnicas de detección de ubicación, por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstractan la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas en ubicaciones estandarizadas. La información estandarizada y la información de proximidad de cada usuario se pasa a los llamados atributos de fusión del sensor, uno para ubicaciones simbólicas y una segunda para proximidades espaciales. Su trabajo es fusionar la ubicación y la información proximidad de los clientes, respectivamente, que se describe en detalle en el Capítulo 3.3. Cada vez que cambia la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios, los atributos de fusión del sensor notifican el atributo de núcleo GISS, que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede extenderse fácilmente por sensores adicionales, solo implementando los (típicamente dos) atributos para los sensores de encapsulación (algunos sensores pueden no necesitar una parte del lado del cliente), abstraer posiciones físicas yobservando la interfaz a Giss Core. Figura 3. Arquitectura del Sistema de soporte de interacción de grupo (GISS) El Attribido Core-Attribute de GISS es el coordinador central de la aplicación como lo muestra al usuario. No solo sirve como una interfaz para el subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad).90 Cada vez que se detecta un cambio en el contexto de uno o más usuarios, Giss Core evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y sobre los otros miembros de estos grupos. Siempre que sea necesario, se lanzan eventos a los clientes afectados para activar actividades con el contexto, como cambiar la presentación de la información de concientización o la ejecución de los servicios. La parte del lado del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no fue solo un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa se puede intercambiar fácilmente si todos los eventos definidos se tienen en cuenta y se entienden por la nueva interfaz-atributo. La interfaz de usuario implementada actualmente se divide en dos partes, que también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada encapsulación de mensajeros instantáneos, que, por un lado, interactúa con el servidor a través de eventos y, por otro lado, sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente: el Messenger instantáneo simple (SIM) de ICQ2 -Comppliant 3. Hemos elegido e instantáneo Messenger como front-end porque proporciona una interfaz bien conocida para la mayoría de los usuarios y facilita una integración perfecta del soporte de interacción grupal, lo que aumenta la aceptación y la facilidad de uso. Como la funcionalidad básica del mensajero instantáneo, para servir como cliente en una red de mensajería instantánea, sigue siendo completamente funcional, nuestra aplicación puede usar las características ya proporcionadas por el mensajero. Por ejemplo, la actividad y la identidad de los contextos se derivan de la red de mensajeros como se describe más adelante. La encapsulación de mensajeros instantáneos también es responsable de apoyar la comunicación grupal. A través de la interfaz del Messenger, proporciona medios de comunicación sincrónica y asincrónica, así como un sistema de recordatorio y herramientas con contexto para administrar grupos y el estado de disponibilidad propio. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, que se implementa en el visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede reemplazarse fácilmente por otras visualizaciones, por ejemplo, un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos para la comunicación asincrónica. Basado en una visión del plano de piso del área geográfica que el usuario reside actualmente, ofrece una visión general rápida de la cual las personas están cerca, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos el respaldo de detección de ubicación y el front-end de la aplicación para admitir la interacción grupal con más detalle.3. Sensación de ubicación En el siguiente capítulo, presentaremos un modelo de ubicación, que se utiliza para representar ubicaciones;Posteriormente, describiremos la integración de los sensores de ubicación y proximidad en 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net Más detalles. Finalmente, tendremos un aspecto más cercano sobre la fusión de la información de ubicación y proximidad, adquirida por varios sensores.3.1 Modelo de ubicación Un modelo de ubicación (es decir, se necesita una representación de contexto para la ubicación de información contextual) para representar las ubicaciones de los usuarios, para poder facilitar consultas relacionadas con la ubicación como dada una ubicación, devolver una lista de todos los objetos allí oDado un objeto, devuelva su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representan la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como la habitación P111 o el edificio de física, porque no requerimos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicación simbólica similar a la introducida en [11], que consiste en regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos nuevamente contienen habitaciones. También distinguimos cuatro tipos, a saber, la región (por ejemplo, todo un campus), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, cierto piso en un edificio) y área (por ejemplo, una cierta habitación). Presentamos un quinto tipo de ubicación, que nos referimos como semánticos. Estas ubicaciones semánticas sucias pueden aparecer en cualquier nivel de la jerarquía y pueden anidarse, pero no necesariamente tienen una representación geográfica. Los ejemplos para tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de contención de ubicación simbólica La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto.3.2 Sensores Nuestro arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación y sensores de proximidad, que detectan proximidades espaciales entre los usuarios. Como se describió anteriormente, cada sensor tiene un servidor, y en la mayoría de los casos una correspondiente implementación del lado del cliente también. Mientras que ClientAttributes (Sensor Abstraction) son responsables de adquirir datos de sensores de bajo nivel y transmitirlo al servidor, los atributos de encapsulación del sensor correspondiente los transforman en un formato uniforme e independiente del sensor, a saberproximidad, respectivamente.91 Posteriormente, la fusión del sensor de atributo respectivo se está activando con esta información independiente del sensor de cierto usuario, detectada por un sensor particular. Dichas notificaciones se realizan cada vez que el sensor adquiría nueva información. En consecuencia, los atributos de abstracción del sensor son responsables de detectar cuando un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si el usuario lo ha desenchufado) o cuándo la posición respectivamente no se puede determinar más (p. Ej. El lector de RFID no puede detectar etiquetas) y notifique a la fusión del sensor correspondiente sobre esto.3.2.1 Sensores de ubicación Para detectar posiciones físicas, el sensor encapsulationattribuye la información de posición dependiente del sensor asincrónicamente al servidor. Los atributos de abstracción del sensor de ubicación correspondiente recopilan estas posiciones físicas entregadas por los sensores de todos los usuarios, y realizan una mirada de repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, que asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar dicho mapeo, se lanza un evento para notificar a la fusión del sensor de ubicación del atributo sobre las ubicaciones simbólicas un determinado sensor de un usuario en particular determinado. Hemos implementado prototípicamente tres tipos de sensores de ubicación, que se basan en WLAN (IEEE 802.11), Bluetooth y RFID (identificación de radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias con respecto a la precisión, la cobertura y el esfuerzo administrativo, para evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor RFID, que se basa en un lector RFID activo. Tan pronto como el lector está conectado al cliente, escanea las etiquetas RFID activas en el rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta RSSI (información de resistencia a la señal de radio), que proporciona una precisión de posición de pocos centímetros y, por lo tanto, nos permite determinar qué RFID-TAG está más cerca. Debido a esta alta precisión, RFID se utiliza para localizar a los usuarios dentro de las habitaciones. La administración es bastante simple;Una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una sola ubicación simbólica. Un inconveniente es la mala disponibilidad, que se remonta al hecho de que los lectores de RFID siguen siendo muy caros. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN en todo el campus universitaria. La precisión de la posición alcanzada está en el rango de pocos metros y, por lo tanto, es adecuado para la detección de ubicación en la granularidad de las habitaciones. Una gran desventaja es que un mapa de toda el área debe calibrarse con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor Bluetooth, que detecta etiquetas Bluetooth (es decir, Bluetooth-Modules con posición conocida) en el rango y los transmite al servidor que se asigna a ubicaciones simbólicas. Debido al hecho de que no utilizamos la información de resistencia de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una sola dirección MAC Bluetooth está asociada con varias ubicaciones simbólicas, según las ubicaciones físicas como las cubiertas de módulos Bluetooth. Esto lleva a la desventaja de que el rango de cada etiqueta Bluetooth debe determinarse y asignarse a ubicaciones simbólicas dentro de este rango. Tabla 1. Comparación de sensores implementados Cobertura de precisión de sensores RFID <10 cm Pobre fácil Wlan 1-4 M muy bien muy bien muy bien TimeConsuming Bluetooth ~ 10 m bien que consumen mucho tiempo 3.2.2 Sensores de proximidad Cualquier sensor que pueda detectar si dos usuarios están en proximidad espacialse conoce como sensor de proximidad. Similar a los sensores de ubicación, los atributos del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de ID de usuario. Hemos implementado dos tipos de sensores de proximidad, que se basan en Bluetooth por un lado y en ubicaciones simbólicas fusionadas (ver Capítulo 3.3.1) por otro lado. La implementación Bluetooth va junto con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC Bluetooth ya determinadas en el rango de cierto cliente se están comparando con las de todos los demás clientes, y cada vez que la abstracción del sensor Bluetooth de atributo detecta la congruencia, notifica la fusión del sensor de proximidad sobre esto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la fusión del sensor de ubicación, por lo que no necesita una implementación del lado del cliente. Cada vez que cambia la ubicación simbólica fusionada de cierto usuario, verifica si está en la misma ubicación simbólica como otro usuario y nuevamente notifica la fusión del sensor de proximidad sobre la proximidad entre estos dos usuarios. El rango puede restringirse a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a la granularidad de la habitación. Un problema actualmente no resuelto es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicación en su mayoría no cubren la misma área geográfica.3.3 El núcleo de fusión del sensor del subsistema de detección de ubicación es la fusión del sensor. Fusiona datos de varios sensores, mientras se enfrenta a las diferencias relacionadas con la precisión, la cobertura y la tasa de muestra. Según los dos tipos de sensores descritos en el Capítulo 3.2, distinguimos entre la fusión de sensores de ubicación, por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales opera con información estandarizada (cf. Figura 3). Esto tiene la ventaja de que los sensores de posición y proximidad adicionales se pueden agregar fácilmente o los algoritmos de fusión pueden ser reemplazados por aquellos que son más sofisticados.92 La fusión se realiza para cada usuario por separado y tiene en cuenta las mediciones en un solo punto en el tiempo (es decir, no se utiliza información de historial para determinar la ubicación actual de un cierto usuario). El algoritmo recopila todos los eventos lanzados por los atributos de abstracción del sensor, realiza fusión y desencadena el atributo del núcleo GISS si la ubicación simbólica de un cierto usuario o la proximidad espacial entre los usuarios cambió. Una característica importante es el almacenamiento persistente de historia de ubicación y proximidad en una base de datos para permitir la recuperación futura. Esto permite que las aplicaciones visualicen el movimiento de los usuarios, por ejemplo.3.3.1 El objetivo de fusión del sensor de ubicación de la fusión de la información de ubicación es mejorar la precisión y la precisión fusionando el conjunto de ubicaciones simbólicas suministradas por varios sensores de ubicación, para reducir el número de estas ubicaciones a un mínimo, idealmente a un solo simbólicoUbicación por usuario. Esto es bastante difícil, porque diferentes sensores pueden diferir en precisión y frecuencia de muestreo también. El atributo de fusión del sensor de ubicación se desencadena por eventos, que son lanzados por los abstracciones del sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor por el cual se ha determinado la ubicación. Si la fusión del sensor de ubicación de atributo recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica el atributo del núcleo GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un cierto usuario está asociado con varias ubicaciones. Como se describe en el Capítulo 3.2.1, un sensor de ubicación única puede entregar múltiples ubicaciones simbólicas. Además, cierto usuario puede tener varios sensores de ubicación, que suministran ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión para reducir el número de ubicaciones simbólicas al mínimo (idealmente para una sola ubicación). En un primer paso, cada ubicación simbólica está asociada con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si se hace referencia por más de un sensor o si un solo sensor detecta múltiples etiquetas, que nuevamente se refieren a varias ubicaciones. Además, este número se agrega al número previamente calculado de ocurrencias de cada ubicación simbólica, que es una ubicación infantil de la considerada en la jerarquía de contención de ubicación. Por ejemplo, si, en la Figura 4, la habitación2 ocurre dos veces y el escritorio ocurre una sola vez, el valor 2 de la habitación2 se agrega al valor 1 del escritorio, por el cual el escritorio finalmente obtiene el valor 3. En un paso final, solo se quedan esas ubicaciones simbólicas que se asignan con el mayor número de sucesos. Se puede lograr una reducción adicional asignando prioridades a los sensores (basados en la precisión y la confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de solo contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, escrita en la base de datos y se notifica el atributo Giss sobre dónde está el usuario probablementesituado. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicación (es decir, el menor límite superior de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo de núcleo GISS se activa nuevamente.3.3.2 Sensor de proximidad Fusión de proximidad de proximidad La fusión es mucho más simple que la fusión de ubicaciones simbólicas. El fusionAttribute del sensor de proximidad correspondiente se desencadena por eventos, que son lanzados por la abstracción del sensor de proximidad-atributos. Estos eventos especiales contienen información sobre la identidad de los dos usuarios en cuestión, si actualmente están en proximidad espacial o si la proximidad ya no persiste, y por el cual se ha detectado esto con sensor de proximidad. Si el atributo de fusión del sensor se notifica por un cierto atributo de abstracción del sensor de proximidad sobre una proximidad espacial existente, primero verifica si ya se sabe que estos dos usuarios están en proximidad (detectados por otro usuario o por otro sensor de proximidad delusuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. Del mismo modo, si la fusión de proximidad del atributo se notifica sobre una proximidad final, verifica si se sabe que los usuarios están cerca, y escribe este cambio en el repositorio si no. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambió, se lanza un evento para notificar al atributo de núcleo GISS sobre esto.4. Interacción sensible al contexto 4.1 Descripción general En la mayoría de los sistemas actuales que respaldan la interacción en grupos, los medios proporcionados carecen de cualquier conciencia del contexto actual de los usuarios, por lo que no puede adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y proporcionar servicios adicionales, que ofrecen nuevas posibilidades al usuario. Además, creemos que la interacción en los grupos también debe tener en cuenta el contexto actual del grupo mismo y no solo el contexto de los miembros del grupo individual. Por esta razón, también recuperamos información sobre el contexto actual de los grupos, derivados de los contextos de los miembros del grupo junto con algún tipo de metaceformación (ver Capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación se corresponden con los cuatro tipos de contexto primarios dados en el Capítulo 1.1 - Identidad (I), ubicación (L), Tiempo (T) y Actividad (A). Como se indicó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario es interacción, para que podamos agregar un quinto tipo de conciencia de información de contexto (G) a la clasificación. Utilizando esta información de contexto, podemos activar actividades con el contexto en las tres categorías descritas en el Capítulo 1.1 - Presentación de la información (P), la ejecución automática de los servicios (a) y el etiquetado de contexto a la información para la recuperación posterior (t). La Tabla 2 ofrece una visión general de las actividades que ya hemos implementado;Se describen exhaustivamente en el Capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría de la actividad podría clasificarse. 93 Tabla 2. Clasificación del servicio implementado de actividades con el contexto L T I A G P P A T Ubicación Visualización X X X Soporte de construcción de grupos X X X X X Soporte para comunicación sincrónica x x x x Soporte para la comunicación asíncrona x x x x x x gestión de disponibilidad x x x soporte de gestión de tareas x x x soporte de reunión X x x x x razones para implementar estas características para aprovechar todos los cuatro tiposde información de contexto para apoyar la interacción grupal utilizando un conocimiento integral sobre la situación en la que se encuentra un solo usuario o un grupo completo. Un problema crítico para la aceptación del usuario de dicho sistema es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto para el usuario, hasta que llegamos a la solución que usamos en este momento. Aunque creemos que la interfaz de usuario que se ha implementado ahora ofrece la mejor compensación entre la integración perfecta de las características y la facilidad de uso, no sería un problema extender la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver Capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario a la que ya está acostumbrado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajero instantáneo como identificador, de modo que el usuario no tenga que registrar una cuenta adicional en ningún otro lugar (por ejemplo, el usuario puede usar su cuenta ICQ2 ya existente).4.2 Integración de mensajería instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el Socalled Simple Instant Messenger (SIM) 3. La implementación de este mensajero se lleva a cabo como un proyecto en SourceForge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se proporciona el soporte total para la notificación SMS (donde se proporciona desde el protocolo usado). SIM se basa en un concepto de complemento. Todos los protocolos y partes de la interfaz de usuario se implementan como complementos. Su arquitectura también se utiliza para extender las habilidades de aplicaciones para comunicarse con aplicaciones externas. Para este propósito, se proporciona un complemento de control remoto, mediante el cual SIM se puede controlar desde aplicaciones externas a través de Socket Connection. GISS utiliza ampliamente esta interfaz de control remoto para recuperar la lista de contactos, establecer el estado de disponibilidad de usuarios o enviar mensajes. 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ La funcionalidad del complemento se extendió de varias maneras, por ejemplo, para aceptar mensajes parauna cuenta (como si hubieran sido enviadas a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas con el mensajero instantáneo, que se visualiza al enumerar sus nombres como se puede ver en la Figura 5), también se usa para mostrar ubicaciones de otros miembros delos grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin llevar demasiado espacio o solicitar a los usuarios toda la atención. Una descripción más completa de estas características se da en el Capítulo 4.4.4.3 Fuentes de información de contexto Si bien el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el Capítulo 3, consideramos más tipos de contexto que la ubicación relevante para el soporte de la interacción grupal también. La hora local como una dimensión de contexto muy importante se puede recuperar fácilmente del reloj en tiempo real del sistema de usuarios. Además de la ubicación y el tiempo, también utilizamos información de contexto de la actividad y la identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajeros instantáneos subyacentes. La identidad (o más exactamente, la asignación de ID a los nombres, así como la información adicional del perfil de los usuarios) se puede destilarse fuera del contenido de la lista de contactos de los usuarios. La información sobre la actividad o cierto usuario solo está disponible en un área muy restringida, a saber, la actividad en la propia computadora. Otras actividades como hacer una llamada telefónica o algo similar, no se pueden reconocer con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de mensajeros instantáneos, por lo que solo proporciona una clasificación muy gruesa de la actividad de los usuarios (en línea, fuera de línea, lejos, ocupado, etc.). Aunque esto puede no ser muy información, seguramente es relevante y puede usarse para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un determinado grupo. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuál de las publicaciones disponibles de otros miembros del equipo, etc. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas se pueden ensamblar manualmente (por los usuarios que unen y dejan grupos) o se recuperan automáticamente. El contexto de un grupo es el contexto secundario y se agrega de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un solo miembro del grupo, el contexto de todo el grupo está cambiando y debe recalcularse. Con el conocimiento sobre el contexto de los usuarios y el contexto de los grupos a los que pertenece, podemos proporcionar varios servicios conscientes del contexto al usuario, lo que mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el Capítulo 4.4.94 4.4 Soporte de interacción grupal 4.4.1 Visualización de la información de ubicación Una característica importante es la visualización de la información de ubicación, lo que permite a los usuarios conocer la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el Capítulo 2, utilizamos dos formas diferentes de visualización. La quizás más importante es mostrar información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, por lo que siempre es visible sin atraer la atención de los usuarios (en comparación con una vista de dos moderno, que requiere una ventana propia.para mostrar un mapa del entorno). Debido al espacio restringido en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detección. A medida que utilizamos un modelo de ubicación jerárquica, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe mostrarse en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisaDe estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, a saber, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, se tomaría la habitación. La Figura 5 muestra una captura de pantalla del simple Messenger3 instantáneo3, donde la ubicación actual de esas personas, cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Además de la imagen, se muestra el giss-toolbar integrado e integrado, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): comunicación asincrónica para grupos (ver Capítulo 4.4.4), Recordatorios de contexto (ver Capítulo4.4.6), Visualización bidimensional de la información de ubicación, formación y gestión de grupos (ver Capítulo 4.4.2), gestión de disponibilidad con el contexto (ver Capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración GISS en el mensajero instantáneo simple3 como mostrar solo esta forma breve de ubicación puede no ser suficiente para el usuario, porque es posible que desee ver la posición más precisa disponible, se muestra una posición totalmente calificada si se hace clic en un nombre en la lista de contacto(por ejemplo, en forma de escritorio@room2@department1@1stfloor@edificio 1@campus). La segunda forma posible de visualización es gráfica. Hemos evaluado una vista tridimensional, que se basó en un modelo VRML del área respectiva (cf. Figura 6). Debido a la falta de problemas de navegación y usabilidad, decidimos usar una vista bidimensional del piso (se conoce como nivel en la jerarquía de ubicación, cf. Figura 4). También se proporcionan otros niveles de granularidad como la sección (por ejemplo, la construcción) y la región (por ejemplo, el campus). En esta vista basada en plano de piso, las ubicaciones actuales se muestran a la manera de los contactos ICQ2, que se colocan en la ubicación de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, si no está en la computadora en este momento, o ocupado si no quiere ser perturbado, se visualiza con la fuente de color de ICQ2, izquierda al lado del nombre. Además, la visión del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de la vida real y sirven como nuestro medio de comunicación asincrónica (más sobre los post-it virtuales se pueden encontrar en el Capítulo 4.4.4). Figura 6. Vista 3D del piso (VRML) La Figura 7 muestra el mapa bidimensional de un piso determinado, donde se encuentran actualmente varios usuarios (visualizados por su nombre y la flor que queda al lado). La ubicación del cliente, en el que se muestra el mapa, se visualiza mediante un círculo verde. A la derecha, se pueden ver dos postes virtuales. Figura 7. Vista 2D del piso Otra característica de la visión 2D es la visualización de UbicationHistory de los usuarios. A medida que almacenamos el historial completo de las ubicaciones de los usuarios junto con una marca de tiempo, podemos proporcionar información sobre las ubicaciones que ha estado en el tiempo. Cuando el mouse se mueve por el nombre de cierto usuario en la vista 2, las huellas de un usuario, colocadas en las ubicaciones que ha sido, se desvanecen más fuerte, cuanto más antigua sea la información de ubicación.95 4.4.2 Formación y administración de grupos para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos, que son construidos manualmente por personas que se unen y los dejan. Los grupos estáticos pueden dividirse aún más en dos subtipos. En grupos estáticos abiertos, todos pueden unirse y irse en cualquier momento, por ejemplo, para formar un grupo de asistentes a la conferencia de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, que decide, a qué personas pueden unirse, aunque todos podrían irse nuevamente en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo de sus amigos, lo que puede comunicarse con ellos fácilmente. En contraste con eso, también apoyamos la creación de grupos dinámicos. Están formados entre las personas, que están en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en ubicaciones, donde tiene sentido formar grupos, por ejemplo, en salas de conferencias o salas de reuniones, pero no en pasillos o al aire libre. Tampoco sería muy significativo formar un grupo solo de las personas que residen en el sector frontal izquierdo de un salón;En cambio, se debe considerar el salón completo. Por estas razones, se etiquetan todas las ubicaciones definidas en la jerarquía, ya sea que permitan la formación de grupos o no. Los grupos dinámicos también no solo forman granularidad de habitaciones, sino también en niveles más altos en la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. A medida que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos.4.4.3 Comunicación sincrónica para grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea;Algunas personas incluso ven mensajes instantáneos para ser la aplicación asesina real en Internet. Esto también ha motivado la decisión de construir GISS en un sistema de mensajería instantánea. En los sistemas de mensajeros de hoy, la comunicación entre pares es ampliamente compatible. Sin embargo, cuando se trata de comunicación en grupos, el apoyo es bastante pobre la mayor parte del tiempo. A menudo, solo es compatible con el envío de un mensaje a múltiples destinatarios, carece de medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo se pueden formar de miembros en la lista de contactos de otros, por lo que no pueden enviar mensajes a un grupo, donde no todos sus miembros son conocidos (que pueden ser el caso en el entorno, donde los participantes de una conferencia forman ungrupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos las entradas grupales en la lista de contactos de los usuarios;Permitirle fácilmente enviar mensajes a este grupo, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes grupales solo se entregan a las personas, que actualmente no están ocupadas, evitando así una perturbación por un mensaje, que posiblemente no es importante para el usuario. Estas características no se pueden llevar a cabo en la misma red de mensajería, por lo que cada vez que se envía un mensaje a una cuenta grupal, lo intercepemos y lo enrollamos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta grupal también se almacena centralmente, lo que permite a las personas consultar mensajes perdidos o simplemente ver el historial de mensajes.4.4.4 La comunicación asincrónica para grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más utilizada de comunicación asincrónica en las computadoras y está ampliamente aceptada y estandarizada. En el trabajo, apuntamos a la combinación de comunicación asincrónica con la conciencia de la ubicación. Por esta razón, presentamos el concepto de los llamados postits virtuales (Cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos postes virtuales podrían ser visibles para todos los usuarios que pasan o pueden restringirse a ser visibles solo para ciertos grupos de personas. Además, un post-IT virtual también puede tener una fecha de vencimiento después de la cual se deja caer y ya no se muestra. Otros también pueden comentar postes virtuales, proporcionando algunos de la interacción similar al foro, donde cada post-IT forma un hilo. Los post-it virtuales se muestran automáticamente, cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, se puede acceder a Post-It a través del Viewer 2D, donde se muestran todos los post-IT visibles. Todos los lectores de un post-IT se registran y se muestran al verlo, proporcionando algún tipo de conciencia sobre las actividades de los miembros del grupo en el pasado.4.4.5 Los mensajeros instantáneos de gestión de disponibilidad consciente del contexto en general proporcionan algún tipo de información de disponibilidad sobre un usuario. Aunque esta información solo se puede definir en una granularidad muy gruesa, hemos decidido utilizar estos medios para recopilar el contexto de actividad, porque la introducción de uno adicional disminuiría fuertemente la usabilidad del sistema. Para apoyar al usuario que administra su disponibilidad, proporcionamos una interfaz que permite al usuario definir las reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen el formulario en el evento (e) si la condición (c) entonces la acción (a), que está directamente respaldada por las eca-reglas del marco de contexto descrito en el Capítulo 1.3. La prueba de condiciones se desencadena periódicamente lanzando eventos (cada vez que cambia el contexto de un usuario). La condición en sí está definida por el usuario, que puede exigir el cambio de su estado de disponibilidad como acción en la regla. Como condición, el usuario puede definir su ubicación, un cierto tiempo (que también se desencadena diariamente, cada semana o cada mes) o cualquier combinación lógica de estos criterios.4.4.6 Los recordatorios de los recordatorios conscientes del contexto [14] se utilizan para dar al usuario la oportunidad de definir tareas y recordarlos, cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede verse como un post-it para uno mismo, que solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un determinado lugar o tiempo, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordarle al usuario tareas que quiere llevar a cabo cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumple con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para recordarlo nuevamente, por ejemplo, cinco minutos después o la próxima vez que un cierto usuario esté en proximidad espacial.96 4.4.7 Reconocimiento y notificación del contexto de las reuniones grupales con la información de contexto disponible, tratamos de reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce a un grupo que tiene una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos el contexto de ubicación y actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar, donde se considera que una reunión tiene sentido (por ejemplo, no en un corredor), se crea una reunión después de este lugar y todos los miembros del grupo ausentes sonnotificado de la reunión y la ubicación que tiene lugar. Durante la reunión, la función de comentarios de Post-It virtual proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se agrega automáticamente como una nota de la lista de comentarios. Al igual que el reconocimiento del comienzo de una reunión, el reconocimiento de su fin sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo obtienen la lista completa de comentarios como protocolo de reunión al final de la reunión.5. Conclusiones Este documento discutió los potenciales de apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de la computación de contexto y del contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para admitir la interacción grupal consciente de contexto en entornos distribuidos móviles. Se basa en un marco flexible y extensible, lo que permite una fácil adopción de fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales), así como la forma requerida de representación. Hemos desarrollado prototípicamente un conjunto de servicios, que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios, así como el contexto de los grupos en sí. Las características importantes son la formación dinámica de los grupos, la visualización de la ubicación en un mapa bidimensional, así como integra integrados en una comunicación asincrónica instantánea por post-its virtuales, que están vinculados a ciertas ubicaciones, y una disponibilidad consciente del contexto.Gestión, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de la información de ubicación y proximidad proporcionada por varios sensores, que proporciona una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes del sensor. Una historia de ubicaciones, así como de proximidades espaciales se almacena en una base de datos, lo que permite los servicios basados en la historia del contexto.6. Referencias [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Comportamiento de modelado de contexto por reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (Europar03).(Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073.[2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones conscientes del contexto: del laboratorio al mercado. IEEE Personal Communications, 4 (5) (1997), 58-64.[3] Chen, H., Kotz, D. Una encuesta de investigación informática móvil consciente de contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionar apoyo arquitectónico para la construcción de aplicaciones con contexto. Doctor.Tesis, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: estado del arte y desafíos. En los procedimientos del taller en el modelado de ubicación para la informática ubicua.(Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001).13-19.[6] Ferscha, A. Conciencia del espacio de trabajo en equipos virtuales móviles. En los procedimientos del 9º Taller Internacional IEEE sobre tecnologías habilitadoras: Infraestructura para empresas colaborativas (Wetice00).(Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277.[7] Ferscha, A. Coordinación en entornos de computación generalizados. En Actas del Duodécimo Taller Internacional IEEE sobre tecnologías habilitadoras: Infraestructura para empresas colaborativas (Wetice-2003).(9-11 de junio de 2003). IEEE Computer Society Press, 3-9.[8] Leonhard, U. Conciencia de ubicación de apoyo en sistemas distribuidos abiertos. Doctor.Tesis, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad mejorada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Computation Aplications in Archeology (1997) [10] Schilit, B.N., Theimer, M. Diseminación de información de mapa activo a hosts móviles. IEEE Network, 8 (5) (1994), 22-32.[11] Schilit, B.N. Una arquitectura del sistema para la informática móvil consciente de contexto. Doctor.Tesis, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyo a los grupos sociales persistentes en entornos informáticos ubicuos utilizando el servicio grupal efímero consciente del contexto. En Actas de la segunda conferencia internacional de IEEE sobre computación y comunicaciones generalizadas (PERCOM04).(14-17 de marzo de 2004). IEEE Computer Society Press, 287-296.[13] Pascoe, J. La arquitectura de nota Stick-E: extender la interfaz más allá del usuario. Actas de la 2da Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97).(Orlando, EE. UU., 1997), 261-264.[14] Dey, A., Abowd, G. Cybreminder: un sistema de contexto para apoyar los referentes. Actas del 2º Simposio Internacional sobre Computación de Handheld y Ubiquito (HUC00).(Bristol, Reino Unido, 2000), 172-186.97