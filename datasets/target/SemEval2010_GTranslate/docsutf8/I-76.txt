Negociación por secuestro y relajación Chiaki Sakama Departamento. Ciencias de la computadora y comunicación Wakayama University Sakaedani, Wakayama 640 8510, Japón sakama@sys.wakayama-u.ac.jp Katsumi Inoue Instituto Nacional de Informática 2-1-2 Hitotsubashi, Chiyoda-Ku Tokio 101 8430, Japón Ki@nii.ac.JP Resumen Este documento estudia un marco lógico para la negociación automatizada entre dos agentes. Suponemos que un agente que tiene una base de conocimiento representada por un programa lógico. Luego, introducimos métodos para construir contraproposios en respuesta a las propuestas hechas por un agente. Con este fin, combinamos las técnicas de abducción extendida de inteligencia artificial y relajación en la respuesta de consultas cooperativas para bases de datos. Estas técnicas se utilizan respectivamente para producir propuestas condicionales y propuestas de vecindad en el proceso de negociación. Proporcionamos un protocolo de negociación basado en el intercambio de estas propuestas y desarrollar procedimientos para calcular nuevas propuestas. Categorías y descriptores de asignaturas F.4.1 [Lógica matemática]: programación de lógica y restricción ;;I.2.11 [Inteligencia artificial distribuida]: Sistemas multiagentes Términos generales Teoría 1. Introducción La negociación automatizada se ha recibido una atención creciente en sistemas de múltiples agentes, y se han propuesto varios marcos en diferentes contextos ([1, 2, 3, 5, 10, 11, 13, 14], por ejemplo). La negociación generalmente procede en una serie de rondas y cada agente hace una propuesta en cada ronda. Un agente que recibió una propuesta responde de dos maneras. Uno es una crítica que es un comentario sobre si se acepta o no (partes de) la propuesta. El otro es una contrapropuesta, que es una propuesta alternativa realizada en respuesta a una propuesta anterior [13]. Para ver estas propuestas en la negociación individual, suponga que el siguiente diálogo de negociación entre un agente de compradores B y un agente vendedor S. (BI (o SI) representa una expresión de B (o S) en la ronda I-Th.) B1: Quiero comprar una computadora personal de la marca B1, con la especificación de CPU: 1GHz, memoria: 512Mb, HDD: 80GB y un controlador DVD-RW. Quiero obtenerlo al precio de menos de 1200 USD. S1: Podemos proporcionar a una PC la especificación solicitada si lo paga en efectivo. En este caso, sin embargo, los puntos de servicio no se agregan para este descuento especial. B2: No puedo pagarlo en efectivo. S2: En un precio normal, la PC solicitada cuesta 1300 USD. B3: No puedo aceptar el precio. Mi presupuesto es inferior a 1200 USD. S3: Podemos proporcionar a otra computadora la especificación solicitada, excepto que la marca B2 la hace. El precio es exactamente 1200 USD. B4: No quiero una PC de la marca B2. En cambio, puedo degradar un controlador de DVD-RW a CD-RW en mi propuesta inicial. S4: OK, acepto tu oferta. En este diálogo, en respuesta a la propuesta de apertura B1, se devuelve la contrapropuesta S1. En el resto del diálogo, B2, B3, S4 son críticas, mientras que S2, S3, B4 son contraprosales. Las críticas se producen evaluando una propuesta en una base de conocimiento de un agente. Por el contrario, hacer contrapropuestas implica generar una propuesta alternativa que sea más favorable para el agente que responde que el original. Se sabe que hay dos formas de producir contraproposales: extender la propuesta inicial o enmendar parte de la propuesta inicial. Según [13], el primer tipo aparece en el diálogo: A: Propongo que me proporcione el servicio X. B: Propongo que le proporciono el Servicio X si me proporciona el Servicio Z. El segundo tipo está en el diálogo: R: Propongo que le proporciono el servicio y si me proporciona el servicio X. B: Propongo que le proporciono el Servicio X si me proporciona el Servicio Z. Una negociación procede iterando tales diálogos de dar y atenta hasta que llega a un acuerdo/desacuerdo. En esos diálogos, los agentes generan (contra) propuestas razonando sobre sus propios objetivos u objetivos. El objetivo del agente A en los diálogos anteriores es obtener el servicio X. El agente B propone condiciones para proporcionar el servicio. Sin embargo, en el proceso de negociación, puede suceder que los agentes estén obligados a debilitar o cambiar sus objetivos iniciales para alcanzar un compromiso negociado. En el diálogo de 1022 978-81-904262-7-5 (RPS) c 2007 Ifaamas Un agente comprador y un agente vendedor presentado anteriormente, un agente del comprador cambia su objetivo inicial al degradar a un conductor de DVD-RW a CD-RW. Tal comportamiento generalmente se representa como meta-conocimiento específico de un agente o especificado como protocolos de negociación en problemas particulares. Actualmente, no existe una lógica computacional para la negociación automatizada que tenga reglas de inferencia general para producir (contra) propuestas. El propósito de este documento es mecanizar un proceso de construcción (contra) propuestas en diálogos de negociación uno a uno. Suponemos que un agente que tiene una base de conocimiento representada por un programa lógico. Luego presentamos métodos para generar tres tipos diferentes de propuestas. Primero, utilizamos la técnica de abducción extendida de inteligencia artificial [8, 15] para construir una propuesta condicional como una extensión del original. En segundo lugar, utilizamos la técnica de relajación en la respuesta de consultas cooperativas para bases de datos [4, 6] para construir una propuesta de vecindario como enmienda de la original. Tercero, combinando la abducción y relajación extendida, las propuestas condicionales del vecindario se construyen como extensiones modificadas de la propuesta original. Desarrollamos un protocolo de negociación entre dos agentes basado en el intercambio de estas contraproposiciones y críticas. También proporcionamos procedimientos para calcular propuestas en programación lógica. Este artículo está organizado de la siguiente forma: La Sección 2 presenta un marco lógico utilizado en este documento. La Sección 3 presenta métodos para construir propuestas y proporciona un protocolo de negociación. La Sección 4 proporciona métodos para calcular propuestas en la programación lógica. La Sección 5 discute obras relacionadas, y la Sección 6 concluye el documento.2. Los programas de lógica preliminares considerados en este documento son programas disyuntivos extendidos (EDP) [7]. Un EDP (o simplemente un programa) es un conjunto de reglas de la forma: L1;· · ·;Ll ← ll+1 ,..., Lm, no lm+1 ,..., no ln (n ≥ m ≥ l ≥ 0) donde cada li es un literal positivo/negativo, es decir, a o ¬A para un átomo A, y no es la negación como falla (NAF).no L se llama NAF-Literal. El símbolo ;representa la disyunción. El lado izquierdo de la regla es la cabeza, y el lado derecho es el cuerpo. Para cada regla R de la forma anterior, la cabeza (r), el cuerpo+ (r) y el cuerpo- (r) denotan los conjuntos de literales {l1 ,..., Ll}, {ll+1 ,..., Lm}, y {lm+1 ,..., Ln}, respectivamente. Además, no Body- (R) denota el conjunto de literales NAF {no lm+1 ,..., no ln}. Una disyunción de literales y una conjunción de (NAF) literales en una regla se identifican con sus conjuntos de literales correspondientes. Una regla R a menudo se escribe como cabeza (R) ← Cuerpo+ (R), no Body- (R) o Head (R) ← Cuerpo (R) donde Cuerpo (R) = Cuerpo+ (R) ∪NOT Body- (R). Una regla R es disyuntiva si la cabeza (R) contiene más de un literal. Una regla R es una restricción de integridad si la cabeza (r) = ∅;y r es un hecho si el cuerpo (r) = ∅. Un programa no tiene NAF si ninguna regla contiene NAF-Literales. Se identifican dos reglas/literales con respecto al cambio de nombre de la variable. Una sustitución es un mapeo de variables a términos θ = {x1/t1 ,..., xn/tn}, donde x1 ,..., xn son variables distintas y cada Ti es un término distinto de xi. Dada una conjunción G de (NAF) literales, Gθ denota la conjunción obtenida aplicando θ a G. Un programa, regla o literal es molido si no contiene ninguna variable. Un programa P con variables es una taquigrafía de su terreno de instanciación de tierra (P), el conjunto de reglas básicas obtenidas de P mediante la sustitución de las variables en P por elementos de su universo Herbrand en todas las formas posibles. La semántica de un EDP se define mediante la semántica del conjunto de respuestas [7]. Deje que Lit sea el conjunto de todos los literales terrestres en el lenguaje de un programa. Supongamos que un programa P y un conjunto de literales (⊆ iluminado). Luego, la reducción de P s es el programa que contiene el cabezal de la regla del suelo (r) ← Cuerpo+ (r) si hay una regla R en el suelo (p) tal que el cuerpo- (r) ∩s = ∅. Dado un EDP P, CN (P) sin NAF, denota el conjunto más pequeño de literales terrestres que está (i) cerrado bajo P, es decir, para cada regla de tierra R en tierra (P), cuerpo (R) ⊆ CN (P)implica cabeza (r) ∩ cn (p) = ∅;y (ii) lógicamente cerrado, es decir, es consistente o igual a Lit. Dado un EDP P y un conjunto de literales, S es un conjunto de respuestas de P si S = CN (P s). Un programa tiene ninguno, uno o múltiples conjuntos de respuestas en general. Un conjunto de respuestas es consistente si no está encendido. Un programa P es consistente si tiene un conjunto de respuestas consistente;De lo contrario, P es inconsistente. La programación de lógica abductiva [9] introduce un mecanismo de razonamiento hipotético para la programación lógica. Un marco abductivo utilizado en este documento es el secuestro extendido introducido por Inoue y Sakama [8, 15]. Un programa abductivo es un par P, H donde P es un EDP y H es un conjunto de literales llamados Abducibles. Cuando una l ∈ H literal contiene variables, cualquier instancia de L también es un abducible. Un programa abductivo P, H es consistente si P es consistente. A lo largo del documento, se supone que los programas abductores son consistentes a menos que se indique lo contrario. Sea G = L1 ,..., Lm, no lm+1 ,..., no es una conjunción, donde todas las variables en G se cuantifican existencialmente en el frente y restringen el rango, es decir, cada variable en LM+1 ,..., Ln aparece en L1 ,..., Lm. Un conjunto de literales terrestres satisface la conjunción g si {l1θ ,..., Lmθ} ⊆ sy {lm+1θ ,..., Lnθ} ∩ S = ∅ Para alguna instancia de tierra Gθ con una sustitución θ. Deje que P, H sea un programa abductivo y una conjunción G A como se indicó anteriormente. Un par (e, f) es una explicación de una observación g en p, h if1 1. (p \ f) ∪ e tiene un conjunto de respuestas que satisface g, 2. (p \ f) ∪ e es consistente, 3. E y F son conjuntos de literales terrestres de tal manera que E ⊆ H \ P y F ⊆ H ∩ P. Cuando (p \ f) ∪ e tiene un conjunto de respuestas que satisface las tres condiciones anteriores, S se llama un conjunto de creencias de un abductivoPrograma P, H Satisfacer G (con respecto a (E, F)). Tenga en cuenta que si P tiene un conjunto de respuestas consistente que se satisface G, S también es un conjunto de creencias de P, H que satisface G con respecto a (E, F) = (∅, ∅). La abducción extendida introduce/elimina hipótesis hacia/de un programa para explicar una observación. Tenga en cuenta que la abducción normal (como en [9]) considera solo la introducción de hipótesis para explicar una observación. Una explicación (e, f) de una observación g se llama mínima si para alguna explicación (e, f) de g, e ⊆ e y f ⊆ f implican e = e y f = f. Ejemplo 2.1. Considere el programa Abductive P, H: P: Flies (X) ← Bird (X), no AB (X), AB (X) ← Broken-Wing (X), Bird (Tweety) ←, Bird (Opus) ←,,ala rota (tweety) ←. H: ala rota (x). La observación g = moscas (tweety) tiene la explicación mínima (e, f) = (∅, {ala rota (tweety)}).1 Esto define explicaciones crédulos [15]. Las explicaciones escépticas se utilizan en [8]. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1023 3. Negociación 3.1 Propuestas condicionales por secuestro Suponemos un agente que tiene una base de conocimiento representada por un programa abductivo P, h. Un programa P consta de dos tipos de conocimiento, creencia B y deseo D, donde B representa el conocimiento objetivo de un agente, mientras que D representa el conocimiento subjetivo en general. Definimos P = B ∪ D, pero no distinguimos B y D si dicha distinción no es importante en el contexto. En contraste, los abducibles H se utilizan para representar condiciones permitidas para hacer un compromiso en el proceso de negociación. Definición 3.1. Una propuesta G es una conjunción de literales y literales NAF: L1 ,..., Lm, no lm+1 ,..., no ln donde cada variable en g se cuantifica existencialmente en el frente y restringida a rango. En particular, G se llama una crítica si G = Aceptar o G = Rechazar donde acepte y rechazado son las proposiciones reservadas. Una contrapropuesta es una propuesta realizada en respuesta a una propuesta. Definición 3.2. Se acepta una propuesta G en un programa abductivo P, h Si P tiene un conjunto de respuestas que satisface a G. Cuando no se acepta una propuesta, la secuestro se usa para buscar condiciones para hacerlo aceptable. Definición 3.3. Sea P, H un programa abductivo y una propuesta. If (e, f) es una explicación mínima de gθ para alguna sustitución θ en p, h, la conjunción g: gθ, e, no F se llama propuesta condicional (para g), donde e, no f representa la conjunción:A1 ,..., AK, no AK+1 ,..., no Al para e = {a1 ,..., Ak} y f = {ak+1 ,..., Al}. Proposición 3.1. Sea P, H un programa abductivo y una propuesta. Si G es una propuesta condicional, hay un conjunto de creencias de P, H satisfacer g. Prueba. Cuando g = gθ, e, no f, (p \ f) ∪ e tiene un conjunto de respuestas consistente s satisfactorio gθ y e ∩ f = ∅. En este caso, S satisface Gθ, E, no F. Una propuesta condicional G proporciona un requisito mínimo para aceptar la propuesta G. Si Gθ tiene múltiples explicaciones mínimas, existen varias propuestas condicionales en consecuencia. Cuando (e, f) = (∅, ∅), se usa una propuesta condicional como una nueva propuesta realizada en respuesta a la propuesta G. Ejemplo 3.1. Un agente busca un puesto de asistente de investigación en el departamento de informática de una universidad con la condición de que el salario sea de al menos 50,000 USD por año. El agente hace su solicitud como propuesta: 2 g = asistencia (departamento de compt), salario (x), x ≥ 50, 000. La universidad tiene el programa Abductive P, H: P: Salario (40, 000) ← Asistencia (Departamento de CompT), no tiene doctorado, salario (60, 000) ← Asistencia (departamento de compt), tiene doctorado, salario (50, 000) ← Assist (Departamento de Matemáticas), salario (55, 000) ← Administrador del sistema (Departamento de CompT), 2 Para conveniencia de notación, a menudo incluimos ecuaciones matemáticas (in) en propuestas/programas. Están escritos por literales, por ejemplo, x ≥ y por Geq (x, y) con una definición adecuada del predicado GEQ.Empleado (x) ← Assist (X), Empleado (X) ← Administrador del sistema (x), asistencia (departamento de compt);asistencia (departamento de matemáticas);System Admin (CompT Dept) ←, H: tiene PhD, donde las posiciones disponibles están representadas por disyunción. Según P, el salario base de un asistente de investigación en el departamento de computadoras es de 40,000 USD, pero si tiene un doctorado, es de 60,000 USD. En este caso, (e, f) = ({tiene PhD}, ∅) se convierte en la explicación mínima de gθ = asistencia (departamento de compt), salario (60, 000) con θ = {x/60, 000}. Luego, la propuesta condicional realizada por la Universidad se convierte en asistencia (departamento de compt), salario (60, 000), tiene doctorado.3.2 Propuestas del vecindario por relajación Cuando una propuesta es inaceptable, un agente intenta construir una nueva contrapropuesta al debilitar las limitaciones en la propuesta inicial. Utilizamos técnicas de relajación para este propósito. La relajación se utiliza como técnica de respuesta de consultas cooperativas en bases de datos [4, 6]. Cuando una consulta original falla en una base de datos, la relajación expande el alcance de la consulta relajando las limitaciones en la consulta. Esto permite que la base de datos devuelva las respuestas del vecindario que están relacionadas con la consulta original. Utilizamos la técnica para producir propuestas en el proceso de negociación. Definición 3.4. Sea P, H un programa abductivo y una propuesta. Luego, G está relajado a G de las siguientes tres maneras: anti-instanciación: construir G de tal manera que g θ = g para alguna sustitución θ. Condiciones de caída: construya G de tal manera que G. G. Reemplazo de objetivos: si G es una conjunción G1, G2, donde G1 y G2 son conjunciones, y hay una regla l ← G1 en P tal que G1θ = G1 para alguna sustitución θ,Luego construya G como Lθ, G2. Aquí, Lθ se llama literal reemplazado. En cada caso, cada variable en G se cuantifica existencialmente en la parte delantera y restringida a rango. La anti-instanciación reemplaza las constantes (o términos) con variables nuevas. Las condiciones de caída eliminan algunas condiciones en una propuesta. El reemplazo de objetivos reemplaza la condición G1 en G con un Lθ literal en presencia de una regla L ← G1 en P bajo la condición G1θ = G1. Todas estas operaciones generalizan propuestas de diferentes maneras. Cada G obtenida por estas operaciones se llama relajación de G. Vale la pena señalar que estas operaciones también se usan en el contexto de la generalización inductiva [12]. La propuesta relajada puede producir nuevas ofertas que sean vecinas de la propuesta original. Definición 3.5. Sea P, H un programa abductivo y una propuesta.1. Sea G una propuesta obtenida por anti-instanciación. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ y g θ = g, g θ se denomina propuesta de vecindario por anti-instanciación.2. Sea G una propuesta obtenida por condiciones de caída. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ, G θ se denomina propuesta de vecindario mediante condiciones de caída.1024 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 3. Sea G una propuesta obtenida por reemplazo de objetivos. Para una literal literal reemplazada y una regla h ← b en P tal que l = hσ y (g \ {l}) ∪ bσ = g para alguna sustitución σ, pon g = (g \ {l}) ∪ bσ. Si P tiene un conjunto de respuestas que satisface G θ para alguna sustitución θ, G θ se llama propuesta de vecindario por reemplazo de meta. Ejemplo 3.2.(cont. Ejemplo 3.1) Dada la propuesta g = asistencia (departamento de compt), salario (x), x ≥ 50, 000, • g1 = asistencia (w), salario (x), x ≥ 50, 000 se produce sustituyendo el departamento de CompT conuna variable w.Como g1θ1 = asistencia (departamento de matemáticas), salario (50, 000) con θ1 = {w/de departamento matemático} está satisfecho con un conjunto de respuestas de P, G1θ1 se convierte en una propuesta del vecindario por antiestenciación.• G2 = asistencia (departamento de compt), el salario (x) se produce dejando caer la condición salarial x ≥ 50, 000. Como g2θ2 = asistencia (departamento de compt), salario (40, 000) con θ2 = {x/40, 000} se satisface con un conjunto de respuestas de P, G2θ2 se convierte en una propuesta del vecindario mediante condiciones de caída.• G3 = empleado (departamento de compt), salario (x), x ≥ 50, 000 se produce reemplazando la asistencia (departamento de compt) con el empleado (departamento de compt) utilizando la regla del empleado (x) ← asistencia (x) en P. porG3 y el empleado de la regla (x) ← Administrador del sistema (x) en P, G3 = SYS Admin (departamento de compt), salario (x), x ≥ 50, 000 se produce. Como G3 θ3 = SYS Admin (departamento de compt), salario (55, 000) con θ3 = {x/55, 000} se satisface con un conjunto de respuestas de P, G3 θ3 se convierte en una propuesta del vecindario por reemplazo de objetivos. Finalmente, la secuestro y la relajación extendidas se combinan para producir propuestas condicionales del vecindario. Definición 3.6. Sea P, H un programa abductivo y una propuesta.1. Sea G una propuesta obtenida por condiciones anti-instanciación o caída. If (E, F) es una explicación mínima de G θ (= G) para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por condiciones anti-instanciación/caída.2. Sea G una propuesta obtenida por reemplazo de objetivos. Supongamos que G como en la definición 3.5 (3). Si (E, F) es una explicación mínima de G θ para alguna sustitución θ, la conjunción G θ, E, no F se llama propuesta de vecindad condicional por reemplazo de objetivos. Una propuesta condicional del vecindario se reduce a una propuesta de vecindario cuando (e, f) = (∅, ∅).3.3 Protocolo de negociación Un protocolo de negociación define cómo intercambiar propuestas en el proceso de negociación. Esta sección presenta un protocolo de negociación en nuestro marco. Suponemos que la negociación individual entre dos agentes que tienen una ontología común y el mismo idioma para una comunicación exitosa. Definición 3.7. Una propuesta l1, ..., lm, no lm+ 1, ..., no LN viola una restricción de integridad ← Body+ (r), no cuerpo- (r) Si por alguna sustitución θ, hay una sustitución σ de tal manera quecuerpo+ (r) σ ⊆ {l1θ ,..., Lmθ}, cuerpo- (r) σ∩ {l1θ ,..., Lmθ} = ∅, y cuerpo− (r) σ ⊆ {lm+1θ ,..., Lnθ}. Las restricciones de integridad son condiciones que un agente debe satisfacer, de modo que se utilicen para explicar por qué un agente no acepta una propuesta. Una negociación procede en una serie de rondas. Cada ronda I-Th (I ≥ 1) consiste en una propuesta GI 1 hecha por un agente AG1 y otra propuesta GI 2 hecha por el otro agente AG2. Definición 3.8. Deje que P1, H1 sea un programa abductivo de un agente AG1 y GI 2, una propuesta hecha por AG2 en la ronda I-Th. Un conjunto de crítica de AG1 (en la ronda I-Th) es un conjunto CSI 1 (P1, GJ 2) = CSI-1 (P1, GJ-1 2) ∪ ∪ {R |R es una restricción de integridad en P1 y GJ 2 viola R} donde J = i - 1 o i, y CS0 1 (P1, G0 2) = CS1 1 (P1, G0 2) = ∅. Un conjunto de crítica de un agente AG1 acumula restricciones de integridad que son violadas por las propuestas hechas por otro agente AG2. CSI 2 (P2, GJ 1) se define de la misma manera. Definición 3.9. Sea PK, HK un programa abductivo de un agente AGK y GJ una propuesta, que no es una crítica, realizada por ningún agente en la ronda J (≤ I). Un conjunto de negociación de AGK (en la ronda en la I-Th) es un triple nsi k = (si c, si n, si cn), donde si c es el conjunto de propuestas condicionales, si n es el conjunto de propuestas de vecindario, ySI CN es el conjunto de propuestas condicionales del vecindario, producidas por GJ y PK, HK. Un conjunto de negociación representa el espacio de posibles propuestas hechas por un agente. Si x (x ∈ {c, n, cn}) acumula propuestas producidas por GJ (1 ≤ j ≤ i) según las definiciones 3.3, 3.5 y 3.6. Tenga en cuenta que un agente puede construir contraproposios modificando sus propias propuestas anteriores u otras propuestas de agentes. Un agente AGK acumula propuestas realizadas por AGK pero que son rechazadas por otro agente, en el conjunto de propuestas fallido FP I K (en la ronda I-Th), donde FP 0 K = ∅. Supongamos que dos agentes AG1 y AG2 tienen programas abductivos P1, H1 y P2, H2, respectivamente. Dada una propuesta G1 1 que está satisfecha con un conjunto de respuestas de P1, comienza una negociación. En respuesta a la propuesta GI 1 realizada por AG1 en la ronda I-Th, AG2 se comporta de la siguiente manera.1. Si GI 1 = acepta, se llega a un acuerdo y la negociación termina en el éxito.2. De lo contrario si gi 1 = rechazar, coloque fp i 2 = fpi - 1 2 ∪ {gi - 1 2} donde {g0 2} = ∅. Proceda al paso 4 (b).3. De lo contrario, si P2 tiene un conjunto de respuestas que satisface GI 1, AG2 devuelve GI 2 = Aceptar a AG1. La negociación termina en el éxito.4. De lo contrario, AG2 se comporta de la siguiente manera. Pon FP I 2 = FPI - 1 2.(a) Si GI 1 viola una restricción de integridad en P2, devuelva la crítica GI 2 = rechazar a AG1, junto con el conjunto de crítica CSI 2 (P2, GI 1).(b) De lo contrario, construya NSI 2 de la siguiente manera.(i) Producir si c.Sea μ (Si C) = {P |P ∈ Si C \ fpi 2 y P satisfacen las restricciones en CSI 1 (P1, GI - 1 2)}. Si μ (Si C) = ∅, seleccione uno de μ (Si C) y proponga como GI 2 a Ag1;De lo contrario, vaya a (ii).(ii) producir si n.Si μ (Si N) = ∅, seleccione uno de μ (Si N) y proponga como GI 2 a Ag1;De lo contrario, vaya a (iii).(iii) Producir SI CN. Si μ (SI CN) = ∅, seleccione uno de μ (SI CN) y proponerlo como GI 2 a Ag1;De lo contrario, la negociación termina en el fracaso. Esto significa que AG2 no puede hacer contrapropuesta o cada contrapropuesta hecha por AG2 es rechazada por AG1. En el paso 4 (a), AG2 rechaza la propuesta GI 1 y devuelve el motivo del rechazo como un conjunto de crítica. Esto ayuda para AG1 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1025 en la preparación de una próxima contrapropuesta. En el paso 4 (b), AG2 construye una nueva propuesta. En su construcción, AG2 debe encargarse del conjunto de crítica CSI 1 (P1, GI - 1 2), que representa restricciones de integridad, si las hay, acumuladas en rondas anteriores, que AG1 debe satisfacer. Además, FP I 2 se usa para eliminar propuestas que han sido rechazadas. La construcción de Si x (x ∈ {C, N, CN}) en NSI 2 se realiza incrementalmente agregando nuevas contrapropuestas producidas por GI 1 o GI-1 2 a Si-1 x. Por ejemplo, SI n en NSI 2 se calcula como Si N = Si - 1 N ∪ {P |P es una propuesta del vecindario hecha por GI 1} ∪ {P |P es una propuesta del vecindario hecha por GI - 1 2}, donde S0 n = ∅. Es decir, SI n se construye a partir de Si-1 n agregando nuevas propuestas que se obtienen modificando la propuesta GI 1 realizada por Ag1 en la ronda I-Th o modificando la propuesta Gi-1 2 hecha por Ag2 en (I--1) -Th ronda. SI C y SI CN también se obtienen. En el protocolo anterior, un agente produce Si C al principio, en segundo lugar, y finalmente SI CN. Esta estrategia busca condiciones que satisfagan la propuesta dada, antes de las propuestas del vecindario que cambian la original. También se considera otra estrategia, que prefiere las propuestas del vecindario a las condicionales. Las propuestas condicionales del vecindario deben considerarse en el último lugar, ya que difieren de la original hasta la medida máxima. El protocolo anterior produce las propuestas candidatas en Si x para cada x ∈ {c, n, cn} a la vez. Podemos considerar una variante del protocolo en el que cada propuesta en Si x se construye una por una (ver Ejemplo 3.3). El protocolo anterior se aplica repetidamente a cada uno de los dos agentes de negociación hasta que una negociación termina en éxito/fracaso. Formalmente, el protocolo de negociación anterior tiene las siguientes propiedades. Teorema 3.2. Deje que AG1 y AG2 sean dos agentes que tienen programas abductivos P1, H1 y P2, H2, respectivamente.1. Si P1, H1 y P2, H2 están libres de funciones (es decir, tanto PI como HI no contienen símbolo de función), cualquier negociación terminará.2. Si una negociación termina con un acuerdo sobre una propuesta G, tanto P1, H1 como P2, H2 tiene conjuntos de creencias que satisfacen la prueba de G.1. Cuando un programa abductivo está libre de funciones, los abducibles y los conjuntos de negociación son finitos. Además, si una propuesta se rechaza una vez, la función μ no la propone nuevamente. Por lo tanto, la negociación terminará en pasos finitos.2. Cuando AG1, P1, H1, H1, tiene un conjunto de creencias que satisface a G. Si el agente AG2 acepta la propuesta G, está satisfecho con un conjunto de respuestas de P2, que también es un conjunto de creencias de P2, H2. Ejemplo 3.3. Supongamos una situación de venta de compras en la introducción. Un agente de vendedores tiene el programa Abductive PS, HS en el que PS consiste en creencias BS y deseo DS: BS: PC (B1, 1G, 512M, 80G);PC (B2, 1G, 512M, 80G) ←, (1) DVD-RW;CD-RW ←, (2) DS: Precio normal (1300) ← PC (B1, 1G, 512m, 80G), DVD-RW, (3) Precio normal (1200) ← PC (B1, 1G, 512M, 80G), CD-RW, (4) Precio normal (1200) ← PC (B2, 1G, 512M, 80G), DVD-RW, (5) Precio (x) ← Precio normal (x), agregar punto, (6) precio(x ∗ 0.9) ← Precio normal (x), pagar en efectivo, no agregar punto, (7) Agregar punto ←, (8) HS: Agregar punto, pagar en efectivo. Aquí, (1) y (2) representan la selección de productos. La PC Atom (B1, 1G, 512m, 80G) representa que el agente del vendedor tiene una PC de la marca B1 de tal manera que la CPU es de 1 GHz, la memoria es de 512 MB y HDD es de 80 GB. Los precios de los productos se representan como el deseo del vendedor. Las reglas (3) - (5) son precios normales de los productos. Un precio normal es un precio de venta con la condición de que se agregan puntos de servicio (6). Por otro lado, se aplica un precio de descuento si el método de pago es efectivo y no se agrega ningún punto de servicio (7). El hecho (8) representa la adición de puntos de servicio. Este servicio se retiraría en caso de precios de descuento, por lo que ADD Point se especifica como un abducible. Un agente de compradores tiene el programa Abductive PB, HB en el que PB consiste en Creyel BB y Desire DB: BB: Drive ← DVD-RW, (9) Drive ← CD-RW, (10) Precio (X) ←, (11)DB: PC (B1, 1G, 512M, 80G) ←, (12) DVD-RW ←, (13) CD-RW ← No DVD-RW, (14) ← Paga en efectivo, (15) ← Precio (x),x> 1200, (16) HB: DVD-RW. Reglas (12) - (16) son los compradores deseados. Entre ellos, (15) y (16) imponen restricciones para comprar una PC. Un DVD-RW se especifica como un abducible que está sujeto a concesión.(Primera ronda) Primero, la siguiente propuesta viene dada por el agente del comprador: G1 B: PC (B1, 1G, 512m, 80G), DVD-RW, Precio (x), x ≤ 1200. Como PS no tiene un conjunto de respuestas que satisfaga G1 B, el agente del vendedor no puede aceptar la propuesta. El vendedor toma una acción de hacer una contrapropuesta y realiza un secuestro. Como resultado, el vendedor encuentra la explicación mínima (e, f) = ({pagar efectivo}, {agregar punto}) que explica G1 b θ1 con θ1 = {x/1170}. El vendedor construye la propuesta condicional: G1 S: PC (B1, 1G, 512m, 80G), DVD-RW, Price (1170), Pague Efect Cash, no agregue el punto y lo ofrece al comprador.(Segunda ronda) El comprador no acepta G1 S porque él/ella no puede pagarlo en efectivo (15). Luego, el comprador devuelve la crítica G2 b = rechazar al vendedor, junto con el conjunto de crítica CS2 B (Pb, G1 S) = {(15)}. En respuesta a esto, el vendedor intenta hacer otra propuesta que satisfaga la restricción en este conjunto de críticas. Como G1 s se almacena en FP 2 sy ninguna otra propuesta condicional que satisfaga el requisito de los compradores existe, el vendedor produce propuestas de vecindario. Él/ella relaja G1 B soltando x ≤ 1200 en la condición, y produce PC (B1, 1G, 512m, 80G), DVD-RW, precio (X). Como PS tiene un conjunto de respuestas que satisface G2 S: PC (B1, 1G, 512M, 80G), DVD-RW, Price (1300), 1026 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), el vendedor ofrece G2 S como una nueva contrapropuesta.(Tercera ronda) El comprador no acepta G2 S porque él/ella no puede pagar más de 1200USD (16). El comprador nuevamente devuelve la crítica G3 B = rechazar al vendedor, junto con el conjunto de crítica CS3 B (Pb, G2 S) = CS2 B (Pb, G1 S) ∪ {(16)}. Luego, el vendedor considera otra propuesta reemplazando B1 con una variable W, G1 B ahora se convierte en PC (W, 1G, 512m, 80G), DVD-RW, precio (x), x ≤ 1200. Como PS tiene un conjunto de respuestas que satisface G3 S: PC (B2, 1G, 512M, 80G), DVD-RW, Price (1200), el vendedor ofrece G3 S como una nueva contrapropuesta.(4ª ronda) El comprador no acepta G3 S porque una PC de la marca B2 está fuera de su interés y PB no tiene un conjunto de respuestas que satisfaga los G3 S.Luego, el comprador hace una concesión cambiando su objetivo original. El comprador relaja G1 B por reemplazo de objetivos utilizando la regla (9) en Pb, y produce PC (B1, 1G, 512m, 80 g), unidad, precio (x), x ≤ 1200. Usando (10), se produce la siguiente propuesta: PC (B1, 1G, 512M, 80G), CD-RW, Precio (X), X ≤ 1200. Como PB \ {DVD-RW} tiene un conjunto de respuestas consistente que satisface la propuesta anterior, el comprador propone la propuesta condicional del vecindario G4 B: PC (B1, 1G, 512M, 80G), CD-RW, no DVD-RW, precio (x), x ≤ 1200 al agente del vendedor. Dado que PS también tiene un conjunto de respuestas que satisface G4 B, el vendedor lo acepta y envía el mensaje G4 S = Aceptar al Comprador. Por lo tanto, la negociación termina en el éxito.4. Computación En esta sección, proporcionamos métodos para calcular propuestas en términos de conjuntos de respuestas de programas. Primero presentamos algunas definiciones de [15]. Definición 4.1. Dado un programa abductivo P, H, el conjunto UR de reglas de actualización se define como: ur = {l ← no l, l ← no l |L ∈ H} ∪ { +l ← L |L ∈ H \ p} ∪ {−l ← no l |L ∈ H ∩ P}, donde L, +L y −l son átomos nuevos asociados de manera única con cada l ∈ H. Los átomos +L y −l se denominan átomos de actualización. Por la definición, el átomo L se vuelve verdadero Iff L no es verdadero. El par de reglas l ← no l y l ← No especifique la situación de que un abducible es verdadero o no. Cuando p (x) ∈ H y p (a) ∈ P pero p (t) ∈ P para t = a, la regla +l ← l se convierte precisamente en +p (t) ← P (t) para cualquier t = a. En este caso, la regla se escribe en breve como +P (x) ← P (x), x = a. En general, la regla se convierte en +P (x) ← P (x), x = t1 ,..., x = tn para n tales instancias. La regla +l ← L deriva el átomo +L si una L abducible que no está en P es verdad. Por el contrario, la regla −l ← no l deriva el átomo −l si una l abducible que está en P no es verdad. Por lo tanto, los átomos de actualización representan el cambio de los valores de verdad de los abducibles en un programa. Es decir, +L significa la introducción de L, mientras que −L significa la eliminación de L. Cuando una L abducible contiene variables, se supone que la actualización asociada Atom +L o −L tiene exactamente las mismas variables. En este caso, un átomo de actualización se identifica semánticamente con sus instancias terrestres. El conjunto de todos los átomos de actualización asociados con los abducibles en H se denota por UH, y uh = uh+ ∪ uh− donde uh+ (resp. Uh−) es el conjunto de átomos de actualización de la forma +L (resp. −l). Definición 4.2. Dado un programa abductivo P, H, su programa de actualización se define como el programa UP = (P \ H) ∪ Ur. Un conjunto de respuestas de UP se llama U-Minimal si no hay una respuesta establecida de UP de tal manera que t ∩ uh ⊂ s ∩ uh. Según la definición, existen conjuntos de respuestas U-Minimal siempre que UP tenga conjuntos de respuestas. Los programas de actualización se utilizan para las explicaciones de computación (mínima) de una observación. Dada una observación G como una conjunción de literales y literales NAF que posiblemente contienen variables, introducimos un nuevo terreno literal o junto con la regla O ← G. En este caso, o tiene una explicación (e, f) si tiene el mismoexplicación. Con este reemplazo, se supone que una observación es un terreno literal sin pérdida de generalidad. En lo que sigue, e + = { + l |L ∈ E} y f - = {−l |L ∈ F} para E ⊆ H y F ⊆ H. Proposición 4.1.([15]) Sea P, H un programa abductivo, suba su programa de actualización y G un terreno literal que represente una observación. Entonces, un par (e, f) es una explicación de G iff up ∪ {← no g} tiene un conjunto de respuestas consistente S tal que e+ = s ∩ uh+ y f− = s ∩ uh−. En particular, (e, f) es una explicación mínima IFF S es un conjunto de respuestas U-Minimal. Ejemplo 4.1. Para explicar la observación g = moscas (t) en el programa p del ejemplo 2.1, primero construya el programa de actualización UP de P: 3 Up: Flies (x) ← Bird (X), no AB (X), AB (X)← Broken-Wing (x), Bird (t) ←, pájaro (o) ←, ala rota (x) ← no roto (x), ala rota (x) ← no roto (x),+ala rota (x) ← ala rota (x), x = t, − ala-rota (t) ← no roto (t). A continuación, considere el programa ∪ ∪ {← no moscas (t)}. Tiene el conjunto de respuestas de respuestas U-Minimal únicas: s = {pájaro (t), pájaro (o), moscas (t), moscas (o), ala rotura (t), ala rota (o),-caída-ala (t)}. La explicación mínima única (e, f) = (∅, {ala rota (t)}) de g se expresa mediante el átomo de actualización-ala-rota (t) en S ∩ uh−. Proposición 4.2. Sea P, H un programa abductivo y G un terreno literal que represente una observación. Si P ∪ {← no G} tiene un conjunto de respuestas consistente S, G tiene la explicación mínima (e, f) = (∅, ∅) y S satisface G. Ahora proporcionamos métodos para calcular (contra) propuestas. Primero, las propuestas condicionales se calculan de la siguiente manera.Entrada: un programa abductivo P, H, una propuesta G;Salida: un SC establecido de propuestas. Si G es un literal de tierra, calcule su explicación mínima (E, F) en P, H utilizando el programa de actualización. Pon G, E, no F en SC. De lo contrario, si G es una conjunción que posiblemente contiene variables, considere el programa abductivo 3 T representa Tweety y O representa Opus. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1027 P ∪ {O ← G}, H con una O. Literal de tierra COMPUTA una explicación mínima de O en P ∪ {O ← G}, H usando su programa de actualización. Si O tiene una explicación mínima (E, F) con una sustitución θ por variables en G, ponga Gθ, E, no F en SC. A continuación, las propuestas del vecindario se calculan de la siguiente manera.Entrada: un programa abductivo P, H, una propuesta G;Salida: un SN establecido de propuestas.% propuestas del vecindario por anti-instanciación;Construir g por anti-instanciación. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ y g θ = g, coloque g θ en sn.% propuestas del vecindario mediante condiciones de caída;Construir g por condiciones de caída. Si G es un terreno literal y el programa p ∪ {← no G} tiene un conjunto de respuestas consistente, pon en S en Sn. De lo contrario, si G es una conjunción que posiblemente contiene variables, haga lo siguiente. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn.% Propuestas del vecindario por reemplazo de objetivos;Construir G por reemplazo de objetivos. Si G es un terreno literal y hay una regla H ← B en P tal que g = hσ y bσ = g para alguna sustitución σ, pon g = bσ. Si p ∪ {← no g} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn. De lo contrario, si G es una conjunción que posiblemente contiene variables, haga lo siguiente. Para un literal literal reemplazado, si hay una regla h ← b en p tal que l = hσ y (g \ {l}) ∪ bσ = g para alguna sustitución σ, pon g = (g \ {l})∪ Bσ. Para un terreno literal o, si p ∪ {o ← g} ∪ {← no o} tiene un conjunto de respuestas consistente que satisface g θ con una sustitución θ, ponga g θ en sn. Teorema 4.3. El conjunto SC (resp. Sn) calculado anteriormente coincide con el conjunto de propuestas condicionales (propuestas de vecindad resp.). Prueba. El resultado para SC se deduce de la definición 3.3 y la Proposición 4.1. El resultado para SN se deduce de la definición 3.5 y la Proposición 4.2. Las propuestas condicionales del vecindario se calculan combinando los dos procedimientos anteriores. Esas propuestas se calculan en cada ronda. Tenga en cuenta que el procedimiento para calcular SN contiene algunas opciones no deterministas. Por ejemplo, generalmente hay varios candidatos de literales para relajarse en una propuesta. Además, puede haber varias reglas en un programa para el uso del reemplazo de objetivos. En la práctica, un agente puede prescribir literales en una propuesta de posible relajación o reglas en un programa para el uso del reemplazo de objetivos.5. Trabajo relacionado Como hay una serie de literatura sobre negociación automatizada, esta sección se centra en la comparación con los marcos de negociación basados en la lógica y la argumentación. Sadri et al.[14] Utilice la programación de lógica abductiva como lenguaje de representación de los agentes de negociación. Los agentes negocian utilizando primitivas de diálogo comunes, llamados movimientos de diálogo. Cada agente tiene un programa de lógica abductiva en el que un programa especifica una secuencia de diálogos, se especifica un protocolo de diálogo como restricciones, y los movimientos de diálogo se especifican como abducibles. El comportamiento de los agentes está regulado por un ciclo observador-pensamiento-acto. Una vez que un agente pronuncia un movimiento de diálogo, otro agente que observó el enunciado piensa y actúa utilizando un procedimiento de prueba. Su enfoque y el nuestro emplean la programación de lógica abductiva como una plataforma de razonamiento de agentes, pero el uso es bastante diferente. Primero, usan abducibles para especificar las primitivas de diálogo de la forma Tell (pronosticador, receptor, sujeto, identificador, tiempo), mientras que usamos abducibles para especificar hipótesis arbitrarias permitidas para construir propuestas condicionales. En segundo lugar, un programa prepecifica un plan para llevar a cabo para lograr un objetivo, junto con los recursos disponibles/faltantes en el contexto de problemas de cambio de recursos. Esto está en contraste con nuestro método en el que las posibles contrapropuestas se construyen recientemente en respuesta a una propuesta hecha por un agente. En tercer lugar, especifican una política de negociación dentro de un programa (como restricciones de integridad), mientras que damos un protocolo independiente de los agentes individuales. Proporcionan un modelo operativo que especifica completamente el comportamiento de los agentes en términos de ciclo de agente. No proporcionamos una especificación tan completa del comportamiento de los agentes. Nuestro interés principal es mecanizar la construcción de propuestas. Bracciali y Torroni [2] formulan agentes abductivos que tienen conocimiento en los programas de lógica abductiva. Para explicar una observación, dos agentes se comunican intercambiando restricciones de integridad. En el proceso de comunicación, un agente puede revisar sus propias limitaciones de integridad de acuerdo con la información proporcionada por el otro agente. Un conjunto de restricciones de integridad relaja un conjunto de IC (o IC aprieta IC) si alguna observación que se pueda probar con respecto a IC también se puede probar con respecto a IC. Por ejemplo, IC: ← A, B, C Relaja IC: ← A, b. Por lo tanto, usan la relajación para debilitar las limitaciones en un programa de lógica abductiva. Por el contrario, utilizamos la relajación para debilitar propuestas y tres métodos de relajación diferentes, anti-instanciación, condiciones de caída y reemplazo de objetivos. Su objetivo es explicar una observación revisando las limitaciones de integridad de un agente a través de la comunicación, mientras que utilizamos limitaciones de integridad para la comunicación para explicar las críticas y ayudar a otros agentes a hacer contrapropuestas. Meyer et al.[11] Introducir un marco lógico para negociar agentes. Introducen dos modos diferentes de negociación: concesión y adaptación. Proporcionan postulados racionales para caracterizar los resultados negociados entre dos agentes y describen métodos para construir resultados. Proporcionan condiciones lógicas para los resultados negociados para satisfacer, pero no describen un proceso de negociación ni protocolos de negociación. Además, representan a los agentes por teorías proposicionales clásicas, que es diferente de nuestro marco de programación de lógica abductiva. Foo et al.[5] Modelo de negociación individual como un encuentro único entre dos programas lógicos extendidos. Un agente ofrece un conjunto de respuestas de su programa, y su acuerdo mutuo se considera un comercio en sus conjuntos de respuestas. A partir del acuerdo inicial establecido S∩T para un conjunto de respuestas de un agente y un conjunto de respuestas T de otro agente, cada agente extiende este conjunto para reflejar su propia demanda mientras mantiene la consistencia con la demanda del otro agente. Su algoritmo devuelve nuevos programas que tienen conjuntos de respuestas que son consistentes entre sí y mantienen el acuerdo establecido. El trabajo se extiende a encuentros repetidos en [3]. En su marco, dos agentes intercambian conjuntos de respuestas para producir un conjunto de creencias común, que es diferente de nuestro marco de intercambiar propuestas. Hay una serie de propuestas para la negociación basadas en 1028 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) en la argumentación. Una ventaja de la negociación basada en la argumentación es que construye una propuesta con argumentos que respalden la propuesta [1]. La existencia de argumentos es útil para convencer a otros agentes de las razones por las cuales un agente ofrece (contra) propuestas o devolver críticas. Parsons et al.[13] Desarrolle una lógica de negociación basada en la argumentación entre los agentes de BDI. En la negociación uno a uno, un agente A genera una propuesta junto con sus argumentos y la pasa a otro agente B. La propuesta es evaluada por B que intenta construir argumentos en su contra. Si entra en conflicto con los intereses de BS, B informa a A de su objeción enviando su argumento de ataque. En respuesta a esto, A intenta encontrar una forma alternativa de lograr su objetivo original, o una forma de persuadir a B para que elimine su objeción. Si se puede encontrar cualquier tipo de argumento, A lo enviará a B. Si B no encuentra razón para rechazar la nueva propuesta, será aceptada y la negociación termina con éxito. De lo contrario, el proceso se itera. En estos procesos de negociación, el agente A nunca cambia su objetivo original, de modo que la negociación termina en el fracaso si A no puede encontrar una forma alternativa de lograr el objetivo original. En nuestro marco, cuando otro agente rechaza una propuesta, un agente puede debilitar o cambiar su objetivo mediante secuestro y relajación. Nuestro marco no tiene un mecanismo de argumentación, pero las razones de las críticas pueden informarse al responder conjuntos de críticas. Kakas y Moraitis [10] proponen un protocolo de negociación que integra el secuestro dentro de un marco de argumentación. Una propuesta contiene una oferta correspondiente al objeto de negociación, junto con la información de apoyo que representa condiciones bajo las cuales se realiza esta oferta. La información de apoyo se calcula mediante secuestro y se utiliza para construir argumentos condicionales durante el proceso de negociación. En su protocolo de negociación, cuando un agente no puede satisfacer su propio objetivo, el agente considera el objetivo de otros agentes y busca condiciones bajo las cuales el objetivo es aceptable. Nuestro enfoque actual difiere del suyo en los siguientes puntos. Primero, usan el secuestro para buscar condiciones para apoyar los argumentos, mientras usamos el secuestro para buscar condiciones para que las propuestas acepten. En segundo lugar, en su protocolo de negociación, se eligen las contrapropuestas entre los candidatos basados en el conocimiento de preferencia de un agente a nivel meta, que representa la política bajo la cual un agente usa sus reglas de decisión a nivel de objeto de acuerdo con las situaciones. En nuestro marco, las contrapropuestas se construyen recientemente utilizando la secuestro y la relajación. El método de construcción es independiente de protocolos de negociación particulares. Como [2, 10, 14], la programación de abducción o lógica abductiva utilizada en la negociación se basa principalmente en el secuestro normal. Por el contrario, nuestro enfoque se basa en la abducción extendida que no solo puede introducir hipótesis sino eliminarlas de un programa. Esta es otra diferencia importante. La relajación y la respuesta de consultas del vecindario están diseñadas para hacer que las bases de datos cooperen con sus usuarios [4, 6]. En este sentido, esas técnicas tienen el espíritu similar a la resolución cooperativa de problemas en sistemas de múltiples agentes. Sin embargo, hasta donde saben los autores, no hay un estudio que aplique esas técnicas a la negociación de agentes.6. Conclusión En este documento propusimos un marco lógico para negociar agentes. Para construir propuestas en el proceso de negociación, combinamos las técnicas de abducción y relajación extendida. Se demostró que estas dos operaciones se utilizan para reglas de inferencia general en la producción de propuestas. Desarrollamos un protocolo de negociación entre dos agentes basados en el intercambio de propuestas y críticas, y proporcionamos procedimientos para calcular propuestas en la programación de lógica abductiva. Esto nos permite realizar una negociación automatizada en la parte superior de los solucionadores del conjunto de respuestas existentes. El marco actual no tiene un mecanismo de seleccionar una propuesta óptima (contra) entre diferentes alternativas. Para comparar y evaluar propuestas, un agente debe tener un conocimiento de preferencia de las propuestas de candidatos. Se deja una mayor elaboración para maximizar la utilidad de los agentes para futuros estudios.7. Referencias [1] L. Amgoud, S. Parsons y N. Maudet. Argumentos, diálogo y negociación. En: Proc. ECAI-00, pp. 338-342, iOS Press, 2000. [2] A. Bracciali y P. torroni. Un nuevo marco para la revisión del conocimiento de los agentes abductivos a través de su interacción. En: Proc. Clima-IV, Lógica computacional en sistemas de múltiples agentes, LNAi 3259, pp. 159-177, 2004. [3] W. Chen, M. Zhang y N. Foo. Negociación repetida de programas lógicos. En: Proc.7º taller sobre razonamiento, acción y cambio no monotónicos, 2006. [4] W. W. Chu, Q. Chen y R.-C.Sotavento. Respuesta de consulta cooperativa a través de la jerarquía de abstracción de tipo. En: Cooperating Knowledge Systems, S. M. Deen Ed., Pp. 271-290, Springer, 1990. [5] N. Foo, T. Meyer, Y. Zhang y D. Zhang. Negociación de programas lógicos. En: Proc.6º taller sobre razonamiento, acción y cambio no monotónicos, 2005. [6] T. Gaasterland, P. Godfrey y J. Minker. Relajación como plataforma para la respuesta cooperativa. Journal of Intelligence Information Systems 1 (3/4): 293-321, 1992. [7] M. Gelfond y V. Lifschitz. Negación clásica en programas lógicos y bases de datos disyuntivas. New Generation Computing 9: 365-385, 1991. [8] K. Inoue y C. Sakama. Marco abductivo para el cambio de teoría no monotónica. En: Proc. IJCAI-95, pp. 204-210, Morgan Kaufmann.[9] A. C. Kakas, R. A. Kowalski y F. Toni, El papel de la abducción en la programación lógica. En: Handbook of Logic in AI y Logic Programming, D. M. Gabbay, et al.(eds), vol.5, pp. 235-324, Oxford University Press, 1998. [10] A. C. Kakas y P. Moraitis. Negociación de agentes adaptativos a través de la argumentación. En: Proc. AAMAS-06, pp. 384-391, ACM Press.[11] T. Meyer, N. Foo, R. Kwok y D. Zhang. Fundación lógica de la negociación: resultado, concesión y adaptación. En: Proc. AAAI-04, pp. 293-298, MIT Press.[12] R. S. Michalski. Una teoría y metodología de aprendizaje inductivo. En: Aprendizaje automático: un enfoque de inteligencia artificial, R. S. Michalski, et al.(eds), pp. 83-134, Morgan Kaufmann, 1983. [13] S. Parsons, C. Sierra y N. Jennings. Agentes que razonan y negocian discutiendo. Journal of Logic and Computation, 8 (3): 261-292, 1988. [14] F. Sadri, F. Toni y P. torroni, una arquitectura de programación de lógica abductiva para los agentes negociadores. En: Proc.8º conf. Europeo.Sobre lógicos en AI, LNAi 2424, pp. 419-431, Springer, 2002. [15] C. Sakama y K. Inoue. Un marco abductivo para calcular actualizaciones de la base de conocimiento. Teoría y práctica de la programación lógica 3 (6): 671-715, 2003. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1029