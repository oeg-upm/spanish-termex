Control de acceso aplicado en cifrado en redes dinámicas multidominio Publicar/suscribir redes Lauri I.W. Universidad de Pesonen de Cambridge, Laboratorio de Computator JJ Thomson Avenue, Cambridge, CB3 0FD, Reino Unido {first.lasththt.{first.lasththt.@cl.cam.ac.uk Jean Bacon Universidad de Cambridge, Laboratorio de Computator JJ Thomson Avenue, Cambridge, CB3 0FD, Reino Unido {first.lastththth.@cl.cam.ac.uk Abstract Publish/Sensegre SystemsUna infraestructura de comunicaciones distribuida eficiente, basada en eventos y de amplio área. Es probable que los sistemas de publicación/suscripción a gran escala empleen componentes de la red de transporte de eventos propiedad de organizaciones cooperantes pero independientes. A medida que aumenta el número de participantes en la red, la seguridad se convierte en una preocupación cada vez mayor. Este artículo extiende trabajos anteriores para presentar y evaluar una infraestructura segura de publicación de dominios multidominio que admite y aplica el control de acceso de grano fino sobre los atributos individuales de los tipos de eventos. La actualización clave nos permite garantizar la seguridad hacia adelante y hacia atrás cuando los corredores de eventos se unen y abandonan la red. Demostramos que los gastos generales del tiempo y el espacio pueden minimizarse mediante una cuidadosa consideración de las técnicas de cifrado y mediante el uso del almacenamiento en caché para disminuir las descifraciones innecesarias. Mostramos que nuestro enfoque tiene una sobrecarga de comunicación general más pequeña que los enfoques existentes para lograr el mismo grado de control sobre la seguridad en las redes de publicación/suscripción. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: aplicaciones distribuidas de sistemas distribuidos Términos generales Seguridad, rendimiento 1. Introducción Publicar/Suscripción es muy adecuado como un mecanismo de comunicación para construir aplicaciones impulsadas por eventos distribuidas a escala de Internet. Gran parte de su capacidad de escala en el número de participantes proviene de su desacoplamiento de editores y suscriptores al colocar un servicio de entrega de eventos asíncronos entre ellos. En los sistemas de publicación/suscripción verdaderamente a escala de Internet, el servicio de entrega de eventos incluirá un gran conjunto de nodos de corredores interconectados que abarcan un área geográfica (y, por lo tanto, la red). Sin embargo, la publicación/suscripción de sistemas que abarcan un área geográfica amplia probablemente también abarquen múltiples dominios administrativos, ya sean dominios administrativos independientes dentro de una sola organización, múltiples organizaciones independientes o una combinación de los dos. Si bien las capacidades de comunicación de los sistemas de publicación/suscripción están bien probadas, es probable que abarcarse múltiples dominios administrativos requiera abordar las consideraciones de seguridad. Como la seguridad y el control de acceso son casi la antítesis del desacoplamiento, la investigación de publicación/suscripción relativamente pequeña se ha centrado en la seguridad hasta ahora. Nuestro objetivo general de investigación es desarrollar redes de publicación/suscripción a escala de Internet que proporcionen una entrega segura y eficiente de eventos, tolerancia a fallas y autocuración en la infraestructura de entrega, y una interfaz de eventos conveniente. En [12] Pesonen et al.Proponga una arquitectura de control de acceso basada en la capacidad de múltiples dominios para los sistemas de publicación/suscripción. La arquitectura proporciona un mecanismo para autorizar a los clientes de eventos para publicar y suscribirse a los tipos de eventos. Los privilegios del cliente son verificados por el corredor local al que el cliente se conecta para acceder al sistema de publicación/ suscripción. El enfoque implementa el control de acceso en el borde de la red de corredores y supone que se puede confiar en todos los corredores para hacer cumplir las políticas de control de acceso correctamente. Cualquier corredor malicioso, comprometido o no autorizado es libre de leer y escribir cualquier evento que lo pase a través de él desde los editores hasta los suscriptores. Esto podría ser aceptable en un sistema relativamente pequeño implementado dentro de una sola organización, pero no es apropiado en un entorno de múltiples dominios en el que las organizaciones comparten una infraestructura común. Proponemos hacer cumplir el control de acceso dentro de la red de corredores al encriptar el contenido del evento, y esa política dicta los controles sobre las claves de cifrado necesarias. Con el contenido de eventos cifrados, solo aquellos corredores que están autorizados para achicear las claves de cifrado pueden acceder al contenido del evento (es decir, publicar, suscribirse o filtrar). Muevemos efectivamente la aplicación del control de acceso de los corredores a los administradores de claves de cifrado. Esperamos que el control de acceso deba aplicarse en un sistema de publicación/suscripción de múltiples dominios cuando múltiples organizaciones forman un sistema de publicación/suscripción compartida pero ejecutan múltiples aplicaciones independientes. El control de acceso también puede ser necesario cuando una sola organización consta de múltiples subdominios que entregan datos confidenciales sobre el sistema de publicación/suscripción de toda la organización. Ambos casos requieren control de acceso porque la entrega de eventos en una infraestructura dinámica de publicación/suscripción basada en una red de corredores compartido puede conducir a que los eventos se enruten a través de dominios no autorizados a lo largo de sus caminos desde editores hasta suscriptores. Hay dos beneficios particulares para compartir la infraestructura de publicación/ suscripción, los cuales se relacionan con la red de corredores. Primero, compartir corredores creará una red físicamente más grande que proporcionará un mayor alcance geográfico. En segundo lugar, aumentar la interconectividad de los corredores permitirá que el sistema de publicación/suscripción proporcione una mayor tolerancia a fallas. La Figura 1 muestra la red de publicación/suscripción de múltiples dominios que utilizamos como ejemplo en este documento. Se basa en las fuerzas policiales del Reino Unido, y mostramos tres subdominios particulares: el dominio de la policía metropolitana. Este dominio contiene un conjunto de cámaras de CCTV que publican información sobre los movimientos de vehículos alrededor del área de Londres. Hemos incluido el detective Smith como suscriptor en este dominio. Dominio del servicio de carga de congestión. Los cargos que se recaudan en los vehículos que han pasado por la zona de carga de congestión de Londres cada día son emitidos por sistemas dentro de este dominio. Los datos de reconocimiento de la placa numérica de origen provienen de las cámaras en el dominio de la policía metropolitana. El hecho de que el CCS solo esté autorizado para leer un subconjunto de los datos del evento del vehículo ejercerá algunas de las características clave del control de acceso del sistema de publicación/suscripción exigible presentada en este documento. Dominio de Pito. La Organización de Tecnología de la Información de la Policía (PITO) es el centro del que se administran los estándares de datos policiales. Es el propietario del tipo de evento en este escenario particular. El cifrado protege la confidencialidad de los eventos si se transportan a través de dominios no autorizados. Sin embargo, encriptar eventos completos significa que los corredores no autorizados no pueden tomar decisiones de enrutamiento eficientes. Nuestro enfoque es aplicar el cifrado a los atributos individuales de los eventos. De esta manera, nuestra política de control de acceso multidominio funciona en una granularidad más fina: los editores y suscriptores pueden ser acceso autorizado a un subconjunto de los atributos disponibles. En los casos en que se usan eventos no cifrados para el enrutamiento, podemos reducir el número total de eventos enviados a través del sistema sin revelar los valores de los atributos sensibles. En nuestro escenario de ejemplo, el servicio de carga de congestión solo estaría autorizado para leer el campo de la placa de números de avistamientos de vehículos: el atributo de ubicación no se descifraría. Por lo tanto, preservamos la privacidad de los automovilistas al tiempo que permitimos que el CCS haga su trabajo utilizando la infraestructura de publicación/suscripción compartida. Supongamos que una detective del Servicio de Policía Metropolitana está investigando un delito y está interesada en avistamientos de un vehículo específico. El detective recibe una orden judicial que la autoriza a suscribirse a los eventos de la placa de números de la placa numérica específica relacionada con su caso. Los sistemas de control de acceso actual de publicación actual imponen la seguridad en el borde de la red de corredores donde los clientes se conectan a ella. Sin embargo, este enfoque a menudo no será aceptable en los sistemas a escala de Internet. Proponemos hacer cumplir la seguridad dentro de la red de corredores, así como en los bordes a los que los clientes del evento se conectan, cifriendo el contenido del evento. Las publicaciones se encriptarán con las claves de cifrado específicas de tipo de evento. Al controlar el acceso a las claves de cifrado, podemos controlar el acceso a los tipos de eventos. El enfoque propuesto permite a los corredores de eventos enrutar eventos incluso cuando tienen acceso solo a un subconjunto de las posibles claves de cifrado. Introducimos sistemas de publicación/suscripción descentralizados y criptografía relevante en la Sección 2. En la Sección 3 presentamos nuestro modelo para encriptar contenido de eventos tanto en el evento como en el nivel de atributo. La Sección 4 discute la gestión de claves de cifrado en sistemas de publicación/suscripción multidominio. Evaluamos analíticamente el rendimiento de nuestra propuesta en la Sección 5. Finalmente, la Sección 6 analiza el trabajo relacionado para asegurar los sistemas de publicación/suscripción y la Sección 7 proporciona comentarios finales.2. Antecedentes En esta sección proporcionamos una breve introducción a los sistemas de publicación/suscripción descentralizados. Indicamos nuestros supuestos sobre los sistemas de publicación/suscripción de múltiples dominios, y describimos cómo estos supuestos influyen en los desarrollos que hemos hecho de nuestro trabajo publicado previamente.2.1 Sistemas de publicación/suscripción descentralizados Un sistema de publicación/suscripción incluye editores, suscriptores y un servicio de eventos. Los editores publican eventos, los suscriptores se suscriben a eventos de interés para ellos, y el servicio de eventos es responsable de entregar eventos publicados a todos los suscriptores cuyos intereses coinciden con el evento dado. El servicio de eventos en un sistema descentralizado de publicación/suscripción se distribuye a través de varios nodos de corredores. Juntos, estos corredores forman una red responsable de mantener las rutas de enrutamiento necesarias de los editores a los suscriptores. Los clientes (editores y suscriptores) se conectan a un corredor local, en el que el cliente confía plenamente. En nuestra discusión, nos referimos a los corredores de alojamiento de clientes como corredores de alojamiento de editores (PHB) o corredores de alojamiento de suscriptores (SHB) dependiendo de si el cliente conectado es un editor o 105 SHB SHB Sub Pub Sub IB PHB IB IB PHB IB IB IB IB IB IB IB IB IBIB SHB SHB IBIB IB IB IB IB IBIB IB IB IB IB IB IB Metropolitan Police Dominio Congestion Cargo Servicio Detective Pito Detective Smith Smith Camera 1 Cámara 2 Oficina de Billing Oficina Subsulta SHB Subscriber Hosting Publisher Publisher Phb Publisher Hosting Boker a Type IB IB IB IB IB IB IB IB IB IBClave intermedio Broker Figura 1: Una vista general de nuestro despliegue de publicación/suscripción de múltiples dominios, un suscriptor, respectivamente. Un corredor local suele ser parte del mismo dominio que el cliente, o es propiedad de un proveedor de servicios confiable por el cliente. Una red de corredores puede tener una topología estática (p. Ej. Siena [3] y Gryphon [14]) o una topología dinámica (p. Escriba [4] y Hermes [13]). Nuestro enfoque propuesto funcionará en ambos casos. Una topología estática permite al administrador del sistema construir dominios confiables y, de esa manera, mejorar la eficiencia del enrutamiento evitando las encriptaciones innecesarias (ver Sect. 3.4), lo que es muy difícil con una topología dinámica. Por otro lado, una topología dinámica permite que la red de corredores se vuelva a equilibrar dinámicamente cuando los corredores se unen o dejan la red de manera controlada o como resultado de una falla de red o nodo. Nuestro trabajo se basa en el sistema Hermes. Hermes es un middleware de publicación/suscripción basado en contenido que incluye un fuerte soporte de tipo de evento. En otras palabras, cada publicación es una instancia de un tipo de evento predefinido particular. Las publicaciones se verifican tipo en el corredor local de cada editor. Nuestro esquema de cifrado de nivel de atributo supone que se escriben los eventos. Hermes usa una red de superposición estructurada como transporte y, por lo tanto, tiene una topología dinámica. Una publicación de Hermes consiste en un identificador de tipo de evento y un conjunto de pares de valor de atributo. El identificador de tipo es el hash SHA-1 del nombre del tipo de evento. Se utiliza para enrutar la publicación a través de la Red de Broker de eventos. Oculta convenientemente el tipo de publicación, es decir, a los corredores se les impide ver qué eventos fluyen a través de ellos a menos que estén al tanto del nombre e identificador de tipo de evento específico.2.2 Tipos de eventos seguros Pesonen et al.introdujo tipos de eventos seguros en [11], que pueden confirmarse su integridad y autenticidad al verificar sus firmas digitales. Un efecto secundario útil de los tipos de eventos seguros son su tipo de evento y nombres de atributos de evento globalmente único. Estos nombres pueden ser mencionados por las políticas de control de acceso. En este documento utilizamos el nombre seguro del tipo de evento o atributo para referirnos a la clave de cifrado utilizada para cifrar el evento o el atributo.2.3 Control de acceso basado en la capacidad Pesonen et al.propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de múltiples dominios en [12]. El modelo trata los tipos de eventos como recursos a los que los editores, suscriptores y corredores de eventos desean acceder. El propietario del tipo de evento es responsable de administrar el control de acceso para un tipo de evento mediante la emisión de certificados de autorización de infraestructura de clave pública simple (SPKI) que otorgan el acceso del titular al tipo de evento especificado. Por ejemplo, los editores autorizados habrán recibido un certificado de autorización que especifica que el editor, identificado por Public Key, está autorizado para publicar instancias del tipo de evento especificado en el certificado. Aprovechamos el mecanismo de control de acceso mencionado anteriormente en este documento controlando el acceso a las claves de cifrado utilizando los mismos certificados de autorización. Es decir, un editor que está autorizado para publicar un tipo de evento dado, también está autorizado 106 para acceder a las claves de cifrado utilizadas para proteger los eventos de ese tipo. Discutimos esto con más detalle en la secta.4. 2.4 Modelo de amenaza El objetivo del mecanismo propuesto es hacer cumplir el control de acceso para los participantes autorizados en el sistema. En nuestro caso, el primer nivel de control de acceso se aplica cuando el participante intenta unirse a la red de publicación/suscripción. Los corredores de eventos no autorizados no pueden unirse a la red de corredores. Del mismo modo, los clientes no autorizados no pueden conectarse a un corredor de eventos. Todas las conexiones en la red de corredores entre los corredores de eventos y los clientes de eventos utilizan la seguridad de la capa de transporte (TLS) [5] para evitar el acceso no autorizado en la capa de transporte. La arquitectura del sistema de publicación/suscripción significa que los clientes de eventos deben conectarse a los corredores de eventos para poder acceder al sistema de publicación/suscripción. Por lo tanto, suponemos que estos clientes no son una amenaza. El cliente del evento se basa completamente en el corredor de eventos local para acceder a la red de corredores. Por lo tanto, el cliente del evento no puede acceder a ningún evento sin la ayuda del corredor local. Los corredores, por otro lado, pueden analizar todos los eventos en el sistema que los atraviesan. Un corredor puede analizar tanto el tráfico de eventos como el número y los nombres de los atributos que están poblados en un evento (en el caso del cifrado de nivel de atributo). Existen enfoques viables para prevenir el análisis de tráfico insertando eventos aleatorios en la corriente del evento para producir un patrón de tráfico uniforme. Del mismo modo, el contenido de atributos se puede acolchar a una longitud estándar para evitar filtrar información al adversario. Si bien el análisis de tráfico es una preocupación importante, no lo hemos abordado más en este documento.3. Contenido de eventos de cifrado Proponemos hacer cumplir el control de acceso en una red de corredores descentralizada al encriptar el contenido de los eventos publicados y controlar el acceso a las claves de cifrado. Efectivamente, movemos la responsabilidad del control de acceso desde la red de corredores a los administradores clave. Se supone que todos los clientes tienen acceso a un corredor en el que pueden confiar y que está autorizado para acceder al contenido del evento requerido por el cliente. Esto nos permite implementar el cifrado de contenido del evento dentro de la red de corredores sin involucrar a los clientes. Al delegar las tareas de cifrado a los corredores, bajamos el número de nodos necesarios para tener acceso a una clave de cifrado dada1. Los beneficios son tres veces: i) menos nodos manejan la clave de cifrado confidencial, por lo que hay una posibilidad menor de divulgar la clave;ii) Las actualizaciones clave implican menos nodos, lo que significa que el algoritmo de gestión de clave incurrirá en gastos generales de comunicación y procesamiento más pequeños en el sistema de publicación/suscripción;y iii) el corredor local descifrará un evento una vez y lo entregará a todos los suscriptores, en lugar de cada suscriptor 1, las claves de cifrado se cambian con el tiempo en respuesta a los corredores que se unen o abandonan la red, y periódicamente para reducir la cantidad de tiempo cualquiera.Se utiliza la clave. Esto se discute en la secta.4.2 Tener que descifrar el mismo evento. Delegar las tareas de cifrado al corredor local es apropiado, porque el cifrado es una característica de middleware utilizada para hacer cumplir el control de acceso dentro del sistema de middleware. Si las aplicaciones deben manejar datos cifrados en la capa de aplicación, son libres de publicar datos cifrados a través del sistema de publicación/suscripción. Podemos implementar el cifrado, ya sea a nivel de evento o en el nivel de atributo. El cifrado de eventos es más simple, requiere menos claves, menos operaciones criptográficas independientes y, por lo tanto, generalmente es más rápido. El cifrado de atributos permite el control de acceso en el nivel de atributo, lo que significa que tenemos un mecanismo de control de acceso más expresivo y potente, mientras que generalmente incurre en una penalización de rendimiento mayor. En esta sección discutimos el contenido de eventos de encriptación tanto a nivel de evento como en el nivel de atributo;evitando fugas de información a corredores no autorizados cifurando filtros de suscripción;evitando las encriptaciones innecesarias entre los corredores autorizados;Y finalmente, cómo se implementó el cifrado de contenido de eventos en nuestro prototipo. Tenga en cuenta que dado que ningún cliente de publicación/suscripción tiene acceso a claves de cifrado, cualquier cifrado realizado por los corredores es necesariamente completamente transparente para todos los clientes.3.1 Cifrado de eventos en cifrado de eventos Todos los atributos de eventos están encriptados como un solo bloque de texto sin formato. El identificador de tipo de evento se deja intacto (es decir, en texto sin formato) para facilitar el enrutamiento de eventos en la red de corredores. El identificador de tipo de evento único a nivel mundial especifica la clave de cifrado utilizada para cifrar el contenido del evento. Cada tipo de evento en el sistema tendrá su propia clave de cifrado individual. Las claves se actualizan, como se discutió en la secta.4.2. Mientras que en tránsito, el evento consistirá en una tupla que contiene el identificador de tipo, una marca de tiempo de publicación, texto cifrado y una etiqueta de autenticación de mensajes: <ID de tipo, marca de tiempo, texto de cifrado, etiqueta de autenticación>. Los corredores de eventos que están autorizados para acceder al evento y, por lo tanto, tienen acceso a la clave de cifrado, pueden descifrar el evento e implementar el enrutamiento basado en el contenido. Los corredores de eventos que no tienen acceso a la clave de cifrado se verán obligados a enrutar el evento basado solo en su tipo. Es decir, no podrán tomar decisiones inteligentes sobre si los eventos no necesitan ser transmitidos por sus enlaces salientes. El cifrado de eventos da como resultado un cifrado en el corredor de alojamiento de editores y un descifrado en cada corredor intermedio de filtrado y corredor de alojamiento de suscriptores que pasa el evento, independientemente del número de atributos. Esto da como resultado una ventaja de rendimiento significativa en comparación con el cifrado de atributos.3.2 Cifrado de atributos en el cifrado de atributos Cada valor de atributo en un evento se cifran por separado con su propia clave de cifrado. La clave de cifrado se identifica mediante los atributos del identificador único globalmente único (el identificador de eventos único globalmente define un espacio de nombres dentro del cual el identificador de atributos es un nombre totalmente calificado).107 El identificador de tipo de evento se deja intacto para facilitar el enrutamiento de eventos para corredores no autorizados. Los identificadores de atributos también se dejan intactos para permitir que los corredores autorizados descifraran los valores de atributo con las teclas correctas. Los corredores que están autorizados para acceder a algunos de los atributos en un evento pueden implementar el enrutamiento basado en el contenido sobre los atributos que son accesibles para ellos. Un evento cifrado de atributo en tránsito consiste en el identificador de tipo de evento, una marca de tiempo de publicación y un conjunto de tuplas de atributos: <ID de tipo, marca de tiempo, atributos>. Las tuplas de atributos consisten en un identificador de atributo, texto cifrado y una etiqueta de autenticación de mensajes: <ID de ATTR, CIPHERTEXT, Etiqueta de autenticación>. El identificador de atributos es el hash SHA-1 del nombre del atributo utilizado en la definición de tipo de evento. El uso del identificador de atributos en el evento publicado en lugar del nombre del atributo evita que las partes no autorizadas aprendan qué atributos se incluyen en la publicación. En comparación con el cifrado de eventos, el cifrado de atributos generalmente da como resultado gastos generales de procesamiento más grandes, porque cada atributo está encriptado por separado. En el proceso de cifrado, la inicialización del algoritmo de cifrado toma una porción significativa del tiempo de ejecución total del algoritmo. Una vez que se inicializa el algoritmo, aumentar la cantidad de datos a encriptar no afecta mucho el tiempo de ejecución. Esta disparidad se enfatiza en el cifrado de atributos, donde se debe inicializar un algoritmo de cifrado para cada atributo por separado, y la cantidad de datos encriptados es relativamente pequeño. Como resultado, el cifrado del atributo incurre en gastos generales de procesamiento más grandes en comparación con el cifrado de eventos que puede verse claramente a partir de los resultados de rendimiento en la SECT.5. La ventaja del cifrado de atributos es que el tipo de propietario puede controlar el acceso al tipo de evento en el nivel de atributo. Por lo tanto, el propietario del tipo de evento puede permitir a los clientes tener diferentes niveles de acceso al mismo tipo de evento. Además, el cifrado de nivel de atributo permite el enrutamiento basado en el contenido en los casos en que un corredor intermedio tiene acceso solo a algunos de los atributos del evento, reduciendo así el impacto general de la entrega del evento en la red de corredores. Por lo tanto, la elección entre el cifrado de eventos y atributos es una compensación entre expresividad y desempeño, y depende de los requisitos de la aplicación distribuida. La expresividad proporcionada por el cifrado de atributos se puede emular mediante la introducción de un nuevo tipo de evento para cada grupo de suscriptores con la misma autorización. Luego, el editor publicaría una instancia de cada uno de estos tipos en lugar de publicar solo un evento combinado. Por ejemplo, en nuestra red policial de Londres, las cámaras de control de congestión tendrían que publicar un evento para el CCS y otro para el detective. Este enfoque podría ser difícil de administrar si los atributos tienen una variedad de propiedades de seguridad, ya que se requeriría una gran cantidad de tipos de eventos y las políticas y suscripciones pueden cambiar dinámicamente. Este enfoque crea una gran cantidad de eventos adicionales que deben enrutarse a través de la red, como se muestra en la secta.5.3.3.3 Cifrar suscripciones para proteger completamente la confidencialidad del contenido del evento también debemos cifrar suscripciones. Garantía de suscripciones cifradas: i) que solo los corredores autorizados pueden enviar suscripciones a la red de corredores, y ii) que los corredores no autorizados no obtienen información sobre el contenido de eventos al monitorear qué suscripciones se coinciden con un evento dado. Por ejemplo, en el primer caso, un corredor no autorizado puede crear suscripciones con filtros elegidos adecuadamente, enrutarlos hacia la raíz del árbol de difusión del evento y monitorear qué eventos se les entregó como coincidir con la suscripción. El hecho de que el evento coincidiera con la suscripción filtraría información al corredor sobre el contenido del evento, incluso si el evento aún estaba encriptado. En el segundo caso, incluso si un corredor no autorizado no pudo crear suscripciones en sí, aún podría analizar las suscripciones que fueron enrutadas a través de él, tomar nota de los filtros en esas suscripciones y monitorear qué eventos le entregan los corredores ascendentes comocoincidir con los filtros de suscripción. Esto nuevamente revelaría información sobre el contenido del evento al corredor no autorizado. En el caso de encriptar eventos completos, también cifre el filtro de suscripción completo. El identificador de tipo de evento en la suscripción debe dejarse intacto para permitir a los corredores enrutar eventos en función de su tema cuando no están autorizados para acceder al filtro. En tales casos, el corredor no autorizado debe asumir que los eventos de dicho tipo coinciden con todas las expresiones de filtro. Cada filtro de atributos se encripta individualmente, al igual que cuando cifra una publicación. Además del identificador de tipo de evento, los identificadores de atributos también están intactos para permitir a los corredores autorizados descifrar esos filtros a los que tienen acceso y enrutar el evento en función de su coincidencia de los filtros descifrados.3.4 Evitar las operaciones criptográficas innecesarias que encriptan el contenido del evento no es necesario si el corredor actual y el próximo corredor en el árbol de difusión del evento tienen las mismas credenciales con respecto al tipo de evento en cuestión. Por ejemplo, se puede suponer que todos los corredores dentro de una organización compartirían las mismas credenciales y, por lo tanto, mientras el próximo corredor sea miembro del mismo dominio, el evento se puede enrutar en texto sin formato. Con el cifrado de atributos, es posible que el corredor vecino esté autorizado a acceder a un subconjunto de los atributos descifrados, en cuyo caso esos atributos a los que el corredor no está autorizado para acceder se transmitirían en cifrado. Para saber cuándo es seguro pasar el evento en forma de texto sin formato, los corredores intercambian credenciales como parte de un apretón de manos cuando se conectan entre sí. En los casos en que los corredores pueden verificar las credenciales de los demás, las agregarán a la tabla de enrutamiento para referencia futura. Si un corredor adquiere nuevas credenciales después del apretón de manos inicial, presentará estas nuevas credenciales a sus vecinos mientras está en sesión. Independientemente de sus corredores vecinos, el PHB siempre cifrará el contenido del evento, porque es más barato cifrar el evento una vez en la raíz del árbol de difusión del evento. En Hermes, el nodo Rendezvous para cada tipo de evento se selecciona de manera uniforme al azar (el nombre del tipo de evento se ha asado con el algoritmo de hash SHA-1 para producir el evento tipo 108 PHB IBIB IB SHB RN IB SHB Figura 2: la dirección del nodo se distribuye en todo elRed, por lo tanto, los nodos de cita pueden estar fuera del dominio que posee un tipo de evento IB IB SHBPHBP S cifra filtros de caché descifrados, ofrece descifrados, filtros texto en caché de texto sin formato (la mayoría de los datos) Texto de la leyación en caché (algunos datos) Diferentes dominios CypherText Key Figura 3: caché de almacenamiento en cachéDatos descifrados para aumentar la eficiencia al entregar a pares con identificador de privilegios de seguridad equivalentes, entonces el identificador se utiliza para seleccionar el nodo Rendezvous en la red superpuesta estructurada). Por lo tanto, es probable que el nodo Rendezvous reside fuera del dominio actual. Esta situación se ilustra en el árbol de difusión de eventos en la figura 2. Entonces, incluso con las aplicaciones internas de dominio, donde el evento se puede enrutar desde el editor a todos los suscriptores en forma de texto sin formato, el contenido del evento en la mayoría de los casos debe estar encriptado para que se enrute al nodo de cita. Para evitar descifraciones innecesarias, adjuntamos un caché de contenido de texto sin formato a eventos cifrados. Un corredor llena el caché con contenido que ha descifrado, por ejemplo, para filtrar el contenido. El corredor accede al caché cuando ofrece un evento a un suscriptor local después de ver si el evento coincide con el filtro de suscripción, pero el corredor también envía el caché al siguiente corredor con el evento cifrado. El siguiente corredor puede buscar el atributo del caché en lugar de tener que descifrarlo. Si el evento se envía a un corredor no autorizado, el caché se descartará antes de que se envíe el evento. Obviamente, enviar el caché con el evento cifrado se sumará al costo de comunicación, pero esto se ve compensado por el ahorro en el procesamiento de cifrado/descifrado. En la Fig. 3 vemos dos corrientes de texto sin formato en caché separados que acompañan a un evento dependiendo de las relaciones entre corredores en dos dominios diferentes. Mostramos en la secta.5.2 Que la sobrecarga de enviar mensajes cifrados con un caché completo de texto sin formato no se incurra casi sin sobrecarga en comparación con el envío de mensajes de texto sin formato.3.5 Implementación En nuestra implementación hemos utilizado el modo EAX [2] de operación al encriptar eventos, atributos y filtros de suscripción. EAX es un modo de operación para los cifrados de bloque, también llamado cifrado autenticado con el algoritmo de datos asociados (AAD) que proporciona simultáneamente la confidencialidad de los datos y la protección de integridad. El algoritmo implementa un esquema de dos pasos donde durante el primer pase se cifran el texto sin formato, y en el segundo pase se genera un código de autenticación de mensaje (Mac) para los datos cifrados. El modo EAX es compatible con cualquier cifrado de bloque. Decidimos utilizar el algoritmo estándar de cifrado avanzado (AES) [9] en nuestra implementación, debido a su estado estándar y al hecho de que el algoritmo ha pasado por criptoanálisis exhaustivo durante su existencia y hasta ahora no se han encontrado vulnerabilidades graves. Además de proporcionar protección de confidencialidad e integridad, el modo EAX utiliza el cifrado de bloque subyacente en el modo contraria (modo CTR) [21]. Se utiliza un cifrado de bloque en el modo contador para producir una corriente de bits de teclas que luego se xoren con el texto sin formato. El modo CTR efectivamente transforma un cifrado de bloque en un cifrado de flujo. La ventaja de los cifrados de la corriente es que el texto cifrado es la misma longitud que el texto sin formato, mientras que con los cifrados de bloques el texto sin formato debe acolcharse a un múltiplo de la longitud del bloque de los cifrados de bloque (por ejemplo, el tamaño del bloque de AES es de 128 bits). Evitar el relleno es muy importante en el cifrado de atributos, porque el relleno podría aumentar el tamaño del atributo desproporcionado. Por ejemplo, un solo número entero podría tener 32 bits de longitud, lo que estaría acolchado a 128 bits si usáramos un cifrado de bloque. Con el cifrado de eventos, la expansión del mensaje no es tan relevante, ya que la longitud del relleno requerida para alcanzar el siguiente múltiplo de 16 bytes probablemente será una pequeña proporción de la longitud general del texto sin formato. En el modo de cifrado, el algoritmo EAX toma como entrada un nonce (un número utilizado una vez), una clave de cifrado y el texto sin formato, y devuelve el texto cifrado y una etiqueta de autenticación. En modo de descifrado, el algoritmo toma como entrada la clave de cifrado, el texto cifrado y la etiqueta de autenticación, y devuelve el texto sin formato, o un error si la verificación de autenticación falló. El nonce se expande a la longitud del bloque del cifrado de bloque subyacente pasando a través de una construcción OMAC (ver [7]). Es importante que no se reutilicen valores de nonce particulares, de lo contrario, el cifrado de bloque en el modo CTR produciría una secuencia clave idéntica. En nuestra implementación, utilizamos la marca de tiempo de eventos definida por PHB (valor de 64 bits que cuenta los milisegundos desde el 1 de enero de 1970 UTC) adjunto por la identidad de PHBS (es decir, la clave pública) como el Nonce. El corredor es responsable de garantizar que las marcas de tiempo aumenten monotónicamente. La etiqueta de autenticación se adjunta al texto de cifrado producido para crear una dos tupla. Con el cifrado de eventos se crea una etiqueta única para el evento cifrado. Con el cifrado del atributo 109, cada atributo está encriptado y autenticado por separado, y todos tienen sus etiquetas individuales. La longitud de la etiqueta es configurable en EAX sin restricciones, lo que permite al usuario hacer una compensación entre las garantías de autenticidad proporcionadas por EAX y la sobrecarga de comunicación adicional. Utilizamos una longitud de etiqueta de 16 bytes en nuestra implementación, pero uno podría hacer que la longitud de la etiqueta sea un parámetro definido de editor/suscriptor para cada publicación/suscripción o incluirlo en la definición de tipo de evento para que sea un parámetro específico de tipo. EAX también es compatible con los datos asociados sin cifrar en el cálculo de la etiqueta. La integridad de estos datos está protegida, pero aún es legible por todos. Esta característica podría usarse con el cifrado de eventos en los casos en que parte del contenido del evento es público y, por lo tanto, sería útil para el enrutamiento basado en el contenido. La integridad de los datos aún estaría protegida contra los cambios, pero los corredores no autorizados podrían aplicar filtros. Hemos incluido el identificador de tipo de evento como datos asociados para proteger su integridad. Otros algoritmos AAD incluyen el modo de libro de códigos de compensación (OCB) [17] y el contador con el modo CBC-MAC (CCM) [22]. Por el contrario del modo EAX, el modo OCB requiere solo un pase sobre el texto sin formato, lo que lo hace aproximadamente el doble de rápido que EAX. Desafortunadamente, el modo OCB tiene una solicitud de patente en el lugar en los EE. UU., Lo que restringe su uso. El modo CCM es el predecesor del modo EAX. Fue desarrollado para proporcionar una alternativa gratuita a OCB. El EAX fue desarrollado más tarde para abordar algunos problemas con CCM [18]. De manera similar a EAX, CCM también es un modo de dos pasos.4. La gestión de claves en ambos enfoques de cifrado, el contenido del evento cifrado tiene un identificador único a nivel mundial (es decir, el tipo de evento o el identificador de atributos). Ese identificador se usa para determinar la clave de cifrado para usar al cifrar o descifrar el contenido. Cada tipo de evento, en cifrado de eventos, y atributo, en cifrado de atributos, tiene su propia clave de cifrado individual. Al controlar el acceso a la clave de cifrado, controlamos efectivamente el acceso al contenido del evento cifrado. Para controlar el acceso a las claves de cifrado, formamos un grupo clave de corredores para cada clave de cifrado individual. El grupo clave se utiliza para actualizar la clave cuando es necesario y entregar la nueva clave a todos los miembros actuales del grupo clave. El gerente del grupo clave es responsable de verificar que un nuevo miembro que solicite unirse al grupo clave está autorizado para hacerlo. Por lo tanto, el gerente de grupo clave debe ser confiado por el propietario del tipo para hacer cumplir la política de control de acceso. Suponemos que el gerente del grupo clave es un tercero de confianza o alternativamente un miembro del dominio de los propietarios de tipos. En [12] Pesonen et al.Propuso una arquitectura de control de acceso basada en la capacidad para sistemas de publicación/suscripción de múltiples dominios. El enfoque utiliza capacidades para descentralizar la política de control de acceso entre los nodos de publicación/suscripción (es decir, clientes y corredores): cada nodo tiene un conjunto de capacidades que definen la autoridad otorgada a ese nodo. La autoridad para acceder a un tipo de evento determinado es otorgada por el propietario de ese tipo que emite una capacidad a un nodo. La capacidad define el tipo de evento, la acción y los atributos que tipo Gerente de clave del corredor ACS del propietario 1. Autorización de grant para la tecla de matrícula 2. Solicitudes de arranque para unir el grupo de clave de la placa de la matrícula 5. Si el corredor satisface todos los cheques, comenzarán a recibirclaves apropiadas.3. Key Manager puede verificar las credenciales de los corredores en el servicio de control de acceso 4.Key Manager puede verificar que el tipo de propietario permita el acceso Figura 4: Los pasos involucrados para que un corredor tenga éxito al unirse a un grupo clave, el nodo está autorizado para acceder. Por ejemplo, una tuple <np, suscribirse, *> autorizaría al propietario a suscribirse a eventos de programación con acceso a todos los atributos en los eventos publicados. La secuencia de eventos requeridos para que un corredor se una con éxito a un grupo clave se muestra en la figura 4. Tanto el corredor de alojamiento del cliente como el cliente deben estar autorizados para hacer que la solicitud del cliente. Es decir, si el cliente solicita una solicitud de suscripción para eventos de programación de números, tanto el cliente como el corredor local deben estar autorizados para suscribirse a los eventos de NumblePlate. Esto se debe a que desde la perspectiva de la red de corredores, el corredor local actúa como un proxy para el cliente. Utilizamos las mismas capacidades para autorizar la membresía en un grupo clave que se utiliza para autorizar las solicitudes de publicación/suscripción. No hacerlo podría conducir a la situación inconsistente en la que un SHB está autorizado para hacer una suscripción en nombre de sus clientes, pero no puede descifrar el contenido de eventos entrantes para ellos. En el ejemplo de la placa de números anterior, el corredor local que contiene la capacidad anterior está autorizado para unir el grupo de clave NumblePlate, así como los grupos clave para todos los atributos en el tipo de evento NumblePlate.4.1 El cifrado de contenido de evento de comunicación de grupo seguro en un sistema descentralizado de publicación/publicación de dominios múltiples puede verse como una subcategoría de comunicación de grupo seguro. En ambos casos, el sistema de gestión clave debe escalar bien con el número de clientes, los clientes pueden distribuirse en grandes áreas geográficas, puede haber altas tasas de membresía en el grupo, y todos los miembros deben sincronizarse entre sí a tiempo paraUse la misma clave de cifrado al mismo tiempo. Hay una serie de protocolos de gestión de claves escalables para la comunicación de grupo seguro [15]. Hemos implementado el protocolo de árbol de funciones unidireccionales (a menudo) [8] como prueba de concepto. Elegimos implementar OFT, debido a su relativamente simplicidad y buen rendimiento. Nuestra implementación utiliza la misma red de superposición estructurada utilizada por la red de corredores como transporte. El protocolo de OFT se basa en un árbol binario donde los participantes están en las hojas del árbol. Escala en log2n en costos de procesamiento y comunicación, así como en el tamaño del estado almacenado en cada participante, que hemos verificado en nuestras simulaciones.4.2 Clave refrescante tradicionalmente en los esquemas de gestión de la clave del grupo La clave de cifrado se actualiza cuando un nuevo miembro se une al grupo, un miembro existente de 110 sale del grupo o expira un temporizador. Refrescar la llave cuando un nuevo miembro se une proporciona un secreto hacia atrás, es decir, al nuevo miembro no puede acceder a mensajes antiguos. De manera similar, refrescante la clave cuando un miembro existente se hunde proporciona un secreto hacia adelante, es decir, al antiguo miembro no puede acceder a mensajes futuros. Las actualizaciones desencadenadas del temporizador se emiten periódicamente para limitar el daño causado por la clave actual comprometida. A pesar de que los protocolos de gestión clave de última generación son eficientes, actualizar la clave innecesariamente introduce tráfico y procesamiento adicionales entre los miembros clave del grupo. En nuestro caso, la membresía clave del grupo se basa en el corredor que tiene una capacidad que lo autoriza a unirse al grupo clave. La capacidad tiene un conjunto de condiciones de validez que en su forma más simple definen un período de tiempo en que el certificado es válido, y en casos más complejos implican cheques en línea hacia el emisor. Para evitar actualizaciones de la clave innecesaria, el administrador clave analiza las condiciones de validez del certificado del miembro de unión o salida. En el caso de un miembro de unión, si el gerente puede determinar que el certificado era válido en el momento de la actualización de la clave anterior, se puede evitar una nueva actualización clave. Del mismo modo, en lugar de actualizar la tecla inmediatamente cuando un miembro deja el grupo clave, el administrador clave puede almacenar en caché sus credenciales y actualizar la clave solo cuando expiran las credenciales. Estas situaciones se ilustran en la Fig.5. Se puede suponer que las credenciales otorgadas a los corredores son relativamente estáticas, es decir, una vez que un dominio esté autorizado para acceder a un tipo de evento, la autoridad será delegada a todos los corredores de ese dominio, y tendrán la autoridad para el futuro previsible. Se implementaría un control de acceso dinámico más de grano fino y de grano dinámico en el borde de la red de corredores entre los clientes y los corredores de alojamiento de clientes. Cuando se actualiza una clave de cifrado, la nueva clave se etiqueta con una marca de tiempo. La clave de cifrado para usar para un evento dado se selecciona en función de la marca de tiempo de publicación de eventos. Las llaves viejas se mantendrán durante una cantidad razonable de tiempo para permitir una deriva de reloj. Configurar este valor es parte del protocolo de gestión de clave, aunque exactamente cuánto tiempo debería durar este tiempo dependerá de la naturaleza de la aplicación y posiblemente del tamaño de la red. Se puede configurar independientemente por grupo clave si es necesario.5. Evaluación Para evaluar el desempeño del cifrado de contenido de eventos, hemos implementado ambos enfoques de cifrado que se ejecutan sobre nuestra implementación de Hermes Publish/ suscripción de middleware. La implementación admite tres modos: contenido de texto sin formato, cifrado de eventos y cifrado de atributos, en un solo sistema de publicación/suscripción. Ejecutamos tres pruebas de rendimiento en un simulador de eventos discretos. El simulador se ejecutó en una estación de trabajo Intel P4 3.2GHz con 1 GB de memoria principal. Decidimos ejecutar las pruebas en un simulador de eventos en lugar de un sistema implementado real para poder medir para agregar el tiempo que se necesita para manejar todos los mensajes en el sistema. Las siguientes secciones describen las configuraciones de prueba específicas y los resultados con más detalle.5.1 Gastos generales de extremo a extremo La prueba de gastos generales de extremo a extremo muestra cuánto se vio afectado el rendimiento del mensaje general del simulador por el cifrado de contenido de eventos. Formamos una red de corredores con dos corredores, adjuntamos un editor a uno de ellos y un suscriptor al otro. El suscriptor suscrito al tipo de evento anunciado sin ningún filtros, es decir, cada publicación coincidió con la publicación de suscriptores y, por lo tanto, se entregó al suscriptor. La prueba mide el tiempo combinado que se necesita para publicar y entregar 100,000 eventos. Si el contenido está encriptado, esto incluye cifrar el contenido en el PHB y descifrarlo en el SHB. En la prueba, el número de atributos en el tipo de evento aumenta de 1 a 25 (el eje x). Cada atributo se establece en una cadena de 30 caracteres. Para cada número de atributos en el tipo de evento, el editor publica 100,000 eventos, y el tiempo transcurrido se mide para obtener el rendimiento del mensaje. La prueba se repitió cinco veces para cada número de atributos y usamos el promedio de todas las iteraciones en el gráfico, pero los resultados fueron altamente consistentes, por lo que no se muestra la desviación estándar. Las mismas pruebas se ejecutaron sin cifrado de contenido, cifrado de eventos y cifrado de atributos. Como se puede ver en la Fig. 6, el cifrado de contenido de eventos introduce una sobrecarga grande en comparación con el no usar cifrado. El rendimiento al usar el cifrado de atributos con un tipo de evento con un atributo es el 46% del rendimiento alcanzado cuando los eventos se envían en texto sin formato. Cuando el número de atributos aumenta también la brecha de rendimiento: con diez atributos, el rendimiento con el cifrado de atributos ha disminuido al 11.7% del rendimiento del texto sin formato. El cifrado de eventos le va mejor, debido a menos operaciones de cifrado. El aumento en la cantidad de datos encriptados no afecta el rendimiento tanto como el número de operaciones de cifrado individuales. La diferencia en el rendimiento con el cifrado de eventos y el cifrado de atributos con solo un atributo es causada por el mecanismo de serialización del objeto Java: en el caso de cifrado de eventos, toda la estructura de atributos se está serializada, lo que da como resultado más objetos que serializar un solo valor de atributo. Una implementación más eficiente proporcionaría su propio mecanismo de ensarceado. Tenga en cuenta que la implementación de EAX que utilizamos ejecuta el Nonce (es decir, el vector de inicialización) a través de una construcción OMAC para aumentar su aleatoriedad. Dado que no se requiere que el Nonce se mantenga en secreto (solo único), hay una posible compensación de tiempo/espacio que aún no hemos investigado al adjuntar atributos adicionales de Nonce que ya han tenido esta construcción OMAC aplicada a ellos.5.2 Eventos internos de dominio que explicamos en la Secta.3.4 El descifrado y el cifrado del contenido del evento se pueden evitar si ambos corredores están autorizados para acceder al contenido del evento. Esta prueba fue diseñada para mostrar que el uso del mecanismo de contenido de eventos cifrado entre dos corredores autorizados incurre solo en una pequeña sobrecarga de rendimiento. En esta prueba, nuevamente formamos una red de corredores con dos corredores.111 CLAVE REFRESH SHOLET BROKER 1 Unirse y dejar al grupo clave Broker 2 Unirse y dejar el grupo clave REFRESA CLAVE REAL REFRESH TIEMPO Un día Las credenciales de grupo clave del grupo son válidos Tiempo de unión real de suministro real de licencia Real Un día Figura 5: Cómo se actualiza la claveEl cronograma se ve afectado por los corredores que unen y dejan grupos clave 0 5000 10000 15000 20000 25000 30000 35000 0 5 10 15 20 25 25 Mensajes Número de Atributos No Cifrado Cifrado Cifrado de contenido completo Cifrado 6: Rendimiento de eventos en un simulador Ambos corredores están configurados conlas mismas credenciales. El editor se adjunta a uno de los corredores y al suscriptor al otro, y nuevamente el suscriptor no especifica ningún filtros en su suscripción. El editor publica 100,000 eventos y la prueba mide el tiempo transcurrido para obtener el rendimiento del mensaje de los sistemas. El contenido del evento está encriptado fuera de la medición de tiempo, es decir, el costo de cifrado no está incluido en las mediciones. El objetivo es modelar un entorno en el que un corredor haya recibido un mensaje de otro corredor autorizado, y enruta el evento a un tercer corredor autorizado. En este escenario, el corredor medio no necesita descifrar ni cifrar el contenido del evento. Como se muestra en la Fig. 2, el tiempo transcurrido se midió ya que el número de atributos en el evento publicado aumentó de 1 a 25. Los valores de atributo en cada caso son 30 cadenas de caracteres. Cada prueba se repite cinco veces y usamos el promedio de todas las iteraciones en el gráfico. Luego se repitió la misma prueba sin cifrado, cifrado de eventos y cifrado de atributos activados. Los modos encriptados se siguen muy de cerca. Como era de esperar, el modo de texto sin formato funciona un poco mejor para todos los recuentos de atributos. La diferencia puede explicarse parcialmente por los eventos encriptados que tienen mayor tamaño, ya que incluyen tanto el texto sin formato como el contenido encriptado en esta prueba. La diferencia en el rendimiento es 3.7% con un atributo y 2.5% con 25 atributos. Creemos que la rugosidad de los gráficos puede explicarse por el recolector de basura Java que interfiere con la simulación. El hecho de que los tres gráficos muestren las mismas irregularidades respalden esta teoría.112 50000 55000 60000 65000 70000 75000 80000 85000 90000 95000 100000 0 5 10 15 15 20 25 Mensajes Número de Atributos de Atributos No Cifrado Cifrado de contenido completo Cifrado de contenido completo Figura 7: Desputamiento de eventos internos de dominio 5.3 Comunicación gastos exagerados a través de la definición de múltiples tipos de eventos, TITO TITes posible emular la expresividad del cifrado de atributos utilizando solo el cifrado de contenido de eventos. La última prueba que realizamos fue mostrar la sobrecarga de comunicación causada por esta técnica de emulación, en comparación con el uso de cifrado de atributos reales. En la prueba formamos una red de corredores de 2000 corredores. Adjuntamos un editor a uno de los corredores, y un número creciente de suscriptores a los corredores restantes. Cada suscriptor simula un grupo de suscriptores que tienen los mismos derechos de acceso al evento publicado. Cada grupo de suscriptores tiene su propio tipo de evento en la prueba. El resultado de esta prueba se muestra en la figura 8. El número de grupos de suscriptores aumenta de 1 a 50 (el eje x). Para cada grupo de suscriptores de N, el editor publica un evento para representar el uso del cifrado de atributos y los eventos de N que representan los eventos para cada grupo de suscriptores. Cuentamos el número de lúpulos que cada publicación realiza a través de la red de corredores (eje Y). Tenga en cuenta que la figura 8 muestra cargas de trabajo más allá de lo que esperaríamos en el uso común, en el que es probable que muchos tipos de eventos contengan menos de diez atributos. Los grupos de suscriptores utilizados en esta prueba representan conjuntos de permiso disjunto sobre dichos atributos de eventos. El número de estos conjuntos se puede determinar a partir de la política de control de acceso particular en uso, pero será un valor menor o igual al factorial del número de atributos en un tipo de evento dado. Los gráficos indican que el cifrado de atributos funciona mejor que el cifrado de eventos incluso para pequeños números de grupos de suscriptores. De hecho, con solo dos grupos de suscriptores (por ejemplo, el caso con los eventos de la placa de números), el recuento de lúpulo aumenta de 7.2 Hops para el cifrado de atributos a 16.6 Hops para el cifrado de eventos. Con 10 grupos de suscriptores, los números correspondientes son 24.2 y 251.0, es decir, un orden de diferencia de magnitud.6. Trabajo relacionado Wang et al.han categorizado los diversos problemas de seguridad que deben abordarse en los sistemas de publicación/suscripción en el futuro en [20]. El documento es una descripción completa de los problemas de seguridad en los sistemas de publicación/suscripción y, como tal, trata de llamar la atención sobre los problemas en lugar de proporcionar soluciones. Bacon et al.En [1] examine el uso del control de acceso basado en roles en los sistemas de publicación/suscripción de múltiples dominios, distribuidos. Su trabajo es complementario a este documento: el RBAC distribuido es un formalismo de política potencial que podría usar los mecanismos de aplicación que hemos presentado. Opyrchal y Prakash abordan el problema de la confidencialidad del evento en el último enlace entre el suscriptor y el SHB en [10]. Afirman correctamente que un enfoque de comunicación grupal seguro es inviable en un entorno como la publicación/suscripción que tiene membresías de grupos altamente dinámicas. Como solución, proponen un esquema que utiliza el almacenamiento en caché y la agrupación de suscriptores clave para minimizar el número de encriptaciones requeridas al entregar una publicación de un SHB a un conjunto de suscriptores a juego. Suponemos en nuestro trabajo que el SHB es lo suficientemente potente como para Man113 1 10 100 1000 10000 0 5 15 15 20 25 30 35 40 45 Número de edad de los grupos de suscripción de suscripción Cifrado de contenido completo Cifrado de contenido completo 8: HOP cuenta al emular atributos de cifrado de atributo de atributoA TLS aseguró la conexión para cada suscriptor local. Ambos Srivatsa et al.[19] y Raiciu et al.[16] Mecanismos actuales para proteger la confidencialidad de los mensajes en infraestructuras de publicación/suscripción descentralizadas. En comparación con nuestro trabajo, ambos documentos tienen como objetivo proporcionar los medios para proteger la integridad y la confidencialidad de los mensajes, mientras que el objetivo de nuestro trabajo es hacer cumplir el control de acceso dentro de la red de corredores. Raiciu et al.Suponga en su trabajo que ninguno de los corredores de la red es confiable y, por lo tanto, todos los eventos están encriptados de editor a suscriptor y que toda la coincidencia se basa en eventos cifrados. Por el contrario, suponemos que algunos de los corredores en el camino de una publicación se confía en acceder a esa publicación y, por lo tanto, pueden implementar la coincidencia de eventos. También suponemos que siempre se confía en la publicación de los corredores de alojamiento de suscriptores para acceder a la publicación. Las contribuciones de Srivatsa et al.y Raiciu et al.son complementarios a las contribuciones en este documento. Finalmente, Fiege et al.abordar el tema relacionado de la visibilidad del evento en [6]. Si bien el trabajo se concentró en usar ámbitos como mecanismo para estructurar sistemas basados en eventos a gran escala, la noción de visibilidad del evento resuena con el control de acceso hasta cierto punto.7. Conclusiones El cifrado de contenido de eventos se puede utilizar para hacer cumplir una política de control de acceso, mientras que los eventos están en tránsito en la red de corredores de un sistema de publicación/suscripción de múltiples dominios. El cifrado causa una sobrecarga, pero i) puede no haber una alternativa cuando se requiere el control de acceso, y ii) la penalización de rendimiento puede disminuir con las optimizaciones de implementación, como el paso del contenido de texto sin formato en caché junto con el contenido encriptado entre corredores con credenciales de seguridad idénticas. Esto es particularmente apropiado si las conexiones de corredor a corredor están aseguradas de forma predeterminada, por lo que el cableado no es un problema. El cifrado de nivel de atributo se puede implementar para hacer cumplir las políticas de control de acceso de grano fino. Además de proporcionar control de acceso a nivel de atributo, el cifrado de atributos permite a los corredores parcialmente autorizados implementar el enrutamiento basado en el contenido en función de los atributos a los que se les puede acceder. Nuestros experimentos muestran que i) al almacenar en caché el texto sin formato y el contenido de texto cifrado Cuando sea posible, podemos ofrecer un rendimiento comparable a los eventos de texto sin formato, y ii) que atribuye el cifrado dentro de un evento incurre mucho menos a la sobrecarga que la definición de tipos de eventos separados para los atributos que necesitan diferentesNiveles de protección. En entornos que comprenden múltiples dominios, donde los brokers de eventos tienen diferentes credenciales de seguridad, hemos cuantificado cómo se puede hacer una compensación entre el rendimiento y la expresividad. Agradecimientos Nos gustaría agradecer a los revisores anónimos por sus comentarios muy útiles. Lauri Pesonen cuenta con el apoyo de EPSRC (GR/T28164) y la Fundación Nokia. David Eyers cuenta con el apoyo de EPSRC (GR/S94919).114 8. Referencias [1] J. Bacon, D. M. Eyers, K. Moody y L. I. W. Pesonen. Asegurar/suscribirse para sistemas de dominios múltiples. En G. Alonso, editor, middleware, volumen 3790 de las notas de la conferencia en informática, páginas 1-20. Springer, 2005. [2] M. Billare, P. Rogaway y D. Wagner. EAX: un modo convencional de cifrado autenticado. Cryptology Eprint Archive, Informe 2003/069, 2003. http://eprint.iac.org/.[3] A. Carzaniga, D. S. Rosenblum y A. L. Wolf. Diseño y evaluación de un servicio de notificación de eventos de área amplia. Transacciones ACM en sistemas informáticos, 19 (3): 332-383, agosto de 2001. [4] M. Castro, P. Druschel, A. Kermarrec y A. Rowstron. Escribo: una infraestructura de multidifusión de multidifusión a gran escala y descentralizada de nivel de aplicación. IEEE Journal en áreas seleccionadas en Comunicaciones (JSAC), 20 (8): 1489-1499, octubre de 2002. [5] T. Dierks y C. Allen. El protocolo TLS, versión 1.0. RFC 2246, Internet Engineering Task Force, enero de 1999. [6] L. Fiege, M. Mezini, G. M Uhl y A. P. Buchmann. Ingeniería de sistemas basados en eventos con ámbitos. En Ecoop 02: Actas de la 16ª Conferencia Europea sobre Programación Orientada a Objetos, páginas 309-333, Londres, Reino Unido, 2002. Springer-Verlag.[7] T. Iwata y yo. A. Iurosawa. OMAC: CBC Mac, 14 de enero de 2002. [8] D. A. McGrew y A. T. Sherman. Establecimiento clave en grandes grupos dinámicos utilizando árboles de funciones unidireccionales. Informe técnico 0755, TIS Labs en Network Associates, Inc., Glenwood, MD, mayo de 1998. [9] Instituto Nacional de Normas y Tecnología (NIST). Estándar de cifrado avanzado (AES). Publicación de Normas Federales de Procesamiento de Información (FIPS PUB) 197, noviembre de 2001. [10] L. Opyrchal y A. Prakash. Distribución segura de eventos en sistemas de suscripción de publicación basados en contenido. En Proc.del décimo Simposio de Seguridad Usenix. Usenix, agosto de 2001. [11] L. I. W. Pesonen y J. Bacon. Tipos de eventos seguros en sistemas de publicación/suscripción basada en contenido de dominios múltiples. En SEM 05: Actas del 5º Taller Internacional sobre Ingeniería de Software y Middleware, páginas 98-105, Nueva York, NY, EE. UU., Septiembre de 2005. ACM Press.[12] L. I. W. Pesonen, D. M. Eyers y J. Bacon. Una arquitectura de control de acceso basada en capacidades para sistemas de publicación/suscripción de dominios múltiples. En Actas del Simposio sobre Aplicaciones e Internet (Saint 2006), páginas 222-228, Phoenix, AZ, enero de 2006. IEEE.[13] P. R. Pietzuch y J. M. Bacon. Hermes: una arquitectura de middleware basada en eventos distribuidos. En Proc.del primer taller internacional sobre sistemas distribuidos basados en eventos (DEBS02), páginas 611-618, Viena, Austria, julio de 2002. IEEE.[14] P. R. Pietzuch y S. Bhola. Control de congestión en un middleware confiable orientado a mensajes escalables. En M. Endler y D. Schmidt, editores, Proc.del 4to int. Conf.en el middleware (middleware 03), páginas 202-221, Río de Janeiro, Brasil, junio de 2003. Saltador.[15] S. Rafaeli y D. Hutchison. Una encuesta de gestión clave para la comunicación de grupo seguro. ACM Computing Surveys, 35 (3): 309-329, 2003. [16] C. Raiciu y D. S. Rosenblum. Habilitando la confidencialidad en las infraestructuras de publicación/suscripción basada en contenido. En Securecomm 06: Actas de la segunda conferencia internacional IEEE/Creatnet sobre seguridad y privacidad en redes de comunicación, 2006. [17] P. Rogaway, M. Bellare, J. Black y T. Krovetz. OCB: un modo de operación de bloque de bloque para un cifrado autenticado eficiente. En la Conferencia ACM sobre seguridad informática y comunicaciones, páginas 196-205, 2001. [18] P. Rogaway y D. Wagner. Una crítica de CCM, febrero de 2003. [19] M. Srivatsa y L. Liu. Asegurando los servicios de superposición de subscribo de publicación con EventGuard. En CCS 05: Actas de la 12ª Conferencia de ACM sobre seguridad informática y comunicaciones, páginas 289-298, Nueva York, NY, EE. UU., 2005. ACM Press.[20] C. Wang, A. Carzaniga, D. Evans y A. L. Wolf. Problemas y requisitos de seguridad en los sistemas de subscribe a escala de Internet. En Proc.de la 35ª Conferencia Anual de la Conferencia Internacional de Hawái sobre Ciencias del Sistema (HICSS02), Big Island, HI, EE. UU., 2002. IEEE.[21] D. Whitfield y M. Hellman. Privacidad y autenticación: una introducción a la criptografía. En Actas del IEEE, Volumen 67, páginas 397-427, 1979. [22] D. Whiting, R. Housley y N. Ferguson. Contador con CBC-MAC (CCM). RFC 3610, Fuerza de Tarea de Ingeniería de Internet, septiembre de 2003. 115