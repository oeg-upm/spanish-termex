Problemas de despliegue de un sistema de conferencia VoIP en un entorno de conferencia virtual R. Venkatesha Prasad I Richard Hurni II H.S. Jamadagni III H.N. Shankar IV I, III Center for Electronics Design and Technology Institute of Science, Bangalore, India Teléfono: +91 80 360 0810 I, III {Vprasad, hsjam}@cedt.iisc.ernet.in II hurni@ieee.org IV HN_SHANKAR@Yahoo.com Los servicios en tiempo real abstracto han sido compatibles con las redes de circuitos en redes. Las tendencias recientes favorecen los servicios portados en redes conmutadas por paquetes. Para la conferencia de audio, debemos considerar muchos problemas (escalabilidad, calidad de la aplicación de la conferencia, control de piso y carga en los clientes/servidores), por nombrar algunos. En este documento, describimos un marco de servicio de audio diseñado para proporcionar un entorno de conferencia virtual (VCE). El sistema está diseñado para acomodar a una gran cantidad de usuarios finales que hablan al mismo tiempo y se extienden por Internet. El marco se basa en servidores de conferencias [14], que facilitan el manejo de audio, mientras explotamos las capacidades SIP para fines de señalización. La selección del cliente se basa en un cuantificador reciente llamado número de volumen que ayuda a imitar una conferencia física cara a cara. Tratamos con los problemas de implementación de la solución propuesta tanto en términos de escalabilidad como de interactividad, al tiempo que explicamos las técnicas que utilizamos para reducir el tráfico. Hemos implementado una aplicación de servidor de conferencias (CS) en una red de todo el campus en nuestro instituto. Categorías y sujetos Descriptores C.2.4 [Redes de comunicación por computadora]: Sistemas distribuidos: cliente / servidor, aplicaciones distribuidas. Algoritmos de términos generales, rendimiento, diseño, teoría.1. Introducción a Internet de hoy utiliza el conjunto de protocolo IP que fue diseñado principalmente para el transporte de datos y proporciona la entrega de datos del mejor esfuerzo. Las restricciones de retraso y las características separan los datos tradicionales por un lado de las aplicaciones de voz y video por el otro. Por lo tanto, a medida que se implementan aplicaciones de voz y video sensibles a tiempo progresivamente en Internet, la insuficiencia de Internet está expuesta. Además, buscamos portuar los servicios telefónicos en Internet. Entre ellos, la instalación de la Conferencia Virtual (Teleconferencia) está a la vanguardia. La audio y las videoconferencias en Internet son populares [25] para las diversas ventajas que inyectan [3,6]. Claramente, el ancho de banda requerido para una teleconferencia sobre Internet aumenta rápidamente con el número de participantes;Reducir el ancho de banda sin comprometer la calidad de audio es un desafío en la telefonía en Internet. Los problemas críticos adicionales son: (a) retraso del paquete, (b) eco, (c) mezcla de audio de clientes seleccionados, (d) selección automática de clientes para participar en la conferencia, (e) Juego de audio mixto para cada cliente,(f) Manejo de clientes que no son capaces de mezclar transmisiones de audio (dichos clientes se conocen como clientes tontos) y (g) decidir el número de clientes activos simultáneamente en la conferencia sin comprometer la calidad de la voz. Si bien todos los requisitos anteriores son desde el punto de vista de la tecnología, la perspectiva de los usuarios y las interacciones también son factores esenciales. Hay mucha discusión entre la comunidad HCI y CSCW sobre el uso de etnometodología para el diseño de aplicaciones CSCW. El enfoque básico es proporcionar un ancho de banda más grande, más instalaciones y mecanismos de control más avanzados, esperando una mejor calidad de interacción. Este enfoque ignora la utilidad funcional del entorno que se utiliza para la colaboración. Eckehard Derry [4] critica este enfoque al decir que está manteniendo la forma antes de la función. Por lo tanto, la necesidad es adoptar un enfoque que considere ambos aspectos: lo técnico y lo funcional. Con respecto al aspecto funcional, nos referimos a [15] donde se ha tratado con cierto detalle. En este trabajo, no discutimos la videoconferencia;Su inclusión no beneficia significativamente la calidad de la conferencia [4]. Nuestro enfoque está en los entornos de audio virtual. Primero describimos los desafíos encontrados en las conferencias de audio virtuales. Luego analizamos las motivaciones seguidas de la literatura relevante. En la Sección 5, explicamos la arquitectura de nuestro sistema. La Sección 6 comprende la descripción de los diversos algoritmos utilizados en nuestra configuración. Abordamos los problemas de implementación. Una discusión sobre el Instituto Swiss Federal de Tecnología, Lausana. Ex visitante en CEDT. Pesit y Nias, Bangalore, India. IVI El rendimiento sigue. Concluimos que se llevan junto con algunos problemas de implementación.2. Los desafíos en la conferencia de VoIP surgen muchos desafíos en la construcción de una aplicación VoIP. Los siguientes son de particular preocupación en el proceso: • Facilidad de uso: la conferencia debe ser simple;Los usuarios no necesitan experiencia en dominio. La gerencia (adición/eliminación) de los clientes y los servidores debe ser sin complicaciones. El desarrollo de la aplicación no debe presuponer las características específicas del sistema subyacente o de las capas de red. La facilidad de uso puede incluir tecnologías fácilmente disponibles, técnicamente factibles y económicamente viables.• Escalabilidad: la conferencia debe parecer ininterrumpida bajo cargas pesadas, es decir, cuando se agregan muchos usuarios adicionales. El tráfico en WAN no debe crecer apreciablemente con el número total de clientes;De lo contrario, esto ha llevado a la congestión. Por lo tanto, se necesita un medio para regular el tráfico al mínimo para este tipo de aplicaciones en tiempo real.• Interactividad: en entornos de conferencia virtual (VCE), pretendemos una aplicación de conferencia cara a cara que imita una conferencia real, donde más participantes vocales invitan a la atención. La toma de turnos en la ocupación del piso por parte de los participantes debe adaptarse con gracia para dar una sensación de transición natural.• Estandarización: la solución debe ajustarse a los estándares establecidos para obtener interoperabilidad y aceptación de pares. Los requisitos anteriores se colocan en la perspectiva de las observaciones realizadas en trabajos anteriores (vide las secciones 3 y 4) y dirigirán el diseño de VCE.3. La motivación Ramanathan y Rangan [20] han estudiado en detalle las configuraciones arquitectónicas que comparan muchos esquemas de arquitectura de conferencia teniendo en cuenta el retraso de la red y los requisitos de cálculo para la mezcla. División funcional y diseño de arquitectura orientado a objetos que ayuda en la implementación se presenta en [1]. Una visión general de muchos problemas involucrados en el apoyo a una gran conferencia se trata en [8]. H. P. Dommel [5] y muchos otros resaltan el control del piso como otro aspecto fundamental a tener en cuenta en el diseño de una herramienta de conferencia. Los protocolos de control de conferencias bien acoplados en Internet pertenecen a la familia ITU-T H.323 [9];Sin embargo, son principalmente para pequeñas conferencias. El último borrador de IETF de Rosenberg y Schulzrinne [23] analiza los modelos de conferencia con SIP [22] en el fondo. Los aspectos de la implementación para la conferencia SIP centralizada se informan en [26]. Un nuevo enfoque llamado mezcla parcial por Radenkovic [18] permite que coexistan corrientes mixtas y no mezcladas. En todas las propuestas anteriores, si bien hay algunas sugerencias muy útiles, comparten una o más de las siguientes limitaciones: • En una conferencia de audio, las transmisiones de todos los clientes no necesitan ser mezcladas. En realidad, mezclar muchas corrientes arbitrarias [24] de los clientes degrada la calidad de la conferencia debido a la reducción en el volumen (aspecto espacial del habla). El número de transmisiones mixtas varía dinámicamente dependiendo del número de participantes activos. Esto conduciría a fluctuaciones en el volumen de cada participante individual que causa una degradación severa en la calidad. La mezcla personalizada de transmisiones no es posible cuando muchos clientes están activos. Hay un umbral sobre el número de oradores simultáneos por encima de los cuales aumentar el número de oradores se vuelve contraproducente para la calidad de la conferencia. La fijación del número máximo de altavoces simultáneos se trata en un trabajo reciente [15] utilizando etnometodología, y se conjetura a tres. Por lo tanto, es aconsejable honrar esa restricción.• No puede haber muchos mezcladores intermedios (de manera similar, servidores de conferencias como en [10]) en las etapas como en [20] porque provoca un retraso excesivo al aumentar el número de lúpulo y no es escalable con la interactividad en el enfoque.• El control del piso para una conferencia de audio (incluso en la conferencia de video) con instrucciones explícitas de turnos para los participantes, la conferencia es esencialmente un asunto de un solo speakerat-a-time, no uno en vivo y sin interrupciones. De esta manera, la conferencia se vuelve notablemente artificial y su calidad se degrada. Schulzrinne et al.[24], suponga que solo un participante está hablando a la vez. En este caso, si las aplicaciones se implementan con algún control [5], el servicio se vuelve numerosa para los usuarios.• La mezcla parcial [18] tiene un problema similar al de la mezcla cuando se mezclan más corrientes. Además, en [18], para permitir un discurso improvisado, la mezcla no se realiza cuando la red puede pagar los altos requisitos de ancho de banda para enviar/recibir todas las transmisiones, pero no es necesario [15].• Para grandes conferencias [23, 10] una conferencia centralizada no puede ampliar. Con la multidifusión, los clientes tendrán que analizar muchas transmisiones y el tráfico en una red de clientes aumenta innecesariamente. Evidentemente, se abordan diferentes problemas particulares, todos los cuales son un subconjunto de requisitos (definidos en [14] y [16]) para un soporte de conferencias VoIP. Por lo tanto, es necesario abordar las conferencias en su conjunto con todos sus requisitos considerados simultáneamente. Hacia este objetivo, el sistema de conferencia VOIP que proponemos está destinado a ser escalable e interactivo. Usamos el número de volumen para implementar el control del piso. Esto permite que un participante ingrese libremente en el modo de hablar para interrumpir el altavoz actual como en una reunión natural cara a cara. Un límite superior en el número de pisos (es decir, el número de altavoces que se permiten hablar al mismo tiempo) se fija utilizando una conjetura propuesta en [15]. El trabajo presentado aquí es en la continuación de nuestros estudios en conferencias basadas en el protocolo de inicio de la sesión en [14] y [16]. SIP, definido en [22] es ahora el estándar más popular para la implementación de VoIP y ha sido elegido por su fuerza, facilidad de uso, extensibilidad y compatibilidad. Esta es la razón por la que será en el fondo de todos los mensajes de control que surgirán implícitamente entre las entidades de nuestra arquitectura. Los mensajes reales se describen en [16] y, como tal, no presentamos una descripción completa de ellos aquí.4. Trabajo relacionado El estándar SIP definido en RFC 3261 [22] y en extensiones posteriores como [21] no ofrece servicios de control de conferencias como control de piso o votación y no prescribe cómo se va a administrar una conferencia. Sin embargo, SIP se puede utilizar para iniciar una sesión que utiliza algún otro protocolo de control de conferencias. La especificación SIP central admite muchos modelos para conferencias [26, 23]. En los modelos basados en servidor, un servidor mezcla transmisiones de medios, mientras que en una conferencia sin servidor, la mezcla se realiza en los sistemas finales. SDP [7] se puede utilizar para definir las capacidades de los medios y proporcionar otra información sobre la conferencia. Ahora consideraremos algunos modelos de conferencias en SIP que se han propuesto recientemente [23]. Primero, veamos modelos sin servidor. En la mezcla del sistema final, solo un cliente (SIP UA) maneja la señalización y la mezcla de medios para todos los demás, lo que claramente no es escalable y causa problemas cuando ese cliente en particular abandona la conferencia. En el modelo de unión de usuarios, un árbol crece, ya que cada parte invitada constituye una nueva rama en la ruta de distribución. Esto lleva a un número creciente de lúpulo para las hojas remotas y no es escalable. Otra opción sería usar multidifusión para conferencias, pero la multidifusión no está habilitada en Internet y solo es posible en una LAN actualmente. Entre los modelos basados en servidor, en una conferencia de marcación, UAS se conecta a un servidor central que maneja toda la mezcla. Este modelo no es escalable, ya que está limitado por el poder de procesamiento del servidor y el ancho de banda de la red. Las conferencias centralizadas de ADHOC y los servidores de conferencias de marcación tienen mecanismos y problemas similares. Los modelos híbridos que involucran señalización centralizada y medios distribuidos, con estos últimos usando unidifusión o multidifusión, plantean problemas de escalabilidad como antes. Sin embargo, una ventaja es que el control de la conferencia puede ser una solución de terceros. La mezcla parcial distribuida, presentada en [18], propone que en el caso de la limitación del ancho de banda, algunas transmisiones se mezclan y otras no lo están, dejando intacta la interactividad. Pérdida de espacialismo cuando se mezclan y el ancho de banda aumenta cuando no son problemas abiertos. Un estudio relacionado [19] del mismo autor propone la arquitectura de conferencia para entornos virtuales colaborativos (CVE) pero no proporciona el ángulo de escalabilidad sin la disponibilidad de multidifusión. Con las limitaciones de los sistemas de conferencia propuestos, ahora detallaremos nuestra propuesta.5. Arquitectura del sistema Esta sección está dedicada a la descripción de la arquitectura del sistema propuesta. Sin embargo, como este documento constituye la continuación de nuestro trabajo comenzó en [14] y promovido en [16], no presentaremos aquí todos los detalles sobre las entidades propuestas e invitaremos a los lectores a consultar los documentos mencionados anteriormente para obtener una completa y completa.descripción. Primero, no restringimos que nuestro sistema de conferencias trabaje solo en pequeñas conferencias, sino en grandes VCE de audio que tienen cientos (o incluso miles) de usuarios en una red de área amplia (WAN) como Internet. Esta visión proviene de una evaluación que los VCE obtendrán importancia en el futuro, ya que las conferencias de audio interactivas serán más populares debido a la propagación de la cultura de los medios en todo el mundo. Se deben solucionar dos problemas al construir un sistema de conferencias VoIP: (i) el front-end, que consiste en el programa de aplicación que se ejecuta en las computadoras de los usuarios finales y (ii) el back-end que proporciona otros programas de aplicación que facilitan la conferencia de conferenciasy conferencia. Los usuarios participantes se agrupan en varios dominios. Estos dominios son redes de área local (LAN), como redes corporativas o educativas. Esta suposición distribuida solicita soluciones distribuidas de control y manejo de medios, ya que los sistemas centralizados no escalarían para conferencias tan grandes (vide Sección 4). Más explícitamente, en cada dominio, podemos identificar varios componentes lógicos relevantes de una instalación de conferencia (Fig. 1): un número arbitrario de usuarios finales (clientes) que pueden participar en la máximo de una conferencia de audio a la vez. Cada usuario es la figura 1. Ejemplo de conferencia: 3 dominios que contienen las entidades necesarias para que la conferencia pueda tener lugar.incluido en un solo dominio en un instante dado, pero puede pasar del dominio al dominio (nomadismo). En nuestro entorno de conferencia, estos clientes son agentes de usuarios SIP regulares (SIP UAS), como se define en [22], por lo tanto, para obtener en la interoperabilidad con otros sistemas compatibles con SIP existentes. Por lo tanto, estos clientes no están al tanto de la configuración compleja que respalda la conferencia y esto se destaca a continuación.Un servidor SIP (SIPS) por dominio, cuidando todos los aspectos de señalización de la conferencia (clientes que se unen, se van, etc.) [16]. En particular, se considera una implementación física que abarca diferentes roles lógicos, a saber, un servidor de proxy SIP, un servidor de registrador SIP, un servidor de redirección SIP y un SIP B2BUA (agente de usuario de regreso a la espalda) [22]. Esta implementación física permite el manejo de mensajes SIP entrantes/salientes por una u otra entidad lógica de acuerdo con las necesidades. SIPS se confía en mantener el servicio total y tiene muchas ventajas, como (a), funciona como una entidad centralizada que puede realizar un seguimiento de las actividades de la UAS en una conferencia;(b) puede hacer todo el cambio para proporcionar características de PBX;(c) puede localizar el UAS e invitarlos a una conferencia;(d) También puede hacer la facturación. Los sorbos en diferentes dominios se comunican entre sí utilizando mensajes SIP como se describe en [16]. Si la carga en un SIPS en particular es demasiado pesada, puede crear otros SIP en el mismo dominio para que la carga se comparta.Un servidor de conferencia maestra (M-CS) (simplemente un servidor de conferencias (CS)) para cada conferencia es creado por los SIP locales cuando comienza una conferencia. Este servidor se utilizará para manejar paquetes de medios para los clientes del dominio. Su mecanismo se describirá en la siguiente sección. El M-CS podrá crear una jerarquía de CSS dentro de un dominio agregando uno o más CSS de esclavos (S-CSS) para acomodar a todos los clientes activos y evitar sus propias inundaciones al mismo tiempo. Veremos este mecanismo con cierto detalle en la secuela. Las entidades descritas aquí son exhaustivas y se ajustan a la filosofía SIP. Por lo tanto, el uso de SIP hace que esta arquitectura sea más útil e interoperable con cualquier otro cliente o servidor SIP.6. Problemas algorítmicos 6.1 Selección de las transmisiones similares a SIPCONF en [27], un servidor de conferencias (CS) [17] tiene la función de apoyar la conferencia;Es responsable de manejar transmisiones de audio usando RTP. También puede duplicarse para convertir los formatos de transmisión de audio para un cliente determinado si es necesario y puede funcionar como traductores/mezcladores de especificaciones RTP detrás de los firewalls. Hemos basado el diseño de nuestra CS en el procesador Multipoint H.323 (MP) [9]. En resumen, el MP recibe transmisiones de audio de los puntos finales involucrados en una conferencia multipunto centralizada o híbrida, las procesa y las devuelve a los puntos finales. Un MP que procesa el audio prepara las salidas de audio NMAX de las transmisiones de entrada M después de la selección, la mezcla o ambos. La mezcla de audio requiere decodificar el audio de entrada a señales lineales (PCM o analógicas), realizar una combinación lineal de las señales y volver a codificar el resultado en un formato de audio apropiado. El MP puede eliminar o atenuar algunas de las señales de entrada para reducir el ruido y los componentes no deseados. Figura 2. Diagrama esquemático de A CS La limitación de H.323 es que no aborda la escalabilidad de una conferencia. La arquitectura propone una topología de cadena en cascada o margarita [10], que se puede demostrar que no puede ampliar una gran conferencia. Un CS atiende a muchos clientes en la misma conferencia. Por lo tanto, maneja solo una conferencia a la vez. Múltiples CS pueden coexistir en un dominio, como cuando hay varias conferencias en curso. Los mensajes relacionados con la señalización de CSS se tratan en [11]. El funcionamiento de un CS se ilustra en la Fig. 2: para cada intervalo de mezcla, CS 1 elige los mejores paquetes de audio NMAX del M1 (utilizando un criterio denominado número de volumen, descrito en la siguiente subsección). Posiblemente pueda recibir y enviarlos a CSS 2 a P. El conjunto de paquetes enviados se denota como OTHERCSS. En el mismo intervalo de mezcla, también recibe los mejores paquetes de audio NMAX (de posiblemente M2) de CS 2, de manera similar, el mejor nmax (de posiblemente MP) de CS P., por simplicidad, ignoramos el retraso de propagación entre CSS que puedeser tomado en cuenta;Está más allá del alcance de esta presentación. El conjunto de paquetes recibidos se denota como de OtherCSS. Finalmente, selecciona los mejores paquetes NMAX del conjunto {TootherCSS Union fromotherCSS} y pasa estos paquetes a su propio grupo. Se puede ver que el conjunto {toothercss union de Othercss} es el mismo en todos los CSS. Esto asegura que cualquier cliente en la conferencia finalmente reciba el mismo conjunto de paquetes para mezclar. Por lo tanto, todos los clientes obtienen una visión común de la conferencia. Del mismo modo, para cada ranura de tiempo (tiempo de paquete), se selecciona un subconjunto F de todos los clientes (usando el mismo criterio) del grupo de paquetes de todos los demás CSS más los clientes NMAX seleccionados localmente. Sus paquetes se mezclan y se juegan en los clientes. Según [15], la cardinalidad de F, | F |es nmax y se fija en tres. En nuestra configuración de conferencias, la selección es de Master Conference Server (M-CS), que entra en imagen exclusivamente para el manejo de los medios. Tenga en cuenta que incluso si la especificación SIP permite la comunicación directa de medios UA a UA en una llamada uno a uno, también es posible usar el servidor de conferencias para llamadas bipartidales, especialmente porque es más funcional crear unConferencia real agregando una tercera y posteriormente más participantes. Hay casos en los que se excede la capacidad de procesamiento de un M -CS, ya que puede tener demasiados paquetes, desde dominios locales y de dominios remotos, hasta procesar. En ese caso, el M-CS creará uno o muchos S-CS (Fig. 6) y transferirá a sus propios clientes, así como a los nuevos clientes. En esta configuración, el algoritmo descrito anteriormente se modificará ligeramente, ya que los paquetes de audio irán de los clientes a sus S-CS dedicados que seleccionarán paquetes NMAX para enviar a los M-CS locales, que luego seleccionarán paquetes NMAX de todos susS-CSS en el dominio antes de enviarlos a los dominios remotos. Los paquetes entrantes de otros dominios serán recibidos por el M-CS, seleccionarán NMAX de ellos y los enviarán directamente a los clientes de dominio, evitando el SCSS. Este cambio implica que, como máximo, existen tres entidades intermedias para cada paquete de audio, en lugar de dos en la configuración convencional. A medida que el salto adicional ocurre dentro de la LAN que se supone que tiene una conectividad de alta velocidad, consideramos que no debería evitar que usemos esta jerarquía de CSS cuando es necesario hacerlo.6.2 Número de volumen (LN) Una pregunta básica para ser respondida por la CS es la siguiente. En un intervalo de mezcla, ¿cómo debe elegir los paquetes NMAX de la M que podría recibir? Una forma es clasificar los paquetes M recibidos de acuerdo con sus energías y elegir el NMAX superior. Sin embargo, esto generalmente se encuentra inadecuado porque las fluctuaciones aleatorias en las energías de paquetes pueden conducir a una mala calidad de audio. Esto indica la necesidad de una métrica diferente de las meras energías de paquetes individuales. La métrica debe tener las siguientes características [12]: • Un altavoz (ocupante del piso) no debe ser cortado por un pico en la energía del paquete de otro altavoz. Esto implica que el historial del habla de los hablantes debe tener algo de peso. Esto a menudo se conoce como persistencia o resaca.• Un participante que quiera interrumpir un orador tendrá que (i) hablar en voz alta y (ii) seguir intentándolo por un tiempo. En una conferencia cara a cara, el lenguaje corporal a menudo indica la intención de interrumpir. Pero en una conferencia ciega en discusión, los participantes intencionan interrumpir se pueden transmitir de manera efectiva a través de LN. Se debe garantizar un mecanismo de control de piso capacitado para cortar un altavoz. Estos requisitos se cumplen con el número de volumen [12], que cambia sin problemas con el tiempo para que la selección (adición y eliminación) de los clientes para la conferencia sea elegante. Ln (=) es una función de la amplitud de la secuencia de audio actual más la actividad y amplitud sobre una ventana específica en el pasado. Fig. 3. Las diferentes ventanas utilizadas para calcular el número de volumen se actualizan en base a paquete por paquete. El parámetro básico utilizado aquí es la amplitud del paquete, que se calcula como el cuadrado medio de raíz (RMS) de las energías en muestras de audio de un paquete, y denotado por XK. Tres ventanas se definen como se muestra en la figura 3. El nivel de amplitud actual del altavoz se encuentra calculando el promedio móvil de amplitud de paquetes (XK) dentro de una ventana llamada ventana pasada reciente a partir del instante presente hasta algún momento pasado. La actividad pasada del altavoz se encuentra calculando el promedio móvil de la amplitud del paquete (XK) dentro de una ventana llamada ventana pasada distante, que comienza en el punto donde termina la ventana pasada reciente y se extiende hacia atrás en el pasado para un predefinidointervalo. La actividad del altavoz en el pasado se encuentra con una ventana llamada Activity Horizon, que abarca la ventana pasada reciente, así como la ventana pasada distante y más allá de lo necesario. Aunque la contribución del horizonte de la actividad se parece a la contribución de las ventanas pasadas pasadas y distantes recientes, la actividad pasada se calcula a partir de la ventana del horizonte de actividad de manera diferente. Defina las cantidades durante estos tres intervalos como L1, L2 y L3. L1 cuantifica la actividad del habla pasada reciente, L2 la actividad del habla pasada distante y L3 da un número correspondiente a la actividad del habla en la ventana del horizonte de actividad cuantificando cuán activo estaba el hablante en los últimos intervalos. L3 produce una cantidad que es proporcional a la fracción de paquetes que tienen energías por encima de un umbral predefinido (Ec. 3). El umbral es invariante entre los clientes.∑ + - = = 1 1 1 rpp p wt tk k rp x w l (1) ∑ +−− - = = 1 2 1 dprpp rpp wwt wtk k dp x w l (2) ∑ + - = ≥ = 1} {3 * 1AHP P K WT TK X AH I W L θθ (3) Donde ifi kx 1} {= ≥θ θ≥kx = de lo contrario, 0 el umbral es una constante.se establece en el 10-20 por ciento de la amplitud de las muestras de voz de un paquete en nuestra implementación aquí. El número de volumen λ para el presente instante de tiempo (o el paquete presente) se calcula como, 3322111*L*L*L αααλ ++ = (4) aquí se eligen 1 2 dqg 3 de tal manera que: 0 <1 21 2 dqg 3 = 1- 1 2) Aquí, 1 es el peso dado al discurso pasado reciente, 2 es el peso dado al discurso pasado lejano y 3 es el peso dado a la actividad del habla en elVentana de horizonte de actividad considerada.6.3 SEGURIDAD, LA VISIÓN Y ENA ESTADA El parámetro λ KDV VRPH PHPRU \ GHSHQGLQJ RQ WKH VSUHDG RI LAS VENTANAS. Después de que un conmovedor se pone en silencio, otro puede tomar el piso. Además, como hay más de un canal, la interrupción está habilitada. Es más probable que se escuche un fuerte conmovedor debido a λ elevado. Esto asegura la equidad para todos los conmovedores. Después de todo, incluso en una conferencia cara a cara, un orador más vocal llama atención especial. Todas estas características deseables están integradas en el LN. Una discusión completa sobre la selección de los diversos parámetros y la dinámica de LN está más allá del alcance de este documento.6.4 Algoritmo de selección Uso del LN después de los desarrollos en las subsecciones 6.1 y 6.2, presentamos el algoritmo simple que se ejecuta en cada servidor de conferencia maestra (algoritmo 1). Este algoritmo se basa en las discusiones en la Sección 6.1. El set F globalmente único se encuentra utilizando este procedimiento. Repita para cada ranura de tiempo en cada M-CS {1. Obtenga todos los paquetes de los clientes que le pertenecen.2. Encuentre en la mayoría de los clientes NMAX que tienen PD [LPXP RXW RI 0 y OLHQWV LQ LWV GRPDLQ 3. Almacene una copia de los paquetes de esos clientes NMAX en la base de datos DB1.4. Envíe estos paquetes NMAX a otros M-CS (en unidifusión o multidifusión, dependiendo de la configuración).5. Del mismo modo, reciba paquetes de todos los demás M-CS y guárdelos en la base de datos DB2.6. Ahora compare los paquetes en DB1 y DB2 en WKH EDVLV RI DQG VHOHFW D PD [LPXP RI NMAX entre ellos (para formar el conjunto F) que debe reproducirse en cada cliente.7. Envíe los paquetes NMAX en el conjunto F a los clientes en su dominio.8. Mezcle estos paquetes de audio NMAX en el conjunto F después de linealizar y envíelo a clientes tontos en el dominio.} Algoritmo 1. Algoritmo de selección El mecanismo propuesto aquí también se representa en la Fig. 6, donde tiene lugar una sola conferencia entre tres dominios. Los clientes sombreados son los seleccionados en sus dominios locales;Sus transmisiones de audio se enviarán a otros CS.7. Problemas de implementación Ahora analizamos los problemas de implementación asociados con la gestión de la conferencia. ¿Cómo se organizarán los dominios para maximizar el número de participantes capaces de unirse? Para abordar esto, definimos algunos parámetros útiles.Sea D el número de dominios diferentes en los que hay clientes activos en una conferencia determinada.Sea MI el número de clientes activos presentes en el dominio I (DI ≤≤1) en una conferencia determinada. El número total de clientes activos en la conferencia es, por lo tanto, ∑ = = D I IMM 1.Sea C el número máximo de transmisiones de audio que un servidor de conferencias puede manejar en un tiempo de paquete, también llamado capacidad. C se establece de acuerdo con el poder de procesamiento de la CS más débil de la conferencia, pero como no se puede suponer que lo sabemos a-priori, se puede establecer de acuerdo con algún requisito mínimo del sistema que una máquina debe cumplir para participar en unconferencia.Deje que NMAX sea el número de transmisiones de salida que un CS tiene que enviar a otros CSS en dominios remotos (ver Sección 6.1). Estableceremos nmax = 3 (= | f |), según [15]. El problema de optimización ahora es encontrar el valor de D que maximiza el número total de clientes MI atendido por un CS en un dominio con capacidad C. Primero eliminamos el caso donde no se excede la capacidad (el CS existente no está sobrecargado),y luego proceda al caso donde existe la necesidad de crear más CSS cuando se sobrecarga una sola CS. Suponemos que los clientes están igualmente distribuidos entre los dominios, ya que es posible que no tengamos información para asumir una distribución A-Priori de los clientes. No podemos especificar más que un límite superior en el número de clientes aceptables, dado el número de dominios activos d.7.1 Conferencias con solo un nivel de CSS en esta subsección, consideramos que solo tenemos un CS, es decir, un M-CS único en cada dominio. Por lo tanto, no se puede sobrecargar. Consideramos que el sistema funciona como se describe en la Sección 6.1: los clientes envían sus paquetes de audio a sus CS locales, que selecciona transmisiones NMAX, antes de enviarlos a otros CS. Paralelamente, también recibe transmisiones NMAX para todos los demás CSS antes de tomar una decisión sobre la cual se seleccionarán, enviarán y jugarán Nmax Streams en cada cliente individual. Para la estabilidad del sistema, cualquier CS en la conferencia debería poder manejar a sus clientes locales además de los paquetes de audio de otros dominios. Claramente, entonces, la siguiente desigualdad debe mantener para cada dominio :) 1 (−⋅+≥ dn d m c max (5) El caso limitante de (5) (tomando la igualdad) toma la forma 2) (dndncm maxmax ⋅ --tim++= (6) Para optimizar D con respecto a m, establecemos 0) (2 = + - ⋅ger = ∂ ∂ Maxmax ncdn d m (7) produciendo    ⋅ ⋅ + = max max n nc d 2 (8) ([]* = redondeo al entero más cercano) y, por lo tanto, m de (6). C D M 50 9 234 100 17 884 150 26 1950 200 34 3434 250 42 5334 300 51 7650 350 59 10384 400 67 13534 450 76 17100 500 84 21084 Tabla 1. Valores de D y M calculados para algunos valores de C con nmax = 3. En la Tabla 1, damos los valores de D y M que se calcularon usando (8) y (6) con nmax = 3. Vemos que los valores de D y M, que dependen de C, se basan en la CS más débil. Vemos que hay una compensación entre M y D.Podríamos admitir más dominios en la conferencia, pero a expensas de restringir el número total de clientes en la conferencia. Al implementar y probar los servidores de conferencias en un Pentium III 1.4 GHz que ejecuta Windows NT, pudimos establecer C = 300. Pero con el advenimiento de computadoras más rápidas (> 3 GHz), se puede establecer fácilmente C en valores más altos y determinar D y M en consecuencia. La figura 4 muestra una gráfica de contorno y la Fig. 5, una malla 3D que muestra soluciones optimizadas para CSS de diferentes capacidades. Estos nos llevan a maximizar el número de dominios y, por lo tanto, a maximizar el número total de clientes en función de la capacidad de varios CS. En la Fig. 4, las curvas individuales representan el número total de clientes dirigidos, y seleccionamos un valor más bajo de D, para la capacidad C, para que la M dirigida reduzca el tráfico en WAN. La figura 5 representa una perspectiva diferente de los mismos datos en 3D. Fig. 4. Gráfico de contorno de capacidad versus número óptimo de dominios para varios tamaños de conferencia 7.2 Conferencias con dos niveles de CSS ahora considerando el caso en el que el número de clientes en un dominio en particular es demasiado grande, es decir, d m mi ≥ (9).La negación del servicio para nuevos clientes debido a la sobrecarga del servidor de conferencias. Este problema se puede resolver introduciendo un segundo nivel de CSS dentro del dominio dado, como en la figura 6. El M-CS existente crea un esclavo CS (S-CS) que puede manejar hasta los usuarios finales de C y al que transfiere a todos sus clientes activos. Aquí, el sistema funciona de manera diferente como se describe en la Sección 6.1: los clientes envían sus paquetes de audio a sus S-CS locales, que selecciona las transmisiones NMAX, antes de enviarlos a un M-CS local, que procederá de la misma manera, antes de enviarNMAX se transmite a los otros dominios. Cada S-CS recién creado debe ejecutarse en una máquina separada. El M-CS tiene que crear más S-CSS si el número de clientes activos excede C en el curso de la conferencia después de la transferencia. Con este mecanismo, el M-CS podrá crear el máximo     −⋅− = max max n dnc u) 1 (s-css, (10) como debe manejar 3 (= nmax) paquetes paracada paquetes locales S-CSS y 3 (= NMAX) de los demás dominios remotos. Luego podemos calcular el número teórico máximo de clientes activos Cumi ⋅ = en cada dominio, así como en M, para toda la conferencia como CUDM ⋅ger =. Fig. 5. Parcela 3D de capacidad versus número óptimo de dominios para varios tamaños de conferencia Por supuesto, uno podría crear aún más un tercer nivel en la jerarquía, dando la posibilidad de acomodar aún más clientes. Esto puede ser innecesario ya que el número de clientes posibles es lo suficientemente grande con dos niveles.8. Discusión de rendimiento Ahora analizamos el rendimiento del algoritmo presentado en la subsección 6.3, es decir, el que se encarga del intercambio de paquetes de audio entre los diferentes dominios. Tenga en cuenta que los paquetes que transitan dentro de la LAN aprovechan la mayor capacidad (generalmente junto con las capacidades de multidifusión) y, por lo tanto, no requieren un análisis de rendimiento. Por lo tanto, tenemos que mirar solo los paquetes RTP sobre la WAN, es decir, entre los M-CS participantes. Como cada M-CS de un dominio enviará solo NMAX de los paquetes D M a los otros CSS (Maxn D M >>), el ancho de banda utilizado por la aplicación sobre una WAN está ligada a la siguiente expresión. El número total de paquetes de audio que transitan sobre el WAN para cada ranura de tiempo es ∑ ∑ = ≠ =        d i d ijj maxn 1, 1 que es cuadrática en el número de dominios (es decir, o (d2))). Sin embargo, es independiente del número total de clientes activos. Este no habría sido el caso si todos los paquetes se hubieran enviado a través de la red en cada ranura de tiempo. El ahorro es tremendo. Sin embargo, uno puede sostener que enviar tres paquetes hacia y desde todos los dominios es un desperdicio de recursos, ya que la mayoría de estas transmisiones no serán seleccionadas. Si solo un cliente está activo, es innecesario seleccionar un subconjunto de clientes en ese dominio. Los algoritmos pesimistas y optimistas se presentan en la secuela apuntan a reducir aún más el tráfico al aprovechar la naturaleza lenta variable de la LN.8.1 Algoritmo pesimista Considere un escenario en el que el LN más bajo (llamado LNT) de las tres corrientes seleccionadas a nivel mundial (establecido F de la Sección 6.1) excede la LN de la corriente más dominante de un dominio. Evidentemente, las posibilidades de que las siguientes dos corrientes dominantes de ese dominio se seleccionen para F en el próximo período de paquete son menores. Aquí, enviamos esta transmisión más dominante y retenemos los otros dos. Puede haber un error en la selección única en todos los dominios solo para un período de paquete. Como LN varía lentamente, el error se rectificaría automáticamente en un período de paquete posterior (ranura). En este algoritmo, hay al menos una corriente en cada período. El tráfico de red neto en un período de paquete en el mejor de los casos es) 1 (−⋅ DD, es decir,) (2 do usando unicast, en lugar de maxndd ⋅ - p) 1 (. Se puede guardar un valioso ancho de banda valioso utilizando esta heurística. La complejidad del tráfico resultante se reduce de O (D2) a O (D) en redes habilitadas para multidifusión. Inicializar lnt = 0 en un M-CS/S-CS A. En la primera ranura (tiempo de paquete), cada CS envía las corrientes superiores de NMAX (según su LN) a todos los demás CS. En cada M-CS/S-CS y para cada hora del paquete: B. Encuentre el valor de LN más bajo de las transmisiones seleccionadas a nivel mundial de NMAX (SET F) desde la ranura de tiempo anterior. Establezca LNT con este valor. C. En cada dominio CS, seleccione las transmisiones locales de NMAX que tienen el máximo valor de LN (TOTOTHSS SET). D. Seleccione transmisiones que tienen ln> Lnt. Si hay> = transmisiones nmax con ln> lnt, envíe nmax superior a otros CSS. De lo contrario, si hay transmisiones (nmax-1) con Ln> Lnt, envíe la parte superior (nmax-1) más la más baja que LNT (es decir, NMAX superior) a otros CSS. De lo contrario, si hay transmisiones (nmax-2) con ln> lnt, envíe la parte superior (nmax-2) más la más baja que la lnt (es decir, la parte superior (nmax -1)) a otros CSS.…… de lo contrario si no hay transmisiones con ln> Lnt, envíe la transmisión top 1 a otros CSS. E. Paquetes enviados en el Paso D Formulario DB1. Los paquetes recibidos de otros CSS forman DB2. F. Para este intervalo de tiempo, encuentre transmisiones globales de NMAX basadas en LN de DB1 U DB2 (SET F) G. Envíe el conjunto F a los clientes en su dominio. Actualizar LNT para el próximo período. Algoritmo 2. Algoritmo pesimista para reducir la cantidad de paquetes enviados a través de Internet. Fig. 6. Ejemplo de una jerarquía de 2 niveles de servidores de conferencias;Los clientes sombreados son los seleccionados por el M-CS y se enviarán a otros dominios CSS. En este algoritmo, el ahorro en el tráfico es a costa de relajar la condición de formación del conjunto único globalmente único F. Sin embargo, las discrepancias en las corrientes seleccionadas en diferentes dominios permanecen por un corto período de tiempo, dependiendo del retraso de transporte entre dos dominios. Incluso para un retraso total de 400 ms, por solo 10 ranuras de tiempo de paquetes se pierde la singularidad. Esta duración en una conversación interactiva en tiempo real no es percibible por el oyente. En el caso de que haya una broma y cada uno se ríe, entonces habría un aumento repentino en el número de paquetes y sería delincuente por Maxn) d (o 2 por un período corto. 8.2 Algoritmo optimista El tráfico se puede reducirmás. El esquema en el siguiente algoritmo (algoritmo 3) es retener todas las corrientes que tienen menos valor de LN en comparación con los tres en el conjunto F. Podemos encontrar las tres corrientes correctas y únicas después de algunas ranuras de tiempo dependiendo deEl retraso de transporte entre los dominios. Como el período de paquete es del orden de 40 ms, el error en la selección es imposible de notar. El número de transmisiones en la red en este caso siempre está restringido a NMAX (= 3). Incluso sin detección de actividad de voz (VAD), no habrá más de tres transmisiones en la red en el mejor de los mejores casos, por lo que el tráfico total es constante. Una repentina explosión de tráfico, como se describe en 8.1, es un caso particular. Estas ventajas se deben a la explotación de las características de LN. Inicializar lnt = 0 en un M-CS/S-CS A. En la primera ranura (tiempo de paquete), cada CS envía las corrientes superiores de NMAX (según su LN) a todos los demás CS. En cada M-CS/S-CS y para cada hora del paquete: B. Encuentre el valor de LN más bajo de las transmisiones seleccionadas a nivel mundial de NMAX (SET F) desde la ranura de tiempo anterior. Establezca LNT con este valor. C. En cada dominio CS, seleccione las transmisiones locales de NMAX que tienen un valor máximo de LN (TootherCSS set) D. Seleccione flujos que tienen ln> lnt si hay> = transmisiones nmax con ln> lnt y luego envía nmax superior a otros CSS. De lo contrario, si hay transmisiones (nmax-1) con ln> lnt, envíe la parte superior (nmax-1) y vea E. de lo contrario si hay transmisiones (nmax-2) con ln> lnt, envíe la parte superior (nmax-2) y verE. …… de lo contrario si no hay transmisiones con ln> lnt, entonces no envíe ninguna transmisión. E. Excepciones: si la transmisión que estaba en F en el último intervalo pertenece a este CS, seleccione y envíe esa corriente incluso si su ln ahora es <lnt.(Tenga en cuenta que esto ocurre solo en esa CS que tenía la corriente que era la última de las tres en el período de paquete anterior). F. Paquetes enviados en el paso D y E Formulario DB1. Los paquetes recibidos de otros CSS forman DB2. G. Para este intervalo de tiempo, encuentre transmisiones globales de NMAX basadas en LN de DB1 U DB2 (SET F). H. Envíe el conjunto F a los clientes en su dominio. Actualizar LNT para el próximo período. Algoritmo 3. Algoritmo optimista Para reducir la cantidad de paquetes enviados a través de Internet Además, cuando se usa VAD [13], reduciría aún más el tráfico al enviar la parte del encabezado del paquete RTP solamente y no el paquete completo, por lo tanto, para seguir actualizandoel LN cruzó. El tráfico aquí en este caso es O (nmax) para multidifusión y o (d) para unicast. Vemos que los algoritmos anteriores guardan el ancho de banda y el cálculo en cada CS, y conduce a una arquitectura escalable con múltiples CSS principalmente porque los clientes se agrupan en dominios. El ancho de banda necesario no depende del número total de clientes activos. Como el CS siempre elige a los mejores tres clientes de todos los clientes asignados en el dominio, la adición de nuevos clientes a la conferencia existente no causará ningún problema de escalabilidad.8.3 Disponibilidad de multidifusión en la arquitectura que se ha propuesto, no se suponía que no se suponía sobre la disponibilidad de soporte de multidifusión de la red. El tráfico se reducirá aún más si hay multidifusión disponible sobre WAN. Es sencillo demostrar que el orden del tráfico tendería a convertirse en O (D) de O (D2). Esta es una aproximación ya que el ahorro en la multidifusión depende también de la topología. El análisis se realizó para el caso en el que la multidifusión no está disponible (una suposición realista en Internet de hoy). La ventaja de esta configuración es que podemos usarlo incluso si la multidifusión está parcialmente disponible. Podemos instruir a CSS durante la fase de configuración para enviar paquetes de unidifusión a aquellos CSS que no pueden recibir paquetes de multidifusión, mientras que CSS en enrutadores habilitados para multidifusión puede intercambiar paquetes en una dirección de multidifusión. Las estructuras de datos y los objetos de conferencia dentro de un CS se dan en [14]. Fig. 7. Interfaz de usuario para configurar el peso para las transmisiones de audio NMAX (configurar la auto-bar a cero evita el eco).8.4 Mejora de la calidad La mejora observada en la calidad percibida del servicio de la conferencia se debe a: (1) limitar el número de oradores concurrentes a un número bajo, como tres. En general, en una conferencia si más de dos participantes hablan la inteligibilidad se pierde. El análisis de conversación demuestra que habría un mecanismo de reparación [15] en tal caso.(2) Retraso: la transmisión de audio entre dos clientes pasará como máximo dos CSS, reduciendo así el retraso de extremo a extremo. Sin embargo, para una gran conferencia puede haber tres CSS, un salto está dentro del dominio que incurre en un retraso insignificante.(3) Como las transmisiones se mezclan solo en los clientes, puede haber una mezcla personalizada de las transmisiones. Se preserva el ajuste individual de mezclar con pesos el espacialismo. La figura 7 muestra la interfaz de usuario para la misma. El eco cuando se selecciona auto-transmisión se puede evitar reduciendo el peso. No obstante, la retroalimentación ayuda a tranquilizar al altavoz que todos los escuchan.9. Conclusión En este documento, hemos presentado una discusión sobre un entorno de conferencia virtual solo por voz. Hemos argumentado que la naturaleza distribuida de la implementación aquí la hace escalable. La interactividad se logra adaptando un esquema de selección de flujo reciente basado en el número de volumen. Además, incorporamos un resultado de un trabajo más reciente [15] donde se ha demostrado la suficiencia de tres altavoces simultáneos. Por lo tanto, existe una utilización significativamente efectiva del ancho de banda. Se juega una transmisión mixta en cada cliente;Cada cliente puede optar por tener una mezcla personalizada ya que la mezcla se realiza en la terminal local de cada cliente. Estos expresan un discurso improvisado en una teleconferencia virtual sobre la realidad de VoIP, como en una conferencia real en cara a cara. La compatibilidad se asegura gracias al uso de SIP, el protocolo de señalización más buscado. Para garantizar un rendimiento satisfactorio, no exigimos la disponibilidad de multidifusión, pero lo usamos si está disponible y cuándo está disponible. El tráfico en la WAN (Internet) está ligado a la parte superior por el cuadrado del número de dominios, reducido aún más mediante el uso de algoritmos heurísticos, que está muy por debajo del número total de clientes en la conferencia. Esto se debe al uso de un servidor de conferencia local para cada dominio. Las técnicas VAD ayudan a la reducción del tráfico. El uso de SIP Standard para la señalización hace que esta solución sea altamente interoperable. Hemos implementado una aplicación CS en una red de todo el campus. Creemos que esta nueva generación de entornos de conferencia virtual ganará más popularidad en el futuro, ya que su facilidad de implementación está segura gracias a tecnologías fácilmente disponibles y marcos escalables.10. Referencias [1] L Aguilar et al., Arquitectura para un sistema de teleconferencia multimedia, en Actas de ACM Sigcomm, agosto de 1986, pp. 126-136.[2] Carsten Bormann, Joerg Ott et al., Protocolo de control de conferencias simple, Draft de Internet, diciembre de 1996. [3] M. DiCina y V. Trecordi, Voice sobre protocolo de Internet y comercio electrónico asistido por humanos, IEEE Comm. Revista, septiembre de 1999, pp. 64-67.[4] Eckehard Derry, una comparación empírica de la interacción copresente y mediada tecnológicamente basada en la descomposición comunicativa, tesis doctoral, Escuela de Graduados de la Universidad de Oregón, 1995. [5] H. P. Dommel y J.J.García-Luna-Achis, Control de piso para conferencias multimedia y colaboración, J. Multimedia Systems, vol.5, No. 1, enero de 1997, pp. 23-38.[6] Amitava Dutta-Roy, Reuniones virtuales con conferencias de escritorio, IEEE Spectrum, julio de 1998, pp. 47-56.[7] M. Handley y V. Jacobson, SDP: Protocolo de descripción de la sesión, RFC 2327, IETF, abril de 1998. [8] M. Handley, J. Crowcroft et al., Muy grandes conferencias en Internet: las conferencias multimedia de InternetArquitectura, Journal of Computer Networks, vol.31, No. 3, febrero de 1999, pp. 191-204.[9] ITU-T Rec. H.323, Sistemas de comunicaciones multimedia basadas en paquetes, vol.2, 1998. [10] P. Koskelainen, H. Schulzrinne y X. Wu, Un marco de control de conferencias basado en SIP, Nossdav02, mayo de 2002, pp. 53-61.[11] R Venkatesha Prasad et al., Protocolo de control para el apoyo de conferencias de audio VoIP, Conferencia Internacional sobre Tecnología de Comunicación Avanzada, Mu-Ju, Corea del Sur, febrero de 2001, pp. 419-424.[12] R Venkatesha Prasad et al., Adición automática y eliminación de clientes en conferencias VoIP, sexto Simposio IEEE sobre computadoras y comunicaciones, julio de 2001, Hammamet, Túnez, pp. 386-390.[13] R Venkatesha Prasad, H S Jamadagni, Abjijeet, et al Comparación de algoritmos de detección de actividad de voz, 7º Simposio IEEE sobre computadoras y comunicaciones. Julio de 2002, Sicilia, Italia, pp. 530-535.[14] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, una conferencia de VoIP distribuida escalable usando SIP, Proc.del octavo Simposio IEEE sobre computadoras y comunicaciones, Antalya, Turquía, junio de 2003. [15] R Venkatesha Prasad, H S Jamadagni y H N Shankar, sobre el problema de especificar el número de pisos en una conferencia de solo voz, para aparecer en IEEE itre 2003.[16] R. Venkatesha Prasad, Richard Hurni, H S Jamadagni, una propuesta para conferencias distribuidas en SIP usando servidores de conferencias, que aparece en el proceso.de MMNS 2003, Belfast, Reino Unido, septiembre de 2003. [17] R. Venkatesha Prasad, H.S. Jamadagni, J. Kuri, R.S. Varchas, un soporte de conferencia VoIP distribuido con número de volumen, tecnología. Rep. TR-CEDT-TE-03-01 [18] M. Radenkovic et al, Servicio de audio escalable y adaptable para apoyar el trabajo colaborativo y el entretenimiento a través de Internet, SSGRR 2002, Laquila, Italia, enero de 2002. [19] M. Radenkovic, C. Greenhalgh, S. Benford, Problemas de despliegue para soporte de audio múltiple en CVE, ACM VRST 2002, noviembre de 2002, pp. 179-185.[20] Srinivas Ramanathan, P. Venkata Rangan, Harrick M. Vin, Diseño de arquitecturas de comunicación para la colaboración multimedia interorganizacional, Journal of Organizational Computing, 2 (3 y 4), pp.277-302, 1992. [21] A. B. Roach, Protocolo de inicio de la sesión (SIP)-Notificación de eventos específicos, RFC 3265, IETF, junio de 2002. [22] J. Rosenberg, H. Schulzrinne et al., SIP: Protocolo de iniciación de la sesión, RFC 3261, IETF, junio de 2002. [23] J. Rosenberg, H. Schulzrinne, Modelos para conferencias de partidos multy en SIP, Draft de Internet, IETF, julio de 2002. [24] H. Schulzrinne et al., RTP: un protocolo de transporte para aplicaciones en tiempo real, RFC 1889,IETF, enero de 1996. [25] Lisa R. Silverman, Venina de edad: las soluciones de conferencia reducen los costos corporativos, Libro Blanco, www.imcca.org/wpingingofage.asp [26] Kundan Singh, Gautam Nair y Henning Schulzrinne, conferencia centralizada utilizando usando usando usando usando utilizando el uso de conferencias utilizando usando usando usando utilizandoSIP, Actas del 2º Taller de Telefonía IP (IPTEL), abril de 2001. [27] D. Thaler, M. Handley y D. Estrin, La arquitectura de asignación de direcciones de multidifusión de Internet, RFC 2908, IETF, septiembre de 2000.