Razonamiento sobre el juicio y la agregación de preferencias Thomas ◦ Departamento de Ingeniería Informática de Agotnes, Bergen University College PB. 7030, N-5020 Bergen, Noruega Tag@hib.No Wiebe Van Der Departamento de Ciencias de la Computación, Universidad de Liverpool Liverpool L69 7ZF, Reino Unido wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación, Universidad de Liverpool LiverpoolL69 7ZF, Reino Unido mjw@csc.liv.ac.uk Los agentes abstractos que deben llegar a los acuerdos con otros agentes deben razonar sobre cómo sus preferencias, juicios y creencias podrían agregarse con los de los demás por los mecanismos de elección social que rigen sus interacciones. El campo recientemente emergente de la agregación de juicio estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden agregarse a un solo conjunto consistente. Como caso especial, se puede ver que la agregación de juicio subsume la agregación de preferencias clásicas. Presentamos una lógica modal que tiene la intención de apoyar el razonamiento sobre escenarios de agregación de juicio (y por lo tanto, como caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicio. Presentamos una axiomatización sólida y completa de tales reglas. Mostramos que la lógica puede expresar reglas de agregación, como la votación mayoritaria;propiedades de regla como la independencia;y resultados como la paradoja discursiva, el teorema de las flechas y la paradoja de los condorcetos, que son derivables como teoremas formales de la lógica. La lógica se parametriza de tal manera que se puede utilizar como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásicas. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial]: sistemas artificiales de inteligencia artificiales distribuidos;I.2.4 [Inteligencia artificial]: Formalismos de representación del conocimiento y métodos lógica modal Términos generales Teoría 1. Introducción En este documento, estamos interesados en formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias: combinando las relaciones de preferencia de los individuos sobre algún conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo por las llamadas funciones de bienestar social, se ha estudiado ampliamente en la teoría de la elección social [2]. El campo recientemente emergente de la agregación de juicio estudia la agregación desde una perspectiva lógica, y analiza cómo, dado un conjunto consistente de fórmulas lógicas para cada agente, que representa las creencias o juicios de los agentes, podemos agregarlas a un solo conjunto consistente de fórmulas. Una variedad de reglas de agregación de juicio se han desarrollado para este fin. Como caso especial, se puede ver que la agregación de juicio subsume la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de agregación de juicio (JAL), para razonar sobre la agregación del juicio. Las fórmulas de la lógica se interpretan como declaraciones sobre las reglas de agregación del juicio, y damos una axiomatización sólida y completa de todas esas reglas. La axiomatización se parametriza de tal manera que podamos instanciarla para obtener una variedad de lógicas de agregación de juicio diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro idioma, de todas las funciones de bienestar social, por lo tanto, también obtenemos una lógica de la agregación de preferencias clásicas. Y esta es una de las principales contribuciones de este documento: identificamos las propiedades lógicas de la agregación del juicio, y podemos comparar las propiedades lógicas de las diferentes clases de agregación del juicio, y de la agregación general del juicio y la agregación de preferencias en particular. Por supuesto, una lógica solo es interesante siempre que sea expresiva. Uno de los objetivos de este documento es investigar las capacidades representativas y lógicas que un agente necesita para la agregación de juicio y preferencia;Es decir, ¿qué tipo de lenguaje lógico podría usarse para representar y razonar sobre la agregación del juicio? El lenguaje de representación del conocimiento de los agentes debería poder expresar: reglas de agregación comunes, como la votación mayoritaria;Las propiedades comúnmente discutidas de las reglas de agregación de juicio y las funciones de bienestar social, como la independencia;Paradojas comúnmente utilizadas para ilustrar la agregación del juicio y la agregación de preferencias, a saber.la paradoja discursiva y la paradoja de los condorcetos respectivamente;y otras propiedades importantes, como el teorema de flechas. Para ilustrar con más detalle lo que tal lenguaje necesitaría ser capaz de expresar, tome el ejemplo de una propiedad potencial de las funciones de bienestar social (SWFS) llamadas independencia de alternativas irrelevantes (IIA): dados dos perfiles de preferencia (cada uno que consiste enUna relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencia, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar el SWF a los dosPerfiles de preferencias, respectivamente. A partir de este ejemplo, parece que un lenguaje formal para SWFS debería poder expresar: 566 978-81-904262-7-5 (RPS) c 2007 Ifaamas • Cuantificación en varios niveles: sobre alternativas;sobre perfiles de preferencia, es decir, sobre las relaciones sobre alternativas (cuantificación de segundo orden);y sobre agentes.• Propiedades de las relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula.• Comparación de diferentes relaciones de preferencia.• La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. Desde estos puntos, puede parecer que dicho lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de Jal es sintáctica y semánticamente bastante simple;Y, sin embargo, el lenguaje es, sin embargo, lo suficientemente expresivo como para dar expresiones elegantes y sucintas de, por ejemplo, IIA, la mayoría de votación, el dilema discursivo, la paradoja de los condorcetos y el teorema de flechas. Esto significa, por ejemplo, que el teorema de las flechas es un teorema formal de Jal, es decir, una fórmula derivable;Por lo tanto, tenemos una teoría de prueba formal para la elección social. La estructura del resto del papel es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación del juicio, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicio y las funciones de bienestar social. En la Sección 3 presentamos la sintaxis y la semántica de JAL, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de Jal se interpretan directamente por y, por lo tanto, representan propiedades de las reglas de agregación de juicio. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación del juicio, como la paradoja discursiva. Damos una axiomatización sólida y completa de la lógica en la Sección 5, bajo el supuesto de que la agenda que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede verse como un caso especial de agregación de juicio, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas JAL directamente en las funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 analizan el trabajo relacionado y concluyen.2. La agregación de juicio de juicio y preferencia se refiere a las reglas de agregación de juicio que agregan conjuntos de fórmulas lógicas;La agregación de preferencias se refiere a las funciones de bienestar social que agregan preferencias sobre algún conjunto de alternativas. Sea n varios agentes;Escribimos σ para el conjunto {1 ,..., n}.2.1 Reglas de agregación de juicio Sea L una lógica con el lenguaje L (l). Requerimos que el lenguaje tenga negación y implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L (L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A Iff ¬φ ∈ A. A veces llamamos a un miembro de un artículo de agenda. Un subconjunto a ⊆ a es consistente a menos que A implique tanto ¬nos como φ en L para algunos φ ∈ L (l);A está completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comienza con la negación. Un conjunto de juicio individual (admisible) es un subconjunto completo y consistente ai ⊆ A de la agenda. La idea aquí es que un juicio establecido AI representa las opciones de un agente realizado por. Dos criterios de racionalidad exigen que las elecciones de los agentes al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es un N-Tuple A1 ,..., An, donde AI es el conjunto de juicio individual del agente i.J (A, L) denota el conjunto de todos los conjuntos individuales (completos y consistentes) sobre A, y J (A, L) n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J (a, l) n, usamos γi para denotar el elemento ésimo de γ, es decir, el agente es un juicio individual establecido en el perfil de juicio γ. Una regla de agregación de juicio (JAR) es una función F que mapea cada perfil de juicio A1 ,..., Y a un juicio colectivo completo y consistente establecido f (a1, ..., an) ∈ J (a, l). Tal regla, por lo tanto, es una receta para hacer cumplir una decisión grupal racional, dada una tupla de elecciones racionales de los agentes individuales. Por supuesto, dicha regla debería ser justa en cierta medida. Algunas propiedades posibles de una regla de agregación de juicio F sobre una agenda A: no dictadura (ND1) No hay agente I tal que para cada perfil de juicio A1 ,..., An, f (a1, ..., an) = ai independencia (ind) para cualquier p ∈ A y perfiles de juicio a1 ,..., AN y B1 ,..., Bn, si para todos los agentes i (p ∈ Ai iff p ∈ Bi), entonces p ∈ F (a1, ..., an) iff p ∈ F (b1, ..., bn) unanimidad (un) para cualquieraPerfil de juicio A1 ,..., Y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ F (a1, ..., AN) 2.2 Funciones de bienestar social Las funciones de bienestar social (SWFS) generalmente se definen en términos de estructuras de preferencias ordinales,en lugar de estructuras cardinales, como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre algún conjunto de alternativas, para cada agente, y genera otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido de SWFS es el teorema de flechas [1]. Muchas variantes del teorema aparecen en la literatura, que difieren en suposiciones sobre las relaciones de preferencia. En este documento, supuse que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre alternativas distintas. Esto proporciona una de las formulaciones más simples del teorema de flechas (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. En adelante, suponemos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre k) es, aquí, un orden total (lineal) en k, es decir, una relación r sobre k que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica quea = b), transitivo (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R) y total (es decir, (a, b) ∈ R o (b, a) ∈ R). A veces usamos el ARB de notación infijo para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre las alternativas k se denota l (k). Alternativamente, podemos ver L (k) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de k para denotar un miembro de L (k). Por ejemplo, cuando k = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a)(b, b), (c, c)}.ARB significa que se prefiere B sobre A si A y B son diferentes. RS denota la versión irreflexiva de R, es decir, rs = r \ {(a, a): a ∈ K}.ARS B significa que B se prefiere sobre A y que A B. Un perfil de preferencia para σ sobre las alternativas k es una tupla (R1, ..., rn) ∈ L (k) n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L (k) n → L (k) mapeo de cada perfil de preferencia a una relación de preferencia agregada. La clase de todos los SWF sobre alternativas k se denota f (k). Las propiedades de SWFS F correspondientes a la regla de agregación del juicio Las propiedades discutidas en la Sección 2.1 son: El Sexto INTL. Conf.en agentes autónomos y sistemas de múltiples agentes (Aamas 07) 567 no dictadura (ND2) ¬∃i∈σ∀ (R1, ..., Rn) ∈ L (k) n f (r1, .., Rn)= Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀ (R1, ..., Rn) ∈ L (k) n ∀ (S1, ..., sn) ∈ L (k) n ∀a ∈ K∀b ∈ K ((∀i ∈ σ (arib ⇔ asib)) ⇒ (af (r1, ..., rn) b ⇔ af (s1, ..., sn) b)) (corresponde a ind) pareto optimización(Po) ∀ (r1, ..., rn) ∈ L (k) n ∀a ∈ K∀b ∈ K ((∀i ∈ σars i b) ⇒Af (r1, ..., rn) s b) (correspondea una) el teorema de flechas dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (flecha). Si hay más de dos alternativas, ningún SWF tiene todas las propiedades PO, ND2 e IIA.3. Lógica de agregación de juicio: Sintaxis y semántica El lenguaje de la lógica de agregación del juicio (JAL) es parametrizado por un conjunto de agentes σ = {1, 2 ,..., n} (asumiremos que hay al menos dos agentes) y una agenda A. Se usan las siguientes proposiciones atómicas: π = {i, σ, hp |p ∈ A, I ∈ σ} El lenguaje l (σ, a) de Jal se define por la siguiente gramática: φ :: = α |φ |φ |φ ∧ φ |¬φ donde α ∈ π. Este lenguaje se interpretará formalmente en estructuras que consisten en un elemento de la agenda, un perfil de juicio y una función de agregación de juicio;Informalmente, me refiero a que el elemento de la agenda está en el agente está establecido en el perfil de juicio actual;σ significa que el elemento de la agenda está en el conjunto de juicio agregado del perfil de juicio actual;HP significa que el elemento de la agenda es P;φ significa que φ es cierto en cada perfil de juicio;φ significa que φ es cierto en cada elemento de la agenda. Definimos ψ = ¬ ¬ψ, intuitivamente un significado ψ es cierto para algún perfil de juicio, y ψ = ¬ ψ, intuitivamente un significado ψ es cierto para algún elemento de agenda, como de costumbre, además de las conectivas proposicionales derivadas habituales. Ahora definimos la semántica formal de L (σ, a). Un modelo WRT. L (σ, a) y la lógica subyacente L es una regla de agregación de juicio F sobre A. Recuerde que J (A, L) n denota el conjunto de perfiles de juicio completos y lconsistentes sobre A. Una tabla es una tupla t = f, γ, p tal que F es un modelo, γ ∈ J (a, l) n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera.F, γ, P | = L HQ ⇔ P = Q F, γ, P | = L I ⇔ P ∈ γi F, γ, P | = L σ ⇔ P ∈ F (γ) F, γ, P | = L ψ⇔ ∀γ ∈ J (A, L) N F, γ, P | = L ψ F, γ, P | = L ψ ⇔ ∀p ∈ A F, γ, P | = L ψ F, γ, P | = Lφ ∧ ψ ⇔ F, γ, P | = L φ y F, γ, P | = L ψ F, γ, P | = L ¬φ ⇔ F, γ, P | = L φ So, por ejemplo, tenemos que esoF, γ, p | = l i∈σ I Si todos eligen P en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres propuestas: el candidato está calificado (P), si el candidato está calificado, obtendrá una oferta (P → Q), y el candidato recibirá una oferta (Q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, los resultados de la votación de la mayoría en cuanto a la proposición, es decir, el jar fmaj aceptando una proposición si es aceptada por la mayoría de los agentes, también son p p p p → q q 1 sí sí sí 2 no sí sí 3 sí no fmajSí sí Sí 1 MDC 2 MCD 3 CMD FMAJ MCD Tabla 1: Se muestran ejemplos. Este ejemplo puede modelarse tomando la agenda para que sea A = {P, P → Q, Q, ¬P, ¬ (P → Q), ¬q} (recuerde que las agendas están cerradas bajo negación única) y L es proposicionallógica. Los votos de los agentes se pueden modelar mediante el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬P, p → q, q}, γ3 = {p, ¬ (P → Q), ¬Q}. Luego tenemos eso: • fmaj, γ, p | = l 1 ∧ ¬2 ∧ 3 (agentes 1 y 3 jueces P para ser verdaderos en el perfil γ, mientras que el agente 2 no) • fmaj, γ, p | = lσ (Votación mayoritaria en P Dado el perfil de preferencia γ conduce a la aceptación de P) • FMAJ, γ, P | = L (1 ∧ 2) (los agentes 1 y 2 acuerdan algún elemento de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué elemento de la agenda esté en la tabla.) • FMAJ, γ, P | = L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (Hay algún juicioPerfil en el que todos los agentes están de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil del juicio está en la tabla). • FMAJ, γ, P | = L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1↔ 3)) (Hay algún perfil de juicio sobre el cual todos los agentes acuerdan todos los elementos de la agenda. Tenga en cuenta que esta fórmula no depende de ninguno de los elementos de la tabla.) • FMAJ, γ, P | = L σ ↔ G⊆ {1,2,3}, | G | ≥2 i∈G I (el jarFMAJ implementa el voto mayoritario) Escribimos f | = l φ iff f, γ, p | = l φ para cada γ sobre a y p ∈ A;| = L φ iff f | = l φ para todos los modelos f.Dada una posible propiedad de un frasco, como, por ejemplo, la independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f iff f tiene la propiedad. Tenga en cuenta que cuando se nos da una fórmula φ ∈ L (σ, a), validez, es decir, | = l φ, se define con respecto a los modelos del lenguaje particular l (σ, a) definido sobre la agenda particular A (ysimilar para la validez con respecto a un frasco, es decir, f | = l φ). La agenda, como el conjunto de agentes σ, se da cuando definimos el lenguaje y, por lo tanto, está implícito en la interpretación del lenguaje1. Deje que un resultado sea una conjunción máxima de literales (¬) 1 ,..., (¬) n.El conjunto O es el conjunto de todos los resultados posibles. Tenga en cuenta que la decisión de la sociedad no se incorpora aquí: un resultado solo recopila votos de agentes de σ.3.1 Comprobación del modelo La verificación del modelo es actualmente una de las áreas de investigación más activas con respecto al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicio. Intuitivamente, el problema de verificación del modelo para la lógica de agregación del juicio es la siguiente: Dado F, γ, P y Fórmula φ de Jal, ¿es el caso que F, γ, P | = φ o no?1 Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valoraciones sobre ese conjunto en particular.568 El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación del juicio, f.Recuerde que esta función mapea los perfiles de juicio para conjuntos de juicio completos y consistentes. Se debe definir un frasco para todos los perfiles de juicio en alguna agenda, es decir, debe producir una salida para todas estas entradas posibles. Pero, ¿cómo debemos representar tal regla? La representación más simple de una función f: x → y es como el conjunto de pares ordenados {(x, y) |x ∈ X & y = f (x)}. Sin embargo, esta no es una representación factible para los frascos, ya que habrá exponencialmente muchos perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inviable en la práctica. Si asumimos esta representación para frascos, entonces no es difícil ver que la verificación del modelo para nuestra lógica sería decidible en el tiempo polinomial: el algoritmo ingenuo, derivable de la semántica, tiene este propósito. Sin embargo, enfatizamos que este resultado no tiene importancia práctica, ya que asume una representación irrazonable para los modelos, una representación que simplemente no podría usarse en la práctica para ejemplos de otra cosa que no sea el tamaño trivial. Entonces, ¿qué es una representación más realista para los frascos? Digamos que una representación RF de un jar f es razonable si: (i) el tamaño de RF es polinomial en el tamaño de la agenda;y (ii) hay un algoritmo de tiempo polinómico A, que toma como entrada una representación de RF y un perfil de juicio γ, y produce como salida F (γ). Hay, por supuesto, muchas de esas representaciones RF para frascos f.Aquí, veremos uno muy general: donde el frasco se representa como una máquina Turing Machine Turing de Turing Polinomialmente limitada, que adquiere su primera cinta un perfil de juicio, y escribe en su segunda cinta el conjunto de juicio resultante. El requisito de que la máquina Turing debe estar limitada polinomialmente corresponde al requisito de que un frasco sea razonable para calcular;Si hay algún frasco que no puede ser representado por dicha máquina, entonces podría decirse que es poco valor, ya que no podría usarse en la práctica2. Con tal representación, podemos investigar la complejidad de nuestro problema de verificación de modelos. En lógicas modales, la fuente habitual de complejidad, más allá de los conectivos lógicos clásicos, son los operadores modales. Con respecto a la lógica de agregación de juicio, el operador cuantifica sobre todos los perfiles de juicio y, por lo tanto, sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante poderoso: como veremos, puede usarse como un oráculo NP [9, p.339]. En contraste, el operador cuantifica sobre los miembros de la agenda y, por lo tanto, es mucho más débil, desde una perspectiva computacional (podemos pensar que es una conjunción sobre los elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la comprobación del modelo de la lógica de agregación del juicio sobre representaciones relativamente sucintas de JAR será relativamente alta;Ahora demostramos que la complejidad de la lógica de la agregación de juicio de comprobación del modelo es tan difícil como resolver un número polinomial de problemas np-duros [9, pp.424-429]. Teorema 2. El problema de verificación del modelo para la lógica de agregación de juicio, suponiendo la representación de los frascos descritos anteriormente, es ΔP 2-Hard;Es NP-Hard incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más o operadores. Prueba. Para ΔP 2 dardness, reducimos el SNSAT (secuencialmente anidados 2, por supuesto, no tenemos una forma general de verificar si cualquier máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación de una máquina de Turing particular de un frasco cumple con nuestros requisitos. Sin embargo, esto no evita que los frascos específicos estén tan representados, con pruebas correspondientes que terminan en tiempo polinomial.satisfilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃x1.φ1 (x1) z2 = ∃x2.φ2 (x2, z1) z3 = ∃x3.φ3 (x3, z1, z2)...zk = ∃xk.φk (xk, z1, ..., zk - 1) donde x1 ,..., Xk son conjuntos de variables disjuntos, y cada φi (y) es una fórmula lógica proposicional sobre las variables y;La idea es que primero verificamos si φ1 (x1) es satisfactable, y si es así, asignamos a Z1 el valor verdadero, de lo contrario, lo asigna falso;Luego verificamos si φ2 es satisfactable bajo el supuesto de que Z1 toma el valor que acaba de obtener, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor del anterior. El objetivo es determinar si ZK es cierto. Para reducir este problema a la verificación del modelo de lógica de agregación de juicio, primero solucionamos el frasco: esta regla simplemente copia el conjunto de juicio del Agente 1.(Claramente, esto puede ser implementado mediante una máquina Turing delimitada polinomialmente). Se supone que la agenda contiene las variables x1 ∪ · · · ∪ xk ∪ {z1 ,..., zk} y sus negaciones. Corrigimos el perfil de juicio inicial γ para ser x1 ∪ · · · ∪xk ∪ {z1 ,..., zk} y arreglar p = x1. Dada una variable xi, defina x ∗ i para ser (hxi ∧1). Si φi es una de las fórmulas φ1 ,..., φk, define φ ∗ i para ser la fórmula obtenida de φi sustituyendo sistemáticamente x ∗ i por cada variable xi y z ∗ i de manera similar. Ahora, definimos la función ξi para los números naturales i> 0 como: ξk = z ∗ 1 ↔ (φ ∗ 1) si i = 1 z ∗ i ↔ (φ ∗ i ∧i - 1 j = 1 ξj) de lo contrario. Y definimos la fórmula para verificar el modelo como: φ ∗ k ∧k - 1 j = 1 ξj ahora es sencillo de la construcción que esta fórmula es verdadera bajo la interpretación sif Zk es verdadera en la instancia de SNSAT. La prueba de la segunda mitad del teorema es inmediata del caso especial donde k = 1. 3.2 Algunas propiedades hemos definido un lenguaje que puede usarse para expresar propiedades de las reglas de agregación del juicio. Una pregunta interesante es entonces: ¿Cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje?¿Qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto de resultados como el conjunto de todas las conjunciones con exactamente uno, posiblemente negado, átomo de σ. Sea p = {o ∧ σ, o ∧ ¬σ: o ∈ O};P ∈ P describe completamente las decisiones de los agentes y la función de agregación. Deje denotar exclusivo o. Tenemos eso: | = l p∈PP - Cualquier agente y el frasco siempre tienen que tomar una decisión | = L (i ∧ ¬J) → ¬i - Si algún agente puede pensar de manera diferente sobre un elemento que yo, entonces tambiénPuedo cambiar de opinión al respecto. De hecho, este principio se puede fortalecer a | = l (i ∧ ¬j) → (¬i ∧ j) | = l x - para cualquier x ∈ {i, ¬i, σ, ¬σ: i ∈ σ} - ambosLos agentes individuales y el frasco siempre juzgarán que algún elemento de la agenda es verdadero y, por el contrario, algún elemento de la agenda es falso | = L (I ∧ J) - Existen un juicio admisible establece de tal manera que los agentes que yo y J estén de acuerdo en algún juicio.| = L (i ↔ j) - Existen conjuntos de juicio admisibles de modo que los agentes que yo y J siempre están de acuerdo. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 569 La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J (A, L) de admisible, por ejemplo, L-Consistentes, perfiles de juicio. Tenga en cuenta que esto significa que alguna fórmula JAL podría ser válida bajo una lógica subyacente, mientras que no está bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, algo de tautología), entonces el siguiente retención: | = L (i ∧ σ) - Para cada perfil de juicio, hay algún elemento de la agenda(Tome una tautología) que tanto el agente I como los jueces de JAR sean verdaderos, pero esta propiedad no se mantiene cuando cada elemento de la agenda es consistente con respecto a la lógica subyacente. Una de esas agenda y lógica subyacente se discutirán en la Sección 6. 4. Ejemplos de expresividad La no dictadura se puede expresar de la siguiente manera: nd = i∈σ ¬ (σ ↔ i) (1) lemma 1. f | = l nd iff f tiene la propiedad nd1. La independencia se puede expresar de la siguiente manera: ind = o∈O ((o ∧ σ) → (o → σ)) (2) lemma 2. f | = l ind iff f tiene la propiedad ind. La unanimidad se puede expresar de la siguiente manera: una = ((1 ∧ · · · ∧ n) → σ) (3) lemma 3. f | = l una iff f tiene la propiedad una.4.1 La paradoja discursiva como se ilustra en el Ejemplo 1, la siguiente fórmula expresa votación de la mayoría en cuanto a la proposición sobre alguna proposición P MV = σ ↔ G⊆σ, | G |> n 2 i∈G I (4) es decir, la siguiente propiedad deun jar f y perfil admisible A1 ,..., An: p ∈ F (a1, ..., an) ⇔ | {i: p ∈ Ai} |> | {i: p ai} |F | = MV exactamente si F F tiene la propiedad anterior para todos los perfiles y proposiciones de juicio. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene P, Q, P → Q para algunos P, Q ∈ L (L)). Proposición 1 (paradoja discursiva).| = L ((MV) → ⊥) Cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que a = {P, P → Q, Q, ¬P, ¬ (P → Q), ¬Q ,...} y existe una regla de agregación F sobre un modo que f | = l (σ ↔ g⊆σ, | g |> n 2 i∈G i). Sea γ el perfil de juicio γ = a1, a2, a3 donde a1 = {p, p → q, q ,...}, A2 = {p, ¬ (p → q), ¬q ,...} y a3 = {¬P, P → Q, ¬Q ,...}. Tenemos que f, γ, p | = l (σ ↔ g⊆σ, | g |> n 2 i∈G i) para cualquier p, entonces f, γ, p | = l σ ↔ g⊆σ, | g|> n 2 i∈G i. Debido a que F, γ, P | = L 1 ∧ 2, se deduce que F, γ, P | = L σ. De manera similar, se deduce que F, γ, P → Q | = L σ y F, γ, Q | = L ¬σ. En otras palabras, p ∈ F (γ), P → Q ∈ F (γ) y Q F (γ). Ya que f (γ) está completo, ¬Q ∈ F (γ). Pero eso contradice el hecho de que F (γ) debe ser consistente. La Proposición 1 es una declaración lógica de una variante del dilema discursivo bien conocido: si tres agentes votan sobre las proposiciones P, Q y P → Q, la votación de la mayoría en cuanto a la proposición podría no producir un resultado consistente.5. Axiomatización dada una lógica subyacente L, una agenda finita A sobre L, y un conjunto de agentes σ, la lógica de agregación de juicio (Jal (L), o simplemente Jal cuando se entiende) para el lenguaje l (σ, a), se defineEn la Tabla 2. ¬ (HP ∧ HQ) si P Q Atmost P∈A HP al menos hp p ∈ A Agenda (HP ∧ ϕ) → (HP → ϕ) una vez (HP ∧ X) ∨ (HP ∧ X) CPJS Todas las instantes deTautologías proposicionales Taut (ψ1 → ψ2) → (ψ1 → ψ2) k ψ → ψ t ψ → ψ 4 ψ ψ → ¬ ψ 5 (i ∧ ¬j) → o∈O o c ψ ψ (com) de P1,...Pn L Q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) del cierre de ϕ → ψ e ϕ infer ψ mp de ψ infer ψ neclec tabla 2:La lógica Jal (l) para el lenguaje L (σ, a).P, PI, Q Range sobre la agenda a;φ, ψ, ψi sobre L (σ, a);x sobre {σ, i: i ∈ σ};encima { , };i, j sobre σ;o Sobre el conjunto de resultados O. HP significa HQ cuando P = ¬Q para algunas Q, de lo contrario significa H¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicio. Axiom Atmost dice que hay como máximo un elemento en la mesa a la vez, y al menos dice que siempre tenemos un elemento en la mesa. La agenda de Axiom dice que cada elemento de la agenda aparecerá en la mesa, mientras que una vez dice que cada elemento de la agenda solo aparece en la mesa una vez. Tenga en cuenta que una conjunción HP ∧ x dice: El ítem P está en la agenda, y X está a favor de ella, o X juzga que es cierto. Axiom CPJS corresponde al requisito de que los conjuntos de juicio estén completos. Tenga en cuenta que de la agenda, los CSJ y los CPJs derivamos el esquema X ∧ ¬x, que dice que todos deberían expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas tensos - 5 son bien familiarizados con la lógica modal: reflejan directamente la cuantificación sin restricciones en la definición de verdad de y. Axiom C dice que para cualquier elemento de la agenda para el cual es posible tener opiniones opuestas, todos los resultados posibles para ese elemento deberían ser alcanzables. Comm dice que todo lo que es cierto para un perfil y elemento arbitrarios, también es cierto para un elemento y perfil arbitrario. El cierre garantiza que los agentes se comporten constantemente con respecto a las consecuencias en la lógica L. MP y NEC son estándar. Usamos Jal (L) para denotar la derivabilidad en Jal (L). Teorema 3. Si la agenda es finita, tenemos eso para cualquier fórmula ψ ∈ L (σ, a), Jal (l) ψ iff | = l ψ. Prueba. La solidez es sencilla. Para completar (nos centramos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Tabla Jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f.Para ser más precisos, deje que una descripción de la tabla sea una conjunción de la forma HP ∧ O ∧ (¬) σ. Es fácil ver que las descripciones de la tabla son mutuamente excluyentes y, además, podemos derivar τ∈T τ, donde t es el conjunto de todas las descripciones de la tabla. Sea D el conjunto de todos los conjuntos consistentes máximos δ. No queremos todos esos: bien podría ser que ψ requiere que σ sea de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 IFF para todos ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. Del mismo modo para R con respecto a. Ambas relaciones son equivalencias (debido a Taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algunos Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido a la comunicación del axioma). Sea Δ0 un MCS que contiene ψ. Ahora definimos las Tablas de establecimiento = {Δ0} ∪ {Δ1, Δ2 |(R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada tablas δ ∈ puede concebirse como un par γ, P, ya que cada δ contiene un único (HQ ∧ O ∧ (¬) σ) para cada HQ y HQ yun HP único. Entonces es fácil de verificar que, para cada tablas Δ ∈, y cada fórmula ϕ, δ | = ϕ Iff ϕ ∈ δ, donde | = aquí significa la verdad en el sentido lógico modal ordinario cuando el conjunto de estados se toma como tablas. Ahora, extraemos una función de agregación F y los pares γ, P de la siguiente manera: para cada tablas Δ ∈, encuentre una conjunción HP ∧ O ∧ (¬) σ. Habrá exactamente uno de esos p.Esto define la P que estamos buscando. Además, se obtiene el γ, para cada agente I, al encontrar todo Q para el cual (HQ ∧ I) es actualmente cierto. Finalmente, la función F es una tabla de todas las tuplas HP, O (P), σ para la cual (HP ∧ O (O) ∧ σ) está contenida en algún conjunto en tablas. Señalamos que Jal tiene todos los axiomas tensos, k, t, 4, 5 y las reglas MP y NEC de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se mantiene. Un contador es el hecho de que lo siguiente es válido: σ (5) - No importa qué preferencias tienen los agentes, el frasno necesariamente hará los mismos juicios que el agente i. Entonces, por ejemplo, tenemos que la paradoja discursiva es demostrable en Jal (l): Jal (L) ((MV) → ⊥). En la Tabla 3. 6 se muestra un ejemplo de derivación de la propiedad menos complicada (válida) (i ∧ j). La agregación de preferencias recientemente, Dietrich y List [5] mostraron que la agregación de preferencias puede integrarse en la agregación del juicio. En esta sección mostramos que nuestra lógica de agregación de juicio también puede usarse para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicado simple LK con el lenguaje L (LK) de la siguiente manera: • L (LK) tiene una constante A para cada alternativa A ∈ K, Variables V1, V2 ,..., Un predicado de identidad binaria =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden∀V3 (((V1PV2 ∧ V2PV3) → V1PV3) - ∀V1 ∀V2 (¬V1 = V2 → (V1PV2 ∨ V2PV1)) • Cuando γ ⊆ L (LK) y φ es una fórmula, γ | = φ está definido para retenerIFF γ ∪ Z implica φ en el sentido estándar de lógica de predicado 1 (HP ∧ I) ∨ (HP ∧ I) CPJS (I) 2 (HP ∧ J) ∨ (HP ∧ J) CPJS (J) 3 Llama 1 A ∨B y 2 C ∨ D Abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) Taut, 3 5 Derive (I ∧ J) de cada disyuntamiento de 4La estrategia es ∨ Elim 6 (HP ∧ I) ∧ (HP ∧ J) Suponga A ∧ C 7 (HP → (I ∧ J)) Una vez, 6, K () 8 (I ∧ J) 7, Agenda 9 (I ∧j) 8, t () 10 (HP ∧ I) ∧ (HP ∧ J) Suponga A ∧ D 11 (HP ∧ X) ↔ (HP ∧ ¬ ¬x), Cierre 12 (HP ∧ I) ∧ (HP ∧ ¬J) 10, 11 13 (HP ∧ I ∧ ¬J) 12, una vez, k () 14 (i ∧ ¬j) 13, Taut 15 (i ∧ ¬j) 14, k () 16 (i ∧ ¬j)15, Comm 17 (I ∧ D¬j) 16, K () 18 (I ∧ J) 17, C 19 (HP ∧ I) ∧ (HP ∧ J) Suponga que B ∧ D 20 va como 6-9 21 (HP (HP∧ i) ∧ (HP ∧ J) Suponga que B ∧ C 22 va como 10 - 18 23 (I ∧ J) ∨ -ELIM, 1, 2, 9, 18, 20, 22 Tabla 3: Derivación de jarras de (I ∧ J) Es fácil ver que existe una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicio con consistentes y completos de LK sobre la agenda de preferencias AK = {APB, ¬APB: A, B ∈ K, A B} Dado un SWF F sobre K, el jar correspondiente FF sobre la agenda de preferencia AK se define como sigue FF (A1 ,..., An) = a, donde a es el conjunto de juicio consistente y completo correspondiente a f (l1, ..., ln) donde li es la relación de preferencia correspondiente al conjunto de juicio consistente y completo AI. Por lo tanto, podemos usar JAL para razonar sobre la agregación de preferencias de la siguiente manera. Tome el lenguaje lógico L (σ, AK), para un conjunto de agentes σ, y tome la lógica subyacente como LK. Luego podemos interpretar nuestras fórmulas en un swf f sobre k, un perfil de preferencia l ∈ L (k) y un par (a, b) ⊆ k × k, a b, como sigue: f, l, (a, b) |= swf φ ⇔ ff, γl, apb | = lk φ donde γl es el perfil de juicio correspondiente al perfil de preferencia L., mientras que en el caso de agregación de juicio general, una fórmula se interpreta en el contexto de un elemento de la agenda, en el caso de la agregación de preferenciasUna fórmula se interpreta así en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (d), una película (M) o un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 en la Sección 3, junto con el resultado de un SWF FMAJ que implementa la votación de la mayoría en pareja. Sea L = MDC, MCD, CMD el perfil de preferencia correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • FMAJ, L, (M, D) | = SWF 1 ∧ 2 ∧ 3 (Todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de M y Dthey está de acuerdo en que D es mejor que M)• fmaj, l, (m, d) | = swf ¬ (1 ↔ 2) (bajo las clasificaciones individuales l, hay algunos par de alternativas en las que los agentes 1 y 2 no están de acuerdo) el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 571 • FMAJ, L, (M, D) | = SWF (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algunos par de alternativas) • fmaj, l, (m, d) | = swf σ ↔ g⊆ {1,2,3}, | g | ≥2 i∈G I (el swf fmaj implementa la votación de la mayoría en cuanto a pares) Como de costumbre, nosotros, nosotros, nosotrosescribir f | = swf φ cuando f, l, (a, b) | = swf φ para cualquier l y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden verse como una expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Tome la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una declaración sobre una función de bienestar social, dice que existe un perfil de preferencia de tal manera que para todos los pares (a, b) de alternativas, B se prefiera sobre A en la agregación (por el SWF) delPerfil de preferencia si y solo si el agente I prefiere B sobre a.6.1 Ejemplos de expresividad Hacemos preciso la afirmación en la Sección 2.2 que las tres propiedades SWF mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F | = swf nd iff f tiene la propiedad nd2 f | = swf ind iff f tiene la propiedad iia f | = swf una iff f tiene la propiedad PO Las propiedades expresadas anteriormente son propiedades de SWFS. Veamos ahora las propiedades del conjunto de alternativas k que podemos expresar. Las propiedades que involucran cardinalidad son a menudo de interés, por ejemplo, en el teorema de flechas. Sea: mt2 = ((1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea f ∈ F (k).| K |> 2 iff f | = swf mt2. Prueba. Para la dirección a la izquierda, deje f | = swf mt2. Por lo tanto, hay un γ de tal manera que existe (A1, B1), (A2, B2) ∈ K × K, donde A1 B1 y A2 B2, de modo que (i) A1 Pb1 ∈ γ1, (ii) A1 Pb1 ∈γ2, (iii) A2 Pb2 ∈ γ1 y (IV) A2 PB2 γ2. De (ii) e (iv) obtenemos que (a1, b1) (a2, b2), y de eso y (i) y (iii) se deduce que γ1 contiene dos pares diferentes a1 pb1 y a2 pb2 cada uno con dos diferenteselementos. Pero eso no es posible si | K |= 2, porque si k = {a, b} entonces ak = {apb, ¬apb, bpa, ¬bpa} y, por lo tanto, es imposible que γ1 ⊆ ak ya que no podemos tener apb, bpa ∈ γ1. Para la dirección a la derecha, deje | K |> 2;Sea A, B, C tres elementos distintos de K. Sea γ1 el conjunto de juicio correspondiente a la clasificación ABC y γ2 El conjunto de juicio correspondiente a ACB. Ahora, para cualquier regla de agregación F, F, γ, APB | = 1 ∧ 2 y F, γ, BPC | = 1 ∧ ¬2. Por lo tanto, f | = swf mt2, para cualquier swf F. Ahora tenemos todo lo que necesitamos para expresar la declaración de flechas como una fórmula. De su teorema se deduce que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. | = swf mt2 → ¬ (po ∧ nd ∧ iia) prueba. Tenga en cuenta que MT2, PO, ND e IIA son verdaderas propiedades SWF, su valor de verdad WRT.Una tabla está determinada únicamente por el SWF. Por ejemplo, F, L, (a, b) | = swf mt2 iff f | = mt2, para cualquier f, l, a, b. Deje f ∈ F (k) y f, l, (a, b) | = swf mt2 para algunos l y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de flechas, F no puede tener todas las propiedades PO, ND2 e IIA. W.L.O.G Suponga que F no tiene la propiedad PO. Por la Proposición 2, F | = SWF PO. Dado que PO es una propiedad SWF, esto significa que F, L, (a, b) | = swf po (la satisfacción de PO es independiente de L, a, b), y por lo tanto que f, l, (a, b) |= swf ¬po ∨ ¬nd ∨ ¬iia. Tenga en cuenta que la fórmula en el Teorema 4 no menciona ningún elemento de la agenda (es decir, pares de alternativas) como HAPB directamente en una expresión. Esto significa que la fórmula es un miembro de L (σ, AK) para cualquier conjunto de alternativas k, y es válida sin importar qué conjunto de alternativas supongamos. La fórmula MV que en el caso de la agregación de juicio general expresa la votación de la mayoría en cuanto a la proposición, expresa en la votación de la mayoría de pares de la agregación de preferencias, como se ilustra en el Ejemplo 2. El corresponsal de agregación de preferencias a la paradoja discursiva de la agregación de juicio es la conocida paradoja de votación de Condorcets, afirmando que la votación de la mayoría en cuanto a pares puede conducir a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcets de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de SWFS. Proposición 4. | = SWF MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea FF, γ, APB | = LK MT2;Por lo tanto, hay tres elementos distintos a, b, c ∈ K. Suponga que FF, γ, APB | = LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia x = (ABC, CAB, BCA). Tenemos ese ff, γ, apb | = lk 1 ∧ 2 y, desde que ff, γ, apb | = lk mv, tenemos ese ff, γ, apb | = lk σ y, por lo tanto, apb ∈ Ff (γ) y ((a, b) ∈ F (x). De manera similar, obtenemos eso (c, a) ∈ F (x) y (b, c) ∈ F (x). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F (x) lo que contradice el hecho de que F (x) es antisimétrico. Por lo tanto, se deduce que FF, γ, APB | = LK MV.6.2 Axiomatización y propiedades lógicas obtenemos inmediatamente, desde el teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas k es finito, tenemos eso para cualquier fórmula ψ ∈ L (σ, Ak), Jal (LK) ψ iff | = swf ψ. Prueba. Sigue inmediatamente desde el teorema 3 y del hecho de que para cualquier jar F, hay un swf f tal que f = ff. Entonces, por ejemplo, el teorema de flechas es demostrable en Jal (LK): Jal (LK) MT2 → ¬ (PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación del juicio también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de los frascos también son propiedades de SWF. Dependiendo de la agenda, los SWF pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por frascos con otras lógicas subyacentes. Una de esas propiedades es i. Si bien tenemos | = swf i, para otras agendas hay lógicas subyacentes que | = l i para ver a este último, tomar una agenda con una fórmula P que es inconsistente en la lógica subyacente que nunca se puede incluir en unjuicio establecido. Para ver el primero, tome un par de alternativas arbitrarias (A, B). Existe un perfil de preferencia en el que el agente I prefiere B sobre a.Técnicamente hablando, la fórmula I sostiene en SWFS porque la agenda AK no contiene una fórmula que (solo) es WRT inconsistente.La lógica subyacente lk. Por la misma razón, las siguientes propiedades también se mantienen en SWF pero no en frascos en general.| = swf o∈O o 572 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07): para cualquier par de alternativas (a, b), es posible cualquier posible combinación de la clasificación relativa de A y B entre los agentes.| = swf I → ¬i - Dada una alternativa B que se prefiere sobre alguna otra alternativa A por el Agente I, hay algún otro par de alternativas C y D de modo que D no se prefiere sobre C - a saber (C, D) = = =(B, A).| = swf ((i ∨ j) → (i ∧ ¬j)) - Si, dadas las preferencias de los agentes y un SWF, para cualquiera de las dos alternativas, siempre es el caso que el agente I o el agente j prefieran la segunda alternativa sobre elPrimero, entonces debe existir un par de alternativas para las cuales los dos agentes no están de acuerdo. Una justificación es que ningún agente único puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si prefiere B sobre una J debe preferir A Over B. Una vez más, esta propiedad no necesariamente se mantiene para otras agendas, porque la agenda podría contener una inconsistencia sobre las que los agentes no podrían estar en desacuerdo. Prueba teóricamente, estas propiedades adicionales de los SWF se derivan utilizando la regla de cierre.7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de las preferencias agregadas informáticas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación del juicio desarrollado por Marc Pauly en [10], para poder caracterizar las relaciones lógicas entre las diferentes reglas de agregación de juicio. Si bien la motivación es similar al trabajo en este documento, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente;En nuestro enfoque, la regla de agregación y sus posibles insumos, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Los dos enfoques no parecen estar directamente relacionados entre sí en el sentido de que uno puede ser incrustado en el otro. La lógica de flecha de lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda representarse gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias Jal (LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, (al menos) la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de flecha. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de las relaciones de preferencia, como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de Arrow podría investigarse más a fondo en el trabajo futuro. En particular, las lógicas de flecha generalmente se demuestran WRT.un álgebra. Esto podría significar que podría ser posible usar las álgebras como la estructura subyacente para representar las preferencias individuales y colectivas. Luego, cambiar el perfil de preferencia nos lleva de un álgebra a otro, y un SWF determina la preferencia colectiva, en cada una de las álgebras.8. Discusión Hemos presentado una lógica sólida y completa Jal para representar y razonar sobre la agregación del juicio.Jal es expresivo: puede expresar reglas de agregación de juicio, como la votación mayoritaria;propiedades complicadas como la independencia;y resultados importantes como la paradoja discursiva, el teorema de flechas y la paradoja de los condorcetos. Argumentamos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación del juicio. Quizás sea sorprendente que un lenguaje relativamente simple proporcione estas capacidades.Jal proporciona una teoría de prueba, en la cual los resultados como los mencionados anteriormente pueden derivarse3. La axiomatización describe los principios lógicos de la agregación del juicio, y también se puede instanciar para razonar sobre casos específicos de agregación del juicio, como la agregación clásica de preferencia de Arrovia. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicio general, por un lado, y la agregación de preferencias clásicas por el otro. En el trabajo futuro, sería interesante relajar los requisitos de integridad y consistencia de los conjuntos de juicio, e intentar caracterizarlos en el lenguaje lógico, como propiedades de juicio general, en su lugar.9. Agradecimientos Agradecemos a los revisores anónimos por sus útiles comentarios. Thomas Ågotnes El trabajo en este documento fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega.10. Referencias [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de elección social y bienestar, volumen 1. Holanda del Norte, 2002. [3] P. Blackburn, M. de Rijke e Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. Teorema de flechas en la agregación del juicio. Elección social y bienestar, 2006. Próximo.[6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones grupales. En Actas de la Conferencia sobre Principios de representación y razonamiento del conocimiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias hasta el voto combinatorio. Actas de la Octava Conferencia Internacional sobre Principios y Representación y Razonamiento del Conocimiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. Arte. Intell, 42 (1-3): 37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatización del juicio colectivo se establece en un lenguaje lógico mínimo, 2006. Manuscrito.[11] Y. Venema. Un curso de bloqueo en la lógica de flecha. En M. Marx, M. Masuch y L. Polos, editores, lógica de flecha y lógica multimodal, páginas 3-34. Publicaciones de CSLI, Stanford, 1996. 3 Dietrich y List [5] demuestran una versión general del teorema de flechas para frascos: para una agenda fuertemente conectada, un frasco tiene las propiedades IND y UNA si no tiene la propiedad ND1, donde una fuerte conexiónes una condición algebraica y lógica en las agendas. Por lo tanto, si suponemos que la agenda está fuertemente conectada, entonces (nd ∧ una) ↔ ¬ND1 es válida y derivable en JAR. Una posibilidad interesante para el trabajo futuro es tratar de caracterizar condiciones como una conexión fuerte directamente como una fórmula lógica. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 573