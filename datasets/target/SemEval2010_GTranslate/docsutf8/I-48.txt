Juegos del sistema normativo Thomas ◦ Departamento de Agotnes de Ingeniería Informática Bergen University College PB. 2030, N-5020 Bergen Norway Tag@hib.no Wiebe Van Der Hoek Departamento de la Universidad de Ciencias de la Computación de Liverpool Liverpool L69 7ZF UK Wiebe@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación de Liverpool Liverpool L69 7zf MJWWWWWWWWWWWWWWWWWWWW@csc.liv.ac.uk Resumen Desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos de creciente prioridad e investigamos la complejidad computacional y las propiedades teóricas del juego de este modelo. En el modelo subyacente de sistemas normativos, utilizamos estructuras de Kripke para representar las posibles transiciones de un sistema multiagente. Un sistema normativo es simplemente un subconjunto de la estructura Kripke, que contiene los arcos que están prohibidos por el sistema normativo. Especificamos los objetivos de un agente como una jerarquía de fórmulas de lógica de árbol de computación (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke: la intuición es que los objetivos más arriba son preferidos por el agente sobre los que aparecen más abajo.La jerarquía. Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos basados en Kripke como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no. Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial distribuida]: sistemas multiagentes;I.2.4 [Formalismos y métodos de representación del conocimiento] Términos generales Teoría 1. Introducción Los sistemas normativos, o las leyes sociales, han demostrado ser un enfoque atractivo para la coordinación en los sistemas de múltiples agentes [13, 14, 10, 15, 1]. Aunque los diversos enfoques de los sistemas normativos propuestos en la literatura difieren en los detalles técnicos, todos comparten la misma intuición básica de que un sistema normativo es un conjunto de restricciones sobre el comportamiento de los agentes en el sistema;Al imponer estas limitaciones, se espera que surja algún objetivo deseable. Shoham y Tennenholtz propusieron la idea de usar leyes sociales para coordinar sistemas de agentes múltiples [13, 14];Su enfoque fue extendido por van der Hoek et al.Para incluir la idea de especificar un objetivo global deseable para una ley social como una fórmula lógica, con la idea de que el sistema normativo se consideraría exitoso si, después de implementarla (es decir, después de eliminar todas las acciones prohibidas), la fórmula objetivoestaba garantizado que estaría satisfecho en el sistema [15]. Sin embargo, este modelo no tuvo en cuenta las preferencias de los agentes individuales y, por lo tanto, no explicó el posible comportamiento estratégico por parte de los agentes al decidir si cumplir con el sistema normativo o no. Este modelo de sistemas normativos se extendió aún más al atribuir a cada agente un solo objetivo en [16]. Sin embargo, este modelo todavía estaba demasiado empobrecido para capturar los tipos de toma de decisiones que tienen lugar cuando un agente decide si cumplir con una ley social o no. En realidad, las consideraciones estratégicas entran en juego: un agente tiene en cuenta no solo si el sistema normativo sería beneficioso para sí mismo, sino también si otros agentes elegirán racionalmente participar. En este artículo, desarrollamos un modelo de sistemas normativos en el que se supone que los agentes tienen múltiples objetivos, de creciente prioridad. Especificamos los objetivos de los agentes como una jerarquía de fórmulas de lógica de árbol de cálculo (CTL), una lógica ampliamente utilizada para representar las propiedades de las estructuras de Kripke [8]: la intuición es que los objetivos más arriba son los que el agente es preferido por el que el agente sobre aquellosAparece más abajo en la jerarquía. Usando este esquema, definimos un modelo de utilidad ordinal, que a su vez nos permite interpretar nuestros sistemas normativos KripkeBased como juegos, en los que los agentes deben determinar si cumplir con el sistema normativo o no. Por lo tanto, proporcionamos un puente muy natural entre las estructuras y los idiomas lógicos y las técnicas y conceptos de la teoría de juegos, que han demostrado ser muy poderosos para analizar escenarios de estilo de contrato social como los sistemas normativos [3, 4]. Luego caracterizamos la complejidad computacional de una serie de problemas de decisión asociados con estos juegos de sistemas normativos basados en Kripke;Por ejemplo, mostramos que la complejidad de verificar si existe un sistema normativo que tiene la propiedad de ser una implementación de NASH es NP complete.2. Estructuras de Kripke y CTL Utilizamos estructuras de Kripke como nuestro modelo semántico básico para sistemas multiagentes [8]. Una estructura de Kripke es esencialmente un gráfico dirigido, con el conjunto de vértice S correspondiente a los posibles estados del sistema que se modelan, y la relación R ⊆ S × S captura el 881 978-81-904262-7-5 (RPS) C 2007 IfaamasPosibles transiciones del sistema;Intuitivamente, estas transiciones son causadas por agentes en el sistema que realizan acciones, aunque no incluimos tales acciones en nuestro modelo semántico (ver, por ejemplo, [13, 2, 15] para modelos relacionados que incluyen acciones como ciudadanos de primera clase). Dejamos que S0 denote el conjunto de posibles estados iniciales del sistema. Nuestro modelo está destinado a corresponder al conocido modelo de concurrencia intercalada de la literatura de sistemas reactivos: por lo tanto, un arco corresponde a la ejecución de una acción atómica por uno de los procesos en el sistema, que llamamos agentes. Es importante tener en cuenta que, en contraste con modelos como [2, 15], aquí no estamos modelando la acción sincrónica. Esta suposición no es esencial para nuestro análisis, pero simplifica enormemente la presentación. Sin embargo, nos pareció conveniente incluir dentro de nuestro modelo los agentes que causan transiciones. Por lo tanto, asumimos un conjunto A de agentes, y etiquetamos cada transición en R con el agente que causa la transición a través de una función α: R → A. Finalmente, usamos un vocabulario φ = {p, q ,...} de variables booleanas para expresar las propiedades de los estados individuales s: usamos una función v: s → 2φ para etiquetar cada estado con las variables booleanas verdaderas (o satisfechas) en ese estado. Recolectando estos componentes juntos, una estructura de Kripke marcada con agente (más de φ) es un 6-tupla: K = S, S0, R, A, α, V, donde: • S es un conjunto de estados finitos y no vacío,• S0 ⊆ S (S0 = ∅) es el conjunto de estados iniciales;• R ⊆ S × S es una relación binaria total en S, que nos referimos como la relación de transición1;• a = {1 ,..., n} es un conjunto de agentes;• α: R → A etiqueta cada transición en R con un agente;y • V: S → 2φ etiqueta cada estado con el conjunto de variables proposicionales verdaderas en ese estado. En aras de la brevedad, en adelante nos referiremos a una estructura de Kripke de agente simplemente como una estructura de Kripke. Una ruta sobre una relación de transición r es una secuencia infinita de estados π = s0, s1 ,...que debe satisfacer la propiedad que ∀u ∈ N: (su, su+1) ∈ R. Si u ∈ N, entonces denotamos por π [u] el componente indexado por u en π (por lo tanto π [0] denota el primeroelemento, π [1] el segundo, y así sucesivamente). Una ruta π de tal manera que π [0] = s es un spath. Deje que πr (s) denote el conjunto de s-spaths sobre r;Dado que generalmente será claro en el contexto, a menudo omitimos la referencia a R y simplemente escribimos π (s). A veces nos referiremos y pensaremos en una ruta S como un posible cálculo, o evolución del sistema, de s.EJEMPLO 1. Nuestro ejemplo de ejecución es de un sistema con un solo recurso no variable, que desean dos agentes. Considere la estructura Kripke representada en la Figura 1. Tenemos dos estados, S y T, y dos variables booleanas correspondientes P1 y P2, que son 1 en el tiempo de ramificación literatura lógica temporal, se dice que una relación r ⊆ s × s es total IFF ∀S ∃S: (S, (S, (S, (S, (S, (S, (S, (S, (S, (S,s) ∈ R. Tenga en cuenta que el término relación total a veces se usa para referirse a las relaciones r ⊆ s × s de tal manera que para cada par de elementos s, s ∈ S tenemos (s, s) ∈ R or (s, s, s) ∈ R;No estamos usando el término de esta manera aquí. También vale la pena señalar que para algunos dominios, otras restricciones pueden ser más apropiadas que la total de totalidad. Por ejemplo, uno podría considerar el requisito de totalidad del agente, que en cada estado, cada agente tiene al menos una posible transición disponible: ∀s∀i ∈ A∃S: (S, S) ∈ R y α (S, S) =i.2P T P 2 2 1 S 1 1 Figura 1: El control de control de recursos en ejecución.mutuamente excluyentes. Piense en PI como el agente I de significado que actualmente tiene control sobre el recurso. Cada agente tiene dos acciones posibles, cuando posee el recurso: regalarlo o mantenerlo. Obviamente, hay infinitas muchas patas S y patas T. Digamos que nuestro conjunto de estados iniciales S0 es igual a {S, T}, es decir, no hacemos ninguna suposición sobre quién inicialmente tiene control sobre el recurso.2.1 CTL ahora definimos la lógica del árbol de cálculo (CTL), una lógica temporal de tiempo de ramificación destinada a representar las propiedades de las estructuras de Kripke [8]. Tenga en cuenta que dado que CTL es bien conocido y ampliamente documentado en la literatura, nuestra presentación, aunque completa, será algo breve. Usaremos CTL para expresar objetivos de agentes. La sintaxis de CTL se define mediante la siguiente gramática: ϕ :: = |P |¬ϕ |ϕ ∨ ϕ |E fϕ |E (ϕ u ϕ) |A fϕ |A (ϕ u ϕ) donde p ∈ φ. Denotamos el conjunto de fórmula CTL sobre φ por Lφ;Como se entiende φ, generalmente omitimos la referencia a él. La semántica de CTL se da con respecto a la relación de satisfacción | =, que se mantiene entre los pares de la forma k, s, (donde k es una estructura de Kripke y S es un estado en k) y fórmulas del idioma. La relación de satisfacción se define de la siguiente manera: k, s | =;K, s | = p iff p ∈ V (s) (donde p ∈ φ);K, s | = ¬ϕ iff no k, s | = ϕ;K, s | = ϕ ∨ ψ iff k, s | = ϕ o k, s | = ψ;K, s | = a fϕ iff ∀π ∈ π (s): k, π [1] | = ϕ;K, s | = e fϕ iff ∃π ∈ π (s): k, π [1] | = ϕ;K, s | = a (ϕ u ψ) iff ∀π ∈ π (s), ∃u ∈ N, s.t. K, π [u] | = ψ y ∀v, (0 ≤ v <u): k, π [v] | = ϕ k, s | = e (ϕ u ψ) iff ∃π ∈ π (s),∃u ∈ N, S.T. K, π [u] | = ψ y ∀v, (0 ≤ v <u): k, π [v] | = ϕ los conectivos lógicos clásicos restantes (∧, →, ↔) se supone que se define como abreviaturas enTérminos de ¬, ∨, de la manera convencional. Se definen los operadores temporales CTL restantes: a ♦ ϕ ≡ a (u ϕ) e ♦ ϕ ≡ e (u ϕ) a ϕ rims | = ϕ para alguna estructura Kripke k y estado s en k;ϕ es válido si K, S | = ϕ para todas las estructuras de Kripke K y estados en K. El problema de verificar si K, S | = ϕ para K, S, ϕ (verificación del modelo) se puede hacer en tiempo polinomial determinista, mientras verifica si un ϕ dado es satisfactable o si ϕ es válido es exptime-complete [8]. Escribimos k | = ϕ si k, s0 | = ϕ para todos s0 ∈ S0, y | = ϕ si k | = ϕ para todos K. 882 el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 3. Sistemas normativos Para nuestros propósitos, un sistema normativo es simplemente un conjunto de restricciones sobre el comportamiento de los agentes en un sistema [1]. Más precisamente, un sistema normativo define, para cada transición del sistema posible, ya sea que esa transición se considere legal o no. Los diferentes sistemas normativos pueden diferir en si una transición es legal o no. Formalmente, un sistema normativo η (W.R.T. A Kripke Estructura K = S, S0, R, A, α, V) es simplemente un subconjunto de R, de modo que R \ η es una relación total. El requisito de que R \ η sea total es una restricción de razonabilidad: previene los sistemas normativos que conducen a estados sin sucesor. Sea n (r) = {η: (η ⊆ r) & (r \ η es total)} el conjunto de sistemas normativos sobre R. La interpretación prevista de un sistema normativo η es que (s, s) ∈ η significaLa transición (s, s) está prohibida en el contexto de η;Por lo tanto, r \ η denota las transiciones legales de η. Dado que se supone que η es razonable, estamos garantizados que existe una transición legal externa para cada estado. Denotamos el sistema normativo vacío por η∅, entonces η∅ = ∅. Tenga en cuenta que el sistema normativo vacío η∅ es razonable con respecto a cualquier relación de transición R. El efecto de implementar un sistema normativo en una estructura de Kripke es eliminar de sus transiciones prohibidas de acuerdo con este sistema normativo (ver [15, 1]). Si K es una estructura de Kripke, y η es un sistema normativo sobre K, entonces K † η denota la estructura de Kripke obtenida de K eliminando las transiciones prohibidas en η. Formalmente, si K = S, S0, R, A, α, V y η ∈ N (R), entonces deje que K † η = K sea la estructura Kripke K = S, S0, R, A, α, V donde: • S = S, S0 = S0, A = A y V = V;• r = r \ η;y • α es la restricción de α a r: α (s, s) = j α (s, s) if (s, s) ∈ R indefinido de otra manera. Tenga en cuenta que para todos K, tenemos k † η∅ = K. Ejemplo 1. (continuación) Cuando piensa en términos de equidad, parece natural considerar los sistemas normativos η que contienen (s, s) o (t, t). Un sistema normativo con (s, t) no sería justo, en el sentido de que a ♦ a ¬p1 ∨ a ♦ a ¬p2 sostiene: en todos los caminos, desde algún momento, un agente tendrá control para siempre. Hagamos, para referencia posterior, fijar η1 = {(s, s)}, η2 = {(t, t)} y η3 = {(s, s), (t, t)}. Más tarde, abordaremos la cuestión de si los agentes deberían elegir racionalmente cumplir con un sistema normativo particular. En este contexto, es útil definir los operadores de los sistemas normativos que corresponden a grupos de agentes que defienden el sistema normativo. Formalmente, deje que K = S, S0, R, A, α, V sea una estructura de Kripke, sea C ⊆ A un conjunto de agentes sobre K, y sea η un sistema normativo sobre K. Entonces: • η c denota elsistema normativo que es el mismo que η excepto que solo contiene los arcos de η que corresponden a las acciones de los agentes en C. llamamos η c la restricción de η a C, y se define como: η c = {(s, S): (S, S) ∈ η & α (S, S) ∈ C}. Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen cumplir con el sistema normativo.• η c denota el sistema normativo que es el mismo que η excepto que solo contiene los arcos de η que no corresponden a acciones de agentes en C. llamamos η c la exclusión de C de η, y se define como:η c = {(s, s): (s, s) ∈ η & α (s, s) ∈ C}. Por lo tanto, K † (η c) es la estructura de Kripke que resulta si solo los agentes en C eligen no cumplir con el sistema normativo (es decir, los únicos que cumplen son los que están en A \ C). Tenga en cuenta que tenemos η c = η (a \ c) y η c = η (a \ c). Ejemplo 1. (continuación) Tenemos η1 {1} = η1 = {(s, s)}, mientras η1 {1} = η∅ = η1 {2}. Del mismo modo, tenemos η3 {1} = {(s, s)} y η3 {1} = {(t, t)}.4. Metas y servicios públicos A continuación, queremos poder capturar los objetivos que tienen los agentes, ya que estos impulsarán las consideraciones estratégicas de los agentes, particularmente, como veremos, consideraciones sobre si cumplir o no un sistema normativo. Modelaremos los objetivos de un agente como una lista priorizada de fórmulas CTL, que representan propiedades cada vez más deseadas que el agente desea mantener. La interpretación prevista de tal jerarquía de objetivos γi para el agente I ∈ A es que cuanto más arriba es la jerarquía, más es, más lo desea. Tenga en cuenta que suponemos que si un agente puede alcanzar un objetivo en un nivel particular en su jerarquía de objetivos, entonces no se preocupa sobre los objetivos más bajos por la jerarquía. Formalmente, una jerarquía de objetivos, γ, (sobre una estructura de Kripke k) es una secuencia finita y no vacía de fórmulas CTL γ = (ϕ0, ϕ1, ..., ϕk) en la que, por convención, ϕ0 =. Utilizamos una notación de indexación de números naturales para extraer los elementos de una jerarquía de objetivos, por lo que si γ = (ϕ0, ϕ1, ..., ϕk) luego γ [0] = ϕ0, γ [1] = ϕ1, y así sucesivamente. Denotamos el índice más grande de cualquier elemento en γ por | γ |. Se dice que una estructura de Kripke en particular K satisface un objetivo en el índice X en la jerarquía de objetivos γ si K | = γ [x], es decir, si γ [x] está satisfecho en todos los estados iniciales s0 de K. una propiedad potencial obvia de la metaLas jerarquías son la monotonicidad: donde los objetivos en niveles más altos en la jerarquía implican lógicamente aquellos en niveles más bajos en la jerarquía. Formalmente, una jerarquía de objetivos γ es monotónica si para todas las x ∈ {1 ,..., | γ |} ⊆ n, tenemos | = γ [x] → γ [x - 1]. El tipo más simple de jerarquía de objetivos monotónicos es donde γ [x+1] = γ [x] ∧ ψx+1 para algunos ψx+1, por lo que en cada nivel sucesivo de la jerarquía, agregamos nuevas restricciones a la meta del nivel anterior. Aunque esta es una propiedad natural de muchas jerarquías de objetivos, no es una propiedad que exigimos todas las jerarquías de objetivos. Ejemplo 1. (Continuación) Suponga que los agentes tienen objetivos similares, pero opuestos: cada agente I quiere mantener la fuente lo más a menudo y lo más posible para sí mismo. Defina la jerarquía de objetivos de cada agente como: γi = (ϕi 0 =, ϕi 1 = e ♦ pi, ϕi 2 = e e ♦ pi, ϕi 3 = e ♦ e pi, ϕi 4 = a e ♦ pi, ϕi 5 = e ♦ a pi,ϕi 6 = a a ♦ pi, ϕi 7 = a (a ♦ pi ∧ e pi), ϕi 8 = a pi).en ϕi 8). Gracias a nuestra restricción de razonabilidad, este objetivo implica ϕi 7 que dice que, no importa cómo evolucionen las rutas de cálculo, siempre será que todo el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 883 Las continuaciones llegarán a un punto en el que PI y, además, hay una continuación en la que PI siempre se mantiene. El objetivo ϕi 6 es una restricción de equidad implicada por él. Tenga en cuenta que A ♦ Pi dice que cada cálculo finalmente llega a un estado de PI. Esto puede significar que después de que Pi haya sucedido, nunca volverá a suceder.ϕi 6 evita esto: dice que, no importa dónde se encuentre, debería haber un futuro estado de PI. El objetivo ϕi 5 es como el objetivo fuerte ϕi 8, pero acepta que esto solo se logra en algún cálculo, eventualmente.ϕi 4 requiere que en cada camino, siempre hay una continuación que eventualmente le da a Pi. El objetivo ϕi 3 dice que Pi debería ser cierto en alguna rama, desde algún momento. Implica ϕi 2 que expresa que hay un cálculo de tal manera que en todas partes durante él, es posible elegir una continuación que eventualmente satisfaga a PI. Esto implica ϕi 1, lo que dice que PI al menos no debería ser imposible. Si incluso eliminamos esa demanda, tenemos el objetivo trivial ϕi 0. Observamos que puede parecer más natural expresar una restricción de equidad ϕi 6 como un ♦ pi. Sin embargo, esta no es una fórmula CTL adecuada. De hecho, es una fórmula en CTL ∗ [9], y en esta lógica, las dos expresiones serían equivalentes. Sin embargo, nuestros resultados básicos de complejidad en las siguientes secciones no se mantendrían para el lenguaje más rico CTL ∗ 2, y el precio a pagar por esto es que tenemos que formular nuestros objetivos deseados de una manera algo más engorrosa de lo que podríamos ser idealmente. Por supuesto, nuestro marco básico no exige que los objetivos se expresen en CTL;Se podrían expresar igualmente en CTL ∗ o de hecho ATL [2] (como en [15]). Comentamos sobre las implicaciones de las representaciones alternativas de objetivos al final de la siguiente sección. Un sistema de múltiples agentes recoge una estructura de Kripke (que representa las propiedades básicas de un sistema en consideración: su espacio de estado y las posibles transiciones de estado que pueden ocurrir en ella), junto con una jerarquía de objetivos, una para cada agente, que representa elAspiraciones de los agentes en el sistema. Formalmente, un sistema de múltiples agentes, M, es un (n + 1) -tuple: M = K, γ1 ,..., γn donde K es una estructura de Kripke, y para cada agente I en K, γi es una jerarquía de objetivos sobre K. 4.1 La utilidad de los sistemas normativos ahora podemos definir la utilidad de una estructura de Krocipke para un agente. La idea es que la utilidad de una estructura de Kripke es el índice más alto de cualquier objetivo garantizado para ese agente en la estructura de Kripke. Hacemos esto preciso en la función ui (·): ui (k) = max {j: 0 ≤ j ≤ | γi |& K | = γi [j]} Tenga en cuenta que, utilizando estas definiciones de objetivos y utilidad, nunca tiene sentido tener un objetivo ϕ en el índice n si hay un objetivo lógicamente más débil ψ en el índice n + k en la jerarquía:de utilidad, nunca podría ser N para ninguna estructura K. Ejemplo 1. (continuación) Sea M = K, γ1, γ2 el sistema multiagente de la Figura 1, con γ1 y γ2 como se definió anteriormente en este ejemplo. Recuerde que hemos definido S0 como {S, T}. Entonces, u1 (k) = u2 (k) = 4: el objetivo ϕ4 es verdadero en S0, pero ϕ5 no lo es. Para ver que ϕ2 4 = A E ♦ P2 es verdadero en S, por ejemplo, tenga en cuenta que en la ruta siempre es el caso de que hay una transición a T, en la que P2 es verdadero. Tenga en cuenta que, dado que para cualquier jerarquía de objetivos γi tenemos γ [0] =, entonces para todas las estructuras de Kripke, UI (K) está bien definida, con UI (K) ≥ 2 CTL ∗ La comprobación del modelo es PSPACE-COMPLETE y, por lo tanto, mucho peor(Bajo supuestos teóricos de complejidad estándar) que la verificación del modelo CTL [8].η Δ1 (k, η) Δ2 (k, η) η∅ 0 0 η1 0 3 η2 3 0 η3 2 2 C D C (2, 2) (0, 3) D (3, 0) (0, 0) Figura 2: Beneficios de implementar un sistema normativo η (izquierda) y pagos para el juego σm.0. Tenga en cuenta que esta es una medida de utilidad ordinal: nos dice, para cualquier agente determinado, la utilidad relativa de diferentes estructuras de Kripke, pero los valores de utilidad no están en alguna escala estándar de todo el sistema. El hecho de que UI (K1)> UI (K2) ciertamente significa que prefiere estrictamente K1 sobre K2, pero el hecho de que UI (K)> Uj (k) no significa que valora K más bien que J. Por lo tanto, no tiene sentido comparar los valores de utilidad entre los agentes, y por ejemplo, algunas medidas de utilidad del sistema (especialmente aquellas medidas que agregan las utilidades individuales, como el bienestar social), no tienen sentido cuando se aplican en este entorno. Sin embargo, como veremos en breve, se pueden aplicar otras medidas, como la eficiencia de Pareto. Hay otras representaciones para los objetivos, lo que nos permitiría definir los servicios públicos cardinales. Lo más simple sería especificar los objetivos γ para un agente como una relación finita, no vacía, uno a uno: γ ⊆ L × R. Suponemos que los valores X en los pares (ϕ, x) ∈ γ se especifican para que X para el agente I significa lo mismo que X para el Agente J, por lo que tenemos utilidad cardinal. Luego definimos la utilidad para i de una estructura Kripke k asui (k) = max {x: (ϕ, x) ∈ γi & k | = ϕ}. Los resultados de este documento, de hecho, se mantienen independientemente de cuáles de estas representaciones realmente elegimos;Nos fijamos en el enfoque de la jerarquía de objetivos en interés de la simplicidad. Nuestro siguiente paso es mostrar cómo, de la misma manera, podemos levantar la función de utilidad de las estructuras de Kripke a los sistemas normativos. Supongamos que se nos da un sistema de múltiples agentes M = K, γ1 ,..., γn y un sistema normativo asociado η sobre K. Sea para el agente I, Δi (k, k) la diferencia en su utilidad cuando se mueve de k a k: Δi (k, k) = ui (k) - ui (k). Entonces la utilidad de η al agente I Wrt K es Δi (k, k † η). A veces abusaremos de la notación y simplemente escribiremos ΔI (k, η) para esto, y referiremos a ella como el beneficio del Agente I de implementar η en K. Tenga en cuenta que este beneficio puede ser negativo. Resumiendo, la utilidad de un sistema normativo a un agente es la diferencia entre la utilidad de la estructura Kripke en la que se implementó el sistema normativo y la estructura original de Kripke. Si este valor es mayor que 0, entonces el agente estaría mejor si se impusiera el sistema normativo, mientras que si es inferior a 0, entonces el agente estaría peor si η se impusiera que en el sistema original. Decimos que η es individualmente racional para i wrt k si Δi (k, η)> 0, y simpliciter racional individualmente si η es individualmente racional para cada agente. Un sistema social ahora es un par σ = M, η donde M es un sistema de múltiples agentes, y η es un sistema normativo sobre m. EJEMPLO 1. La tabla en la mano izquierda en la Figura 2 muestra las utilidades Δi (k, η) de implementar η en la estructura Kripke de nuestro ejemplo de ejecución, para los sistemas normativos η = η∅, η1, η2 y η3, introducido antes. Recuerde que u1 (k) = u2 (k) = 4. 4.2 Objetivos universales y existenciales 884 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) teniendo en cuenta que una norma η restringe las posibles transiciones del modelo en consideración, hacemos la siguiente observación, tomando prestado de [15]. Algunas clases de objetivos son monotónicas o antimonotónicas con respecto a agregar restricciones adicionales a un sistema. Por lo tanto, definamos dos fragmentos del lenguaje de CTL: el lenguaje universal lu con elemento típico μ, y el fragmento existencial LE con elemento típico ε.μ :: = |P |¬P |μ ∨ μ |A Fμ |A μ |A (μ u μ) ε :: = |P |¬P |ε ∨ ε |E Fε |E ♦ ε |E (ε u ε) digamos, para dos estructuras de Kripke K1 = S, S0, R1, A, α, V y K2 = S, S0, R2, A, α, V que K1 es un subsistema de K2 y K2es un supersistema de K1, escrito K1 K2 IFF R1 ⊆ R2. Tenga en cuenta que típicamente k † η K. entonces tenemos (cf. [15]). Teorema 1. Suponga K1 k2, y s ∈ S. entonces ∀ε ∈ LE: K1, S | = ε ⇒ K2, S | = ε ∀μ ∈ Lu: K2, S | = μ ⇒ K1, S | = μ tiene lo siguienteEfecto al imponer una nueva norma: Corolario 1. Sea K una estructura, y η un sistema normativo. Deje que γi denote una jerarquía de objetivos para el agente i.1. Suponga que el agente es la utilidad UI (k) es n, y γi [n] ∈ Lu, (es decir, γi [n] es una fórmula universal). Luego, para cualquier sistema normativo η, Δi (k, η) ≥ 0. 2. Supongamos que el agente es UI UI (K † η) es N, y γi [n] es una fórmula existencial ε. Luego, Δi (k † η, k) ≥ 0. Corolario 1S Primer elemento dice que un agente cuyo objetivo máximo actual en un sistema es una fórmula universal, nunca debe temer la imposición de una nueva norma η. La razón es que su objetivo actual al menos seguirá siendo cierto (de hecho, un gol más alto en la jerarquía puede ser cierto). De esto se deduce que un agente con solo objetivos universales solo puede obtener de la imposición de sistemas normativos η. Lo contrario es cierto para los objetivos existenciales, según el segundo elemento del corolario: nunca puede ser malo que un agente deshace una norma η. Por lo tanto, un agente con solo objetivos existenciales podría temer cualquier norma η. Sin embargo, estas observaciones suponen implícitamente que todos los agentes en el sistema cumplirán con la norma. Si de hecho lo harán, por supuesto, es una decisión estratégica: depende en parte de lo que el agente cree que otros agentes harán. Esto nos motiva a considerar los juegos normativos del sistema.5. Juegos del sistema normativo Ahora tenemos una forma principalmente de hablar sobre la utilidad de los sistemas normativos para los agentes, por lo que podemos comenzar a aplicar el aparato técnico de la teoría de juegos para analizarlos. Supongamos que tenemos un sistema de múltiples agentes M = K, γ1 ,..., γn y un sistema normativo η sobre K. Se propone a los agentes en M que η debe imponerse a K (típicamente para lograr algún objetivo de coordinación). Nuestro agente, digamos el Agente I, se enfrenta a una opción: ¿Debería cumplir con las restricciones del sistema normativo, o no? Tenga en cuenta que este razonamiento tiene lugar antes de que el agente esté en el sistema: es una consideración de tiempo de diseño. Podemos entender el razonamiento aquí como un juego, como sigue. Un juego en forma normal estratégica (cf. [11, p.11]) es una estructura: G = AG, S1 ,..., Sn, U1 ,..., Un Where: • Ag = {1 ,..., n} es un conjunto de agentes: los jugadores del juego;• Si es el conjunto de estrategias para cada agente i ∈ Ag (una estrategia para un agente I no es más que una elección entre acciones alternativas);y • UI: (S1 × · · · × Sn) → R es la función de utilidad para el agente i ∈ Ag, que asigna una utilidad a cada combinación de opciones de estrategia para los agentes. Ahora, supongamos que se nos da un sistema social σ = m, η donde m = k, γ1 ,..., γn. Luego podemos asociar un juego, el juego del sistema normativo, gς con σ, como sigue. Los agentes AG en Gς son como en σ. Cada agente I tiene solo dos estrategias disponibles: • C - Realice (coopere) con el sistema normativo;y • D - No cumpla con (defecto de) el sistema normativo. Si S es una tupla de estrategias, una para cada agente, y x ∈ {c, d}, entonces denotamos por agx s subconjunto de agentes que juegan la estrategia X en S. Por lo tanto, para un sistema social σ = m, η, el sistema normativo η Agc s solo implementa las restricciones para aquellos agentes que eligen cooperar en Gς. Tenga en cuenta que esto es lo mismo que η AGD S: el sistema normativo que excluye todas las restricciones de los agentes que juegan D en Gς. Luego definimos las funciones de utilidad UI para cada i ∈ Ag como: ui (s) = Δi (k, η agc s). Entonces, por ejemplo, si SD es una colección de estrategias en la que cada agente defecta (es decir, no cumple con la norma), entonces ui (SD) = Δi (k, (η agd sd)) = ui (k † η∅) - ui (k) = 0. De la misma manera, si SC es una colección de estrategias en la que cada agente coopera (es decir, cumple con la norma), entonces ui (sc) = Δi (k, (η agd sc)) = ui (k † (η ∅)) = ui (k † η). Ahora podemos comenzar a investigar algunas propiedades de los juegos normativos del sistema. Ejemplo 1. (continuación) Para nuestro sistema de ejemplo, hemos mostrado los diferentes valores de U para nuestro sistema de agente múltiple con la norma η3, es decir, {(s, s), (t, t)} como la segunda tabla de la Figura 2. Por ejemplo, el par (0, 3) en la matriz debajo de la entrada S = C, D se obtiene de la siguiente manera. U1 (c, d) = Δ1 (k, η3 agc c, d) = u1 (k † η3 agc c, d) - u1 (k). El primer término de esto es la utilidad de 1 en el sistema K, donde implementamos η3 para el agente cooperante, es decir, 1, solo. Esto significa que las transiciones son r \ {(s, s)}. En este sistema, todavía ϕ1 4 = A E ♦ P1 es el objetivo más alto para el Agente 1. Esta es la misma utilidad para 1 que en K, y por lo tanto, Δ1 (k, η3 Agc C, D) = 0. Agente 2 de los beneficios del curso Si el Agente 1 cumple con η3 mientras que 2 no lo hace. Su utilidad sería 3, ya que η3 Agc C, D es de hecho η1.5.1 Sistemas normativos racionales individuales Un sistema normativo es individualmente racional si a cada agente le iría mejor si se impusiera el sistema normativo que de otra manera. Esta es una condición necesaria, aunque no suficiente en una norma para esperar que todos lo respeten. Tenga en cuenta que η3 de nuestro ejemplo es individualmente racional para 1 y 2, aunque esta no es una situación estable: dado que el otro juega C, es mejor jugando D. Podemos caracterizar fácilmente la racionalidad individual con respecto al juego correspondienteEn forma estratégica, como sigue. Sea σ = m, η un sistema social. Entonces los siguientes son equivalentes: el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 885 F (XK) ... S0 S1 S2 S3 S4 S (2K-1) S2K T (X1) F (X1) T (X2) F (X2) T (xk) Figura 3: La estructura Kripke producida en la reducción del teorema 2;Todas las transiciones están asociadas con el Agente 1, el único estado inicial es S0.1. η es individualmente racional en M;2. ∀i ∈ Ag, ui (sc)> ui (sd) en el juego gς. El problema de decisión asociado con los sistemas normativos racionales individuales es el siguiente: Sistema normativo racional individualmente (IRNS): Dado: Sistema de agente múltiple m. Pregunta: ¿Existe un sistema normativo racional individualmente para M? Teorema 2. IRNS es NP-completado, incluso en sistemas de un agente. PRUEBA. Para la membresía de NP, adivine un sistema normativo η, y verifique que sea individualmente racional. Desde η ⊆ r, podremos adivinarlo en el tiempo polinomial no determinista. Para verificar que es individualmente racional, verificamos que para todos los i, tenemos ui (k † η)> ui (k);La computación k † η se establece la resta, por lo que se puede hacer en el tiempo polinomial, al tiempo que determinar el valor de UI (k) para cualquier k se puede hacer con un número polinomial de llamadas de verificación de modelos, cada una de las cuales requiere solo tiempo polinomial en elK y γ. Por lo tanto, verificar que UI (K † η)> ui (k) solo requiere tiempo polinomial. Para NP-Hardness, reducimos el SAT [12, p.77]. Dada una instancia SAT ϕ sobre las variables booleanas x1 ,..., XK, producimos una instancia de IRNS de la siguiente manera. Primero, definimos un solo agente a = {1}. Para cada variable booleana Xi en la instancia de SAT, creamos dos variables booleanas t (xi) y f (xi) en la instancia de IRNS. Luego creamos una estructura de Kripke Kϕ con estados 2K + 1, como se muestra en la Figura 3: Los arcos en este gráfico corresponden a transiciones en Kϕ. Sea ϕ ∗ el resultado de sustituir sistemáticamente por cada variable booleana xi en ϕ la expresión CTL (e ft (xi)). A continuación, considere las siguientes fórmulas: k^ i = 1 e f (t (xi) ∨ f (xi)) (1) k^ i = 1 ¬ ((e ft (xi)) ∧ (e ff (xi))) (2) Luego definimos la jerarquía de objetivos para todos los agentes 1 de la siguiente manera: γ1 [0] = γ1 [1] = (1) ∧ (2) ∧ ϕ ∗ Afirmamos que hay un sistema normativo racional individualmente para la instanciaconstruido IFF ϕ es satisfactable. Primero, observe que cualquier sistema normativo racional individualmente debe forzar γ1 [1] a ser verdadero, ya que en el sistema original, no tenemos γ1 [1]. Para la dirección ⇒, si hay un sistema normativo racional individualmente η, entonces construimos una tarea satisfactoria para ϕ considerando los arcos que están prohibidos por η: la fórmula (1) asegura que debemos prohibir un arco a una t (xi)o un estado F (xi) para todas las variables xi, pero (2) asegura que no podamos prohibir los arcos a ambos. Entonces, si prohibimos un arco a un estado t (xi), entonces en la valoración correspondiente para ϕ hacemos xi falso, mientras que si prohibimos un arco a un estado f (xi), entonces hacemos que Xi sea verdadero. El hecho de que ϕ ∗ sea parte del objetivo asegura que el sistema normativo sea de hecho una valoración para ϕ. Para ⇐, tenga en cuenta que para cualquier valoración satisfactoria para ϕ podemos construir un sistema normativo racional individualmente η, de la siguiente manera: si la valoración hace que Xi sea verdadera, prohíbe el arco al estado F (xi), mientras que si la valoración hace que Xi false, prohibimos el arco al estado t (xi). El sistema normativo resultante asegura γ1 [1] y, por lo tanto, es individualmente racional. Observe que la estructura Kripke construida en la reducción contiene solo un agente, por lo que se demuestra el teorema.5.2 Sistemas normativos de Pareto eficiente Pareto La eficiencia es una medida básica de cuán bueno es un resultado particular para un grupo de agentes [11, p.7]. Intuitivamente, un resultado es pareto eficiente si no hay otro resultado que haga que cada agente sea mejor. En nuestro marco, supongamos que se nos da un sistema social σ = m, η, y preguntó si η es pareto eficiente. Esto equivale a preguntar si hay o no algún otro sistema normativo η de modo que cada agente estaría mejor bajo η que con η. Si η mejora a cada agente que η, entonces decimos que η Pareto domina η. El problema de decisión es el siguiente: Sistema normativo eficiente de Pareto (Pens): Dado: Sistema de múltiples agentes M y sistema normativo η sobre m. Pregunta: ¿Es eficiente η Pareto para M? Teorema 3. Los bolígrafos son CO-NP completos, incluso para sistemas de un agente. PRUEBA. Sea M y η como en el teorema. Mostramos que el problema del complemento a los bolígrafos, al que nos referimos como dominado por Pareto, es NP Completo. En este problema, se nos da m y η, y se nos pregunta si η está dominado por Pareto, es decir, si existe o no algunos η sobre M tal que η hace que cada agente sea mejor que η. Para la membresía de NP, simplemente adivine un sistema normativo η, y verifique que para todos los i ∈ A, tenemos ui (k † η)> ui (k † η) - verificar requiere un número polinomial de problemas de verificación de modelos, cada uno de los cualesToma tiempo polinomial. Como η ⊆ R, el sistema normativo se puede adivinar en el tiempo polinomial no determinista. Para la duración de NP, reducimos los IRN, que sabemos que son NPComplete del Teorema 2. Dada una instancia M de IRNS, dejamos que M en el caso de Pareto dominado sea como en la instancia de IRNS, y definimos el sistema normativo para que Pareto dominado sea η∅, el sistema normativo vacío. Ahora, es sencillo que exista un sistema normativo η que Pareto domina η∅ en M Iff existe un sistema normativo racional individualmente en m. Dado que el problema del complemento es NP-Completo, se deduce que los bolígrafos son CO-NP-Completo.886 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) η0 η1 η2 η3 η4 η5 η6 η7 η8 U1 (k † η) 4 4 7 6 5 0 0 8 0 U2 (k † η) 4 7 4 6 0 5 8 0 0 00 Tabla 1: Utilidades para todas las normas posibles en nuestro ejemplo ¿Qué hay de las normas eficientes de Pareto para nuestro ejemplo de juguete? Establecer esta pregunta equivale a encontrar los sistemas normativos dominantes entre η0 = η∅, η1, η2, η3 definido antes, y η4 = {(s, t)}, η5 = {(t, s)}, η6 = {(s), s), (t, s)}, η7 = {(t, t), (s, t)} y η8 = {(s, t), (t, s)}. Las utilidades para cada sistema se dan en la Tabla 1. A partir de esto, inferimos que las normas eficientes de Pareto son η1, η2, η3, η6 y η7. Tenga en cuenta que η8 prohíbe que el recurso se transfiera de un agente a otro, y esto no es bueno para ningún agente (ya que hemos elegido s0 = {s, t}, ningún agente puede estar seguro de obtener el recurso, es decir, el objetivoϕi 1 no es cierto en k † η8).5.3 Sistemas normativos de implementación de NASH El concepto de solución más famoso en la teoría del juego es, por supuesto, el equilibrio de Nash [11, p.14]. Se dice que una colección de estrategias, una para cada agente, forma un equilibrio de Nash si ningún agente puede beneficiarse haciendo otra cosa que no sea jugar su estrategia, bajo el supuesto de que los otros agentes juegan el suyo. Los equilibrios de Nash son importantes porque proporcionan soluciones estables al problema de qué estrategia debe jugar un agente. Tenga en cuenta que en nuestro ejemplo de juguete, aunque η3 es individualmente racional para cada agente, no es un equilibrio de Nash, ya que dada esta norma, sería beneficioso que el Agente 1 se desvíe (y del mismo modo para 2). En nuestro marco, decimos que un sistema social σ = M, η (donde η = η∅) es una implementación de Nash si SC (es decir, todos que cumplen con el sistema normativo) forma un equilibrio NASH en el juego Gς. La intuición es que si σ es una implementación de NASH, entonces cumplir con el sistema normativo es una solución razonable para todos los interesados: no puede haber ningún beneficio para desviarse de él, de hecho, hay un incentivo positivo para que todos cumplan. Si σ no es una implementación de NASH, entonces es poco probable que el sistema normativo tenga éxito, ya que el cumplimiento no es racional para algunos agentes.(Nuestra elección de terminología se elige deliberadamente para reflejar la forma en que el término implementación de NASH se utiliza en la teoría de la implementación o el diseño del mecanismo [11, p.185], donde un diseñador de juegos busca lograr algunos resultados diseñando las reglas del juego de este tipo de juego.que estos resultados son equilibrios). Implementación de NASH (NI): Dado: Sistema de múltiples agentes m. Pregunta: ¿Existe un sistema normativo no vacío η sobre M tal que m, η forma una implementación de NASH? Verificar que un sistema social particular forma una implementación de NASH se puede hacer en el tiempo polinomial: equivale a verificación: ∀i ∈ A: ui (k † η) ≥ ui (k † (η {i})). Esto claramente requiere solo un número polinomial de llamadas de verificación de modelos, cada una de las cuales requiere solo tiempo polinomial. Teorema 4. El problema de NI es NP-completado, incluso para sistemas de dosagentes. PRUEBA. Para la membresía de NP, simplemente adivine un sistema normativo η y verifique que forme una implementación de NASH;Dado que η ⊆ r, la adivinación se puede hacer en el tiempo polinomial no determinista, y como S (2k+1) 1 1 1 1 1 1 1 11 1 1 11 2 2 2 2 2 2 2 2 2 2 2 T (X1) F(x1) t (x2) f (x2) t (xk) f (xk) 2 2 t (x1) f (x1) t (x2) f (x2) t (xk) f (xk) ..... ...... S0 Figura 4: Reducción para el teorema 4. Argumentamos anteriormente, verificando que forma una implementación de NASH se puede hacer en tiempo polinomial. Para NP-Hardness, reducimos el SAT. Supongamos que se nos da una instancia de SAT ϕ sobre las variables booleanas x1 ,..., xk. Luego construimos una instancia de Ni como sigue. Creamos dos agentes, a = {1, 2}. Para cada variable booleana Xi creamos dos variables booleanas, t (xi) y f (xi), y luego definimos una estructura Kripke como se muestra en la Figura 4, siendo S0 el único estado inicial;El etiquetado de ARC en la Figura 4 proporciona la función α, y cada estado está marcado con las proposiciones que son ciertas en ese estado. Para cada variable booleana xi, definimos las fórmulas Xi y X⊥ I como sigue: xi = e f (t (xi) ∧ e f ((e f (t (xi))) ∧ a f (¬f (xi)))) x⊥ i = e f (f (xi) ∧ e f ((e f (f (xi))) ∧ a f (¬t (xi)))) que ϕ ∗ sea la fórmula obtenida de ϕ porSustituyendo sistemáticamente Xi por XI. Cada agente tiene tres objetivos: γi [0] = para ambos i ∈ {1, 2}, mientras que γ1 [1] = k^ i = 1 ((e f (t (xi))) ∧ (e f (f (f (f (f (f (f (f (f (f (f (F (xi)))) γ2 [1] = E Fe f k^ i = 1 ((e f (t (xi))) ∧ (e f (f (f (xi)))) y finalmente, para ambos agentes, γi [2] siendo la conjunción de las siguientes fórmulas: la sexta intl. Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) 887 k^ i = 1 (xi ∨ x⊥ i) (3) k^ i = 1 ¬ (xi ∧ x⊥ i) (4) k^ i = 1 ¬(E f (t (xi)) ∧ e f (f (xi))) (5) ϕ ∗ (6) Denotamos el sistema de múltiples agentes así construido por Mϕ. Ahora, demostramos que la instancia de SAT ϕ es satisfactable si Mϕ tiene un sistema normativo de implementación NASH: para la dirección ⇒, supongamos que ϕ es satisfactable y que X sea una valoración satisfactoria, es decir, un conjunto de variables booleanas que hacen ϕ verdadero. Podemos extraer del sistema normativo de implementación X A Nash η de la siguiente manera: si xi ∈ X, entonces η incluye el arco de S0 al estado en el que F (xi) es verdadero, y también incluye el arco de S (2k + 1)al estado en el que f (xi) es verdadero;Si xi ∈ X, entonces η incluye el arco de S0 al estado en el que t (xi) es verdadero, y también incluye el arco de S (2k + 1) al estado en el que t (xi) es verdadero. Ningún otro arco, aparte de los tan definidos, como se incluye en η. Observe que η es individualmente racional para ambos agentes: si ambos cumplen con el sistema normativo, entonces tendrán sus objetivos γi [2] alcanzados, que no lo hacen en el sistema básico. Para ver que η forma una implementación de NASH, observe que si cualquiera de los agentes se defecta de η, tampoco tendrá sus objetivos γi [2] alcanzados: el agente 1 prefiere estrictamente (c, c) sobre (d, c) y agente 2 estrictamentePrefiere (C, C) sobre (C, D). Para la dirección ⇐, suponga que existe un sistema normativo de implementación NASH η, en cuyo caso η = ∅. Entonces ϕ es satisfactable;para suponer no. Entonces los objetivos γi [2] no se pueden alcanzar por ningún sistema normativo (por construcción). Ahora, dado que η debe prohibir al menos una transición, entonces al menos un agente no se logrará su objetivo γi [1] si cumpliera, por lo que al menos uno lo haría mejor al desertar, es decir, no cumplir con η. Pero esto contradice la suposición de que η es una implementación de NASH, es decir, que (C, C) forma un equilibrio de Nash. Este resultado es quizás de algún interés técnico más allá de las preocupaciones específicas del presente documento, ya que está relacionado con dos problemas que son de interés más amplio: la complejidad del diseño del mecanismo [5] y la complejidad de calcular los equilibrios de Nash [6, 7, 7] 5.4 Lenguajes de objetivos más ricos Es interesante considerar lo que sucede con la complejidad de los problemas que consideramos anteriormente si permitimos idiomas más ricos para las metas: en particular, CTL ∗ [9]. La principal diferencia es que determinar la interfaz de usuario (k) en un sistema múltiple de agente m dado cuando se usa dicho lenguaje de gol implica resolver un problema complementario de PSPACE (ya que la verificación del modelo para CTL ∗ es PSPACE-Complete [8]). De hecho, parece que para cada uno de los tres problemas que consideramos anteriormente, el problema correspondiente bajo la suposición de una representación CTL ∗ para los objetivos también es completado por PSPACE. No puede ser más fácil, ya que determinar la utilidad de una estructura de Kripke en particular implica resolver un problema complicado de PSPACE. Para ver la membresía en PSPACE, podemos explotar el hecho de que PSPACE = NPSPACE [12, p.150], por lo que podemos adivinar el sistema normativo deseado, aplicando un procedimiento de verificación PSPACE para verificar que tenga las propiedades deseadas.6. Conclusiones Se supone que las normas sociales restringen nuestro comportamiento. Por supuesto, tal restricción no tiene que ser mala: el hecho de que el comportamiento de los agentes esté restringido puede parecer una limitación, pero puede haber beneficios si puede suponer que otros también limitarán su comportamiento. La pregunta entonces, para un agente es, cómo asegurarse de que otros cumplirán con una norma. Y, para un diseñador de sistemas, cómo asegurarse de que el sistema se comportará socialmente, es decir, según su norma. La teoría del juego es una herramienta muy natural para analizar y responder estas preguntas, que implican consideraciones estratégicas, y hemos propuesto una forma de traducir preguntas clave sobre los sistemas normativos basados en la lógica a las preguntas teóricas del juego. Hemos propuesto un marco lógico para razonar sobre tales escenarios, y hemos dado algunos costos computacionales para resolver algunas de las preguntas principales sobre ellos. Por supuesto, nuestro enfoque está en muchos sentidos abierto para la extensión o enriquecimiento. Un problema obvio es considerar es la complejidad de las preguntas que damos para representaciones más prácticas de los modelos (cf. [1]), y considerar otras clases de objetivos permitidos.7. Referencias [1] T. Agotnes, W. van der Hoek, J. A. Rodríguez-Aguilar, C. Sierra y M. Wooldridge. Sobre la lógica de los sistemas normativos. En Proc. IJCAI-07, Hyderabad, India, 2007. [2] R. Alur, T. A. Henzinger y O. Kupferman. Lógica temporal de tiempo alterno. Jnl.de la ACM, 49 (5): 672-713, 2002. [3] K. Binmore. Teoría del juego y el contrato social Volumen 1: Jugar justo. The MIT Press: Cambridge, MA, 1994. [4] K. Binmore. Teoría del juego y el Contrato Social Volumen 2: Solo jugando. The MIT Press: Cambridge, MA, 1998. [5] V. Conitzer y T. Sandholm. Complejidad del diseño del mecanismo. En Proc. UAI, Edmonton, Canadá, 2002. [6] V. Conitzer y T. Sandholm. Resultados de complejidad sobre los equilibrios de Nash. En Proc. IJCAI-03, pp. 765-771, Acapulco, México, 2003. [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou. La complejidad de calcular un equilibrio de Nash. En Proc. Stoc, Seattle, WA, 2006. [8] E. A. Emerson. Lógica temporal y modal. En Manual de teoría. Comp. Sci. Volumen B, páginas 996-1072. Elsevier, 1990. [9] E. A. Emerson y J. Y. Halpern. A veces y nunca revisado: en el tiempo de ramificación versus la lógica temporal de tiempo lineal. Jnl.de la ACM, 33 (1): 151-178, 1986. [10] D. Fitoussi y M. Tennenholtz. Elegir leyes sociales para sistemas de múltiples agentes: minimalidad y simplicidad. Inteligencia Artificial, 119 (1-2): 61-101, 2000. [11] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. The MIT Press: Cambridge, MA, 1994. [12] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [13] Y. Shoham y M. Tennenholtz. Sobre la síntesis de leyes sociales útiles para las sociedades de agentes artificiales. En Proc. AAAI, San Diego, CA, 1992. [14] Y. Shoham y M. Tennenholtz. Sobre las leyes sociales para las sociedades de agentes artificiales: diseño fuera de línea. En teorías computacionales de interacción y agencia, páginas 597-618. The MIT Press: Cambridge, MA, 1996. [15] W. van der Hoek, M. Roberts y M. Wooldridge. Leyes sociales en tiempo alternativo: efectividad, viabilidad y síntesis. Synthese, 2007. [16] M. Wooldridge y W. van der Hoek. Sobre obligaciones y capacidad normativa. Jnl.de Appl. Lógica, 3: 396-420, 2005. 888 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07)