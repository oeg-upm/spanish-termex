A Formal Model for Situated Semantic Alignment Manuel Atencia Marco Schorlemmer IIIA, Artificial Intelligence Research Institute CSIC, Spanish National Research Council Bellaterra (Barcelona), Catalonia, Spain {manu, marco}@iiia.csic.es ABSTRACT Ontology matching is currently a key technologyPara lograr la alineación semántica de las entidades ontológicas utilizadas por las aplicaciones basadas en el conocimiento y, por lo tanto, para permitir su interoperabilidad en entornos distribuidos como sistemas multiagentes. Sin embargo, la mayoría de los mecanismos de coincidencia de ontología suponen una integración previa de coincidencia y dependen de la semántica que se ha codificado a priori en jerarquías de conceptos o fuentes externas. En este artículo, presentamos un modelo formal para un procedimiento de alineación semántica que alinea incrementalmente conceptualizaciones de dos o más agentes en relación con su percepción respectiva del entorno o dominio en el que están actuando. Por lo tanto, hace que la situación en la que la alineación ocurre explícita en el modelo. Recurrimos a la teoría del canal para llevar a cabo la formalización. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial]: coherencia y coordinación de inteligencia artificial distribuida, sistemas multiagentes;D.2.12 [Ingeniería de software]: mapeo de datos de interoperabilidad;I.2.4 [Inteligencia artificial]: Formalismos de representación del conocimiento y redes semánticas de métodos, sistemas de relaciones. Términos generales Teoría 1. Introducción Una ontología se define comúnmente como una especificación de la conceptualización de un dominio particular. Correge el vocabulario utilizado por los ingenieros de conocimiento para denotar conceptos y sus relaciones, y limita la interpretación de este vocabulario al significado originalmente previsto por los ingenieros de conocimiento. Como tal, las ontologías se han adoptado ampliamente como una tecnología clave que puede favorecer el intercambio de conocimientos en entornos distribuidos, como sistemas de agentes múltiples, bases de datos federadas o la web semántica. Pero la proliferación de muchas ontologías diversas causadas por diferentes conceptualizaciones de incluso el mismo dominio, y su especificación posterior utilizando una terminología variable, ha resaltado la necesidad de técnicas de coincidencia ontológica que son capaces de calcular relaciones semánticas entre entidades de ontologías de ingeniería por separado.[5, 11] Hasta hace poco, la mayoría de los mecanismos de coincidencia de ontología desarrollados hasta ahora han adoptado un enfoque funcional clásico para el problema de heterogeneidad semántica, en el que la coincidencia de ontología se ve como un proceso que toma dos o más ontologías como entrada y produce una alineación semántica de ontológica deEntidades como salida [3]. Además, la coincidencia a menudo se ha llevado a cabo en el tiempo de diseño, antes de integrar sistemas basados en el conocimiento o hacerlos interoperar. Esto podría haber sido exitoso para dominios claramente delimitados y estables y para sistemas distribuidos cerrados, pero es insostenible e incluso indeseable para el tipo de aplicaciones que actualmente se implementan en sistemas abiertos. La comunicación de múltiples agentes, el intercambio de información entre pares y la composición del servicio web son una naturaleza descentralizada, dinámica y abierta, y requieren que la coincidencia de ontología se realice localmente durante el tiempo de ejecución. Además, en muchas situaciones, las ontologías pares ni siquiera están abiertas para la inspección (por ejemplo, cuando se basan en información comercialmente confidencial). Ciertamente, existen esfuerzos para igualar eficientemente entidades ontológicas en tiempo de ejecución, tomando solo aquellos fragmentos de ontología que son necesarios para la tarea en cuestión [10, 13, 9, 8]. Sin embargo, las técnicas utilizadas por estos sistemas para establecer las relaciones semánticas entre las entidades ontológicas, aunque se aplican en tiempo de ejecución, todavía explotan las taxonomías conceptuales definidas a priori, ya que están representadas en las estructuras basadas en gráficos de las ontologías para que se coincidan, se usen, se usan, se usan.Fuentes externas previamente existentes, como los tesauros (por ejemplo, WordNet) y las ontologías de nivel superior (por ejemplo, CYC o SUMO), o recurren a repositorios de conocimiento o instancias compartidas adicionales. Afirmamos que la alineación semántica de la terminología ontológica es, en última instancia, en relación con la situación particular en la que se lleva a cabo la alineación, y que esta situación debe ser explícita y llevada al mecanismo de alineación. Incluso dos agentes con capacidades de conceptualización idénticas, y el uso exactamente del mismo vocabulario para especificar sus respectivas conceptualizaciones pueden no hacer interoperar 1278 978-81-904262-7-5 (RPS) c 2007 Ifaamas en una situación concreta debido a su diferente perceptación de losdominio. Imagine una situación en la que dos agentes se enfrentan entre sí frente a una placa de verificación. El agente A1 puede conceptualizar una figura en el tablero tal como está situada en el margen izquierdo del tablero, mientras que el agente A2 puede conceptualizar la misma figura que se encuentra a la derecha. Aunque la conceptualización de la izquierda y la derecha se realiza exactamente de la misma manera por parte de ambos agentes, e incluso si ambos usan los términos izquierdo y derecho en su comunicación, aún necesitarán alinear sus respectivos vocabularios si quieren comunicarse con éxito entre sí.Acciones que cambian la posición de las cifras en la placa del verificador. Sin embargo, su alineación semántica solo será válida en el alcance de su interacción dentro de esta situación o entorno particular. Los mismos agentes situados de manera diferente pueden producir una alineación diferente. Este escenario recuerda a aquellos en los que un grupo de agentes distribuidos se adapta a formar una ontología y un léxico compartido de una manera emergente, de abajo hacia arriba, con solo interacciones locales y sin autoridad de control central [12]. Este tipo de aparición autoorganizada del significado compartido se basa en la interacción física de los agentes con el medio ambiente. En este artículo, sin embargo, abordamos el caso en el que los agentes ya están dotados de una ontología de ingeniería de arriba hacia abajo (incluso puede ser el mismo), que no se adaptan o refinan, sino para la cual quieren encontrar la semántica.Relaciones con ontologías separadas de otros agentes sobre la base de su comunicación dentro de una situación específica. En particular, proporcionamos un modelo formal que formaliza la alineación semántica situada como una secuencia de refinamientos de canales de información en el sentido de la teoría del flujo de información de Barrawis y Seligmans [1]. Esta teoría es particularmente útil para nuestro esfuerzo porque modela el flujo de información que ocurre en los sistemas distribuidos debido a las situaciones particulares, o tokens, que tienen información. Análogamente, la alineación semántica que permitirá que la información fluya en última instancia será llevada a cabo por la situación particular en la que actúan los agentes. Por lo tanto, consideraremos un escenario con dos o más agentes situados en un entorno. Cada agente tendrá su propio punto de vista del entorno para que, si el entorno está en un estado concreto, ambos agentes pueden tener diferentes percepciones de este estado. Debido a estas diferencias, puede haber un desajuste en el significado de las entidades sintácticas por las cuales los agentes describen sus percepciones (y que constituyen las ontologías respectivas de los agentes). Afirmamos que estas entidades sintácticas pueden estar relacionadas de acuerdo con la semántica intrínseca proporcionada por la relación existente entre el punto de vista de los agentes del entorno. La existencia de esta relación está justificada con precisión por el hecho de que los agentes están situados y observan el mismo entorno. En la Sección 2 describimos nuestro modelo formal para la alineación semántica situada (SSA). Primero, en la Sección 2.1 asociamos un canal al escenario en consideración y mostramos cómo la lógica distribuida generada por este canal proporciona las relaciones lógicas entre los puntos de vista de los agentes del entorno. En segundo lugar, en la Sección 2.2 presentamos un método por el cual los agentes obtienen aproximaciones de esta lógica distribuida. Estas aproximaciones se vuelven gradualmente más confiables a medida que se aplica el método. En la Sección 3 informamos sobre una aplicación de nuestro método. Las conclusiones y el trabajo adicional se analizan en la Sección 4. Finalmente, un apéndice resume los términos y teoremas de la teoría del canal utilizados a lo largo del documento. No asumimos ningún conocimiento de la teoría del canal;Reafiremos las definiciones y teoremas básicos en el apéndice, pero cualquier exposición detallada de la teoría está fuera del alcance de este documento.2. Un modelo formal para SSA 2.1 La lógica de SSA considera un escenario con dos agentes A1 y A2 situados en un entorno e (la generalización a cualquier conjunto numerable de agentes es sencillo). Asociamos un conjunto numerable de estados a E y, en cualquier instante dado, suponemos que E en uno de estos estados. Además, suponemos que cada agente puede observar el medio ambiente y tiene su propia percepción del mismo. Esta habilidad es capturada fielmente por una función surjetiva Seei: S → Pi, donde i ∈ {1, 2}, y típicamente see1 y See2 son diferentes. Según la teoría del canal, la información solo es viable donde existe una forma sistemática de clasificar una gama de cosas como de esta manera o aquello, en otras palabras, donde hay una clasificación (ver Apéndice A). Entonces, para estar dentro del marco de la teoría del canal, debemos asociar las clasificaciones a los componentes de nuestro sistema. Para cada i ∈ {1, 2}, consideramos una clasificación AI que modela el punto de vista AIS de E. Primero, Tok (Ai) está compuesto por percepciones de AIS de los estados E, es decir, Tok (Ai) = pi. En segundo lugar, Typ (AI) contiene las entidades sintácticas por las cuales la IA describe sus percepciones, las que constituyen la ontología de la IA. Finalmente, | = ai sintetiza cómo AI relaciona sus percepciones con estas entidades sintácticas. Ahora, con el objetivo de asociar el entorno E con una clasificación E, elegimos la clasificación de potencia de S como E, que es la clasificación cuyo conjunto de tipos es igual a 2S, cuyos tokens son los elementos de S y para los cuales un token Ees de tipo ε si e ∈ ε. La razón para tomar la clasificación de energía es porque no hay entidades sintácticas que puedan desempeñar el papel de los tipos para E ya que, en general, no existe una conceptualización global del entorno. Sin embargo, el conjunto de tipos de la clasificación de potencia incluye todas las configuraciones de tokens posibles que se describen potencialmente por los tipos. Así tok (e) = s, typ (e) = 2s y e | = e ε si y solo si e ∈ ε. La noción de canal (ver Apéndice A) es fundamental en la teoría de Barrawise y Seligmans. El flujo de información entre los componentes de un sistema distribuido se modela en términos de un canal y las relaciones entre estos componentes se expresan a través de infomorfismos (ver Apéndice A) que proporciona una forma de mover información entre ellos. El flujo de información del escenario bajo consideración se describe con precisión por el canal e = {fi: ai → e} i∈ {1,2} definido como sigue: • ˆfi (α) = {e ∈ Tok (e) |Seei (e) | = ai α} para cada α ∈ Tip (ai) • ˇfi (e) = Seei (e) para cada e ∈ Tok (e) donde i ∈ {1, 2}. La definición de ˇFi parece natural, mientras que ˆFi se define de tal manera que se cumple la propiedad fundamental de los infomorfismos: ˇfi (e) | = ai α iff see (e) | = ai α (por definición de ˇfi) iff e ∈ ˆfi(α) (por definición de ˆfi) iff e | = e ˆfi (α) (por definición de | = e) el sexto intl. Conf.En los agentes autónomos y los sistemas de múltiples agentes (AAMAS 07) 1279 En consecuencia, E es el núcleo del canal E y un estado E ∈ Tok (E) conecta las percepciones de los agentes ˇf1 (E) y ˇf2 (E) (ver Figura 1).typ (e) typ (a1) ˆf1 99tttttttttt typ (a2) ˆf2 eEJJJJJJJJJjjJ (E) | = E ˇf1yttttttttt ˇf2 %% jjjjjjjjjjj(A2) | = A2 Figura 1: El canal E E explica el flujo de información de nuestro escenario en virtud de que los agentes A1 y A2 se encuentran y perciben el mismo entorno E. Queremos obtener relaciones significativas entre los agentes sintácticosEntidades, es decir, tipos de agentes. Afirmamos que el significado debe estar de acuerdo con E. La operación de suma (ver el Apéndice A) nos da una forma de unir las clasificaciones de los dos agentes del Canal E en una sola clasificación, a saber, A1 +A2, y también los dos infomorfismos juntosUn solo infomorfismo, F1 + F2: A1 + A2 → E. A1 + A2 ensambla clasificaciones de agentes de una manera muy gruesa.Tok (A1 + A2) es el producto cartesiano de Tok (A1) y Tok (A2), es decir, Tok (A1 + A2) = {P1, P2 |Pi ∈ Pi}, por lo que un token de A1 + A2 es un par de percepciones de agentes sin restricciones.Typ (A1 + A2) es la unión disjunta de TYP (A1) y TYP (A2), y P1, P2 es de tipo I, α si Pi es de tipo α. Deleguamos la importancia para tomar la unión disjunta porque A1 y A2 podrían usar tipos idénticos con el propósito de describir sus respectivas percepciones de E. La clasificación A1 + A2 parece ser el lugar natural para buscar relaciones entre los tipos de agentes. Ahora, la teoría del canal proporciona una manera de hacer que todas estas relaciones sean explícitas de manera lógica por medio de teorías y lógicas locales (ver Apéndice A). La teoría generada por la clasificación de suma, TH (A1 + A2), y por lo tanto, su lógica generada, log (A1 + A2), implica todas esas restricciones entre los tipos de agentes válidos según A1 + A2. Sin embargo, tenga en cuenta que estas restricciones son obvias. Como dijimos anteriormente, el significado debe estar de acuerdo con el canal E. Las clasificaciones A1 + A2 y E están conectadas a través de la suma Infomorfismo, F = F1 + F2, donde: • ˆf (i, α) = ˆfi (α) = {E∈ Tok (e) |Veri (e) | = ai α} para cada i, α ∈ Tip (a1 + a2) • ˇf (e) = ˇf1 (e), ˇf2 (e) = ver1 (e), ver2 (e) para cada e ∈Tok (e) Las restricciones significativas entre los tipos de agentes están de acuerdo con el canal E porque se calculan haciendo uso de F como exponemos a continuación. Tan importante como la noción de canal es el concepto de lógica distribuida (ver Apéndice A). Dado un canal C y una lógica L en su núcleo, DLOGC (L) representa el razonamiento sobre las relaciones entre los componentes de C justificados por L. Si L = log (c), la lógica distribuida, denotamos por log (c),Captura de manera lógica el flujo de información inherente al canal. En nuestro caso, log (e) explica la relación entre los puntos de vista de los agentes del medio ambiente de manera lógica. Por un lado, las restricciones de th (log (e)) se definen mediante: γ log (e) δ si ˆf [γ] log (e) ˆf [δ] (1) donde γ, δ ⊆ típ (a1 + a2). Por otro lado, el conjunto de tokens normales, nlog (e), es igual al rango de función ˇf: nlog (e) = ˇf [tok (e)] = {ver1 (e), ver2 (e) |e ∈ Tok (e)} Por lo tanto, un token normal es un par de percepciones de agentes que están restringidas al provenir del mismo estado de entorno (a diferencia de los tokens A1 + A2). Todas las restricciones del (log (e)) son satisfechas por todos los tokens normales (debido a una lógica). En este caso particular, esta condición también es suficiente (la prueba es sencilla);Como alternativa a (1) tenemos: γ log (e) δ IFF para todo e ∈ Tok (e), if (∀ i, γ ∈ γ) [véase (e) | = ai γ] entonces (∃ j, δ∈ δ) [SeeJ (e) | = aj δ] (2) donde γ, δ ⊆ típ (a1 + a2). Log (e) es la lógica de SSA. TH (log (e)) comprende las limitaciones más significativas entre los tipos de agentes de acuerdo con el canal E. En otras palabras, la SSA contiene y también justifica las relaciones más significativas entre esas entidades sintácticas que los agentes usan para describir los suyospercepciones del entorno. El registro (e) está completo ya que el registro (e) está completo, pero no es necesariamente sólido porque aunque el registro (e) es sólido, ˇf no es sujectivo en general (ver Apéndice B). Si log (e) también es sólido, entonces log (e) = log (a1 +a2) (ver Apéndice B). Eso significa que no existe una relación significativa entre los puntos de vista de los agentes del entorno según E. Es solo el hecho de que log (e) no es sólido lo que permite una relación significativa entre los puntos de vista de los agentes. Esta relación se expresa a nivel de tipo en términos de restricciones por Th (log (e)) y a nivel de token por NLOG (e).2.2 Enfercado de la lógica de SSA a través de la comunicación, hemos denominado log (e) la lógica de SSA. TH (log (e)) comprende las restricciones más significativas entre los tipos de agentes según E. El problema es que ninguno de los agentes puede hacer uso de esta teoría porque no conocen completamente E. En esta sección, presentamos un método mediante el cual los agentes obtienen aproximaciones a th (log (e)). También demostramos que estas aproximaciones se vuelven gradualmente más confiables a medida que se aplica el método. Los agentes pueden obtener aproximaciones al (log (e)) a través de la comunicación. A1 y A2 se comunican intercambiando información sobre sus percepciones de los estados del medio ambiente. Esta información se expresa en términos de sus propias relaciones de clasificación. Específicamente, si E está en un estado concreto E, suponemos que los agentes pueden transmitirse entre sí qué tipos están satisfechos por sus respectivas percepciones de E y cuáles no. Este intercambio genera un canal c = {fi: ai → 1280 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) C} i∈ {1,2} y Th (log (c)) contiene las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado e.Ahora, si E recurre a otro estado, E y los agentes proceden como antes, otro canal c = {fi: ai → c} i∈ {1,2} da cuenta de la nueva situación considerando también la información anterior. TH (log (c)) comprende las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado E y E. El punto significativo es que C es un refinamiento de C (ver Apéndice A). El teorema 2.1 a continuación asegura que el canal refinado implique información más confiable. La comunicación supuestamente termina cuando los agentes han observado todos los estados del entorno. Nuevamente, esta situación puede ser modelada por un canal, llamarlo c ∗ = {f ∗ i: ai → c ∗} i∈ {1,2}. Teorema 2.2 establece que th (log (c ∗)) = th (log (e)). El Teorema 2.1 y el Teorema 2.2 aseguran que la aplicación del método los agentes pueden obtener aproximaciones a TH (log (e)) gradualmente más confiables. Teorema 2.1. Sea c = {fi: ai → c} i∈ {1,2} y c = {fi: ai → c} i∈ {1,2} sea dos canales. Si C es un refinamiento de C, entonces: 1. Th (log (c)) ⊆ th (log (c)) 2. Nlog (c) ⊇ nlog (c) prueba. Dado que C es un refinamiento de C, entonces existe un refinamiento Infomorfismo R de C a C;entonces fi = r ◦ fi. Deje a = def a1 + a2, f = def f1 + f2 y f = def f1 + f2.1. Sea γ y δ sean subconjuntos de típ (a) y suponga que γ log (c) δ, lo que significa ˆf [γ] c ˆf [δ]. Tenemos que probar γ log (c) δ, o de manera equivalente, ˆf [γ] c ˆf [δ]. Procedemos por Reducto Ad Absurdum. Supongamos que c ∈ Tok (c) no satisface el secuente ˆf [γ], ˆf [δ]. Entonces c | = c ˆf (γ) para todos γ ∈ γ y c | = c ˆf (Δ) para todos Δ ∈ δ. Elegamos un arbitrary γ ∈ γ. Tenemos que γ = i, α para algunos α ∈ Tip (ai) e i ∈ {1, 2}. Así ˆf (γ) = ˆf (i, α) = ˆfi (α) = ˆr ◦ ˆFi (α) = ˆr (ˆfi (α)). Por lo tanto: c | = c ˆf (γ) iff c | = c ˆr (ˆfi (α)) iff ˇr (c) | = c ˆfi (α) iff ˇr (c) | = c ˆf (i, α) Iff ˇr(c) | = c ˆf (γ) En consecuencia, ˇr (c) | = c ˆf (γ) para todos γ ∈ γ. Dado que ˆf [γ] c ˆf [δ], entonces existe δ ∗ ∈ δ tal que ˇr (c) | = c ˆf (δ ∗). Una secuencia de equivalencias similares a la anterior justifica c | = c ˆf (Δ ∗), contradiciendo que C es un contraejemplo a ˆF [γ], ˆf [δ]. Por lo tanto, γ log (c) δ como queríamos probar.2. Deje a1, a2 ∈ Tok (a) y asume A1, a2 ∈ Nlog (c). Por lo tanto, existe C Token en C de modo que A1, A2 = ˇf (C). Entonces tenemos ai = ˇfi (c) = ˇfi ◦ ˇr (c) = ˇfi (ˇr (c)), porque i ∈ {1, 2}. Por lo tanto, a1, a2 = ˇf (ˇr (c)) y a1, a2 ∈ Nlog (c). En consecuencia, nlog (c) ⊇ nlog (c) que concluye la prueba. Observación 2.1. El Teorema 2.1 afirma que el canal más refinado brinda información más confiable. Aunque su teoría tiene menos limitaciones, tiene fichas más normales a las que se aplican. En el resto de la sección, describimos explícitamente el proceso de comunicación y concluimos con la prueba del teorema 2.2. Supongamos que Typ (AI) es finito para i ∈ {1, 2} y S es infinito numerable, aunque el caso finito puede tratarse de forma similar. También elegimos un conjunto infinito numerable de símbolos {CN |n ∈ N} 1. Omitimos los superíndes de informes informes cuando no surge confusión. Los tipos generalmente se denotan por letras griegas y tokens por letras latinas, por lo que si F es un infomorfismo, F (α) ≡ ˆf (α) y F (a) ≡ ˇf (a). La comunicación de los agentes comienza a partir de la observación de E. Supongamos que E está en el estado e1 ∈ S = Tok (E). La percepción de A1 de E1 es F1 (E1) y la percepción A2S de E1 es F2 (E1). Damos por sentado que A1 puede comunicar A2 aquellos tipos que son y no están satisfechos con F1 (E1) de acuerdo con su clasificación A1. También puede hacer A2. Dado que tanto TYP (A1) como TYP (A2) son finitos, este proceso finalmente termina. Después de esta comunicación, surge un canal C1 = {F1 I: AI → C1} I = 1,2 (ver Figura 2). C1 A1 F1 1 == ||||||||A2 F1 2 AACCCCCCCC Figura 2: La primera etapa de comunicación, por un lado, C1 se define por: • tok (c1) = {c1} • typ (c1) = typ (a1 + a2) • c1 | = c1 i, αSi fi (e1) | = ai α (por cada i, α ∈ Tipo (a1 + a2)) por otro lado, f1 i, con i ∈ {1, 2}, se define por: • f1 i (α)= I, α (para cada α ∈ Tipo (AI)) • F1 I (C1) = FI (E1) log (C1) representa el razonamiento sobre la primera etapa de comunicación. Es fácil demostrar que (LG (C1)) = a (C1). El punto significativo es que ambos agentes conocen a C1 como el resultado de la comunicación. Por lo tanto, pueden calcular la teoría por separado TH (C1) = TYP (C1), C1 que contiene las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado E1. Ahora, supongamos que E recurre a un nuevo estado E2. Los agentes pueden proceder como antes, intercambiando esta información sobre sus percepciones de E2. Otro canal C2 = {F2 I: AI → C2} i∈ {1,2} aparece. Definimos C2 para tener en cuenta también la información proporcionada por la etapa anterior de comunicación. Por un lado, C2 se define por: • Tok (C2) = {C1, C2} 1 Escribimos estos símbolos con superíntesis porque limitamos el uso de subíndices para las preocupaciones de los agentes. Tenga en cuenta que este conjunto se elige con la misma cardinalidad de S. el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (aamas 07) 1281 • typ (c2) = typ (a1 + a2) • ck | = c2 i, α if fi (ek) | = ai α (para cada k ∈ {1,2} e i, α ∈ Tipo (A1 + A2)) Por otro lado, F2 I, con i ∈ {1, 2}, se define por: • F2 I (α) = I, α (para cada α ∈typ (ai)) • f2 i (ck) = fi (ek) (para cada k ∈ {1, 2}) log (C2) representa el razonamiento sobre las etapas de comunicación anteriores y posteriores. TH (log (C2)) es igual a th (C2) = TYP (C2), C2, luego contiene las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado E1 y E2. A1 y A2 conocen C2 para que puedan usar estas restricciones. El punto clave es que el canal C2 es un refinamiento de C1. Es fácil verificar que F1 se definiera como la función de identidad en los tipos y la función de inclusión en los tokens es un infomorfismo de refinamiento (ver en la parte inferior de la Figura 3). Por el Teorema 2.1, las restricciones C2 son más confiables que las restricciones C1. En la situación general, una vez que los estados E1, E2 ,..., se han observado EN - 1 (n ≥ 2) y aparece un nuevo estado en, canal Cn = {fn i: ai → cn} i∈ {1,2} informa sobre la comunicación de los agentes hasta ese momento. La definición de CN es similar a las anteriores y se pueden hacer comentarios análogos (ver en la parte superior de la Figura 3). Teoría th (log (cn)) = th (cn) = typ (cn), CN contiene las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado E1, E2 ,..., es. Cn fn−1  A1 fn−1 1 99PPPPPPPPPPPPP fn 1 UUnnnnnnnnnnnnn f2 1 %%44444444444444444444444444 f1 1 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, a2 fn 2 ggppppppppppppp fn - 1 2 wwnnnnnnnnnnnnnn f2 2 õõ f1 2 ØøCN - 1...C2 F1 C1 Figura 3: Comunicación de agentes Recuerde que hemos asumido que S es infinito numerable. Por lo tanto, es poco práctico dejar que la comunicación termine cuando A1 y A2 han observado todos los estados de entorno. En ese punto, la familia de canales {cn} n∈N informaría de todas las etapas de comunicación. Por lo tanto, depende de los agentes decidir cuándo dejar de comunicarse si se ha alcanzado una aproximación lo suficientemente buena para los fines de sus respectivas tareas. Pero el estudio de los posibles criterios de terminación está fuera del alcance de este documento y se fue para el trabajo futuro. Desde un punto de vista teórico, sin embargo, podemos considerar el canal c ∗ = {f ∗ i: ai → c ∗} i∈ {1,2} que informa el fin de la comunicación después de observar todos los estados de entorno. Por un lado, c ∗ se define por: • tok (c ∗) = {cn |n ∈ N} • typ (c ∗) = typ (a1 + a2) • cn | = c ∗ i, α if fi (en) | = ai α (para n ∈ N e i, α ∈ Tip (a1 + a2)) Por otro lado, f ∗ i, con i ∈ {1, 2}, se define por: • f ∗ i (α) = i, α (para α ∈ Tip (ai)) • f ∗ i (CN) = fi (en) (para n ∈ N) El teorema a continuación constituye la piedra angular del modelo expuesto en este documento. Asegura, junto con el Teorema 2.1, que en cada etapa de comunicación los agentes obtienen una teoría que se aproxima más a la teoría generada por la lógica de SSA. Teorema 2.2. Las siguientes afirmaciones tienen: 1. Para todos n ∈ N, C ∗ es un refinamiento de CN.2. Th (log (e)) = th (c ∗) = th (log (c ∗)). Prueba.1. Es fácil demostrar que para cada n ∈ N, Gn definido como la función de identidad en los tipos y la función de inclusión en los tokens es un infomorfismo de refinamiento de C ∗ a CN.2. La segunda igualdad es sencilla;El primero sigue directamente de: cn | = c ∗ i, α iff ˇfi (en) | = ai α (por definición de | = c ∗) iff en | = e ˆfi (α) (porque Fi es infomorfim) iff enf en| = E ˆf (i, α) (por definición de ˆf) e c ∗ gn a1 fn 1 99ooooooooooooo f ∗ 1 uuooooooooooooo f1 cc a2 f ∗2 ggooooooooooo fn 2 wwoooooooooooooo f2 ???????????????????? CN 1282 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 3. Un ejemplo en la sección anterior que hemos descrito con gran detalle nuestro modelo formal para SSA. Sin embargo, todavía no hemos abordado el aspecto práctico del modelo. En esta sección, damos una pincelada de la visión pragmática de nuestro enfoque. Estudiamos un ejemplo muy simple y explicamos cómo los agentes pueden usar esas aproximaciones de la lógica de SSA que pueden obtener a través de la comunicación. Reflexionemos sobre un sistema que consiste en robots ubicados en una cuadrícula bidimensional que busca paquetes con el objetivo de moverlos a un determinado destino (Figura 4). Los robots pueden llevar solo un paquete a la vez y no pueden moverse a través de un paquete. Figura 4: Los robots del escenario tienen una vista parcial del dominio y existen dos tipos de robots según el campo visual que tienen. Algunos robots son capaces de observar los ocho cuadrados adyacentes, pero otros solo observan los tres cuadrados que tienen en el frente (ver Figura 5). Los llamamos URDL (forma abreviada de los robots de izquierda al alza) y LCR (abreviatura para los robots de izquierda-centro-derecha) respectivamente. Describir los estados del medio ambiente, así como las funciones de percepción de los robots, es bastante tedioso e incluso innecesario. Asumimos que el lector tiene todas esas descripciones en mente. Todos los robots en el sistema deben poder resolver los problemas de distribución de paquetes cooperativamente comunicando sus intenciones entre sí. Para comunicarse, los agentes envían mensajes utilizando alguna ontología. En nuestro escenario, coexisten dos ontologías, las ontologías UDRL y LCR. Ambos son muy simples y se limitan a describir lo que observan los robots. Figura 5: Robots Campo de visión Cuando un robot que lleva un paquete encuentra otro paquete que obstruye su camino, puede rodearlo o, si hay otro robot en su campo visual, pídale ayuda. Supongamos que dos robots URDL se encuentran en una situación como la que se muestra en la Figura 6. Robot1 (el que lleva un paquete) decide pedirle ayuda a Robot2 y envía una solicitud. Esta solicitud se escribe a continuación como un mensaje KQML y debe interpretarse intuitivamente como: Robot2, recoja el paquete ubicado en mi cuadrado Up, sabiendo que está ubicado en mi cuadrado de la derecha.`Solicitud: remitente robot1: receptor robot2: paquetes de idiomas distribución-lenguaje: ontología urdl-ontología: contenido (recoger u (paquete) porque UR (robot2) ´ Figura 6: Asistencia de robot Robot2 Comprende el contenido de la solicitud y puede usarUna regla representada por la siguiente restricción: 1, Ur (Robot2), 2, UL (Robot1), 1, U (paquete) 2, U (paquete) La restricción anterior debe interpretarse intuitivamente como: si Robot2 está situado en Robot1.-Right Square, Robot1 está situado en Robot2s Up-Left Square y un paquete se encuentra en Robot1s Up Square, luego un paquete se encuentra en Robot2s Up Square. Ahora, surgen problemas cuando un robot LCR y un robot URDL intentan interoperar. Ver Figura 7. Robot1 envía una solicitud del formulario: `Solicitud: remitente Robot1: receptor Robot2: PAQUETES DE IDIOMA DISTRIBUCIÓN Language: Ontology LCR-Antology: Content (Pick Up R (Robot2) porque C (Paquete) ´ Robot2 no comprende el contenido del contenido del contenido del contenido del contenidoSolicite pero deciden comenzar un proceso de alineación que corresponde con un canal C1. Una vez terminado, Robot2 busca en TH (C1) para restricciones similares a la esperada, es decir, las de la forma: 1, R (Robot2), 2, UL (Robot1), 1, C (Paquete) C1 2, λ(Paquete) donde λ ∈ {u, r, d, l, ur, dr, dl, ul}. A partir de estos, solo las siguientes limitaciones son plausibles según C1: el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1283 Figura 7: Ontology Mismatch 1, R (Robot2), 2, UL (Robot1), 1, C (Paquete) C1 2, U (Paquete) 1, R (Robot2), 2, UL (Robot1), 1, C (paquete) C1 2, L (paquete) 1, R (Robot2), 2, UL (Robot1), 1, C (paquete) C1 2, DR (paquete) IFPosteriormente, ambos robots que adoptan los mismos roles participan en una situación como la que se muestra en la Figura 8, tiene lugar un nuevo proceso de alineación que corresponde con un canal C2. C2 también considera la información anterior y, por lo tanto, refina C1. La única restricción de las anteriores que permanece plausible según C2 es: 1, R (Robot2), 2, UL (Robot1), 1, C (Paquete) C2 2, U (paquete) Observe que esta restricción es un elemento deLa teoría de la lógica distribuida. Los agentes se comunican para cooperar con éxito y el éxito se garantiza utilizando restricciones de la lógica distribuida. Figura 8: Refinamiento 4. Conclusiones y trabajo adicional En este documento hemos expuesto un modelo formal de alineación semántica como una secuencia de refinamientos de canales de información que son relativos a los estados particulares del entorno en el que dos agentes se comunican y alinean sus respectivas conceptualizaciones de estos estados. Antes de nosotros, Kent [6] y Kalfoglou y Schorlemmer [4, 10] han aplicado la teoría de los canales para formalizar la alineación semántica utilizando también la visión de Barwise y Seligmans para centrarse en los tokens como facilitadores del flujo de información. Sin embargo, su enfoque de la alineación semántica, como la mayoría de los mecanismos de coincidencia de ontología desarrollados hasta la fecha (independientemente de si siguen un enfoque funcional, basado en el tiempo, o un enfoque basado en la interacción), aún define la alineación semántica en términosde decisiones de diseño a priori, como la taxonomía conceptual de las ontologías o las fuentes externas, provocadas en el proceso de alineación. En cambio, el modelo que hemos presentado en este documento hace explícito los estados particulares del entorno en el que se encuentran los agentes y están tratando de alinear gradualmente sus entidades ontológicas. En el futuro, nuestro esfuerzo se centrará en el lado práctico del problema de alineación semántica situada. Planeamos refinar aún más el modelo presentado aquí (por ejemplo, para incluir cuestiones pragmáticas como los criterios de terminación para el proceso de alineación) y idear protocolos de negociación de ontología concreta basados en este modelo que los agentes pueden promulgar. El modelo formal expuesto en este documento constituirá una base sólida de futuros resultados prácticos. Agradecimientos Este trabajo es apoyado bajo el Proyecto UPIC, patrocinado por el Ministerio de Educación y Ciencia de Spains bajo el número de subvención TIN2004-07461-C02-02 y también bajo el Proyecto de Investigación específica de Open Knowledge (Strep), patrocinado por la Comisión Europea bajo el número de contrato FP6-027253. Marco Schorlemmer cuenta con el apoyo de una beca de investigación de Ram´on Y Cajal del Ministerio de Educación y Ciencia de Spains, parcialmente financiado por el Fondo Social Europeo.5. Referencias [1] J. Barwise y J. Seligman. Flujo de información: la lógica de los sistemas distribuidos. Cambridge University Press, 1997. [2] C. Ghidini y F. Giunchiglia. Modelos locales semánticos o razonamiento contextual = localidad + compatibilidad. Inteligencia Artificial, 127 (2): 221-259, 2001. [3] F. Giunchiglia y P. Shvaiko. Matriota semántica. The Knowledge Engineering Review, 18 (3): 265-280, 2004. [4] Y. Kalfoglou y M. Schorlemmer. If-map: un método de mapeo de ontología basado en la teoría de flujo de información. En Journal on Data Semantics I, LNCS 2800, 2003. [5] Y. Kalfoglou y M. Schorlemmer. Mapeo de ontología: el estado del arte. The Knowledge Engineering Review, 18 (1): 1-31, 2003. [6] R. E. Kent. Integración semántica en el marco de flujo de información. En interoperabilidad e integración semántica, Dagstuhl Seminar Actisings 04391, 2005. [7] D. Lenat. CYC: Una inversión a gran escala en infraestructura de conocimiento. Comunicaciones de la ACM, 38 (11), 1995. [8] V. L´opez, M. Sabou y E. Motta. PowerMap: mapeo de la red semántica real sobre la marcha. Actas del ISWC06, 2006. [9] F. McNeill. Refinamiento de ontología dinámica. PhD 1284 El sexto intl. Conf.Sobre la tesis de agentes autónomos y sistemas de múltiples agentes (AAMAS 07), Escuela de Informática, Universidad de Edimburgo, 2006. [10] M. Schorlemmer e Y. Kalfoglou. Alineación de ontología progresiva para la coordinación del significado: una base teórica de información. En 4th int. Conf.en agentes autónomos y sistemas multiagentes, 2005. [11] P. Shvaiko y J. Euzenat. Una encuesta de enfoques de correspondencia basados en esquemas. En Journal on Data Semantics IV, LNCS 3730, 2005. [12] L. Steels. Los orígenes de las ontologías y las convenciones de comunicación en sistemas de múltiples agentes. En Journal of Autonomous Agents and Multi-Agent Systems, 1 (2), 169-194, 1998. [13] J. Van Diggelen et al. Anémona: un entorno de negociación de ontología mínimo efectivo en 5th Int. Conferencia conjunta.Sobre agentes autónomos y sistemas multiagentes, 2006 Apéndice A. Clasificación de términos de teoría del canal: es una tupla a = tok (a), typ (a), | = a where tok (a) es un conjunto de tokens, typ (a) es un conjunto de tipos y | = a es un binarioRelación entre TOK (A) y TYP (A). Si A | = A α, entonces se dice que es de tipo α.Infomorfismo: F: A → B De las clasificaciones A a B es un par infrariante de funciones F = ˆf, ˇf, donde ˆf: typ (a) → typ (b) y ˇf: tok (b) → tok (a), satisfactorioLa siguiente propiedad fundamental: ˇf (b) | = a α iff b | = b ˆf (α) para cada token b ∈ Tok (b) y cada tipo α ∈ Tip (a). Canal: consta de dos infomorfismos c = {fi: ai → c} i∈ {1,2} con un codomínico común c, llamado el núcleo de los tokens C. c se llaman conexiones y se dice que una conexión C conecte tokens ˇf1 (c) y ˇf2 (c) .2 suma: clasificaciones dadas A y B, la suma de A y B, denotada por A + B, es la clasificación con Tok (A + B) = Tok (A) × Tok (B)= {a, b |a ∈ Tok (a) y b ∈ Tok (b)}, typ (a + b) = typ (a) typ (b) = {i, γ |i = 1 y γ ∈ Tip (a) o i = 2 y γ ∈ Tipo (b)} y relación | = a+b definido por: a, b | = a+b 1, α si a | = a α a, b | = a + b 2, β si b | = b β dados infomorfismos F: A → C y G: B → C, la suma F + G: A + B → C se define en los tipos por ˆ (F +g) (1, α) = ˆf (α) y ˆ (f + g) (2, β) = ˆg (β), y en tokens por ˇ (f + g) (c) = ˇf (c), ˇg(C) . Teoría: Dado un conjunto σ, una secuencia de σ es un par γ, δ de subconjuntos de σ. Una relación binaria entre subconjuntos de σ se llama relación de consecuencia en σ. Una teoría es un par t = σ, donde es una relación de consecuencia en σ. Una secuencia γ, δ de σ para la cual γ δ se llama restricción de la teoría T. T es regular si satisface: 1. Identidad: α α 2. Debilitamiento: si γ δ, entonces γ, γ δ, δ 2 De hecho, esta es la definición de un canal binario. Un canal se puede definir con un conjunto de índice arbitrario.3. Corte global: si γ, π0 δ, π1 para cada partición π0, π1 de π (es decir, π0 ∪ π1 = π y π0 ∩ π1 = ∅), entonces γ δ para todos α ∈ σ y todos γ, γ, Δ,Δ, π ⊆ σ.3 Teoría generada por una clasificación: Sea A una clasificación. Un token a ∈ Tok (a) satisface un γ secuente γ, δ de tip (a) siempre que si a es de cada tipo en γ, entonces es de algún tipo en δ. La teoría generada por a, denotada por th (a), es la típica teoría (a), a donde γ a δ si cada token en A satisface γ, δ. Lógica local: es una tupla l = tok (l), typ (l), | = l, l, nl donde: 1. tok (l), typ (l), | = l es una clasificación denotada por CLA (l), 2. typ (l), l es una teoría regular denotada por th (l), 3. NL es un subconjunto de tok (l), llamado tokens normales de L, que satisfacen todas las restricciones de th (l). Una lógica local L es sólida si cada token en CLA (L) es normal, es decir, NL = Tok (L). L se completa si cada secuencia de típito (l) satisfecho por cada token normal es una restricción de th (l). La lógica local generada por una clasificación: dada una clasificación A, la lógica local generada por un registro escrito (a), es la lógica local en un (es decir, CLA (log (a)) = a), con th (log ((log (A)) = th (a) y tal que todas sus tokens sean normales, es decir, nlog (a) = tok (a). Imagen inversa: Dada un infomorfismo F: A → B y una lógica local L en B, la imagen inversa de L bajo F, denotada F - 1 [L], es la lógica local en un tipo que γ F - 1 [L]Δ si ˆf [γ] l ˆf [Δ] y nf - 1 [l] = ˇf [nl] = {a ∈ Tok (a) |a = ˇf (b) para algunos b ∈ Nl}. Lógica distribuida: Sea c = {fi: ai → c} i∈ {1,2} ser un canal y l una lógica local en su núcleo C, la lógica distribuida de C generada por L, escrito dlogc (l), es el es elImagen inversa de L bajo la suma F1 + F2. Refinamiento: Sea c = {fi: ai → c} i∈ {1,2} y c = {fi: ai → c} i∈ {1,2} sea dos canales con las mismas clasificaciones de componentes a1 y a2. Un infomorfismo de refinamiento de C a C es un infomorfismo R: C → C tal que para cada i ∈ {1, 2}, fi = R ◦Fi (es decir, ˆfi = ˆr ◦ ˆFi y ˇFi = ˇFi ◦ˇr). El canal C es un refinamiento de C si existe un infinamiento infomorfismo R de C a C. B. Teoría de la teoría del canal Teorema B.1. La lógica generada por una clasificación es sólida y completa. Además, dada una clasificación A y una lógica l en a, L es sólida y completa si y solo si l = log (a). Teorema B.2. Sea L una lógica en una clasificación B y F: A → B un infomorfismo.1. Si L está completo, entonces F - 1 [l] está completo.2. Si L es sólido y ˇf es Surjetivo, entonces F - 1 [L] es sólido.3 Todas las teorías consideradas en este documento son regulares. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1285