Computación de buenos equilibrios de Nash en juegos gráficos ∗ Edith Elkind Hebrew University of Jerusalén, Israel, y Universidad de Southampton, Southampton, SO17 1BJ, Reino Unido. Leslie Ann Goldberg University of Liverpool Liverpool L69 3BX, U.K. Paul Goldberg University of Liverpool Liverpool L69 3BX, U.K.K.K.K.K.K.K.K.K.K.K.Este documento aborda el problema de la selección de equilibrio justo en los juegos gráficos. Nuestro enfoque se basa en la estructura de datos llamada la mejor política de respuesta, que fue propuesta por Kearns et al.[13] Como una forma de representar todos los equilibrios de Nash de un juego gráfico. En [9], se demostró que la mejor política de respuesta tiene un tamaño polinómico siempre que el gráfico subyacente sea una ruta. En este artículo, mostramos que si el gráfico subyacente es un árbol de grado limitado y la mejor política de respuesta tiene un tamaño polinomial, entonces hay un algoritmo eficiente que construye un equilibrio de Nash que garantiza ciertos pagos a todos los participantes. Otro concepto de solución atractiva es un equilibrio de Nash que maximiza el bienestar social. Mostramos que, si bien calcular exactamente este último es inviable (demostramos que resolver este problema puede implicar un número algebraico de un grado arbitrariamente alto), existe un FPTA para encontrar tal equilibrio siempre que la mejor política de respuesta tenga un tamaño polinómico. Estos dos algoritmos se pueden combinar para producir equilibrios de Nash que satisfagan varios criterios de equidad. Categorías y descriptores de sujetos F.2 [Teoría de la computación]: Análisis de algoritmos y complejidad del problema;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales-economía Algoritmos de términos generales, Economía, Teoría 1. Introducción En una gran comunidad de agentes, es probable que el comportamiento de los agentes no tenga un efecto directo en la mayoría de los otros agentes: más bien, son solo los agentes que están lo suficientemente cerca de él los que se verán afectados. Sin embargo, a medida que estos agentes responden adaptando su comportamiento, más agentes sentirán las consecuencias y, finalmente, las elecciones tomadas por un solo agente se propagarán en toda la comunidad. Esta es la intuición detrás de los juegos gráficos, que fueron introducidos por Kearns, Littman y Singh en [13] como un esquema de representación compacta para juegos con muchos jugadores. En un juego gráfico N-jugador, cada jugador está asociado con un vértice de un gráfico G subyacente, y los pagos de cada jugador dependen de su acción y de las acciones de sus vecinos en el gráfico. Si el grado máximo de G es δ, y cada jugador tiene dos acciones disponibles para él, entonces el juego puede representarse usando números N2Δ+1. Por el contrario, necesitamos números N2N para representar un juego general de 2-acción del jugador N, que solo es práctico para valores pequeños de n.Para juegos gráficos con δ constante, el tamaño del juego es lineal en n.Uno de los problemas más naturales para un juego gráfico es encontrar un equilibrio de Nash, cuya existencia se deduce del teorema de Nashs (ya que los juegos gráficos son solo un caso especial de juegos N-jugador). El primer intento de abordar este problema se realizó en [13], donde los autores consideran juegos gráficos con dos acciones por jugador en las que el gráfico subyacente es un árbol de grano limitado. Proponen un algoritmo genérico para encontrar equilibrios de Nash que se puedan especializar de dos maneras: un algoritmo exponencial de tiempo para encontrar un equilibrio (exacto) Nash y un esquema de aproximación de tiempo totalmente polinómico (FPTA) para encontrar una aproximación a un equilibrio NASH. Para cualquiera> 0, este algoritmo genera un equilibrio -nash, que es un perfil de estrategia en el que ningún jugador puede mejorar su recompensa en más que al cambiar unilateralmente su estrategia. Si bien los equilibrios de noh a menudo son más fáciles de calcular que los equilibrios de NASH exactos, este concepto de solución tiene varios inconvenientes. Primero, los jugadores pueden ser sensibles a una pequeña pérdida en los pagos, por lo que el perfil de estrategia que es un equilibrio de las notas no será estable. Este será el caso, incluso si solo hay un pequeño subconjunto de jugadores que son extremadamente sensibles al precio, y para una gran población de jugadores puede ser difícil elegir un valor de que satisfaga a todos. En segundo lugar, los perfiles de estrategia que están cerca de ser equilibrios NASH pueden ser mucho mejores con respecto a las propiedades bajo consideración que los equilibrios exactos de Nash. Por lo tanto, el valor (aproximación al) de la mejor solución que corresponde a un equilibrio de -nash puede no ser indicativo de lo que se puede lograr bajo un equilibrio exacto de Nash. Esto es especialmente importante si el propósito de la solución aproximada es proporcionar un buen punto de referencia para un sistema de agentes egoístas, ya que el punto de referencia implícito por un equilibrio de noh puede ser poco realista. Por estas razones, en este documento nos centramos en el problema de calcular los equilibrios exactos de Nash. Sobre la base de ideas de [14], Elkind et al.[9] mostró cómo encontrar un equilibrio (exacto) Nash en el tiempo polinomial cuando el gráfico subyacente 162 tiene grado 2 (es decir, cuando el gráfico es una colección de rutas y ciclos). Por el contrario, encontrar un equilibrio NASH en un gráfico general unido a grado parece ser computacionalmente intratable: se ha demostrado (ver [5, 12, 7]) para que se complete para la clase PPAD de complejidad.[9] extiende este resultado de la dureza al caso en el que el gráfico subyacente ha limitado el ancho de ruta. Un juego gráfico puede no tener un equilibrio NASH único, de hecho, puede tener exponencialmente muchos. Además, algunos equilibrios de Nash son más deseables que otros. En lugar de tener un algoritmo que simplemente encuentra un equilibrio de Nash, nos gustaría tener algoritmos para encontrar equilibrios de Nash con varias propiedades socialmente deseables, como maximizar el pago general o distribuir ganancias de manera justa. Una propiedad útil de la estructura de datos de [13] es que representa simultáneamente el conjunto de todos los equilibrios Nash del juego subyacente. Si esta representación tiene un tamaño polinomial (como es el caso de las rutas, como se muestra en [9]), uno puede esperar extraer de él un equilibrio de Nash con las propiedades deseadas. De hecho, en [13] los autores mencionan que esto es posible si uno está interesado en encontrar un equilibrio (aproximado) -nash. El objetivo de este documento es extender esto a los equilibrios de NASH exactos.1.1 Nuestros resultados en este documento, estudiamos juegos gráficos de 2-acción del jugador N en árboles de grado limitado para los cuales la estructura de datos de [13] tiene poli (n) de tamaño. Nos centramos en el problema de encontrar equilibrios exactos de NASH con ciertas propiedades socialmente deseables. En particular, mostramos cómo encontrar un equilibrio de Nash que (casi) maximice el bienestar social, es decir, la suma de los pagos de los jugadores, y mostramos cómo encontrar un equilibrio de Nash que (casi) satisfaga los límites de pago prescritos para todos los jugadores. Los juegos gráficos en los árboles de grado limitado tienen una estructura algebraica simple. Una característica atractiva, que se deduce de [13], es que cada juego tiene un equilibrio de Nash en el que la estrategia de cada jugador es un número racional. La Sección 3 estudia la estructura algebraica de los equilibrios de Nash que maximizan el bienestar social. Mostramos (teoremas 1 y 2) que, sorprendentemente, el conjunto de equilibrios de Nash que maximizan el bienestar social es más complejo. De hecho, para cualquier número algebraico α ∈ [0, 1] con un grado como máximo n, exhibimos un juego gráfico en una ruta de longitud o (n) de tal manera que, en el equilibrio NASH que maximiza el bienestar social único de este juego,Uno de los jugadores juega la estrategia mixta α.1 Este resultado muestra que puede ser difícil representar un equilibrio de Nash óptimo. Parece ser una característica novedosa del entorno que consideramos aquí, que un equilibrio de Nash óptimo es difícil de representar, en una situación en la que es fácil encontrar y representar un equilibrio de Nash. Como el equilibrio NASH que maximiza el bienestar social puede ser difícil de representar de manera eficiente, tenemos que conformarnos con una aproximación. Sin embargo, la diferencia crucial entre nuestro enfoque y la de los documentos anteriores [13, 16, 19] es que requerimos que nuestro algoritmo genere un equilibrio exacto de NASH, aunque no necesariamente el óptimo con respecto a nuestros criterios. En la Sección 4, describimos un algoritmo que satisface este requisito. A saber, proponemos un algoritmo que para cualquier> 0 encuentra un equilibrio de Nash cuyo pago total está dentro de la óptima. Se ejecuta en tiempo polinomial (Teorema 3,4) para cualquier juego gráfico en un árbol de grado limitado para el cual la estructura de datos propuesta por [13] (la llamada política de respuesta mejor, definida a continuación) es de tamaño poli (n)(Tenga en cuenta que, como se muestra en [9], este es siempre el caso cuando el gráfico subyacente es una ruta). Datta [8] obtuvo más pre1 en un contexto relacionado en un contexto diferente, quien muestra que los juegos de 2-acción de N-jugador son universales en el sentido de que cualquier variedad algebraica real puede representarse como el conjunto de equilibrios de NASH totalmente mixtos de tales talesjuegos.Cisely, el tiempo de ejecución de nuestro algoritmo es polinomial en N, PMAX y 1/, donde PMAX es el valor absoluto máximo de una entrada de una matriz de pago, es decir, es un algoritmo pseudopolinomial, aunque es completamente polinómico con respecto a. Mostramos (Sección 4.1) que, bajo algunas restricciones en las matrices de pago, el algoritmo puede transformarse en un algoritmo de tiempo polinomial (verdaderamente) que genera un equilibrio NASH cuyo pago total está dentro de un factor 1 de lo óptimo. En la Sección 5, consideramos el problema de encontrar un equilibrio de Nash en el que la recompensa esperada de cada jugador VI excede un umbral prescrito TI. Usando la idea de la Sección 4 damos (Teorema 5) un esquema de aproximación de tiempo totalmente polinomial para este problema. El tiempo de ejecución del algoritmo está limitado por un polinomio en N, PMAX y. Si la instancia tiene un equilibrio de Nash que satisface los umbrales prescritos, entonces el algoritmo construye un equilibrio NASH en el que el pago esperado de cada jugador VI es al menos Ti -. En la Sección 6, presentamos otros criterios naturales para seleccionar un buen equilibrio de Nash y mostramos que los algoritmos descritos en las dos secciones anteriores pueden usarse como bloques de construcción para encontrar equilibrios de Nash que satisfagan estos criterios. En particular, en la Sección 6.1 mostramos cómo encontrar un equilibrio de Nash que se aproxime al bienestar social máximo, al tiempo que garantizamos que cada recompensa individual esté cerca de un umbral prescrito. En la Sección 6.2 mostramos cómo encontrar un equilibrio de Nash que (casi) maximice el pago mínimo individual. Finalmente, en la Sección 6.3 mostramos cómo encontrar un equilibrio de Nash en el que los pagos individuales de los jugadores estén cerca el uno del otro.1.2 Trabajo relacionado Nuestro esquema de aproximación (Teorema 3 y Teorema 4) muestra un contraste entre los juegos que estudiamos y los juegos N-Action de dos jugadores, para los cuales los problemas correspondientes son intratables. Para los juegos N-Action de dos jugadores, el problema de encontrar equilibrios Nash con propiedades especiales es típicamente NP-HARD. En particular, este es el caso de los equilibrios de Nash que maximizan el bienestar social [11, 6]. Además, es probable que sea intratable incluso aproximar tales equilibrios. En particular, Chen, Deng y Teng [4] muestran que existe un polinomio inverso en N, para el cual calcular un equilibrio de Nash en juegos de 2 jugadores con n acciones por jugador es complete PPAD. Lipton y Markakis [15] estudian las propiedades algebraicas de los equilibrios de Nash, y señalan que los algoritmos de eliminación del cuantificador estándar se pueden usar para resolverlos. Tenga en cuenta que estos algoritmos no tienen tiempo polinomial en general. Los juegos que estudiamos en este documento tienen equilibrios NASH computables en tiempo polinómico en los que todas las estrategias mixtas son números racionales, pero un equilibrio de NASH óptimo puede incluir necesariamente estrategias mixtas con alto grado algebraico. Un equilibrio correlacionado (CE) (introducido por Aumann [2]) es una distribución sobre los vectores de los jugadores acciones con la propiedad de que si se le dice a algún jugador su propia acción (el valor de su propio componente) a partir de un vector generado por esa distribución,Entonces no puede aumentar su recompensa esperada cambiando su acción. Cualquier equilibrio de Nash es un CE, pero el Converse no se mantiene en general. En contraste con los equilibrios de NASH, se pueden encontrar equilibrios correlacionados para juegos gráficos de bajo grado (así como otras clases de juegos multijugador concisados) en el tiempo polinomial [17]. Pero, para los juegos gráficos es NP-Hard encontrar un equilibrio correlacionado que maximice el pago total [18]. Sin embargo, los resultados de NP-Hardness se aplican a juegos más generales que el que consideramos aquí, en particular los gráficos no son árboles. De [2] también se sabe que existen 2 juegos de jugadores y 2-acción para los cuales el pago total esperado 163 del mejor equilibrio correlacionado es más alto que el mejor equilibrio de Nash, y discutimos este problema más en la Sección 7. 2. Preliminares y notación consideramos juegos gráficos en los que el gráfico subyacente G es un árbol N-Vértice, en el que cada vértice tiene como máximo niños Δ. Cada vértice tiene dos acciones, que se denotan por 0 y 1. Una estrategia mixta de un jugador V se representa como un único número V ∈ [0, 1], que denota la probabilidad de que V seleccione la acción 1. Para los propósitos del algoritmo, el árbol se enraize arbitrariamente. Por conveniencia, suponemos sin pérdida de generalidad que la raíz tiene un solo hijo, y que su recompensa es independiente de la acción elegida por el niño. Esto se puede lograr eligiendo primero una raíz arbitraria del árbol, y luego agregando un padre ficticio de esta raíz, dando al nuevo padre una función de pago constante, por ejemplo, 0. Dado un borde (v, w) del árbol g, y una estrategia mixta w para w, deje que g (v, w), w = w sea la instancia obtenida de g al (1) eliminar todos los nodos z que están separados deV Por W (es decir, todos los nodos z de tal manera que la ruta de Z a V pasa a través de W), y (2) restringiendo la instancia para que W esté obligado a jugar estrategia mixta W.Definición 1. Supongamos que (V, W) es un borde del árbol, que V es una estrategia mixta para V y que W es una estrategia mixta para w. Decimos que V es una mejor respuesta potencial a W (denotada por V ∈ PBRV (W)) si hay un equilibrio en la instancia G (V, W), W = W en la que V tiene una estrategia mixta v. Definimos elLa mejor política de respuesta para V, dada W, como B (W, V) = {(W, V) |v ∈ PBRV (W), W ∈ [0, 1]}. El pase aguas arriba del algoritmo genérico de [13] considera cada nodo V (que no sea la raíz) y calcula la mejor política de respuesta para V dada su padre. Con los supuestos anteriores sobre la raíz, el pase aguas abajo es sencillo. La raíz selecciona una estrategia mixta W para la raíz W y una estrategia mixta v ∈ B (W, V) para cada niño v de w. Instruye a cada niño que tocara v. El resto del pase descendente es recursivo. Cuando su padre le instruye a un nodo V para que adopte la estrategia mixta V, hace lo siguiente para cada niño u, encuentra un par (v, u) ∈ B (v, u) (con el mismo valor V que se le diopor su padre) y te indica que te toces. La mejor política de respuesta para un vértice U dado su padre V puede representarse como una unión de rectángulos, donde un rectángulo se define por un par de intervalos cerrados (IV, IU) y consiste en todos los puntos en IV × IU;Puede ser el caso de que uno o ambos de los intervalos IV e IU consistan en un solo punto. Para realizar cálculos en B (V, U), y para unir el número de rectángulos, [9] usó la noción de un punto de evento, que se define de la siguiente manera. Para cualquier conjunto A ⊆ [0, 1] 2 que se represente como una unión de un número finito de rectángulos, decimos que un punto u ∈ [0, 1] en el eje U es un punto uevent de A si u =0 o u = 1 o la representación de A contiene un rectángulo de la forma IV × IU y U es un punto final de IU;Los puntos de eventos V se definen de manera similar. Para muchos juegos considerados en este documento, el gráfico subyacente es una ruta N-Vértice, es decir, un gráfico G = (V, E) con V = {V1 ,..., Vn} y e = {(v1, v2) ,..., (Vn - 1, vn)}. En [9], se demostró que para tales juegos, la mejor política de respuesta solo tiene rectángulos polinómicos. La prueba de que el número de rectángulos en B (VJ+1, VJ) es Polynomial procede al mostrar primero que el número de puntos de evento en B (VJ+1, VJ) no puede exceder el número de puntos de evento en B (VJ, VJ, VJ−1) por más de 2, y usando este hecho para unir el número de rectángulos en B (VJ+1, VJ). Deje que P0 (v) y P1 (v) sean los pagos esperados a V cuando juega 0 y 1, respectivamente. Tanto P0 (V) como P1 (V) son funciones multilineales de las estrategias de los vecinos de V S. En lo que sigue, con frecuencia usaremos la siguiente observación simple. Reclamación 1. Para un vértice V con un solo niño U y un padre w, dado cualquier A, B, C, D ∈ Q, A, B, C, D ∈ Q, se puede seleccionar los pagos a V para que P0 (V) = Auw+ Bu + cw + d, p1 (v) = a uw + b u + c w + d. Además, si todos los A, B, C, D, A, B, C, D son enteros, los pagos a V también son enteros. PRUEBA. Daremos la prueba de P0 (v);La prueba de P1 (v) es similar. Para i, j = 0, 1, que PIJ sea la recompensa de V cuando tocas i, V juega 0 y W juega j. Tenemos p0 (v) = p00 (1 - u) (1 - w) + p10u (1 - w) + p01 (1 - u) w + p11uw. Tenemos que seleccionar los valores de PIJ para que p00 - p10 - p01 + p11 = a, −p00 + p10 = b, −p00 + p01 = c, p00 = D. Es fácil ver que la solución única está dada porP00 = D, P01 = C + D, P10 = B + D, P11 = A + B + C + D. La entrada a todos los algoritmos considerados en este documento incluye las matrices de pago para cada jugador. Suponemos que todos los elementos de estas matrices son enteros. Deje que PMAX sea el mayor valor absoluto de cualquier elemento de cualquier matriz de pago. Luego, la entrada consta de en la mayoría de los números N2Δ+1, cada uno de los cuales puede representarse utilizando bits de PMAX log.3. Equilibrios de Nash que maximizan el bienestar social: soluciones en R \ Q Desde el punto de vista del bienestar social, el mejor equilibrio de Nash es la que maximiza la suma de los pagos esperados de los jugadores. Desafortunadamente, resulta que calcular este perfil de estrategia exactamente no es posible: en esta sección, mostramos que incluso si todos los jugadores de pago son enteros, el perfil de estrategia que maximiza el pago total puede tener coordenadas irracionales;Además, puede involucrar un número algebraico de un grado arbitrario.3.1 Calentamiento: irracionalidades cuadráticas Comenzamos proporcionando un ejemplo de un juego gráfico en una ruta de longitud 3 con pagos enteros de tal manera que en el equilibrio de Nash que maximiza el pago total, uno de los jugadores tiene una estrategia en R \ Q. En la próxima subsección, extenderemos este ejemplo a números algebraicos de grado arbitrario n;Para hacerlo, tenemos que considerar caminos de longitud o (n). Teorema 1. Existe un juego gráfico G-Game G en una ruta de 3 vértices UV W de tal manera que, en cualquier equilibrio de Nash de G que maximice el bienestar social, la estrategia, U, del jugador U y el total de recompensa, P, Satisfy U,p ∈ R \ Q. PRUEBA. Los pagos a los jugadores en G se especifican de la siguiente manera. La recompensa a U es idénticamente 0, es decir, P0 (u) = P1 (u) = 0. Usando la reclamación 1, seleccionamos los pagos a V para que P0 (v) = −uw + 3W y P1 (v) = p0 (v) + w (u + 2) - (u + 1), donde u y w estánLas estrategias (mixtas) de U y W, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f (u) = u+1 u+2. Observe que para cualquier u ∈ [0, 1] tenemos f (u) ∈ [0, 1]. El pago a W es 0 si selecciona la misma acción que V y 1 de lo contrario. Reclamación 2. Todos los equilibrios Nash del Juego G son de la forma (U, 1/2, F (U)). Es decir, en cualquier equilibrio de Nash, V juega v = 1/2 y W juega w = f (u). Además, para cualquier valor de U, el vector de estrategias (U, 1/2, F (u)) constituye un equilibrio NASH. PRUEBA. Es fácil verificar que para cualquier u ∈ [0, 1], el vector (u, 1/2, f (u)) es un equilibrio NASH. De hecho, U está contento de jugar 164 cualquier estrategia mixta u no importa lo que V y W hagan. Además, V es indiferente entre 0 y 1 siempre que W = F (U), por lo que puede jugar 1/2. Finalmente, si V juega 0 y 1 con igual probabilidad, W es indiferente entre 0 y 1, por lo que puede jugar F (U). Por el contrario, suponga que v> 1/2. Entonces w estrictamente prefiere jugar 0, es decir, w = 0. Luego, para V tenemos p1 (v) = p0 (v) - (u + 1), es decir, p1 (v) <p0 (v), lo que implica v = 0, una contradicción. Del mismo modo, si v <1/2, el jugador W prefiere jugar 1, por lo que tenemos w = 1. Por lo tanto, p1 (v) = p0 (v) + (u + 2) - (u + 1), es decir, p1 (v)> p0 (v), lo que implica v = 1, una contradicción. Finalmente, si V = 1/2, pero w = f (u), el jugador V no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Esto completa la prueba de reclamo 2. Por reclamo 2, el recompensa total en cualquier equilibrio de Nash de este juego es una función de u. Más específicamente, la recompensa a U es 0, la recompensa a V es −Uf (u) + 3f (u), y la recompensa a W es 1/2. Por lo tanto, el equilibrio NASH con el pago total máximo corresponde al valor de u que maximiza g (u) = −u (u + 1) u + 2 + 3 u + 1 u + 2 = - (u - 3) (u+ 1) U + 2. Para encontrar extremos de G (u), calculamos h (u) = - d du g (u). Tenemos h (u) = (2u - 2) (u + 2) - (u - 3) (u + 1) (u + 2) 2 = u2 + 4u - 1 (u + 2) 2. Por lo tanto, h (u) = 0 si y solo si u ∈ {−2 + √ 5, −2 - √ 5}. Tenga en cuenta que −2 + √ 5 ∈ [0, 1]. La función G (U) cambia de signo en −2, −1 y 3. Tenemos g (u) <0 para g> 3, g (u)> 0 para u <−2, por lo que el extremo de g (u) que se encuentra entre 1 y 3, es decir, u = −2 + √ 5,es un máximo local. Concluimos que el Vector de las Estrategias (−2+√ 5, 1/2, (5-√ 5)/5) dio que el vector de estrategias (−2+√ 5, 1/2, (5-√ 5)/5). El pago total respectivo es 0 - (√ 5 - 5) (√ 5 - 1) √ 5 + 1 2 = 13/2 - 2 √ 5. Esto concluye la prueba del teorema 1. 3.2 Estrategias de grado arbitrario Hemos demostrado que en el equilibrio de NASH que maximizan el bienestar social, las estrategias de algunos jugadores pueden ser irracionalidades cuadráticas, y también la recompensa total. En esta subsección, ampliaremos este resultado para mostrar que podemos construir un juego gráfico de Cogoff Integer en un camino cuyo equilibrio NASH que maximiza el bienestar social implica números algebraicos arbitrarios en [0, 1]. Teorema 2. Para cualquier número algebraico de grado-n α ∈ [0, 1], existe un juego gráfico de pago entero en una ruta de longitud o (n) de modo que, en todos los equilibrios de NASH que maximizan el bienestar social de este juego, uno de los jugadores, uno de los jugadoresJuega α. PRUEBA. Nuestra prueba consta de dos pasos. Primero, construimos una expresión racional r (x) y un segmento [x, x] tal que x, x ∈ Q y α es el único máximo de r (x) en [x, x]. En segundo lugar, construimos un juego gráfico cuyo equilibrio NASH puede ser parametrizado por u ∈ [x, x], de modo que en el equilibrio que corresponde a usted el pago total es r (u) y, además, la estrategia de algunos jugadores es u. Se deduce que para lograr el equilibrio de NASH que maximiza el pago, este jugador tiene que jugar α. Los detalles siguen. Lema 1. Dado un número algebraico α ∈ [0, 1], deg (α) = n, existen k2 ,..., K2n + 2 ∈ Q y x, x ∈ (0, 1) ∩ Q tal que α es el único máximo de r (x) = k2 x + 2 + · · · + k2n + 2 x + 2n + 2 en [x, x]. PRUEBA. Sea p (x) el polinomio mínimo de α, es decir, un polinomio de grado n con coeficientes racionales cuyo coeficiente principal es 1 tal que p (α) = 0. Sea a = {α1 ,..., αn} ser el conjunto de todas las raíces de P (x). Considere el polinomio Q1 (x) = −p2 (x). Tiene las mismas raíces que p (x), y además, para cualquier x ∈ A tenemos Q1 (x) <0. Por lo tanto, A es el conjunto de todos los máximos de Q1 (x). Ahora, establezca r (x) = Q1 (x) (x+2) ... (x+2n+1) (x+2n+2). Observe que r (x) ≤ 0 para todos x ∈ [0, 1] y r (x) = 0 si y solo si q1 (x) = 0. Por lo tanto, el conjunto A también es el conjunto de todos los máximos de R (x) en [0, 1]. Sea d = min {| αi - α ||αi ∈ A, αi = α} y establecer α = max {α - d/2, 0}, α = min {α + d/2, 1}. Claramente, α es el único cero (y, por lo tanto, el único máximo) de R (x) en [α, α]. Sea X y X algunos números racionales en (α, α) y (α, α), respectivamente;Tenga en cuenta que al excluir los puntos finales de los intervalos nos aseguramos de que x, x = 0, 1. Como [x, x] ⊂ [α, α], tenemos que α es el único máximo de r (x) en [x, x]. Como r (x) es una expresión racional adecuada y todas las raíces de su denominador son simples, por el teorema de descomposición de la fracción parcial, R (x) se puede representar como r (x) = k2 x + 2 + · · · + k2n + 2x + 2n + 2, donde k2 ,..., K2N+2 son números racionales. Considere un juego gráfico en la ruta U - 1V - 1U0V0U1V1... Uk - 1vk - 1uk, donde k = 2n + 2. Intuitivamente, queremos que cada triple (UI - 1, VI - 1, UI) se comporte de manera similar a los jugadores U, V y W del juego descrito en la subsección anterior. Más precisamente, definimos los pagos a los jugadores de la siguiente manera.• La recompensa a U - 1 es 0, no importa lo que todos los demás hagan.• La recompensa esperada a V - 1 es 0 si juega 0 y U0 - (x - x) U - 1 −x Si juega 1, donde U0 y U - 1 son las estrategias de U0 y U - 1, respectivamente.• La recompensa esperada a V0 es 0 si se juega 0 y U1 (U0 + 1) - U0 si juega 1, donde U0 y U1 son las estrategias de U0 y U1, respectivamente.• Para cada i = 1 ,..., k - 1, la recompensa esperada a VI cuando se juega 0 es p0 (vi) = aiuiui+1 - aiui+1, y la recompensa esperada a vi cuando se juega 1 es p1 (vi) = p0 (vi)+ui+1 (2 - ui) - 1, donde ai = −ki+1 y ui+1 y ui son las estrategias de ui+1 y ui, respectivamente.• Para cada i = 0 ,..., k, la recompensa a la interfaz de usuario no depende de VI y es 1 si UI y VI - 1 seleccionan diferentes acciones y 0 de lo contrario. Ahora caracterizaremos los equilibrios Nash de este juego utilizando una secuencia de reclamos. Reclamación 3. En todos los equilibrios Nash de este juego V - 1 juega 1/2, y las estrategias de U - 1 y U0 satisfacen U0 = (x - x) U - 1 + x. En consecuencia, en todos los equilibrios de Nash tenemos u0 ∈ [x, x].165 Prueba. La prueba es similar a la de la reclamación 2. Sea f (u - 1) = (x - x) u - 1 + x. Claramente, el jugador V - 1 es indiferente entre jugar 0 y 1 si y solo si U0 = f (u - 1). Supongamos que V - 1 <1/2. Entonces U0 prefiere estrictamente jugar 1, es decir, u0 = 1, por lo que tenemos p1 (v - 1) = p0 (v - 1) + 1 - (x - x) u - 1 - x. Como 1 - x ≤ 1 - (x - x) u - 1 - x ≤ 1 - x para u - 1 ∈ [0, 1] y x <1, tenemos p1 (v - 1)> p0 (v - 1), entonces V - 1 prefiere jugar 1, una contradicción. Del mismo modo, si v - 1> 1/2, el jugador U0 prefiere jugar estrictamente a jugar 0, es decir, u0 = 0, por lo que tenemos p1 (v - 1) = p0 (v - 1) - (x - x) u−1 - x. Como x <x, x> 0, tenemos p1 (v - 1) <p0 (v - 1), así v - 1 prefiere jugar 0, una contradicción. Finalmente, si V - 1 juega 1/2, pero U0 = F (U - 1), el jugador V - 1 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, tenga en cuenta que f (0) = x, f (1) = x y, además, f (u - 1) ∈ [x, x] si y solo si u - 1 ∈ [0, 1]. Por lo tanto, en todos los equilibrios de Nash de este juego tenemos u0 ∈ [x, x]. Reclamación 4. En todos los equilibrios de Nash de este juego para cada i = 0 ,..., k - 1, tenemos vi = 1/2, y las estrategias de los jugadores ui y ui+1 satisfacen ui+1 = fi (ui), donde f0 (u) = u/(u+1) y fi (Fi (u) = 1/(2 - u) para i> 0. PRUEBA. La prueba de esta afirmación también es similar a la de la reclamación 2. Usamos inducción en i para demostrar que la declaración de la afirmación es verdadera y, además, ui = 1 para i> 0. Para el caso base i = 0, tenga en cuenta que U0 = 0 por la afirmación anterior (recuerde que x, x se seleccionan para que x, x = 0, 1) y considere el triple (U0, V0, U1). Sea V0 la estrategia de V0. Primero, suponga que v0> 1/2. Entonces U1 prefiere estrictamente jugar 0, es decir, U1 = 0. Luego, para V0 tenemos P1 (V0) = P0 (V0) - U0. Como U0 = 0, tenemos p1 (v0) <p0 (v0), lo que implica v1 = 0, una contradicción. Del mismo modo, si V0 <1/2, el jugador U1 prefiere jugar 1, por lo que tenemos u1 = 1. Por lo tanto, P1 (V0) = P0 (V0) + 1. Se deduce que P1 (V0)> P0 (V0), lo que implica V0 = 1, una contradicción. Finalmente, si V0 = 1/2, pero u1 = u0/(u0 + 1), el jugador V0 no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como u1 = u0/(u0 + 1) y u0 ∈ [0, 1], tenemos u1 = 1. El argumento para el paso inductivo es similar. A saber, supongamos que la declaración se ha demostrado para todos los i <i y considere el triple (ui, vi, ui+1). Sea VI la estrategia de VI. Primero, suponga que VI> 1/2. Entonces UI+1 prefiere jugar estrictamente 0, es decir, UI+1 = 0. Luego, para vi tenemos p1 (vi) = p0 (vi) −1, es decir, p1 (vi) <p0 (vi), lo que implica vi = 0, una contradicción. Del mismo modo, si Vi <1/2, el jugador UI+1 prefiere jugar 1, por lo que tenemos ui+1 = 1. Por lo tanto, p1 (vi) = p0 (vi) + 1 - ui. Por hipótesis inductiva, tenemos UI <1. En consecuencia, p1 (vi)> p0 (vi), lo que implica vi = 1, una contradicción. Finalmente, si vi = 1/2, pero UI+1 = 1/(2 - UI), el jugador VI no es indiferente entre 0 y 1, por lo que se desviaría de jugar 1/2. Además, como ui+1 = 1/(2 - ui) y ui <1, tenemos ui+1 <1. Reclamación 5. Cualquier perfil de estrategia de la forma (U - 1, 1/2, U0, 1/2, U1, 1/2, ..., Reino Unido - 1, 1/2, Reino Unido), donde u - 1 ∈ [0,1], u0 = (x - x) u - 1 + x, u1 = u0/(u0 + 1), y ui + 1 = 1/(2 - ui) para i ≥ 1 constituye un equilibrio de Nash. PRUEBA. Primero, los pagos del jugador U - 1 no dependen de las acciones de otros jugadores, por lo que es libre de jugar cualquier estrategia en [0, 1]. Mientras U0 = (x −x) U - 1 +x, el jugador V - 1 es indiferente entre 0 y 1, por lo que se contenta con jugar 1/2;Un argumento similar se aplica a los jugadores v0 ,..., VK - 1. Finalmente, para cada i = 0 ,..., K, los pagos de la interfaz de usuario del jugador solo dependen de la estrategia del jugador VI - 1. En particular, siempre que VI - 1 = 1/2, la interfaz de usuario del jugador es indiferente entre jugar 0 y 1, por lo que puede jugar cualquier estrategia mixta ui ∈ [0, 1]. Para completar la prueba, tenga en cuenta que (x - x) u - 1 + x ∈ [0, 1] para todos u - 1 ∈ [0, 1], u0/(u0 + 1) ∈ [0, 1] para todosu0 ∈ [0, 1], y 1/(2 - ui) ∈ [0, 1] para todo ui ∈ [0, 1], por lo que tenemos ui ∈ [0, 1] para todos i = 0 ,..., k.Ahora, calculemos el pago total bajo un perfil de estrategia del formulario dado en la reclamación 5. La recompensa a U - 1 es 0, y la recompensa esperada a cada uno de los UI, i = 0 ,..., K, es 1/2. Los pagos esperados a V - 1 y V0 son 0. Finalmente, para cualquier i = 1 ,..., k - 1, la recompensa esperada a vi es ti = aiuiui+1 - aiui+1. Se deduce que para encontrar un equilibrio de Nash con el pago total más alto, tenemos que maximizar PK - 1 i = 1 Ti sujeto a condiciones u - 1 ∈ [0, 1], u0 = (x −x) u - 1+x, u1 = u0/(u0+1), y ui+1 = 1/(2 - ui) para i = 1 ,..., k - 1. Nos gustaría expresar pk - 1 i = 1 ti en función de U0. Para simplificar la notación, establezca u = u0. Lema 2. Para i = 1 ,..., k, tenemos ui = u+i - 1 u+i. PRUEBA. La prueba es por inducción en i. Para i = 1, tenemos u1 = u/(u + 1). Ahora, porque i ≥ 2 suponga que ui - 1 = (u + i - 2)/(u + i - 1). Tenemos ui = 1/(2 - ui - 1) = (u + i - 1)/(2u + 2i - 2 - u - i + 2) = (u + i - 1)/(u + i). Se deduce que para i = 1 ,..., k - 1 Tenemos ti = ai u + i - 1 u + i u + i u + i + 1 - ai u + i u + i + 1 = −ai 1 u + i + 1 = ki + 1 u + i + 1 1. Observe que, como U - 1 varía de 0 a 1, U varía de x a x. Por lo tanto, para maximizar el pago total, tenemos que elegir u ∈ [x, x] para maximizar k2 u + 2 + · · · + kk u + k = r (u). Por construcción, el único máximo de R (u) en [x, x] es α. Se deduce que en el equilibrio de Nash de maximización de pago de nuestro juego U0 juega α. Finalmente, tenga en cuenta que los pagos en nuestro juego son racionales en lugar de enteros. Sin embargo, es fácil ver que podemos multiplicar todos los pagos a un jugador por su mayor denominador común sin afectar su estrategia. En el juego resultante, todos los pagos son enteros. Esto concluye la prueba del teorema 2. 4. Aproximando el equilibrio de Nash socialmente óptimo hemos visto que el equilibrio de Nash que maximiza el bienestar social puede involucrar estrategias que no están en Q. Por lo tanto, en esta sección nos centramos en encontrar un equilibrio de Nash que sea casi óptimo desde la perspectiva del bienestar social. Proponemos un algoritmo que para cualquier> 0 encuentra un equilibrio de Nash cuyo pago total está dentro de Optimal. El tiempo de ejecución de este algoritmo es polinomio en 1/, n y | PMAX |(Recuerde que PMAX es el valor absoluto máximo de una entrada de una matriz de pago). Si bien el resultado negativo de la sección anterior es para juegos gráficos en rutas, nuestro algoritmo se aplica a una gama más amplia de escenarios. A saber, se ejecuta en el tiempo polinomial en los árboles de grado limitado 166 siempre que la mejor política de respuesta de cada vértice, dado su padre, puede representarse como una unión de un número polinomial de rectángulos. Tenga en cuenta que los gráficos de ruta siempre satisfacen esta condición: en [9] mostramos cómo calcular dicha representación, dada un gráfico con el máximo grado 2. En consecuencia, para los gráficos de ruta, se garantiza que el tiempo de ejecución de nuestro algoritmo es polinomio.(Tenga en cuenta que [9] exhibe una familia de juegos gráficos en árboles de grado limitado para los cuales las mejores políticas de respuesta de algunos de los vértices, dados sus padres, tienen un tamaño exponencial, cuando se representan como uniones de rectángulos). Debido a restricciones de espacio, en esta versión del documento presentamos el algoritmo para el caso donde el gráfico subyacente al juego gráfico es una ruta. Luego declaramos nuestro resultado para el caso general;La prueba se puede encontrar en la versión completa de este documento [10]. Suponga que S es un perfil de estrategia para un juego gráfico G. es decir, S asigna una estrategia mixta a cada vértice de G. Sea EPV (S) el recompensa esperado del jugador V bajo S y Sea EP (S) = P V Epv(s). Sea m (g) = max {ep (s) |S es un equilibrio de Nash para G}. Teorema 3. Supongamos que G es un juego gráfico en una ruta nvertex. Luego, para cualquier> 0, hay un algoritmo que construye un equilibrio NASH para G que satisface EP (S) ≥ M (G) -. El tiempo de ejecución del algoritmo es la prueba O (N4 P3 MAX/ 3). Sea {v1 ,..., Vn} ser el conjunto de todos los jugadores. Comenzamos construyendo las mejores políticas de respuesta para todos VI, i = 1 ,..., n - 1. Como se muestra en [9], esto se puede hacer en el tiempo O (N3). Sea n> 5n un parámetro a seleccionar más tarde, establecer δ = 1/n y defina x = {jδ |j = 0 ,..., N}. Decimos que VJ es un punto de evento para un jugador VI si es un punto de evento VI para B (VI, VI-1) o B (VI+1, VI). Para cada jugador VI, considere un conjunto finito de estrategias xi dada por xi = x ∪ {vj | vj es un punto de evento para vi}. Se ha demostrado en [9] que para cualquier i = 2 ,..., n, la mejor política de respuesta B (VI, VI-1) tiene como máximo 2n + 4 puntos de eventos VI. Como requerimos n> 5n, tenemos | xi |≤ 2n;Suponga sin pérdida de generalidad que | xi |= 2n. Ordene los elementos de Xi en orden creciente como x1 i = 0 <x2 i <· · · · <x2n i. Nos referiremos a las estrategias en XI como estrategias discretas del Jugador VI;Un perfil de estrategia en el que cada jugador tiene una estrategia discreta se denominará un perfil de estrategia discreta. Ahora mostraremos que incluso restringimos a cada jugador VI a estrategias de XI, los jugadores aún pueden lograr un equilibrio de Nash y, además, el mejor equilibrio de Nash (con respecto al bienestar social) tiene una recompensa total al menos M (G)- Mientras N sea lo suficientemente grande. Sea s un perfil de estrategia que maximiza el bienestar social. Es decir, Sea S = (S1, ..., Sn) donde Si es la estrategia mixta del jugador VI y EP (S) = M (G). Para i = 1 ,..., n, dejar ti = max {xj i |XJ I ≤ Si}. Primero, mostraremos que el perfil de estrategia t = (t1, ..., tn) es un equilibrio de Nash para G. corrige cualquier i, 1 <i ≤ n, y deje r = [v1, v2] × [u1,U2] Sea el rectángulo en B (VI, VI - 1) que contiene (Si, Si - 1). Como V1 es un punto de evento Vi-Vi-evento de B (VI, VI-1), tenemos V1 ≤ Ti, así que el punto (Ti, Si-1) está dentro de R. De manera similar, el punto U1 es un EVENT VI-1punto de B (vi, vi - 1), por lo que tenemos u1 ≤ ti - 1, y por lo tanto el punto (ti, ti - 1 está dentro de R. Esto significa que para cualquier i, 1 <i ≤ n, tenemosti - 1 ∈ PBRVI - 1 (Ti), lo que implica que t = (t1, ..., tn) es un equilibrio de Nash para G. Ahora, estimemos la pérdida esperada en el bienestar social causada por jugar T en lugar de S.Lema 3. Para cualquier par de perfiles de estrategia t, s tal que | ti - si |≤ δ tenemos | EPVI (S) - EPVI (T) |≤ 24pmaxδ para cualquier i = 1 ,..., n.PRUEBA. Deje que Pi KLM sea la recompensa del jugador VI, cuando juega K, VI - 1 juega L, y VI+1 juega m.Arreglar i = 1 ,..., n y para k, l, m ∈ {0, 1}, establecer tklm = tk i - 1 (1 - ti - 1) 1 - k tl i (1 - ti) 1 - l tm i+1 (1 -Ti+1) 1 - M SKLM = SK I - 1 (1 - Si - 1) 1 - K SL I (1 - Si) 1 - L SM I+1 (1 - Si+1) 1 - M. Tenemos | EPVI (S) - EPVI (t) |≤ x k, l, m = 0,1 | pi klm (tklm - sklm) |≤ 8pmax max klm | tklm - sklm |Ahora mostraremos que para cualquier k, l, m ∈ {0, 1} tenemos | tklm - sklm |≤ 3δ;Claramente, esto implica el lema. De hecho, Fix K, L, M ∈ {0, 1}. Establecer x = tk i - 1 (1 - ti - 1) 1 - k, x = sk i - 1 (1 - si - 1) 1 - k, y = tl i (1 - ti) 1 - l, y =SL I (1 - Si) 1 - L, Z = TM I+1 (1 - Ti+1) 1 - M, Z = SM I+1 (1 - Si+1) 1 - M. Observe que si k = 0 entonces x - x = (1 - ti - 1) - (1 - si - 1), y si k = 1 entonces x - x = ti - 1 - si - 1, entonces | x - x|≤ δ. Un argumento similar muestra | y - y |≤ δ, | z - z |≤ δ. Además, tenemos x, x, y, z, z ∈ [0, 1]. Por lo tanto, | tklm −sklm |= | xyz - x y z |= | xyz - x yz + x yz - x y z + x y z - x y z |≤ | x - x | yz + | y - y | x z + | z - z | x y ≤ 3Δ. Lemma 3 implica pn i = 1 | epvi (s) - epvi (t) |≤ 24npmaxΔ, por lo que al elegir Δ < / (24npmax), o, de manera equivalente, establecer n> 24npmax /, podemos asegurarnos de que el pago total esperado para el perfil de estrategia t esté dentro de Optimal. Ahora demostraremos que podemos encontrar el mejor equilibrio discreto de Nash (con respecto al bienestar social) utilizando la programación dinámica. Como T es un perfil de estrategia discreto, esto significa que el perfil de estrategia que se encuentra por nuestro algoritmo será al menos tan bueno como t.Definir ml, k i para ser el pago total máximo que v1 ,..., VI - 1 puede lograr si cada VJ, J ≤ I, elige una estrategia de XJ, para cada J <I La estrategia de VJ es una mejor respuesta potencial a la estrategia de VJ+1 y, además, VI - 1 PlaysXL I - 1, VI juega xk i. Si no hay forma de elegir las estrategias para V1 ,..., VI - 1 Para satisfacer estas condiciones, establecemos ml, k i = −∞. Los valores ml, k i, i = 1 ,..., n;k, l = 1 ,..., N, se puede calcular inductivamente, como sigue. Tenemos ml, k 1 = 0 para k, l = 1 ,..., N. Ahora, supongamos que ya hemos calculado ML, K J para todos J <i;k, l = 1 ,..., N. para calcular mk, l i, primero verificamos si (xk i, xl i - 1) ∈ B (vi, vi - 1). Si este no es el caso, tenemos ml, k i = −∞. De lo contrario, considere el conjunto y = xi - 2 ∩ pBRVI - 2 (xl i - 1), es decir, el conjunto de todas las estrategias discretas de VI - 2 que son las mejores respuestas potenciales a XL I - 1. La prueba del teorema 1 en [9] implica que el conjunto PBRVI-2 (XL I-1) no es vacía: el jugador VI-2 tiene una mejor respuesta potencial a cualquier estrategia de VI-1, en particular, XL I−1. Mediante la construcción del conjunto Xi - 2, esto implica que Y no está vacío. Para cada xj i - 2 ∈ Y, deje que Pjlk sea la recompensa que VI - 1 recibe cuando VI - 2 juega XJ I - 2, VI - 1 juega XL I - 1, y VI juega XK I. Claramente, PJLK se puede calcular en un tiempo constante. Luego tenemos ml, k i = max {mj, l i - 1 + pjlk |xj i - 2 ∈ Y}. Finalmente, supongamos que hemos calculado ML, K N para L, K = 1 ,..., N. Todavía tenemos que tener en cuenta la recompensa del jugador VN. Por lo tanto, 167 consideramos todos los pares (xk n, xl n - 1) que satisfacen xl n - 1 ∈ PBRVN - 1 (xk n), y elige el que maximiza la suma de mk, l n y el pago de VN cuando élJuega XK N y VN - 1 juega XL N - 1. Esto da como resultado el pago total máximo que los jugadores pueden lograr en un equilibrio de Nash utilizando estrategias discretas;El perfil de estrategia real que produce este pago puede reconstruirse utilizando técnicas de programación dinámica estándar. Es fácil ver que cada ml, k i se puede calcular en el tiempo o (n), es decir, todos se pueden calcular en el tiempo o (nn3). Recuerde que tenemos que seleccionar n ≥ (24npmax)/ para garantizar que el perfil de estrategia que generamos tiene un pago total que está dentro de Optimal. Llegamos a la conclusión de que podemos calcular una acroximación al mejor equilibrio de Nash en el tiempo O (N4 P3 MAX/ 3). Esto completa la prueba del Teorema 3. Para establecer nuestro resultado para el caso general (es decir, cuando el gráfico subyacente es un árbol de grado limitado en lugar de una ruta), necesitamos notación adicional. Si G tiene N jugadores, deje que Q (N) sea un límite superior en el número de puntos de eventos en la representación de cualquier política de mejor respuesta. Es decir, suponemos que para cualquier vértice u con el padre V, B (V, U) tiene como máximo los puntos de eventos Q (n). Estaremos interesados en la situación en la que Q (n) es polinomio en n.Teorema 4. Deje que G sea un juego gráfico N-jugador en un árbol en el que cada nodo tiene en la mayoría de los niños Δ. Supongamos que se nos da un conjunto de políticas de mejor respuesta para G en las que cada política de mejor respuesta B (V, U) está representada por un conjunto de rectángulos con los puntos de evento Q (n). Para cualquier> 0, hay un algoritmo que construye un equilibrio NASH para G que satisface EP (S) ≥ M (G) -. El tiempo de ejecución del algoritmo es polinomio en N, PMAX y −1 siempre que el árbol tenga un grado limitado (es decir, δ = O (1)) y Q (n) es un polinomio en n.En particular, si n = max ((Δ + 1) q (n) + 1, n2Δ + 2 (Δ + 2) pMax −1) y δ> 1, entonces el tiempo de ejecución es o (nΔ (2n) δ. Para la prueba de este teorema, ver [10].4.1 Un algoritmo de tiempo polinómico para la aproximación multiplicativa El tiempo de ejecución de nuestro algoritmo es pseudopolinomio en lugar de polinomio, porque incluye un factor que es polinomio en PMAX, la entrada máxima (en valor absoluto) en cualquier matriz de pago. Si estamos interesados en una aproximación multiplicativa en lugar de una aditiva, esto se puede mejorar al polinomio. Primero, tenga en cuenta que no podemos esperar una aproximación multiplicativa para todas las entradas. Es decir, no podemos esperar tener un algoritmo que calcule un equilibrio de NASH con el pago total al menos (1 -) m (g). Si tuviéramos tal algoritmo, entonces para los juegos gráficos G con m (g) = 0, se requeriría el algoritmo para generar la solución óptima. Para demostrar que esto es inviable, observe que podemos usar las técnicas de la Sección 3.2 para construir dos juegos gráficos de IntegerCoeficiente en rutas de longitud o (n) de modo que para algunos x ∈ R el pago total máximo en el primer juego es X, el X, el X, elEl pago total máximo en el segundo juego es −x, y para ambos juegos, los perfiles de estrategia que logran los pagos totales máximos implican números algebraicos de grado n.Al combinar los dos juegos para que el primer vértice del segundo juego se conecte al último vértice del primer juego, pero los pagos de todos los jugadores no cambian, obtenemos un juego gráfico en el que el mejor equilibrio de Nash tiene un pago total 0, sin embargo, las estrategias que conducen a esta recompensa tienen una alta complejidad algebraica. Sin embargo, podemos lograr una aproximación multiplicativa cuando todas las entradas de las matrices de pago son positivas y la relación entre dos entradas está limitada polinomialmente. Recuerde que suponemos que todos los pagos son enteros, y dejemos que PMIN> 0 sea la entrada más pequeña de cualquier matriz de pago. En este caso, para cualquier perfil de estrategia, la recompensa al Jugador I es al menos PMIN, por lo que la recompensa total en el bienestar social Maximizando el equilibrio Nash S satisface m (g) ≥ NPmin. Además, Lemma 3 implica que al elegir Δ < /(24pmax /pmin), podemos asegurar que el equilibrio de Nash T producido por nuestro algoritmo satisface nx i = 1 epvi (s) - nx i = 1 epvi (t) ≤ 24pmaxΔN ≤npmin ≤ m (g), es decir, para este valor de δ tenemos pn i = 1 epvi (t) ≥ (1 -) m (g). Recuerde que el tiempo de ejecución de nuestro algoritmo es O (nn3), donde n debe seleccionarse para satisfacer n> 5n, n = 1/δ. Se deduce que si PMIN> 0, PMAX/ PMIN = POLY (N), podemos elegir N para que nuestro algoritmo proporcione una garantía de aproximación multiplicativa y se ejecute en tiempo polinomio en n y 1/.5. Pageo limitado Equilibrios Nash Otra forma natural de definir qué es un buen equilibrio de Nash es requerir que cada jugador esperado de pago exceda un cierto umbral. Estos umbrales no tienen que ser los mismos para todos los jugadores. En este caso, además de las matrices de pago de los N jugadores, se nos dan N Números T1 ,..., TN, y nuestro objetivo es encontrar un equilibrio de Nash en el que la recompensa del Jugador I es al menos TI, o informar que no existe tal equilibrio de Nash. Resulta que podemos diseñar un FPTAS para este problema utilizando las mismas técnicas que en la sección anterior. Teorema 5. Dado un juego gráfico G en una ruta N-Vértice y N. Racionales T1 ,..., TN, supongamos que existe un perfil de estrategia S tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Luego, para cualquier> 0, podemos encontrar en el tiempo o (max {np3 max / 3, n4 / 3}) Un perfil de estrategia s tal que s es un equilibrio NASH para g y epvi (s) ≥ ti - para i = 1,..., n.PRUEBA. La prueba es similar a la del Teorema 3. Primero, construimos las mejores políticas de respuesta para todos los jugadores, elegimos n> 5n y construimos los conjuntos xi, i = 1 ,..., n, como se describe en la prueba del teorema 3. Considere un perfil de estrategia S tal que S es un equilibrio NASH para G y EPVI (S) ≥ Ti para i = 1 ,..., n.Construimos un perfil de estrategia ti = max {xj i |XJ I ≤ Si} y use el mismo argumento que en la prueba del teorema 3 para mostrar que t es un equilibrio de Nash para G. por Lemma 3, tenemos | epvi (s) - epvi (t) |≤ 24pmaxΔ, por lo que eligiendo Δ < / (24pmax), o, de manera equivalente, n> max {5n, 24pmax /}, podemos asegurar EPVI (t) ≥ ti - para i = 1 ,..., n.Ahora, utilizaremos la programación dinámica para encontrar un equilibrio de Nash discreto que satisfaga EPVI (t) ≥ ti - para i = 1 ,..., n.Como T es un perfil de estrategia discreta, nuestro algoritmo tendrá éxito cuando haya un perfil de estrategia con EPVI (s) ≥ ti- para i = 1 ,..., n.Sea ZL, K I = 1 Si hay un perfil de estrategia discreto de tal manera que para cualquier estrategia del jugador VJ es una mejor respuesta potencial a la estrategia de VJ+1, el pago esperado de VJ es al menos tj -,,Y, además, VI - 1 juega XL I - 1, VI juega xk i. De lo contrario, deje zl, k i = 0. Podemos calcular ZL, K I, I = 1 ,..., n;k, l = 1 ,..., N inductivamente, como sigue. Tenemos ZL, K 1 = 1 para K, L = 1 ,..., N. Ahora, supongamos que ya hemos calculado Zl, K J para todos J <i;k, l = 1 ,..., N. para calcular Zk, L I, primero verificamos si (xk i, xl i - 1) ∈ B (vi, vi - 1). Si este 168 no es el caso, claramente, zk, l i = 0. De lo contrario, considere el conjunto y = xi - 2 ∩pBrvi - 2 (xl i - 1), es decir, el conjunto de todas las estrategias discretas de VI - 2 que son las mejores respuestas potenciales a XL I - 1. Se ha demostrado en la prueba del teorema 3 que y = ∅. Para cada xj i - 2 ∈ Y, deje que Pjlk sea la recompensa que VI - 1 recibe cuando VI - 2 juega XJ I - 2, VI - 1 juega XL I - 1, y VI juega XK I. Claramente, PJLK se puede calcular en un tiempo constante. Si existe un xj i - 2 ∈ Y tal que ZJ, L I - 1 = 1 y Pjlk ≥ ti - 2 -, establece Zl, k i = 1. De lo contrario, establezca Zl, k i = 0. Habiendo calculado Zl, K N, L, K = 1 ,..., N, verificamos si Zl, K n = 1 para algún par (L, K).Si existe dicho par de índices, instruimos a VN que reproduzca XK n y use técnicas de programación dinámica (o, de manera equivalente, el pase posterior del algoritmo de [13]) para encontrar un equilibrio NASH que satisfaga los EPVI ≥ Ti- para i = 1 ,..., n (recuerde que VN es un reproductor ficticio, es decir, suponemos que TN = 0, EPN (S) = 0 para cualquier opción de S). Si zl, k n = 0 para todos l, k = 1 ,..., N, no hay un equilibrio NASH discreto que satisfaga EPVI (s) ≥ ti - para i = 1 ,..., n y, por lo tanto, no hay equilibrio de Nash (no necesariamente discretos) tal que EPVI (S) ≥ Ti para i = 1 ,..., n.El análisis del tiempo de ejecución es similar al del Teorema 3;Concluimos que el tiempo de ejecución de nuestro algoritmo es o (nn3) = o (max {np3 max / 3, n4 / 3}). Observación 1. El teorema 5 se puede extender a árboles de grado limitado de la misma manera que el teorema 4. 5.1 Computación exacta Otro enfoque para encontrar equilibrios de Nash con pagos limitados se basa en calcular inductivamente los subconjuntos de las mejores políticas de respuesta de todospuntos que no proporcionan suficientes pagos a algunos de los jugadores. Formalmente, decimos que una estrategia V del jugador V es una mejor respuesta potencial a una estrategia W de su padre W con respecto a un vector umbral t = (t1, ..., tn), (denotado por v ∈ PBRV (w, t)) Si hay un equilibrio en la instancia g (v, w), w = w en el que V juega la estrategia mixta V y la recompensa a cualquier jugador VI aguas abajo de V (incluida V) es al menos Ti. La mejor política de respuesta para V con respecto a un vector umbral T se define como B (W, V, T) = {(W, V) |v ∈ PBRV (W, T), W ∈ [0, 1]}. Es fácil ver que si alguno de los conjuntos B (VJ, VJ - 1, T), J = 1 ,..., n, está vacío, significa que es imposible proporcionar a todos los jugadores los pagos esperados prescritos por T. De lo contrario, uno puede aplicar el pase aguas abajo del algoritmo original de [13] para encontrar un equilibrio de Nash. Como suponemos que VN es un vértice ficticio cuyo pago es idénticamente 0, el equilibrio Nash con estos pagos existe siempre que TN ≤ 0 y B (VN, VN - 1, t) no esté vacío. Usando las técnicas desarrolladas en [9], no es difícil demostrar que para cualquier j = 1 ,..., n, el conjunto B (VJ, VJ - 1, T) consiste en un número finito de rectángulos, y uno puede calcular B (VJ+1, VJ, T) dado B (VJ, VJ - 1, T). La ventaja de este enfoque es que nos permite representar todos los equilibrios de Nash que proporcionan pagos requeridos a los jugadores. Sin embargo, no es probable que sea práctico, ya que resulta que los rectángulos que aparecen en la representación de B (VJ, VJ - 1, T) pueden tener coordenadas irracionales. Reclamación 6. Existe un juego gráfico G en una ruta de 3 vértice UV W y un vector t = (T1, T2, T3) de modo que B (V, W, T) no se puede representar como una unión de un número finito de rectángulos con racionalcoordenadas. PRUEBA. Definimos los pagos a los jugadores en G de la siguiente manera. La recompensa a U es idénticamente 0, es decir, P0 (u) = P1 (u) = 0. Usando la reclamación 1, seleccionamos los pagos a V para que P0 (v) = UW, P1 (V) = P0 (V) + W - .8u - .1, donde U y W son las estrategias (mixtas) de U yW, respectivamente. Se deduce que V es indiferente entre jugar 0 y 1 si y solo si w = f (u) = .8u + .1;Observe que para cualquier u ∈ [0, 1] tenemos f (u) ∈ [0, 1]. No es difícil ver que tenemos B (W, V) = [0, .1] × {0} ∪ [.1, .9] × [0, 1] ∪ [.9, 1] × {1}. Los pagos a W no son importantes para nuestra construcción;Por ejemplo, establezca p0 (w) = p0 (w) = 0. Ahora, establezca t = (0, 1/8, 0), es decir, estamos interesados en los equilibrios de Nash en el que V S de pago esperado es al menos 1/8. Supongamos w ∈ [0, 1]. El jugador V puede jugar una estrategia mixta V cuando W está jugando w siempre que t juega u = f - 1 (w) = 5W/4 - 1/8 (para asegurarse de que V sea indiferente entre 0 y 1) y P0 (V) = p1 (v) = UW = W (5W/4 - 1/8) ≥ 1/8. La última condición se cumple si w ≤ (1 - √ 41)/20 <0 o W ≥ (1 + √ 41)/20. Tenga en cuenta que tenemos .1 <(1 + √ 41)/20 <.9. Para cualquier otro valor de W, cualquier estrategia de U hace que V prefiera una de las estrategias puras o no le proporciona una recompensa esperada suficiente. También hay algunos valores de W para los cuales V puede jugar una estrategia pura (0 o 1) como una mejor respuesta potencial a W y garantizar una recompensa esperada de al menos 1/8;Se puede demostrar que estos valores de W forman un número finito de segmentos en [0, 1]. Llegamos a la conclusión de que cualquier representación de B (W, V, T) como unión de un número finito de rectángulos debe contener un rectángulo de la forma [(1 + √ 41)/20, W] × [V, V] para algunosW, V, V ∈ [0, 1]. Por otro lado, se puede demostrar que para cualquier matriculación de pago entero y vectores de umbral y cualquier j = 1 ,..., n - 1, los conjuntos B (VJ+1, Vj, T) no contienen rectángulos de la forma [U, U] × {V} o {V} × [W, W], donde v ∈ R \ Q. Esto significa que si B (vn, vn-1, t) no está vacío, es decir, hay un equilibrio Nash con pagos prescritos por t, entonces el pase posterior del algoritmo de [13] siempre puede elegir un perfil de estrategia queForma un equilibrio de Nash, proporciona una recompensa de al menos TI al Jugador VI y no tiene coordenadas irracionales. Por lo tanto, a diferencia del caso del equilibrio de Nash que maximiza el bienestar social, no es necesario trabajar con números irracionales, y el hecho de que el algoritmo discutido en esta sección debe verse como un argumento en contra de usar este enfoque.6. Otros criterios para seleccionar un equilibrio de Nash en esta sección, consideramos varios otros criterios que pueden ser útiles para seleccionar un equilibrio de Nash.6.1 Combinación de la maximización del bienestar con límites en los pagos en muchos escenarios de la vida real, queremos maximizar el bienestar social sujeto a ciertas restricciones en los pagos a jugadores individuales. Por ejemplo, es posible que deseemos asegurarnos de que ningún jugador obtenga una recompensa negativa esperada, o que la recompensa esperada al Jugador I sea al menos Pi Max - ξ, donde Pi Max es la entrada máxima de la matriz de pago IS y ξ es un parámetro fijo. Formalmente, dado un juego gráfico G y un vector T1 ,..., TN, Sea s el conjunto de todos los equilibrios Nash de G que satisfacen Ti ≤ epvi (s) para i = 1 ,..., n, y deje ˆS = argmaxs∈S ep (s). Si el conjunto S no está vacío, podemos encontrar un equilibrio de Nash ˆs que se cierre para satisfacer los límites de pago y está dentro de ˆs con respecto al pago total combinando los algoritmos de la Sección 4 y la Sección 5. A saber, para un dado> 0, elija δ como en la prueba del teorema 3, y sea Xi el conjunto de todas las estrategias discretas del jugador VI (para una definición formal 169, consulte la prueba del teorema 3). Combinando las pruebas del Teorema 3 y el Teorema 5, podemos ver que el perfil de estrategia ˆt dado por ˆti = max {xj i |XJ I ≤ ˆSi} satisface EPVI (ˆT) ≥ ti -, | EP (ˆs) - EP (ˆT) |≤. Definir ˆml, k i para ser el pago total máximo que v1 ,..., VI - 1 puede lograr si cada VJ, J ≤ I, elige una estrategia de XJ, para cada J <I La estrategia de VJ es una mejor respuesta potencial a la estrategia de VJ+1 y la recompensa al jugador VJ es al menosTJ - y, además, VI - 1 juega xl I - 1, VI juega xk i. Si no hay forma de elegir las estrategias para V1 ,..., VI - 1 Para satisfacer estas condiciones, establecemos ml, k i = −∞. El ˆML, K I se puede calcular mediante programación dinámica de manera similar a la ML, K I y ZL, K I en las pruebas de los teoremas 3 y 5. Finalmente, como en la prueba del Teorema 3, usamos ML, K N para seleccionar el mejor equilibrio discreto de Nash sujeto a las limitaciones de pago. Incluso en general, es posible que deseemos maximizar el pago total a un subconjunto de jugadores (que se supone que pueden redistribuir las ganancias de manera justa entre ellos) mientras garantizan ciertos pagos esperados a (un subconjunto de) los otros jugadores. Este problema se puede manejar de manera similar.6.2 Un enfoque Minimax Una medida más igualitaria de la calidad de un equilibrio de Nash es la recompensa mínima esperada para un jugador. La solución óptima con respecto a esta medida es un equilibrio de NASH en el que el pago mínimo esperado a un jugador es máximo. Para encontrar una aproximación a dicho equilibrio de Nash, podemos combinar el algoritmo de la Sección 5 con búsqueda binaria en el espacio de los límites inferiores potenciales. Tenga en cuenta que la recompensa esperada a cualquier jugador VI dada una estrategia S siempre satisface −pmax ≤ EPVI (S) ≤ PMAX. Para un fijo> 0, comenzamos configurando t = −pmax, t = pMax, t ∗ = (t + t)/2. Luego ejecutamos el algoritmo de la Sección 5 con T1 = · · · = tn = t ∗. Si el algoritmo logra encontrar un equilibrio de Nash que satisfaga los EPVI (s) ≥ t ∗ - para todos i = 1 ,..., n, establecemos t = t ∗, t ∗ = (t + t)/2;De lo contrario, establecemos t = t ∗, t ∗ = (t + t)/2 y bucle. Repetimos este proceso hasta que | t - t |≤. No es difícil verificar que para cualquier p ∈ R, si hay un equilibrio de Nash s tal que mini = 1, ..., n epvi (s) ≥ p, entonces nuestro algoritmo genera un equilibrio Nash que satisface mini = =1, ..., n epvi (s) ≥ p - 2. El tiempo de ejecución de nuestro algoritmo es O (max {np3 max log −1 / 3, n4 log −1 / 3}).6.3 Al igualar los pagos cuando las matrices de pago de los jugadores no son muy diferentes, es razonable exigir que los pagos esperados a los jugadores tampoco difieran mucho. Ahora mostraremos que los equilibrios de Nash en esta categoría también pueden aproximarse en el tiempo polinomial. De hecho, observe que el algoritmo de la Sección 5 puede modificarse fácilmente para tratar con los límites superiores en los pagos individuales en lugar de los límites inferiores. Además, podemos calcular de manera eficiente una aproximación a un equilibrio de Nash que satisface tanto el límite superior como el límite inferior para cada jugador. Más precisamente, supongamos que se nos da un juego gráfico G, 2n Números racionales T1 ,..., TN, T1 ,..., TN y> 0. Entonces, si existe un perfil de estrategia, que S es un equilibrio de Nash para G y Ti ≤ Epvi (S) ≤ Ti para i = 1 ,..., n, podemos encontrar un perfil de estrategia S tal que S es un equilibrio NASH para G y ti - ≤ Epvi (S) ≤ Ti + para i = 1 ,..., n.El algoritmo modificado también se ejecuta en el tiempo o (max {np3 max / 3, [4] n4 / 3}). Esta observación nos permite aproximar los equilibrios de NASH en el que todos los jugadores esperados de los pagos difieren como máximo ξ para cualquier ξ> 0 fijo. Dado un> 0, establecemos t1 = · · · = tn = −pmax, t1 = · · · = tn = −pmax + ξ +, y ejecutamos la versión modificada del algoritmo de la sección 5. Si no encuentra una solución, incrementamos todo Ti, Ti por y Loop. Continuamos hasta que el algoritmo encuentre una solución, o TI ≥ PMAX. Supongamos que existe un equilibrio de Nash que satisface | EPVI (S) - EPVJ (S) |≤ ξ para todo i, j = 1 ,..., n.Establecer r = mini = 1, ..., n epvi (s);Tenemos r ≤ epvi (s) ≤ r + ξ para todos i = 1 ,..., n.Existe un k ≥ 0 tal que −pmax + (k - 1) ≤ r ≤ −pmax + k. Durante el paso KTH del algoritmo, establecemos T1 = · · · = tn = −pmax + (k - 1), es decir, tenemos r− ≤ ti ≤ r, r + ξ ≤ ti ≤ r + ξ +. Es decir, el equilibrio de Nash s satisface Ti ≤ r ≤ epvi (s) ≤ r + ξ ≤ ti, lo que significa que cuando Ti se establece en −pmax + (k - 1), nuestro algoritmo está garantizado para emitir un equilibrio de Nashque satisface r - 2 ≤ ti - ≤ epvi (t) ≤ ti +≤ r +ξ +2. Concluimos que cada vez que existe un equilibrio de Nash, nuestro algoritmo genera un equilibrio Nash que satisface | Epvi (t) - Epvj (t) |≤ ξ + 4 para todos i, j = 1 ,..., n.El tiempo de ejecución de este algoritmo es O (max {np3 max / 4, n4 / 4}). Tenga en cuenta también que podemos encontrar el ξ más pequeño para el cual existe dicho equilibrio de Nash combinando este algoritmo con búsqueda binaria sobre el espacio ξ = [0, 2pmax]. Esto identifica una aproximación al equilibrio más justo de Nash, es decir, uno en el que los jugadores esperaban los pagos difieren por la cantidad más pequeña posible. Finalmente, tenga en cuenta que todos los resultados en esta sección se pueden extender a árboles de grado limitado.7. Conclusiones Hemos estudiado el problema de la selección de equilibrio en juegos gráficos en árboles de grado limitado. Consideramos varios criterios para seleccionar un equilibrio de Nash, como maximizar el bienestar social, asegurar un límite más bajo en el recompensa esperado de cada jugador, etc. Primero, nos centramos en la complejidad algebraica de un equilibrio NASH que maximiza el bienestar social, y demostramos ser fuertes resultados negativos para ese problema. Es decir, demostramos que incluso para los juegos gráficos en rutas, cualquier número algebraico α ∈ [0, 1] puede ser la única estrategia disponible para algún jugador en todos los equilibrios de NASH social de bienestar. Esto contrasta con el hecho de que los juegos gráficos en los árboles siempre poseen un equilibrio NASH en el que las estrategias de todos los jugadores son números racionales. Luego proporcionamos algoritmos de aproximación para seleccionar equilibrios de Nash con propiedades especiales. Si bien el problema de encontrar equilibrios de NASH aproximados para varias clases de juegos ha recibido mucha atención en los últimos años, la mayor parte del trabajo existente tiene como objetivo encontrar equilibrios de nash que satisfagan (o sean cerrados para satisfacer) ciertas propiedades. Nuestro enfoque es diferente en el sentido de que insistimos en generar un equilibrio exacto de NASH, que es cerrado para satisfacer un requisito dado. Como se argumentó en la introducción, hay varias razones para preferir una solución que constituya un equilibrio exacto de Nash. Nuestros algoritmos son esquemas de aproximación de tiempo totalmente polinómicos, es decir, su tiempo de ejecución es polinomial en el inverso del parámetro de aproximación, aunque pueden ser pseudopolinomiales con respecto al tamaño de entrada. Bajo restricciones leves en las entradas, pueden modificarse para que sean verdaderamente polinomiales. Este es el resultado positivo más fuerte que uno puede derivar para un problema cuyas soluciones exactas pueden ser difíciles de representar, como es el caso de muchos de los problemas considerados aquí. Si bien probamos nuestros resultados para los juegos en un camino, pueden generalizarse a cualquier árbol para el cual las mejores políticas de respuesta tienen representaciones compactos como uniones de rectángulos. En la versión completa del documento describimos nuestros algoritmos para el caso general. El trabajo adicional en esta línea podría incluir extensiones a los tipos de garantías buscadas para los equilibrios de Nash, como garantizar pagos totales para subconjuntos de jugadores, seleccionar equilibrios en los que algunos jugadores reciben pagos significativamente más altos que sus compañeros, etc. Sin embargo, en este momento, es más importante Inves170 tigat si los equilibrios NASH de los juegos gráficos se pueden calcular de manera descentralizada, en contraste con los algoritmos que hemos introducido aquí. Es natural preguntar si nuestros resultados o los de [9] pueden generalizarse a juegos con tres o más acciones. Sin embargo, parece que esto hará que el análisis sea significativamente más difícil. En particular, tenga en cuenta que uno puede ver los juegos de pago limitados como un caso especial muy limitado de juegos con tres acciones por jugador. A saber, dado un juego de dos acciones con límites de pago, considere un juego en el que cada jugador VI tiene una tercera acción que le garantiza una recompensa de TI, sin importar lo que todos los demás hagan. Entonces, verificar si hay un equilibrio de Nash en el que ninguno de los jugadores asigna una probabilidad distinta de cero a su tercera acción es equivalente a verificar si existe un equilibrio de Nash que satisfaga los límites de pago en el juego original, y la Sección 5.1 muestra que encontrar una búsqueda exactaLa solución a este problema requiere nuevas ideas. Alternativamente, puede ser interesante buscar resultados similares en el contexto de equilibrios correlacionados (CE), especialmente porque el mejor CE puede tener un valor más alto (pago total esperado) que el mejor NE. La relación entre estos valores se denomina valor de mediación en [1]. Se sabe a partir de [1] que el valor de mediación de los juegos de 2 jugadores, 2-acción con pagos no negativos es como máximo 4 3, y exhiben un juego de 3 jugadores para el cual es infinito. Además, un ejemplo de 2 jugadores y 3accion de [1] también tiene un valor de mediación infinito.8. Referencias [1] I. Ashlagi, D. Monderer y M. Tenneholtz, Sobre el valor de la correlación, Actas del Seminario Dagstuhl 05011 (2005) [2] R. Aumann, Subjetividad y correlación en estrategias aleatorias, Journal of Mathematical Economics 1 PPPPP67-96 (1974) [3] B. Blum, C. R. Shelton y D. Koller, Un método de continuación para los equilibrios de Nash en juegos estructurados, Actas de IJCAI03 [4] X. Chen, X. Deng y S. Teng,Calculación de calibrios de NASH: aproximación y complejidad suavizada, procedimientos de FOCS06 [5] X. Chen, X. Deng, Liquidación de la complejidad de los 2 jugadores Nash-equilibrio, Actas de FOCS06 [6] V. Conitzer y T. Sandholm, Resultados de complejidad, complejidad de resultadosAcerca de los equilibrios de Nash, Actas de Ijcai03 [7] C. Daskalakis, P. W. Goldberg y C. H. Papadimitriou, La complejidad de calcular un equilibrio de Nash, Actas de Stoc06 [8] R. S. Datta, Universalidad de la equilibrio de Nash, matemática de la investigación de operaciones 28: 3, 3, 3, 3,2003 [9] E. Elkind, L. A. Goldberg y P. W. Goldberg, Nash Equilibria en juegos gráficos en árboles revisitados, Actas de ACM EC06 [10] E. Elkind, L. A. Goldberg y P. W. Goldberg, calculando buenos equilibrios de Nash en juegos gráficos,http://arxiv.org/abs/cs.gt/0703133 [11] I. Gilboa y E. Zemel, Nash y equilibrios correlacionados: algunas consideraciones de complejidad, juegos y comportamiento económico, 1 págs. 80-93 (1989) [12] P. W. Goldberg y C. H. Papadimitriou, Reducibilidad entre problemas de equilibrio, Actas de STOC06 [13] M. Kearns, M. Littman y S. Singh, Modelos gráficos para la teoría de juegos, Actas de UAI01 [14] M. Littman, M.Kearns y S. Singh, un algoritmo exacto eficiente para juegos gráficos conectados individualmente, Actas de NIPS01 [15] R. Lipton y E. Markakis, Equilibrios de Nash a través de ecuaciones polinomiales, Actas de Latin04 [16] L. Ortiz y M. Kearns, Propagación de Nash para juegos gráficos Loopy, Actas de NIPS03 [17] C.H. Papadimitriou, Computing Equilibrios correlacionados en juegos de múltiples jugadores, Actas de STOC05 [18] C.H. Papadimitriou y T. Roughgarden, calculadora de equilibrio en juegos de jugadores múltiples, Actas de SODA05 [19] D. Vickrey y D. Koller, algoritmos de múltiples agentes para resolver juegos gráficos, Actas de AAAAI02 171