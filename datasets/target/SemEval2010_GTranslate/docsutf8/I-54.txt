Negociación de temas múltiples aproximados y en línea Shaheen S. Fatima Departamento de Informática Universidad de Liverpool Liverpool L69 3BX, Reino Unido. shaheen@csc.liv.ac.uk Michael Wooldridge Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido.mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, Reino Unido.nrj@ecs.soton.ac.uk Resumen Este documento analiza la negociación bilateral de problemas múltiples entre agentes autónomos autoinalgados. Los agentes tienen limitaciones de tiempo en forma de plazos y factores de descuento. Hay m> 1 problemas para la negociación donde cada problema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no se pueden dividir entre las partes; cada problema debe asignarse en su totalidad a cualquiera de los agentes). Aquí diferentes agentes valoran diferentes problemas de manera diferente. Por lo tanto, el problema es que los agentes decidan cómo asignar los problemas entre ellos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en que los problemas de negociación se conocen a priori a las partes. Luego, analizamos su complejidad del tiempo y mostramos que encontrar las ofertas de equilibrio es un problema np-duro, incluso en una configuración de información completa. Para superar esta complejidad computacional, luego presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el verdadero óptimo y el aproximado). La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo. Finalmente, ampliamos el análisis a la negociación en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre sus valoraciones para estos problemas. Específicamente, mostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y lo aproximado es o (√ m). Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial distribuida]: Sistemas Multiagentes Algoritmos de Términos Generales, Diseño, Teoría 1. La negociación de la introducción es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que los agentes de disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los propios agentes [20, 19, 13, 15], cada parte solo puede obtener lo que el otro está preparado para permitirlos. Ahora, la forma más simple de negociación involucra a dos agentes y un solo problema. Por ejemplo, considere un escenario en el que un comprador y un vendedor negocian sobre el precio de un bien. Para comenzar, es probable que los dos agentes difieran en el precio al que creen que el comercio debería tener lugar, pero a través de un proceso de toma de decisiones conjuntas llegan a un precio que es mutuamente aceptable o no llegan a llegar a un acuerdo. Dado que es probable que los agentes comiencen con diferentes precios, uno o ambos deben moverse hacia el otro, a través de una serie de ofertas y contrarretas, para obtener un resultado mutuamente aceptable. Sin embargo, antes de que los agentes realmente puedan realizar tales negociaciones, deben decidir las reglas para hacer ofertas y contrarrestar ofertas. Es decir, deben establecer el protocolo de negociación [20]. Sobre la base de este protocolo, cada agente elige su estrategia (es decir, qué ofrece que debe hacer durante el curso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia para maximizar su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas deben resolver más de un problema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para el primero, el problema para los agentes es decidir cómo dividir cada problema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe asignarse a cualquiera de los dos agentes. Dado que los agentes valoran los problemas diferentes de manera diferente, deben llegar a un acuerdo sobre quién tomará qué problema. Hasta la fecha, la mayor parte del trabajo existente sobre negociación de múltiples problemas se ha centrado en el caso anterior [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Dichas negociaciones son muy comunes en los sistemas múltiples. Por ejemplo, considere el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que se llevarán a cabo y diferentes agentes tienen diferentes preferencias para las tareas. Las tareas no pueden dividirse;Una tarea debe ser realizada por un agente. El problema es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples problemas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de los agentes de software, es encontrar la complejidad del tiempo para calcular las ofertas de equilibrio. Sin embargo, tales problemas computacionales han recibido hasta ahora poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (describe en la Sección 5) se ha centrado principalmente en la negociación para cuestiones divisibles 951 978-81-904262-7-5 (RPS) C 2007 Ifaamas y encontrar el equilibrio paraEste caso es computacionalmente más fácil que el de los problemas indivisibles. Por lo tanto, nuestro objetivo principal es responder las preguntas computacionales para este último caso para los tipos de situaciones que los agentes en los contextos del mundo real se enfrentan comúnmente. Por lo tanto, consideramos negociaciones en las que existe información incompleta y limitaciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común de la mayoría de las negociaciones prácticas. Además, los agentes generalmente tienen restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede continuar indefinidamente, sino que debe terminar dentro de un límite de tiempo razonable. Del mismo modo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin (ver [21] para la negociación de problemas únicos sin plazos y [23, 13] para negociar con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en el que todos los problemas para la negociación se conocen a priori para ambos agentes. Para este caso, mostramos que el problema de encontrar las ofertas de equilibrio es NP-Hard, incluso en una configuración de información completa. Luego, para superar el problema de la complejidad del tiempo, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y muestran que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el verdadero óptimo y el aproximado). La complejidad del tiempo de las estrategias de equilibrio aproximado es O (nm/ 2) donde n es la fecha límite de negociación y el error relativo. Finalmente, ampliamos el análisis a la negociación en línea donde diferentes problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre sus valoraciones para estos problemas. Específicamente, mostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y lo aproximado es o (√ m). Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación de múltiples problemas anteriores y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes limitados por recursos. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo problema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples problemas y mostramos que encontrar ofertas de equilibrio es un problema np. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La Sección 4 analiza la negociación de múltiples problemas en línea. La Sección 5 discute la literatura relacionada y la Sección 6 concluye.2. Negociación de un solo tema Adoptamos el modelo de un solo problema de [27] porque este es un modelo en el que, durante la negociación, las partes pueden hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque está en problemas indivisibles (es decir, las partes pueden hacer una de las dos ofertas posibles: cero o una), nuestro escenario encaja bien con [27]. Por lo tanto, usamos este modelo básico de problemas únicos y lo ampliamos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: A y B. Cada agente tiene limitaciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre una sola cuestión indivisible (I). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién obtiene el pastel. Hay una fecha límite (es decir, una serie de rondas por las cuales la negociación debe terminar). Deje que n ∈ N+ denote esta fecha límite. Los agentes usan un protocolo de ofertas alterno (como el de Rubinstein [18]), que continúa a través de una serie de períodos de tiempo. Uno de los agentes, digamos A, comienza la negociación en el primer período (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente B puede aceptar o rechazar la oferta. Si acepta, la negociación termina en un acuerdo con una obtención de Xi y B obteniendo yi = 1 - xi. De lo contrario, la negociación procede al próximo período de tiempo, en el que el Agente B hace una contratoria. Este proceso de realización de ofertas continúa hasta que uno de los agentes acepta una oferta o cita la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres posibles acciones que un agente puede tomar durante cualquier período de tiempo: acepte la última oferta, haga una nueva contraoferta o renuncie a la negociación. Una característica esencial de las negociaciones que involucran ofertas alternativas es que los servicios públicos de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado 0 <ΔI ≤ 1 para ambos agentes 1. Deje que [xt i, yt i] denote la oferta hecha en el período de tiempo t donde Xt I e It denoten la participación para el agente A y B respectivamente. Luego, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i]: xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1} en el tiempo t,Si A y B reciben una parte de XT I e YT, respectivamente, sus utilidades son: Ua I (Xt I, T) = J XT I × ΔT - 1 Si t ≤ n 0 de lo contrario Ub i (yt i, t)= J Yt I × ΔT - 1 Si t ≤ n 0 de lo contrario la utilidad de conflicto (es decir, la utilidad recibida en caso de que no se alcance el acuerdo) es cero para ambos agentes. Para la configuración anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A (1) (B (1)) denote como oferta de equilibrio (BS) para el primer período de tiempo. Deje que el agente A denote el primer motor (es decir, en t = 1, A propone B que debe obtener el pastel). Para comenzar, considere el caso en el que la fecha límite para ambos agentes es n = 1. Si B acepta, la división ocurre según lo acordado;Si no, ninguno de los agentes obtiene nada (ya que n = 1 es la fecha límite). Aquí, A está en una posición poderosa y es capaz de proponer mantener el 100 por ciento del pastel y no dar nada a B 2. Dado que la fecha límite es n = 1, B acepta esta oferta y el acuerdo tiene lugar en el primer período. Ahora, considere el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, un vistazo a T = 2 y razones hacia atrás. Agente una razón por la cual si la negociación continúa a la segunda ronda, B tomará el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para A. Por lo tanto, en el primer período de tiempo, si A ofrece B algo menos que todo el pastel, B rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente A ofrece [0, 1]. El agente B acepta esto y se produce un acuerdo en el primer período. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el Agente A decide qué ofrecer en la primera ronda mirando hacia el futuro hasta T = N y luego razonando hacia atrás. El agente como 1 que tiene un factor de descuento diferente para diferentes agentes solo hace que la presentación sea más involucrada sin conducir a ningún cambio en el análisis del comportamiento estratégico de los agentes o la complejidad del tiempo para encontrar las ofertas de equilibrio. Por lo tanto, tenemos un solo factor de descuento para ambos agentes.2 Es posible que B pueda rechazar dicha propuesta. Sin embargo, independientemente de si B acepta o rechaza la propuesta, obtiene cero utilidad (porque la fecha límite es n = 1). Por lo tanto, suponemos que B acepta como oferta.952 El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), la oferta para T = 1 depende de quién sea el agente de oferta durante el último período de tiempo. Esto, a su vez, depende de si N es impar o incluso. Dado que A hace una oferta en t = 1 y los agentes usan el protocolo de ofertas alterno, el agente de oferta durante el último período de tiempo es B si N es uniforme y es A si n es impar. Por lo tanto, dependiendo de si N es impar o incluso, A realiza la siguiente oferta en t = 1: a (1) = j oferta [1, 0] Si impar n acepta si bs gira b (1) = j oferta [0,1] Si incluso N acepta si, como turno, el Agente B acepta esta oferta y la negociación termina en el primer período de tiempo. Tenga en cuenta que el resultado de equilibrio depende de quién realice el primer movimiento. Como tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples problemas y luego mostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en el tiempo.3. Negociación de múltiples problemas primero analizamos la configuración de información completa. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí A y B negocian sobre M> 1 temas indivisibles. Estos problemas son m pasteles y los agentes quieren determinar cómo distribuir los pasteles entre ellos. Sea s = {1, 2 ,..., M} denota el conjunto de M Pies. Como antes, cada pastel es de tamaño 1. Deje que el factor de descuento para el problema C, donde 1 ≤ c ≤ m, sea 0 <ΔC ≤ 1. Para cada tema, deje que N denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), el agente como (BS) compartir para cada uno de los problemas m ahora se representa como un vector m de elementos Xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si el agente como compartir para el problema C en el tiempo t es Xt C, entonces el agente BS Share es yt c = (1 - T C). Las acciones para A y B se representan juntas como el paquete [XT, YT]. Como es tradicional en la teoría de servicios públicos de problemas múltiples, definimos una utilidad acumulativa de los agentes utilizando la forma aditiva estándar [12]. Las funciones UA: BM × BM × N+ → R y UB: BM × BM × N+ → R Da las utilidades acumulativas para A y B respectivamente en el tiempo t.Estos se definen de la siguiente manera: UA ([xt, yt], t) = (σm c = 1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) ub ([xt, yt], t)= (Σm c = 1kb cub c (yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de elemento m de constantes para el agente a y kb ∈ Nm + que para b. Aquí N+ denota el conjunto de enteros positivos. Estos vectores indican cómo los agentes valoran diferentes problemas. Por ejemplo, si Ka C> Ka C + 1, entonces agente los valores A Problema C más que el problema C + 1. Del mismo modo para el agente b. En otras palabras, los problemas de M son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los problemas M y no para ningún subconjunto de ellos). En todos los entornos que estudiamos, los problemas serán sustitutos perfectos. Para comenzar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, N, M, Ka C, Kb C y ΔC para 1 ≤ C ≤ M). Ahora, la negociación de múltiples problemas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples problemas [19]: 1. El procedimiento de oferta de paquete donde todos los problemas se resuelven como un paquete, 2. El procedimiento secuencial donde los problemas se discuten uno tras otro y 3.El procedimiento simultáneo donde los problemas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para ello.3.1 El procedimiento de oferta de paquete En este procedimiento, los agentes usan el mismo protocolo que para la negociación de un solo problema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema bajo negociación. Por lo tanto, para M temas, una oferta incluye m divisiones, una para cada tema. Los agentes pueden aceptar una oferta completa (es decir, todos los problemas de M) o rechazar una oferta completa. Por lo tanto, un acuerdo puede tener lugar en todos los temas de M o en ninguno de ellos. Según la negociación de un solo problema, un agente decide qué ofrecer mirando hacia el futuro y el razonamiento hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una acción para todos los problemas M, los agentes ahora pueden hacer compensaciones en los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema C en el momento t se denota como [en C, Bt C] donde en C y Bt C denotan las acciones para el Agente A y B respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [en, bt] donde en ∈ Bm (bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas M. Además, para 1 ≤ c ≤ m, ΔC es el factor de descuento para el problema c.Los símbolos 0 y 1 denotan vectores de elementos m de ceros y otros respectivamente. Tenga en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las acciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos que A (t) (respectivamente b (t)) denota la estrategia de equilibrio para el agente A (respectivamente b).3.2 Estrategias de equilibrio Como se menciona en la Sección 1, el paquete permite a los agentes hacer compensaciones. Dejamos que el compatrioffa (compatibilidad) denote la función del agente como (BS) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros a la compensación del procedimiento (TradeOffB) donde p = {ka, kb, Δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. Teorema 1. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: a (n) = j oferta [1, 0] si como turno acepta si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro para todosPeríodos de tiempo t <n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: a (t) = 8 <: Oferta de compadación (p, ub (t), t) sicomo turno if (ua ([xt, yt], t) ≥ ua (t)) acepta el otro rechazo si bs giro b (t) = 8 <: oferta tradeOffb (p, ua (t), t) si bs gira si(Ub ([XT, yt], t) ≥ ub (t)) Acepte el otro rechazo si es como giro el sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (Aamas 07) 953 donde UA (t) = UA ([AT+1, BT+1], T+1) y Ub (T) = Ub ([AT+1, BT+1], t + 1). PRUEBA. Miramos hacia el último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para comenzar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A (N) y B (N) como se da en la declaración del teorema. En todos los períodos de tiempo anteriores (t <n), el agente de la oferta propone un paquete que le da a su oponente una utilidad acumulativa igual a lo que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo T, A o B podría ser el agente de ofrenda. Considere el caso donde A hace una oferta en t.El paquete que ofrece en T le da a B una utilidad acumulativa de UB ([en+1, BT+1], t+1). Sin embargo, dado que hay más de un problema, hay más de un paquete que le da a B esta utilidad acumulativa. De entre estos paquetes, un ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para A es encontrar el paquete [AT, BT] para: maximizar mx c = 1 ka c (1 - bt c) Δt - 1 c (3) de modo que mx c = 1 bt ckb c ≥Ub (T) Bt C = 0 o 1 para 1 ≤ C ≤ M donde Ub (t), ΔT - 1 C, Ka C y Kb C son constantes y Bt C (1 ≤ C ≤ M) es una variable. Suponga que el intercambio de funciones toma los parámetros P, Ub (t) y T, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces el Comercio devuelve cualquiera de ellos (porque el Agente A obtiene la misma utilidad de todos estos paquetes y también el Agente B). La función compadecida para el agente B es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo T, deje que B denote al agente receptor. Entonces, B acepta [xt, yt] si ub (t) ≤ ub ([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad más alta en el próximo período de tiempo. La estrategia de equilibrio para A como agente receptor se define análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período. Por lo tanto, obtenemos las estrategias de equilibrio (A (t) y B (t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio anteriores. EJEMPLO 1. Suponga que hay M = 2 problemas para la negociación, la fecha límite para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Deje ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Deje que el agente sea el primer motor. Al usar el razonamiento atrasado, A sabe que si la negociación alcanza el segundo período de tiempo (que es la fecha límite), B obtendrá un cien por ciento de ambos problemas. Esto le da a B una utilidad acumulativa de Ub (2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si B obtiene algo menos que una utilidad de 3, rechazará como oferta. Entonces, en T = 1, A ofrece el paquete donde obtiene el problema 1 y B obtiene el problema 2. Esto proporciona una utilidad acumulativa de 3 a A y 5 a b. El agente B acepta el paquete y se lleva a cabo un acuerdo en el primer período. El problema de maximización en la ecuación 3 se puede ver como el problema 0-1 mochila 3. En el problema de la mochila 0-1, tenemos una nota del conjunto 3 de que para el caso de los problemas divisibles, este es el elemento fraccional de KnapOf M, donde cada artículo tiene ganancias y peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar el beneficio acumulativo de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la ecuación 3). Dado que Ka C y ΔT - 1 C son constantes, maximizar PM C = 1 Ka C (1 - CB) ΔT - 1 C es lo mismo que minimizar PM C = 1 Ka C Bt c.Por lo tanto, la ecuación 3 se puede escribir como: minimizar mx c = 1 ka c bt c (4) de modo que mx c = 1 bt ckb c ≥ ub (t) bt c = 0 o 1 para 1 ≤ c ≤ m ecuación 4 es unVersión de minimización del problema estándar de mochila 0-1 4 con m ítems donde Ka C representa la ganancia para el ítem C, KB C El peso para el ítem C y UB (t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es computacionalmente fácil encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. Teorema 2. Para el procedimiento del paquete de paquete, el problema de encontrar las ofertas de equilibrio dadas en el Teorema 1 es NP-Hard. PRUEBA. Encontrar las ofertas de equilibrio dadas en el Teorema 1 requiere resolver el problema de la mochila 0-1 dada en la ecuación 4. Dado que el problema de la mochila 0-1 es NP-Hard [17], el problema de encontrar el equilibrio para el paquete también es NP-HARD.3.3 Investigadores de equilibrio aproximado en el área de los algoritmos han encontrado métodos eficientes en el tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones de un solo agente con respecto a qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación involucra a dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar una solución aproximada al problema de la mochila, también debemos demostrar que tal aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional para encontrar un equilibrio ha sido usar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil de estrategia forma un equilibrio de Nash aproximado si ninguno de los agentes puede ganar más de lo que la constante se desvía. Por lo tanto, nuestro objetivo es usar la solución al problema de la mochila 0-1 propuesto en [10] y mostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: problema de saco. El problema de la mochila fraccional es computacionalmente fácil;Se puede resolver en tiempo polinomio en el número de elementos en el problema de la mochila [17]. En contraste, el problema de la mochila 0-1 es computacionalmente difícil.4 Tenga en cuenta que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de mochila 0-1 con fracciones y valores no positivos puede transformarse fácilmente en uno con enteros positivos en el tiempo lineal en M utilizando los métodos dados en [8, 17].954 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 1. La calidad de su solución, y 2. El tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina comparando su rendimiento con el algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z - z ∗)/z ∗ donde z es la solución aproximada y z ∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximadamenteAlgoritmos de aproximación totalmente polinomiales. Se dice que un algoritmo de aproximación es totalmente polinómico si para cualquier> 0 encuentra una solución que satisface la ecuación 5 en el tiempo limitado polinomialmente por tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos)y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación totalmente polinomial. Este método se basa en la programación dinámica. Es un método paramétrico que toma como un parámetro y para cualquier> 0, encuentra una solución heurística z con error relativo como máximo, de modo que la complejidad del tiempo y el espacio crece polinómicamente con el número de elementos my 1/. Más específicamente, el espacio y la complejidad del tiempo son O (m/ 2) y, por lo tanto, polinomiales en M y 1/ (ver [10] para el algoritmo de aproximación detallado y la prueba del tiempo y la complejidad del espacio). Dado que el método Ibarra y Kim es totalmente polinomial, lo usamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el Agente A, deje que APRX-TradeOffa (P, Ub (T), T,) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método Ibarra y KIM. El procedimiento APRX-TRADEOFFB (P, UA (T), T,) para el Agente B es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para la emisión C en el tiempo t se denota como [¯at c, ¯bt c] donde ¯at c y ¯bt c denotan las acciones para el agente A y B respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at, ¯bt] donde ¯at ∈ Bm (¯bt ∈ Bm) es un vector de elemento M que denota como (BS) compartir para cada uno de los problemas. Además, como antes, para 1 ≤ c ≤ m, ΔC es el factor de descuento para el problema c.Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de los agentes comparte (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) dejamos ¯a (t) (respectivamente ¯b (t)) denotan la estrategia de equilibrio aproximada para el agente A (respectivamente b). El siguiente teorema usa esta notación y caracterizaUn equilibrio aproximado para la negociación de múltiples problemas. Teorema 3. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de NASH aproximado. La estrategia de equilibrio para t = n es: ¯a (n) = j oferta [1, 0] si es como turno aceptar si bs gira ¯b (n) = j oferta [0, 1] si bs gira aceptar si es un giro paraTodos los períodos de tiempo anteriores t <n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente), t,) si como giro if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs gira ¯b (t) = 8 <: oferta aprx-tradeoffb (p, ua (t), t,) si bs gira if (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como turno donde ua (t) = ua ([¯at+1, ¯bt++1], t + 1) y ub (t) = ub ([¯at + 1, ¯bt + 1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la prueba del Teorema 1, usamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n.Es sencillo obtener estas estrategias;El agente de la oferta obtiene cien por ciento de todos los problemas. Luego, para t = n - 1, el agente de oferta debe resolver el problema de maximización de la ecuación 4 sustituyendo t = n - 1 en él. Para el Agente A (b), esto se hace por Aprox-TradeOffa (Aprox-TradeOffB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y usan el método de aproximación Ibarra y KIMS para devolver un paquete que maximiza aproximadamente la ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que para el método Ibarra y KIMS (es decir, es como máximo donde se da en la Ecuación 5). Suponga que A es el agente de oferta para t = n - 1. Agente A Must a ofrecer un paquete que le da a B una utilidad acumulativa igual a lo que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, UB ([¯at+1, ¯Bt+1], t+1) donde[¯at+1, ¯Bt+1] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que durante el último período de tiempo, el agente de la oferta obtiene un cien por ciento de todos los problemas. Dado que A es el agente de oferta para t = n - 1 y los agentes usan el protocolo de ofertas alterno, es bs giro en t = n.Así, UB ([¯at+1, ¯Bt+1], t+1) es igual a la utilidad acumulada BS de recibir cien por ciento de todos los problemas. Utilizando esta utilidad como la capacidad de la mochila, A usa aprox-tradeoffa y obtiene el paquete de equilibrio aproximado para t = n-1. Por otro lado, si B es el agente de oferta en t = n-1, usa aprox-tradeOffB para obtener el paquete de equilibrio aproximado. De la misma manera para t <n-1, el agente de ofrenda (digamos a) usa aproximadamente-tradeoffa para encontrar un paquete de equilibrio aproximado que le da a B una utilidad de ub ([¯at+1, ¯bt+1], t+1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si a (b) es el agente de oferta, propone la oferta de aproximadamente-tradeoffa (p, ub (1), 1,) (aprox-tradeoffb (p, ua (1), 1,)). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulativa de la oferta es como máximo. Por lo tanto, un acuerdo tiene lugar en el primer período. Teorema 4. La complejidad del tiempo para encontrar la oferta de equilibrio aproximado para el primer período es O (nm/ 2). PRUEBA. La complejidad del tiempo de aprox-tradeoffa y aproxtradeoffb es la misma que la complejidad del tiempo del método ibarra y kim [10] es decir, o (m/ 2)). Para encontrar la oferta de equilibrio para el primer período de tiempo utilizando razonamiento hacia atrás, se invoca AproxtradeOffa (o aproximadamente compensación) n veces. Por lo tanto, la complejidad del tiempo para encontrar la oferta de equilibrio aproximado para el primer período de tiempo es O (nm/ 2). Este análisis se realizó en una configuración de información completa. Sin embargo, una extensión de este análisis a una configuración de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es sencillo, siempre que la negociación se realice fuera de línea;es decir, los agentes conocen su preferencia por cada problema individual antes de que comience la negociación. Por ejemplo, considere el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente está incierto sobre su factor de descuento de oponentes, aunque sabe lo suyo. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores para el factor de descuento de oponentes y tiene esta distribución de conocimiento común para los agentes. Todo nuestro análisis para la configuración de información completa aún se mantiene para el sexto INTL. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 955 esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar una configuración de información incompleta para la negociación fuera de línea, nos centramos en la negociación en línea de problemas múltiples.4. Negociación en línea de problemas múltiples ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples problemas, donde los agentes no están seguros sobre los problemas que tendrán que negociar en el futuro. En este entorno, al negociar un problema, los agentes saben que negociarán más problemas en el futuro, pero no están seguros sobre los detalles de esos problemas. Como antes, sea que M sea el número total de problemas que están a la negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de Ka C y KB c.Para 1 ≤ c ≤ m, deje que Ka C y Kb C se distribuyan uniformemente sobre [0,1]. Esta distribución de probabilidad, N y M son de conocimiento común para los agentes. Sin embargo, los agentes llegan a conocer KA C y KB C solo antes de que comience la negociación para el problema C. Una vez que los agentes llegan a un acuerdo sobre el tema C, no se puede volver a negociar. Este escenario requiere una negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego dibujamos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se dan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver que las unidades de entrada deben emitir la unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre toda la entrada, un algoritmo en línea a menudo no puede producir una solución óptima. Tal algoritmo solo puede aproximar el rendimiento del algoritmo óptimo que ve todas las entradas por adelantado. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento cercano al algoritmo óptimo fuera de línea en cada entrada. Se dice que un algoritmo en línea es estocástico si toma decisiones sobre la base de las distribuciones de probabilidad para las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la aproximación (denotada e [z ∗ m −zm] donde z ∗ m es la solución óptima y zm de la solución aproximada). Tenga en cuenta que el subíndice m se usa para indicar el hecho de que esta diferencia depende de m.Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Deje que el agente denote el primer motor (ya que nos centramos en el procedimiento del paquete, el primer motor es el mismo para todos los problemas de M). Paso 1. Para C = 1, los agentes reciben los valores de Ka C y Kb c.Estos dos valores ahora son comunes5 de conocimiento. Paso 2. Los agentes liquidan el problema C utilizando el protocolo de ofertas alterno descrito en la Sección 2. La negociación para la emisión C debe terminar dentro de N períodos de tiempo desde el comienzo de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, la negociación falla en esto y en todos los asuntos restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3 ,..., m.La negociación para la emisión C (2 ≤ c ≤ m) comienza en el período de tiempo posterior a un acuerdo sobre la emisión C - 1. 5 Asumimos el conocimiento común porque simplifica la exposición. Sin embargo, si Ka C (KB C) es como (BS) conocimiento privado, entonces nuestro análisis aún se mantendrá, pero ahora un agente debe encontrar su utilidad esperada de los oponentes sobre la base del P.D.FS para Ka C y KB c.Por lo tanto, durante el período de tiempo T, el problema para el agente de la oferta (digamos A) es encontrar la oferta óptima para el problema C sobre la base de Ka C y KB C y la distribución de probabilidad para KA I y KB I (C <I ≤metro). Para resolver este problema de negociación en línea, dibujamos la analogía con el problema de la mochila en línea. Sin embargo, antes de hacerlo, damos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m ítems uno a la vez de acuerdo con el pedido que son de entrada (es decir, a medida que se conocen sus coeficientes de ganancias y tamaño). Por lo tanto, se requiere que el algoritmo decida si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y ganancias, sin conocimiento sobre los artículos que aún deben verse, excepto por su número total. Tenga en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y las ganancias de los elementos futuros, este es un caso de problema de mochila en línea estocástica. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la prueba del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en el tiempo al problema de la mochila en línea [16]. Por lo tanto, usamos esta solución y mostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta información, la solución de equilibrio relevante es la de un equilibrio de Bayes Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar una estrategia de agentes BNE es análogo a resolver el problema de mochila 0-1 en línea. Además, la mochila en línea solo se puede resolver aproximadamente [16]. Por lo tanto, el concepto de solución de equilibrio relevante es BNE aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando procedimientos en línea: el comercio y el comercio en línea que se definen en la prueba del teorema. Durante un período de tiempo determinado, dejamos que ZM denote la solución aproximadamente óptima generada por Online-TradeOffa (o en línea-TradeOffB) y Z ∗ m el óptimo real. Teorema 5. Para el procedimiento del paquete de paquete, las siguientes estrategias forman un equilibrio de Nash de Bayes aproximado. La estrategia de equilibrio para t = n es: a (n) = j oferta [1, 0] si como turno acepta si bs gira b (n) = j oferta [0, 1] si bs gira aceptar si es un giro para todosPeríodos de tiempo t <n, si [xt, yt] denota la oferta hecha en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: a (t) = 8 <: Oferta en línea-tradeoffa (p, ub (t), t) Si es como turno if (ua ([xt, yt], t) ≥ ua (t)) acepta más rechazar si bs giro b (t) = 8 <: ofrece en línea-tradeoffb (p, ua (t), t)Si bs gira si (ub ([xt, yt], t) ≥ ub (t)) acepta más rechazar si es como giro donde ua (t) = ua ([¯at+1, ¯bt+1], t+1) y ub (t) = ub ([¯at+1, ¯bt+1], t+1). Un acuerdo sobre la emisión C tiene lugar en t = c.Durante un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y que por la estrategia aproximada es E [z ∗ m - zm] = o (√ m).956 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Prueba. Como en el Teorema 1, encontramos la oferta de equilibrio para el período de tiempo t = 1 usando inducción hacia atrás. Deje que A sea el agente de oferta para T = 1 para todos los problemas de M. Considere el último período de tiempo t = n (recordar desde el paso 2 del protocolo en línea de que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer motor es el mismo para todos los problemas, y los agentes hacen ofertas alternativamente, el agente de oferta para t = n también es el mismo para todos los problemas. Suponga que B es el agente de oferta para t = n.Como en la Sección 3, el agente de oferta para T = N obtiene cien por ciento de todos los problemas de M. Dado que B es el agente de oferta para t = n, su utilidad para este período de tiempo es: ub (n) = kb 1ΔN - 1 1 + 1/2 mx i = 2 δ I (n - 1) I (6) recuerda queLos agentes no conocen Ka I y Kb I (para C <i ≤ m). Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros sobre la base de las funciones de distribución de probabilidad para KA I y KB I. Sin embargo, durante la negociación de la emisión C, los agentes conocen KA C pero no KB C (ver Paso 1 del Protocolo en línea). Por lo tanto, A calcula UB (N) como sigue. La utilidad del agente BS del problema C = 1 es Kb 1ΔN - 1 1 (que es el primer término de la ecuación 6). Luego, sobre la base de las funciones de distribución de probabilidad para Ka I y KB I, el agente A calcula la utilidad esperada de cada problema futuro I como δ I (N - 1) I /2 (ya que KA I y KB I se distribuyen de manera uniforme[0, 1]). Por lo tanto, la utilidad acumulativa esperada de BS de estos problemas m - c es 1/2 pm I = 2 δ I (N - 1) I (que es el segundo término de la ecuación 6). Ahora, para decidir qué ofrecer para el problema C = 1, el agente de oferta para t = n - 1 (es decir, agente a) debe resolver el siguiente problema de mochila en línea: maximizar σm i = 1ka i (1 - ¯bt I) ΔN - 1 I (7) tal que σm i = 1kb i ¯Bt I ≥ ub (n) ¯Bt i = 0 o 1 para 1 ≤ i ≤ m Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar σm i = 1ka i (1 --¯bt i) Δn - 1 I es lo mismo que minimizar σm i = 1ka i ¯Bt I ya que ΔN - 1 I y Ka I son constantes. Por lo tanto, escribimos la ecuación 7 como: minimizar σm i = 1ka i ¯bt i (8) tal que σm i = 1kb i ¯bt i ≥ ub (n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m anteriorEl problema de optimización es análogo al problema de mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha propuesto en [16]. Este algoritmo se llama algoritmo en línea de opción fija. Tiene complejidad de tiempo lineal en el número de elementos (M) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo en línea-Tradeoffa no es más que el algoritmo en línea de opción fija y, por lo tanto, tiene la misma complejidad del tiempo que este último. Este algoritmo toma los valores de KA I y KB I uno a la vez y genera una solución aproximada al problema de la mochila anterior. La diferencia esperada entre la solución óptima y aproximada es E [z ∗ m-zm] = o (√ m) [16] (ver [16] para el algoritmo en línea de opción fija detallada y una prueba para e [z ∗ m-zm] = o (√ m)). El algoritmo en línea de opción fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea;La idea detrás de esto es la siguiente. Se determina un valor umbral sobre la base de la información sobre los pesos y las ganancias para el problema de la mochila 0-1. Luego, el método incluye en la mochila todos los elementos cuya densidad de ganancias (densidad de ganancias de un artículo es su beneficio por unidad de peso) excede el umbral hasta que se llene la mochila o se hayan considerado todos los elementos M. Con más detalle, el algoritmo en línea-tradeoffa funciona de la siguiente manera. Primero obtiene los valores de Ka 1 y KB 1 y encuentra ¯Bt c.Como tenemos un problema de mochila 0-1, ¯Bt C puede ser cero o uno. Ahora, si ¯Bt C = 1 para t = n, entonces ¯Bt C debe ser uno para 1 ≤ t <n (es decir, A debe ofrecer ¯Bt C = 1 en t = 1). Si ¯bt C = 1 para t = n, pero A ofrece ¯bt c = 0 en t = 1, entonces el agente B obtiene menos utilidad de lo que espera como oferta y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para A es ofrecer ¯bt c = 1 en t = 1. El agente B acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se alcanza un acuerdo en T = 1. En el próximo período de tiempo (es decir, t = 2), la negociación procede al próximo número. La fecha límite para el segundo problema es n períodos de tiempo desde el comienzo de la negociación sobre el tema. Para C = 2, el algoritmo en línea-TradeOffa recibe los valores de Ka 2 y KB 2 y encuentra ¯BT C como se describe anteriormente. El agente ofrece BC en T = 2 y B acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se alcanza un acuerdo en T = 2. Este proceso se repite para los problemas restantes C = 3 ,..., m.Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que la negociación para el próximo problema comienza en el siguiente período de tiempo (ver el paso 3 del protocolo en línea), el acuerdo sobre el tema I ocurre en el momento t = i. Por otro lado, si B es el agente de oferta en t = 1, usa el algoritmo en línea-tradeoffb que se define de manera análoga. Por lo tanto, independientemente de quién realice el primer movimiento, todos los problemas de M se resuelven en el momento t = m.Teorema 6. La complejidad del tiempo para encontrar las ofertas de equilibrio aproximadas del Teorema 5 es lineal en m.PRUEBA. La complejidad del tiempo de en línea-Tradeoffa y OnlinetradeOffb es la misma que la complejidad del tiempo del algoritmo en línea de elección fija de [16]. Dado que este último tiene complejidad de tiempo lineal en M, la complejidad del tiempo de en línea-tradeoffa y onlinetradeoffb también es lineal en m.Vale la pena señalar que, para el problema de la mochila 0-1, el límite inferior en la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω (1) [16]. Por lo tanto, se deduce que este límite inferior también es válido para nuestro problema de negociación.5. El trabajo relacionado con la negociación de múltiples problemas se puede dividir en dos tipos principales: el de los problemas indivisibles y el de los problemas divisibles. Primero describimos el trabajo existente para el caso de cuestiones divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de la negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples problemas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, una cuestión clave es la agenda de negociación. Aquí el término agenda se refiere a la orden en que se negocian los problemas. La agenda es importante porque cada agente de utilidad acumulativa depende de la agenda;Si cambiamos la agenda, estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda usarán. Ahora, la agenda se puede decidir antes de negociar los problemas (dicha agenda se llama exógena) o se puede decidir durante el proceso de negociación (dicha agenda se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con una agenda exógena. Varios investigadores también han estudiado negociaciones con una agenda endógena [2]. En contraste con el trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento del paquete. Sin embargo, todo el trabajo mencionado anteriormente difiere de el nuestro, ya que nos centramos en temas indivisibles, mientras que otros se centran en el caso del Sexto INTL. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 957, donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples problemas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente problemas de asignación de tareas (para tareas que no pueden separarse) a un grupo de agentes. El problema de la asignación de tareas se ha estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo, [25] analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su conjunto. En contraste, nuestro enfoque está en dos agentes donde ambos se interesan y quieren maximizar sus servicios públicos individuales. Por otro lado, centrarse en el uso de contratos para la asignación de tareas a múltiples agentes interesados, pero este trabajo se refiere a encontrar formas de desmantelar contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de los agentes. En contraste, nuestro enfoque en la negociación sobre quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de las subastas [14, 9] pero no para negociaciones bilaterales (que es el foco de nuestro trabajo).6. Conclusiones Este documento ha estudiado la negociación bilateral de problemas múltiples entre agentes autónomos egoístas con limitaciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran diferentes problemas de manera diferente. Por lo tanto, el problema es que los agentes decidan cómo asignar los problemas entre ellos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-Hard incluso en una configuración de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad del tiempo polinómico. También analizamos la diferencia entre el verdadero óptimo y el óptimo aproximado. Finalmente, ampliamos el análisis a la negociación en línea donde los problemas están disponibles en diferentes puntos de tiempo y los agentes no están seguros sobre las características de estos problemas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad del tiempo polinómico. Hay varias direcciones interesantes para el trabajo futuro. Primero, para la negociación en línea, asumimos que las constantes Ka C y KB C están distribuidas de manera uniforme. Será interesante analizar el caso donde Ka C y KB C tienen otras distribuciones de probabilidad, posiblemente diferentes. Aparte de esto, tratamos el número de problemas como de conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como inciertos.7. Referencias [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: problemas de optimización combinatoria y sus propiedades de aproximación. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones de emisión por tema: el papel de la información y la preferencia de tiempo. Juegos y comportamiento económico, 13: 125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. División Justa: desde el corte de pastel hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch e I. J. Horstman. Fricciones de negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples problemas. Economica, 64: 669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples problemas con plazos. Journal of Artificial Intelligence Research, 27: 381-417, 2006. [7] C. Fershtman. La importancia de la agenda en la negociación. Juegos y comportamiento económico, 2: 224-238, 1990. [8] F. Glover. Un algoritmo dual multifásico para el problema de programación entera cero-one. Operations Research, 13: 879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápidos para la mochila y suma de problemas de subconjunto. Journal of ACM, 22: 463-468, 1975. [11] R. Inderst. Negociación de múltiples problemas con agenda endógena. Juegos y comportamiento económico, 30: 64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias y compensaciones de valores. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos de múltiples agentes. The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. Ocallaghan e Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Journal of the ACM, 49 (5): 577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión y Negociación del Grupo, 12 (1): 31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas estocásticos de mochila en línea. Programación Matemática, 68: 73-104, 1995. [17] S. Martello y P. Toth. Problemas de mochila: algoritmos e implementaciones de computadora. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. The MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de encuentro. MIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50 (1): 97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelados y violación estratégica. Juegos y comportamiento económico: número especial sobre IA y Economía, 35: 212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociación con plazos. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre negociación. American Economic Review, 46: 281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de la coalición del agente. Artificial Intelligence Journal, 101 (1-2): 165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Computación de equilibrio de nash de Bayes aproximado en juegos de árboles de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Economics Research Institute, Stockholm School of Economics, Estocolmo, 1972. 958 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07)