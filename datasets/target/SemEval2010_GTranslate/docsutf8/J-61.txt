ICE: un intercambio combinatorio iterativo David C. Parkes ∗ † Ruggiero Cavallo † Nick Elprin † Adam Juda † S´ebastien Lahaie † Benjamin Lubin † Loizos Michael † Jeffrey Shneidman † Hassan Sultan † Resumen, presentamos el primer diseño para un intercambio combinador iterativo (((HIELO). El intercambio incorpora un lenguaje de licitación basado en árboles que es conciso y expresivo para el CES. Los postores especifican límites inferiores y superiores en su valor para diferentes operaciones. Estos límites permiten el descubrimiento de precios y la obtención de preferencias útiles en las primeras rondas, y permiten la terminación con un comercio eficiente a pesar de la información parcial sobre las valoraciones del postor. Todos los cálculos en el intercambio se optimizan cuidadosamente para explotar la estructura de los licitaciones y para evitar enumerar los oficios. Una interpretación representada de una regla de actividad revelada de la intensidad garantiza el progreso a través de las rondas. Se utiliza un esquema de pago basado en VCG que mitiga las oportunidades de negociación y comportamiento estratégico para determinar los pagos finales. El intercambio se implementa completamente y en una fase de validación. Categorías y descriptores de temas: I.2.11 [Inteligencia artificial]: inteligencia artificial distribuida;J.4 [Aplicaciones informáticas]: Ciencias sociales y conductuales -Conómica Términos generales: algoritmos, economía, teoría.1. Introducción Los intercambios combinatorios combinan y generalizan dos mecanismos diferentes: subastas dobles y subastas combinatorias. En una doble subasta (DA), múltiples unidades de comercio de compradores y vendedores de un bien idéntico [20]. En una subasta combinatoria (CA), un solo vendedor tiene múltiples artículos heterogéneos a la venta [11]. Los compradores pueden tener complementariedades o sustitutabilidad entre bienes, y se les proporciona un lenguaje de licitación expresivo. Un objetivo común en ambos diseños de mercado es determinar la asignación eficiente, que es la asignación que maximiza el valor total. Un intercambio combinatorio (CE) [24] es una subasta doble combinatoria que reúne a múltiples compradores y vendedores para intercambiar múltiples productos heterogéneos. Por ejemplo, en un intercambio del espectro inalámbrico, una oferta puede declarar que está dispuesta a pagar $ 1 millón por un intercambio donde obtiene licencias para la ciudad de Nueva York, Boston y Filadelfia, y pierde su licencia por Washington DC. Por lo tanto, a diferencia de un DA, un CE permite a todos los participantes expresar valoraciones complejas a través de ofertas expresivas. A diferencia de una CA, un CE permite la propiedad fragmentada, con múltiples compradores y vendedores y agentes que están comprando y vendiendo. CES ha recibido atención reciente tanto en el contexto de la asignación de espectro inalámbrico [18] como para la asignación de ranuras para despegue y aterrizaje del aeropuerto [3]. En ambos dominios hay titulares con los derechos de propiedad, y es importante facilitar una reasignación de recursos múltiples complejas. Otro dominio de aplicación potencial para CES es la asignación de recursos en sistemas distribuidos compartidos, como PlanetLab [13]. La instanciación de nuestro diseño de propósito general a dominios específicos es un siguiente paso convincente en nuestra investigación. Este artículo presenta el primer diseño para un intercambio combinatorial iterativo (ICE). La génesis de este proyecto fue una clase, CS 286R Temas en la interfaz entre economía e informática, enseñada en la Universidad de Harvard en la primavera de 2004.1, toda la clase se dedicó al diseño y la creación de prototipos de un CE iterativo. El problema de diseño de hielo es multifacético y bastante duro. La principal innovación en nuestro diseño es un lenguaje de licitación expresivo pero conciso basado en árboles (que generaliza los idiomas conocidos como Xor/o [23]), y el acoplamiento estrecho de este lenguaje con algoritmos eficientes para el retroalimentación de precios para guiar la licitación, el ganador, el ganador-determinación para determinar las operaciones y las reglas de actividad de preferencia reveladas para garantizar el progreso a través de las rondas. El intercambio es iterativo: los licitadores expresan valoraciones superiores e inferiores en las operaciones anotando su oferta, y luego apretan estos límites en respuesta a la retroalimentación de precios en cada ronda. La regla de pago umbral, introducida por Parkes et al.[24], se usa para determinar los pagos finales. El intercambio tiene una serie de propiedades teóricas interesantes. Por ejemplo, cuando existen precios lineales, establecemos solidez e integridad: para los licitadores directos que ajustan sus límites para cumplir con las reglas de actividad mientras mantienen su verdadero valor dentro de los límites, el intercambio terminará con la asignación eficiente. Además, el 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 Agente de la verdad Regla WD Acc Fery BalcleSing Rulevickreythreshold hecho hecho! Hecho 2,2 +A +10 +B +10 Comprador 2,2 -a -5 -B -5 Vendedor 2,2 +A +15 +8 +B +15 +8 Comprador 2,2 -a -2 -6-B -2 -6 Comprador del vendedor, Compre el vendedor AB, venda AB 12 <Pa+Pb <16 Pa+Pb = 14 Pa = Pb = 7 Pbuyer = 16 -(4-0) = 12 Pseller = -12 -(4-0) = -16 Pbuyer = 14 Pseller = -14 Pessim ISTIC O PTT ISTIC = 1 Figura 1: Flujo del sistema de hielo La asignación eficiente de control a menudo se puede determinar sin que los licitadores revelen, o incluso conozcan, su valor exacto para todos los comercios. Esto es esencial en dominios complejos donde el problema de valoración puede ser muy desafiante para un participante [28]. Si bien no podemos afirmar que la licitación sencilla es un equilibrio del intercambio (y de hecho, no deberíamos esperar por el teorema de imposibilidad de Myerson-Satterthwaite [22]), la regla de pago umbral minimiza el incentivo ex post para manipular todosnormas. El intercambio se implementa en Java y actualmente está en validación. Al describir el intercambio, primero proporcionaremos una descripción general de los componentes principales e introduciremos varios ejemplos de trabajo. Luego, presentamos los componentes básicos para una variación simple de un disparo en la que los licitadores indican sus valores exactos para las operaciones en una sola ronda. Luego describimos el intercambio iterativo completo, con valores superiores e inferiores, retroalimentación de precios, reglas de actividad y condiciones de terminación. Afirmamos algunas propiedades teóricas del intercambio, y terminamos con una discusión para motivar nuestras decisiones de diseño principales y sugerimos algunos próximos pasos.2. Una descripción general del diseño de hielo El diseño tiene cuatro componentes principales, que introduciremos en orden a través del resto del documento: • Lenguaje de licitación expresivo y conciso basado en árboles. El lenguaje describe los valores para las operaciones, como mi valor para vender AB y comprar C es de $ 100, o mi valor para vender ABC es -$ 50, con valores negativos que indican que un postor debe recibir un pago para que la operación sea aceptable. El lenguaje permite a los postores expresar los límites superiores e inferiores en el valor, que se pueden apretar a través de las rondas.• Determinación del ganador. La determinación del ganador (WD) se formula como un programa de introducción mixta (MIP), con la estructura de los bideos capturados explícitamente en la formulación. La comparación de la solución en los valores superiores e inferiores permite que se realice una determinación sobre la terminación, con el progreso en las rondas intermedias impulsadas por una valoración intermedia y los valores más bajos adoptados en la terminación.• Pagos. Los pagos se calculan utilizando la regla de pago umbral [24], con las valoraciones intermedias adoptadas en rondas tempranas y valores más bajos adoptados en la terminación.• Comentarios de precios. Se calcula un precio aproximado para cada elemento en el intercambio en cada ronda, en términos de valoraciones intermedias y el comercio provisional. Los precios están optimizados para aproximar los precios de equilibrio competitivo, y se optimizan aún más para aproximar mejor los pagos de umbral actuales con los lazos restantes rotos para favorecer los precios que están equilibrados en diferentes artículos. Al calcular los precios, adoptamos los métodos de generación de restricciones para explotar la estructura del lenguaje de licitación y evitar enumerar todas las operaciones factibles. El subproblema para generar nuevas restricciones es una variación del problema WD.• Regla de actividad. Una regla de actividad de preferencia revelada [1] garantiza el progreso a través de las rondas. Para permanecer activo, un postor debe apretar los límites para que haya suficiente información para definir un comercio que maximice el excedente a los precios actuales. Se formula otra variación en el problema WD, tanto para verificar que se cumpla la regla de actividad como para proporcionar retroalimentación a un postor para explicar cómo cumplir con la regla. Se proporciona un contorno del flujo de control del sistema de hielo en la Figura 1. Volveremos a este ejemplo más adelante en el documento. Por ahora, solo observe en este ejemplo de dos agentes que los agentes indican los límites inferiores y superiores que se verifican en la regla de actividad, y luego pasan a la determinación del ganador (WD), y luego a través de tres etapas de precios (precisión, equidad,balance). Al pasar la regla de cierre (en la que los parámetros αeff y αthresh se verifican para la convergencia del comercio y los pagos), el intercambio va a una ronda de último y final. Al final de esta ronda, el comercio y los pagos finalmente se determinan, en función de las valoraciones más bajas.2.1 Trabajo relacionado Muchos CAS unilateral de precio ascendente se conocen en la literatura [10, 25, 29]. También se han propuesto enfoques de obtención directa para CAS unilateral en el que los agentes responden a consultas explícitas sobre sus valoraciones [8, 14, 19]. Varios CAS ascendentes están diseñados para funcionar con precios simples en los artículos [12, 17]. Los métodos de generación de precios que utilizamos en ICE generalizan los métodos en estos documentos anteriores. Parkes et al.[24] estudiaron intercambios combinatorios de licitación sellada e introdujo la regla de pago umbral. Posteriormente, Krych [16] demostró experimentalmente que la regla umbral promueve asignaciones eficientes. No tenemos conocimiento de ningún estudio previo de CES iterativo. La estrategia dominante DAS es conocida por la demanda de la unidad [20] y también por los agentes resueltos [2]. No se conocen mecanismos de estrategia dominantes por el problema general de CE. ICE es un diseño de subasta híbrida, ya que combina los precios simples de los artículos para impulsar la licitación en las primeras rondas con WD y pagos combinatorios, una característica que comparte con el diseño de Ausubel et al.[1] Para CAS unilateral. Adoptamos una variación en la regla de actividad de la actualización de la subastas del reloj. El lenguaje de licitación comparte algunos elementos estructurales con el lenguaje LGB de Boutilier y Hoos [7], pero tiene una semántica muy diferente. Rothkopf et al.[27] también describe un lenguaje de licitación restringido basado en árboles. En LGB, la semántica son las de la lógica proposicional, con los mismos elementos en una asignación capaz de satisfacer un árbol en múltiples lugares. Aunque esto puede hacer que LGB sea especialmente conciso en algunos entornos, la semántica que proponemos parece proporcionar una localidad útil, de modo que el valor de un componente en un árbol se puede entender independientemente del resto del árbol. La idea de capturar la estructura de nuestro lenguaje de licitación explícitamente dentro de una formulación de programación de enteros mixtos sigue los desarrollos en Boutilier [6].3. Preliminares En nuestro modelo, consideramos un conjunto de bienes, indexado {1 ,..., M} y un conjunto de postores, indexados {1 ,..., n}. La asignación inicial de bienes se denota x0 = (x0 1, ..., x0 n), con x0 i = (x0 i1, ..., x0 im) y x0 ij ≥ 0 para buena j indicando el número 250 de unidadesde buena j en poder del postor i. Un comercio λ = (λ1, ..., λn) denota el cambio en la asignación, con λi = (λi1, ..., λim) donde λij ∈ es el cambio en el número de unidades del ítem j al postor i. Entonces, la asignación final es x1 = x0 + λ. Cada postor tiene un valor vi (λi) ∈ ¡para un comercio λi. Este valor puede ser positivo o negativo, y representa el cambio en el valor entre la asignación final x0 i +λi y la asignación inicial x0 i. La utilidad es cuasi-lineal, con ui (λi, p) = vi (λi) −p para el comercio λi y el pago p ∈ ¡. El precio P puede ser negativo, lo que indica que el postor recibe un pago por el comercio. Usamos el término recompensa indistintamente con la utilidad. Nuestro objetivo en el diseño de hielo es implementar el comercio eficiente. El comercio eficiente, λ ∗, maximiza el aumento total en el valor entre los postores. Definición 1 (comercio eficiente). El comercio eficiente λ ∗ resuelve max (λ1, ..., λn) ¢ I vi (λi) s.t.λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ I λij ≤ 0, ∀j (2) λij ∈ (3) restricciones (1) Asegúrese de que ningún agente venda más artículos de los que tiene en su asignación inicial. Las restricciones (2) proporcionan eliminación gratuita y permite que las operaciones factibles vendan más artículos de los que se compran (pero no viceversa). Más tarde, adoptamos Feas (x0) para denotar el conjunto de oficios factibles, dadas estas restricciones y dada una asignación inicial x0 = (x0 1, ..., x0 n).3.1 Ejemplos de trabajo En esta sección, proporcionamos tres ejemplos simples de instancias que usaremos para ilustrar varios componentes del intercambio. Los tres ejemplos solo tienen un vendedor, pero esto es puramente ilustrativo. Ejemplo 1. Un vendedor y un comprador, dos productos {a, b}, y el vendedor tiene una asignación inicial de AB. Cambios en los valores para las operaciones: el comprador del vendedor y (−a, −b) y ( +a, +b) -10 +20 y indica que tanto el comprador como el vendedor solo están interesados en comerciar ambos bienes como un paquete. Aquí, el comercio eficiente (al mismo tiempo) es que el vendedor venda AB al comprador, denotó λ ∗ = ([−1, −1], [+1, +1]). Ejemplo 2. Un vendedor y cuatro compradores, cuatro productos {A, B, C, D}, y el vendedor tiene una asignación inicial de ABCD. Cambios en los valores para las operaciones: Comprador del vendedor Comprador 2 Comprador 3 Comprador 4 o (−A, −B y (+A, Xor (+A y (+C, Xor (+C, −C, −D)+B) +B) +d) +d) 0 +6 +4 +3 +2 El o indica que el vendedor está dispuesto a vender cualquier número de productos. El XOR indica que los compradores 2 y 4 están dispuestos a comprar como máximo uno de los dos productos en los que están interesados. El comercio eficiente es para el paquete AB para ir al Comprador 1 y el CD de Bundle al Comprador 3, denotado λ ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0],[0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]).2,2 +A +10 +B +10 Comprador 2,2 -a -5 -B -5 Vendedor Ejemplo 1: Ejemplo 3: 2,2 +C +D Comprador 2 2,2 +A +B Comprador 1 +11+84,4 -b vendedor -a -c -d Ejemplo 2: 1,1 +A +B Comprador 2 2,2 +A +B Comprador 1 +6 +40,4 -B Seller -C -D -A 1,1+C +D Comprador 4 2,2 +C +D +3 +2 Comprador 3 -18 Figura 2: Buis de ejemplo. Ejemplo 3. Un vendedor y dos compradores, cuatro productos {A, B, C, D}, y el vendedor tiene una asignación inicial de ABCD. Cambios en los valores para las operaciones: Comprador de vendedor1 Comprador 2 y (−a, −b, −c, −d) y ( +a, +b) y ( +c, +d) -18 +11 +8 el comercio eficiente es esPara que el paquete AB vaya al Comprador 1 y el CD de paquete para ir al Comprador 2, denotado λ ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]).4. Un diseño de intercambio de un solo disparo La descripción del hielo se descompone en dos secciones: una sola vez (al año sellada) e iterativo. En esta sección abstrae el aspecto iterativo e introducimos una especialización del lenguaje basado en árboles que respalda solo valores exactos en los nodos.4.1 Lenguaje de licitación basado en árboles El lenguaje de licitación está diseñado para ser expresivo y conciso, completamente simétrico con respecto a los compradores y vendedores, y para extenderse para capturar ofertas de compradores y vendedores mixtos, que van desde intercambios simples hasta oficios altamente complejos. Las ofertas se expresan como ofertas anotadas y definen el valor de los licitadores para todas las operaciones posibles. El lenguaje define los cambios en los valores en las operaciones, con hojas anotadas con elementos y nodos negociados anotados con cambios en los valores (positivo o negativo). La característica principal es que tiene un operador lógico de cambio de intervalo general en nodos internos, y que define una semántica cuidadosa para propagar valores dentro del árbol. Ilustramos el lenguaje en cada uno de los ejemplos 1-3 en la Figura 2. El lenguaje tiene una estructura de árbol, con intercambios en elementos definidos en hojas y valores anotados en nodos y hojas. Los nodos tienen cero valores donde no se indica ningún valor. Los nodos internos también están etiquetados con rangos de opuesto por intervalos (IC). Dado un intercambio, la semántica del lenguaje define qué nodos en el árbol se puede satisfacer o encender. Primero, si un niño está encendido, entonces su padre debe estar encendido. En segundo lugar, si un nodo principal está encendido, entonces el número de niños que están encendido debe estar dentro del rango IC en el nodo principal. Finalmente, las hojas en las que el postor está comprando artículos solo puede estar activado si los artículos se proporcionan en el comercio. Por ejemplo, en el Ejemplo 2 podemos considerar el comercio eficiente y observar que en este comercio todos los nodos en los árboles de los compradores 1 y 3 (y también el vendedor), pero ninguno de los nodos en los árboles de los compradores 2 y 4,puede estar encendido. Por otro lado, en 251 el comercio en el que A va al Comprador 2 y D al Comprador 4, luego los nodos de raíz y hojas apropiadas pueden estar encendidas para los compradores 2 y 4, pero no se pueden poner nodos para los compradores 1 y 3. Dado un intercambio, a menudo hay varias formas de elegir el conjunto de nodos satisfechos. La semántica del lenguaje requiere que los nodos que maximicen el valor sumado en los nodos satisfechos se activen. Considere el árbol de licitación TI del Bidder i. Esto define los nodos β ∈ Ti, de los cuales algunas son hojas, hoja (i) ⊆ ti. Deje que el niño (β) ⊆ Ti denote a los niños de un nodo β (que no es una hoja). Todos los nodos excepto las hojas están etiquetados con el operador de opción de intervalo [IC X I (β), Icy I (β)]. Cada nodo también está etiquetado con un valor, viβ ∈ ¡. Cada hoja β está marcado con un comercio, qiβ ∈ M (es decir, las hojas pueden definir un comercio agrupado en más de un tipo de elemento). Dado un comercio λi al postor I, los operadores de opción de intervalos y las operaciones de las hojas definen qué nodos pueden satisfacerse. A menudo habrá una elección. Los lazos se rompen para maximizar el valor. Deje que Satiβ ∈ {0, 1} denote si el nodo β está satisfecho. Solución sati es válida dada el árbol Ti y el comercio λi, escrito sati ∈ Válido (ti, λi), si y solo si: ¢ β∈Leaf (i) qiβj · satiβ ≤ λij, ∀i, ∀j (4) icx i (β) satiβ ≤ ¢ β ∈Child (β) satiβ ≤ helado I (β) satiβ, ∀β /∈ Leaf (i) (5) En palabras, un conjunto de hojas solo se puede considerar satisfecho dado el comercio si el aumento totalEn cantidad sumada en todas esas hojas está cubierta por el comercio, para todos los bienes (Ec. 4). Esto funciona tanto para los vendedores como para los compradores: para los vendedores un comercio es negativo y esto requiere que el número total de artículos indicados vendidos en el árbol sea al menos el número total vendido como se define en el comercio. También necesitamos la propagación hacia arriba: cada vez que se satisfaga un nodo que no sea la raíz, entonces su padre debe ser satisfecho (por β ∈Child (β) satiβ ≤ Icy I (β) satiβ en la ecuación 5). Finalmente, necesitamos la propagación hacia abajo: cada vez que se satisfaga un nodo interno, entonces el número apropiado de niños también debe ser satisfecho (Ec. 5). El valor total del comercio λi, dada la licencia Ti, se define como: vi (ti, λi) = max sat∈Valid (ti, λi) ¢ β∈T vβ · satβ (6) El lenguaje basado en el árbol generaliza existenteIdiomas. Por ejemplo: IC (2, 2) en un nodo con 2 hijos es equivalente a un operador y al operador;IC (1, 3) en un nodo con 3 niños es equivalente a un operador OR;e IC (1, 1) en un nodo con 2 hijos es equivalente a un operador XOR. Del mismo modo, los idiomas de XOR/o licitación se pueden expresar directamente como un árbol de ofertas en nuestro idioma.2 4.2 Determinación del ganador Esta sección define el problema de determinación del ganador, que se formula como un MIP y se resuelve en nuestra implementación con un solucionador comercial.3 ElEl solucionador utiliza la búsqueda en la sucursal con generación dinámica de corte y heurísticas de ramificación para resolver grandes MIP en tiempos de ejecución económicamente factibles.2 El lenguaje OR* es el lenguaje OR con elementos ficticios para proporcionar una estructura adicional. O* se sabe que es expresivo y conciso. Sin embargo, no se sabe si* domina XOR/o en términos de concisión [23].3 CPLEX, www.ilog.com Al definir la representación MIP, tenemos cuidado de evitar una enumeración basada en XOR de todos los paquetes. Una variación del problema WD se reutiliza muchas veces dentro del intercambio, p.para la generación de columnas en precios y para verificar la preferencia revelada. Los árboles de ofertas dados t = (T1, ..., TN) y la asignación inicial x0, la formulación de intérpretes mixtos para WD es: WD (t, x0): max λ, sat ¢ i ¢ β∈Ti viβ · satiβ s.t.(1), (2), satiβ ∈ {0, 1}, λij ∈ Sati ∈ Válido (Ti, λi), ∀i Algunos bienes pueden no asignarse porque se permite la eliminación libre dentro de las reglas de compensación de la determinación del ganador. Estos elementos se pueden volver a los agentes que vendieron los artículos, es decir, para los cuales λij <0. 4.3 Pagos de umbral informático La regla de pago umbral se basa en los pagos en el mecanismo de Vickrey-Clarke (VCG) [15], que en sí mismo, que en sí mismaes sincero y eficiente pero no satisface el equilibrio presupuestario. El equilibrio presupuestario requiere que los pagos totales al intercambio sean iguales a los pagos totales realizados por el intercambio. En VCG, el pago pagado por el agente I es PVCG, i = ˆV (λ ∗ i) - (v ∗ - v - i) (7) donde λ ∗ es el comercio eficiente, v ∗ es el valor reportado de este comercio,y V - I es el valor reportado del comercio eficiente que se implementaría sin postor i. Llamamos ∆VCG, I = V ∗ - V - I el descuento de VCG. Por ejemplo, en el Ejemplo 1 PVCG, Seller = −10 - (+10 - 0) = −20 y PVCG, Buyer = +20 - (+10 - 0) = 10, y el intercambio se ejecutaría con un déficit presupuestario de −20 + 10 = −10. La regla de pago de umbral [24] determina los pagos balanceados con presupuesto para minimizar el error máximo en todos los agentes al resultado de VCG. Definición 2. El esquema de pago de umbral implementa el comercio eficiente λ ∗ dadas ofertas y establece pagos pthresh, i = ˆVi (λ ∗ i) - ∆i, donde ∆ = (∆1, ..., ∆n) está configurado para minimizar maxi (∆VCG, I-∆I) sujeto a ∆I ≤ ∆VCG, I e I ∆I ≤ V ∗ (esto da un equilibrio presupuestario). Ejemplo 4. En el ejemplo 2, los descuentos de VCG son (9, 2, 0, 1, 0) para el vendedor y cuatro compradores, respectivamente, los pagos de VCG son (−9, 4, 0, 2, 0) y el intercambio se ejecuta con un déficit de-3. En el umbral, los descuentos son (8, 1, 0, 0, 0) y los pagos son (−8, 5, 0, 3, 0). Esto minimiza el peor error de los descuentos de VCG en todos los esquemas de pago equilibrados del presupuesto. Los pagos de umbral están diseñados para minimizar el incentivo máximo ex post para manipular. Krych [16] confirmó que el umbral promueve la eficiencia de asignación en el equilibrio de Nash Bayes restringido y aproximado.5. El diseño de hielo ahora estamos listos para introducir el diseño iterativo de intercambio combinatorio (ICE). Se introducen varios componentes nuevos, en relación con el diseño para el intercambio de un disparo. En lugar de proporcionar valoraciones precisas, los licitadores pueden proporcionar valoraciones más bajas y superiores y revisar esta información de oferta en las rondas. El intercambio proporciona retroalimentación basada en precios 252 para guiar a los postores en este proceso, y termina con un comercio eficiente (o aproximadamente eficiente) con respecto a las valoraciones reportadas. En cada ronda t ∈ {0, 1 ,...} Los límites actuales inferiores y superiores, VT y VT, se utilizan para definir un perfil de valoración provisional Vα (la valuación α), junto con un comercio provisional λt y precios provisionales pt = (pt 1, .., pt m) en elementos. La valuación α es una combinación lineal de las valoraciones superiores e inferiores actuales, con αeff ∈ [0, 1] elegido endógenamente en función de la cercanía del comercio optimista (en V) y el comercio pesimista (en V). Los precios PT se utilizan para informar una regla de actividad e impulsar el progreso hacia un comercio eficiente.5.1 Valuaciones superiores e inferiores El lenguaje de licitación se extiende para permitir que un postor i informe un valor inferior y superior (VIβ, VIβ) en cada nodo. Estos toman el lugar del valor exacto VIβ definido en la Sección 4.1. Según estas etiquetas, podemos definir las funciones de valoración VI (Ti, λi) y Vi (Ti, λi), utilizando exactamente la misma semántica que en la ecuación.(6). Decimos que tal oferta está bien formada si VIβ ≤ VIβ para todos los nodos. El siguiente lema es útil: Lema 1. Dado un árbol bien formado, t, entonces vi (ti, λi) ≤ vi (ti, λi) para todos los intercambios. Prueba. Supongamos que hay algunos λi para el cual vi (ti, λi)> vi (ti, λi). Entonces, maxsat∈Valid (ti, λi) β∈Ti viβ · satβ> maxsat∈Valid (ti, λi) β∈Ti viβ · satβ. Pero, esto es una contradicción porque el comercio λ que define VI (Ti, λi) todavía es factible con los límites superiores VI, y VIβ ≥ VIβ para todos los nodos β en un árbol bien formado.5.2 Se determinan la retroalimentación de precios en cada ronda, se determinan los precios aproximados de equilibrio competitivo (CE), PT = (Pt 1, ..., Pt M). Dados estos precios provisionales, el precio del comercio λi para el postor i es pt (λi) = j≤m pt j · λij. Definición 3 (precios CE). Los precios p ∗ son precios de equilibrio competitivo si el comercio eficiente λ ∗ se respalda a los precios p ∗, de modo que para cada postor: λ ∗ i ∈ Arg max λ∈Feas (x0) {vi (λi) - p ∗ (λi)}(8) Los precios de CE no siempre existirán y a menudo necesitaremos calcular los precios aproximados [5]. Extendemos ideas debido a Rassenti et al.[26], Kwasnica et al.[17] y Dunford et al.[12], y seleccione precios aproximados de la siguiente manera: I: precisión. Primero, calculamos los precios que minimizan el error máximo en las restricciones de mejor respuesta en todos los postores. II: Justicia. En segundo lugar, rompemos los lazos para preferir los precios que minimizan la desviación máxima de los pagos de umbral en todos los licitadores. III: Balance. Tercero, rompemos los lazos para preferir los precios que minimizan el precio máximo en todos los artículos. Tomados en conjunto, estos pasos están diseñados para promover la información de los precios al impulsar el progreso a través de las rondas. En los precios de la computación, explicamos cómo calcular los precios aproximados (o de otra manera) para los idiomas de licitación estructurados y sin enumerar todas las operaciones posibles. Para esto, adoptamos la generación de restricciones para manejar eficiente un número exponencial de restricciones. Cada paso se describe en detalle a continuación. I: precisión. Adoptamos una definición de precisión de los precios que generaliza las nociones adoptadas en documentos anteriores para idiomas de licitación no estructurados. Deje que λt denote el comercio provisional actual y suponga que la valoración provisional es Vα. Para calcular los precios CE precisos, consideramos: Min P, δ δ (9) S.T.Vα I (λ) - P (λ) ≤ Vα I (λt I) - P (λt I) + δ, ∀i, ∀λ (10) δ ≥ 0, PJ ≥ 0, ∀j. Este programa lineal (LP) está diseñado para encontrar precios que minimicen el error de peor caso en todos los agentes. A partir de la definición de los precios de CE, se deduce que los precios de CE tendrían Δ = 0 como solución a (9), momento en el cual el comercio λt estaría en el mejor conjunto de respuesta de cada agente (con λt i = ∅, es decirsin comercio, para todos los agentes sin excedentes para el comercio a los precios). Ejemplo 5. Podemos ilustrar la formulación (9) en el Ejemplo 2, suponiendo que la simplicidad sea Vα = V (es decir, la verdad). El comercio eficiente asigna AB al Comprador 1 y CD al Comprador 3. La precisión buscará los precios P (a), P (B), P (C) y P (D) para minimizar el δ ≥ 0 requerido para satisfacer las restricciones: P (A) + P (B) + P (C) + P(D) ≥ 0 (vendedor) p (a) + p (b) ≤ 6 + δ (comprador 1) p (a) + δ ≥ 4, p (b) + δ ≥ 4 (comprador 2) p (c)+ P (D) ≤ 3 (Comprador 3) P (C) + δ ≥ 2, P (D) + Δ ≥ 2 (Comprador 4) Una solución óptima requiere P (A) = P (B) = 10/3,con δ = 2/3, con p (c) y p (d) tomando valores como p (c) = p (d) = 3/2. Pero (9) tiene un número exponencial de restricciones (Ec. 10). En lugar de resolverlo explícitamente, utilizamos la generación de restricciones [4] y generamos dinámicamente un subconjunto suficiente de restricciones. Deje que denote un subconjunto manejable de todas las operaciones posibles posibles al postor i. Luego, una versión relajada de (9) (ACC escrita) se formula sustituyendo (10) con Vα I (λ) - P (λ) ≤ Vα I (λt I) - P (λt i) + δ, ∀i,∀λ ∈ I, (11) donde yo es un conjunto de intercambios que son factibles para el postor, les di las otras ofertas. Fijando los precios p ∗, luego resolvemos n subproblemas (uno para cada postor), max λ vα i (λi)-p ∗ (λi) [r-wd (i)] s.t.λ ∈ Feas (x0), (12) para verificar si la solución (P ∗, δ ∗) a ACC es factible en el problema (9). En R-WD (i) el objetivo es determinar el comercio más preferido para cada postor a estos precios. Deje que ˆλi denote la solución a R-WD (i). Condición de verificación: Vα I (ˆλi) - P ∗ (ˆλ) ≤ Vα I (λt I) - P ∗ (λt i) + δ ∗, (13) y si esta condición se mantiene para todos los postores I, entonces solución (P ∗, δ ∗) es óptimo para el problema (9). De lo contrario, el comercio ˆλi se agrega a I para todos los postores I por los cuales esta restricción se viola y volvemos a solucionar el LP con el nuevo conjunto de restricciones.4 II: Equidad. En segundo lugar, rompemos los lazos restantes para preferir los precios justos: elegir precios que minimicen el peor error de caso con respecto a los pagos de umbral (es decir, la utilidad para los licitadores con pagos umbrales), pero sin elegir precios menos precisos.5 Ejemplo 6. Por ejemplo, la precisión en el Ejemplo 1 (representada en la Figura 1) requiere 12 ≤ PA +Pb ≤ 16 (para Vα = V). En estas valoraciones, los pagos de umbral serían 2 tanto para el vendedor como para el comprador. Esto se puede lograr exactamente en el precio con PA + Pb = 14. El método de lazos de justicia se formula como el siguiente LP: Min P, π π [justo] S.T.vα i (λ) - p (λ) ≤ vα i (λt i) - p (λt i) + δ ∗ i, ∀i, ∀λ ∈ I (14) π ≥ πvcg, i - (vα i (λt I) - p (λt i)), ∀i (15) π ≥ 0, pj ≥ 0, ∀j, donde δ ∗ representa el error en la solución óptima, de ACC. El objetivo aquí es el mismo que en la regla de pago umbral (ver Sección 4.3): minimice el error máximo entre el pago del postor (en Vα) para el comercio provisional y el pago de VCG (en Vα). La feria de problemas también se resuelve mediante la generación de restricciones, utilizando R-WD (I) para agregar restricciones violadas adicionales según sea necesario. III: Balance. En tercer lugar, rompemos los lazos restantes para preferir precios equilibrados: elegir precios que minimicen el precio máximo en todos los artículos. Volviendo nuevamente al Ejemplo 1, representado en la Figura 1, vemos que la precisión y la equidad requieren P (A) + P (B) = 14. Finalmente, el equilibrio establece p (a) = p (b) = 7. El equilibrio se justifica cuando, en igualdad de condiciones, es más probable que los elementos tengan valores similares a diferentes.6 El LP para el equilibrio se formula de la siguiente manera: Min P, Y y [Bal] S.T.Vα I (λ) - P (λ) ≤ Vα I (λt i) - P (λt I) + δ ∗ I, ∀i, ∀λ ∈ I (16) π ∗ I ≥ πvcg, I - (Vα I ((λt i) - p (λt i)), ∀i, (17) y ≥ pj, ∀j (18) y ≥ 0, pj ≥ 0, ∀j, donde δ ∗ representa el error en la solución óptima de ACC yπ ∗ representa el error en la solución óptima de Fair. La generación de restricciones también se usa para resolver BAL, generando nuevas operaciones para I según sea necesario.4 Problema R-WD (i) es una especialización del problema WD, en el que el objetivo es maximizar el pago de un solo licitador, en lugar del valor total en todos los licitadores. Se resuelve como un MIP, reescribiendo el objetivo en WD (t, x0) como max {viβ · satiβ - j p ∗ j · λij} para el agente i. Por lo tanto, la estructura del lenguaje de licitación se explota en la generación de nuevas limitaciones, porque esto se resuelve como un MIP conciso. Los otros postores se mantienen en el MIP (pero no aparecen en el objetivo), y se usan para definir el espacio de los oficios factibles.5 Los métodos de Dunford et al.[12], que usan un enfoque de nucleolo, también están estrechamente relacionados.6 El uso del equilibrio fue defendido por Kwasnica et al.[17]. Dunford et al.[12] Prefiere suavizar los precios en las rondas. Comentario 1: Refinamiento lexicográfico. Para los tres subproblemas también realizamos un refinamiento lexicográfico (con respecto a los postores en ACC y justo, y con respecto a los bienes en BAL). Por ejemplo, en ACC minimizamos sucesivamente el error máximo en todos los postores. Dada una solución inicial, primero precede el error a todos los postores para quienes una restricción (11) es vinculante. Para dicho postor i, la restricción se reemplaza con vα I (λ) - p (λ) ≤ vα I (λt i) - p (λt i) + δ ∗ i, ∀λ ∈ I, (19) y el erroral postor ya no aparece explícitamente en el objetivo. ACC se vuelve a resolver y avanza al minimizar aún más el error máximo en todos los postores que aún no se han fijado. Esto continúa, sujetando a cualquier nuevo licitador para quien una de las restricciones (11) sea vinculante, hasta que el error esté optimizado lexicográficamente para todos los licitadores.7 El mismo proceso exacto se repite para Fair y BAL, con los postores fijados y restricciones (15)reemplazado con π ∗ i ≥ πvcg, i - (vα i (λt i) - p (λt i)), ∀λ ∈ I, (donde π ∗ i es el objetivo actual) en justo, y elementos fijados y restricciones (18) reemplazado con p ∗ j ≥ pj (donde p ∗ j representa el objetivo para el precio máximo en ese artículo) en BAL. Comentario 2: Computación. Todas las limitaciones en I se conservan, y este conjunto crece en todas las etapas y en todas las rondas del intercambio. Por lo tanto, el esfuerzo computacional en la generación de restricciones se reutiliza. En la implementación, tenemos cuidado de abordar una serie de insertos que surgen debido a problemas de punto flotante. Preferimos errar por el lado de ser conservadores para determinar si agregar o no otra restricción en la verificación de realización (13). Esto evita problemas posteriores de invasibilidad. Además, cuando se fijan a los postores con el propósito de refinamiento lexicográfico, relajamos las restricciones de postor asociadas con un pequeño> 0 en el lado derecho.5.3 Reglas de actividad de preferencia revelada El papel de las reglas de actividad en la subasta es garantizar tanto la consistencia como el progreso a través de las rondas [21]. La consistencia en nuestro intercambio requiere que los licitantes endurezcan a medida que avanza el intercambio. Las reglas de actividad aseguran que los postores estén activos durante las primeras rondas y promueven una obtención útil durante todo el intercambio. Adoptamos una regla de actividad simple de preferencia revelada (RP). La idea se basa libremente en la regla RP en Ausubel et al.[1], donde se usa para CAS unilateral. La motivación es requerir algo más que consistencia: necesitamos que los licitadores proporcionen suficiente información para que el sistema pueda demostrar que una asignación es (aproximadamente) eficiente. Es útil pensar en los postores que interactúan con agentes de poder que actuarán en su nombre al responder a los precios provisionales PT - 1 determinados al final de la ronda T - 1. El único conocimiento que tal representación tiene de la valoración de un postor es a través de la oferta. Supongamos que el intercambio consultó un indicador y preguntó en qué comercio estaba más interesado al postor a los precios provisionales. La regla RP dice lo siguiente: el proxy debe tener suficiente 7, por ejemplo, aplicando esto a la precisión en el Ejemplo 2, resolvemos una vez y encontramos que los licitadores 1 y 2 son vinculantes, por error δ ∗ = 2/3. Los fijamos y luego minimizamos el error a los postores 3 y 4. Finalmente, esto da p (a) = p (b) = 10/3 y p (c) = p (d) = 5/3, con precisión 2/3 a los postores 1 y 2 y 1/3 a los postores 3 y4. 254 Información para poder determinar este comercio de excedentes a los precios actuales. Considere los siguientes ejemplos: Ejemplo 7. Un postor tiene XOR ( +A, +B) y un valor de +5 en la hoja +A y un rango de valor de [5,10] en la hoja +b. Supongamos que los precios son actualmente 3 para cada uno de A y B. La regla RP se cumple porque el proxy sabe que, sin embargo, la incertidumbre del valor restante en +B se resuelve, el postor siempre (débilmente) preferirá +B a +A. Ejemplo 8. Un postor tiene límites XOR ( +A, +B) y de valor [5, 10] en el nodo raíz y un valor de 1 en la hoja +a. Supongamos que los precios son actualmente 3 para cada uno de A y B. La regla RP se satisface porque el postor siempre preferirá +A a +B a precios iguales, cualquier forma de que el valor incierto en el nodo raíz se resuelva en última instancia. Notación de sobrecarga, deje que Vi ∈ Ti denote una valoración que sea consistente con las valoraciones inferiores y superiores en el árbol de licitación TI. Definición 4. El árbol de licitación TI satisface RP a los precios pt - 1 si y solo si existe un comercio factible l ∗ para el cual, vi (l ∗ i) - pt - 1 (l ∗ i) ≥ max λ∈Feas (x0) vi (λi) - pt - 1 (λi), ∀vi ∈ Ti.(20) Para hacer esta determinación para el postor I, resolvemos una secuencia de problemas, cada uno de los cuales es una variación en el problema WD. Primero, construimos un comercio candidato de unión inferior, que es un comercio factible que resuelve: max λ vi (λi)-pt-1 (λi) [rp1 (i)] s.t.λ ∈ Feas (x0), (21) La solución π ∗ L a Rp1 (i) representa el pago máximo que el postor puedo lograr en todos los intercambios factibles, dada su valoración pesimista. En segundo lugar, rompemos lazos para encontrar un comercio con una incertidumbre de valor máximo en todas las soluciones posibles a RP1 (i): max λ vi (λi) - vi (λi) [rp2 (i)] s.t.λ ∈ Feas (x0) (22) vi (λi) - pt - 1 (λi) ≥ π ∗ l (23) Adoptamos la solución l ∗ i como nuestro candidato para el comercio que puede satisfacer RP. Para comprender la importancia de esta regla de roce, considere el Ejemplo 7. El proxy puede probar +B pero no +A es la mejor respuesta para todos Vi ∈ Ti, y debe elegir +B como candidato. Observe que +B es un contraejemplo a +A, pero no al revés. Ahora, construimos una valoración modificada ˜Vi, estableciendo ˜Viβ = VIβ, si β ∈ Sat (L ∗ i) VIβ, de lo contrario.(24) donde SAT (L ∗ I) es el conjunto de nodos que se satisfacen en el árbol inferior para el comercio L ∗ i. Dada esta valoración modificada, encontramos u ∗ para resolver: max λ ˜vi (λi) - pt - 1 (λi) [rp3 (i)] s.t.λ ∈ Feas (x0) (25) Deje que π ∗ u denote el pago de este comercio óptimo a valores modificados ˜v. Llamamos a comercio u ∗ i el comercio de testigos. Mostramos en la Proposición 1 que la regla RP se satisface si y solo si π ∗ l ≥ π ∗ u.La construcción de la valoración modificada como ˜Vi reconoce que existe una incertidumbre compartida entre los comercios que satisfacen los mismos nodos en un árbol de licitación. El ejemplo 8 ayuda a ilustrar esto. Solo usando vi en rp3 (i), encontraríamos l ∗ i compre a con el pago π ∗ l = 3 pero luego encuentre u ∗ i compra b con π ∗ u = 7 y falla rp. Debemos reconocer que, sin embargo, la incertidumbre en el nodo raíz se resuelve, afectará +A y +B exactamente de la misma manera. Por esta razón, establecemos ˜Viβ = VIβ = 5 en el nodo raíz, que es exactamente el mismo valor que se adoptó para determinar π ∗ l. Luego, RP3 (i) aplicado a U ∗ Do compra A y se considera que la prueba RP se pasa. Proposición 1. El árbol de licitación TI satisface RP dados de precios PT-1 si y solo si algún comercio de límite inferior l ∗ i que resuelve RP1 (I) y RP2 (i) Satisface: VI (Ti, L ∗ I)-PT-1 (L ∗i) ≥ ˜Vi (ti, u ∗ i) - pt - 1 (u ∗ i), (26) donde ˜Vi es la valoración modificada en la ecuación.(24). Prueba. Por suficiencia, observe que la diferencia en la recompensa entre el comercio L ∗ I y otro comercio λi no se ve afectado por la forma en que la incertidumbre se resuelve en cualquier nodo que se satisfaga tanto en L ∗ I como en λi. La fijación de los valores en ˜Vi en los nodos satisfechos en L ∗ I tiene el efecto de eliminar esta consideración cuando se selecciona un comercio u ∗ i que satisface uno de estos nodos. Por otro lado, arreglar los valores en estos nodos no tiene ningún efecto en las operaciones consideradas en RP3 (i) que no comparten un nodo con L ∗ i. Para la dirección necesaria, primero mostramos que cualquier comercio que satisfaga RP debe resolver RP1 (i). Supongamos lo contrario, que algunos λi con pago mayor que π ∗ l satisfacen RP. Pero, la valoración vi ∈ Ti junto con L ∗ I presenta un contraejemplo a RP (Eq. 20). Ahora, supongamos (por contradicción) que algunos λi con el pago máximo π ∗ l pero la incertidumbre menor que l ∗ i satisface rp. Proceder por análisis de casos. Caso A): Solo una solución a RP1 (i) tiene un valor incierto y, por lo tanto, λi tiene cierto valor. Pero, esto no puede satisfacer RP porque L ∗ i con valor incierto sería un contraejemplo a RP (Eq. 20). Caso B): Dos o más soluciones a RP1 (i) tienen un valor incierto. Aquí, primero argumentamos que uno de estos intercambios debe satisfacer un superconjunto (débil) de todos los nodos con un valor incierto que satisfacen todas las demás operaciones en este conjunto. Esto es por RP. Sin esto, para cualquier opción de comercio que resuelva RP1 (i), hay otro comercio con un conjunto disjunto de nodos inciertos pero satisfechos que proporciona un contraejemplo a RP (Ec. 20). Ahora, considere el caso de que algún comercio contiene un superconjunto de todos los nodos inciertos satisfechos de los otros oficios. Claramente, RP2 (i) elegirá este comercio, L ∗ I y λi deben satisfacer un subconjunto de estos nodos (por suposición). Pero, ahora vemos que λi no puede satisfacer RP porque l ∗ sería un contraejemplo para RP. El incumplimiento de la regla de actividad debe tener alguna consecuencia. En las reglas actuales, la acción predeterminada que elegimos es establecer los límites superiores en las valoraciones al valor máximo del precio provisional en un nodo8 y el valor inferior en ese nodo.9 Tal postor puede permanecer activo 8 el precio provisional sobreUn nodo se define como el precio total mínimo en todas las operaciones factibles para las cuales se satisface el subárbol enraizado en el árbol.9 Esto es completamente análogo a cuando un postor en una subasta de reloj ascendente deja de ofertar a un precio: no se le permite ofertar a un precio más alto nuevamente en futuras rondas.255 dentro del intercambio, pero solo con valoraciones que son consistentes con estos nuevos límites.5.4 Comentarios del postor En cada ronda, nuestro diseño predeterminado proporciona a cada postor el comercio provisional y también los precios provisionales actuales. Ver 7 para una discusión adicional. También brindamos orientación para ayudar a un postor a cumplir con la regla RP. SAT (L ∗ I) y SAT (U ∗ I) denoten los nodos que están satisfechos en los comercios L ∗ I y U ∗ I, como se calcula en RP1-RP3. Lema 2. Cuando RP falla, un postor debe aumentar un límite inferior en al menos un nodo en sat (l ∗ i) \ sat (u ∗ i) o disminuir un límite superior en al menos un nodo en sat (u ∗ i) \ sat (sat (L ∗ i) para cumplir con la regla de actividad. Prueba. Cambiar los valores superiores o inferiores en los nodos que no están satisfechos por el comercio no cambia l ∗ i o u ∗ i, y no cambia el pago de estas operaciones. Por lo tanto, la condición RP continuará fallando. Del mismo modo, cambiar los límites en los nodos que se satisfacen en ambas operaciones no tiene ningún efecto en la preferencia revelada. Un cambio a un límite inferior en un nodo compartido afecta a L ∗ I y U ∗ I idénticamente debido al uso de la valoración modificada para determinar u ∗ i. Un cambio a un límite superior en un nodo compartido no tiene ningún efecto para determinar L ∗ i o u ∗ i. Tenga en cuenta que cuando SAT (U ∗ I) = SAT (L ∗ I), la condición (26) siempre se satisface trivialmente, por lo que la guía en el lema siempre está bien definida cuando RP falla. Este es un mecanismo de retroalimentación elegante porque es adaptativo. Una vez que un postor realiza algunos cambios en algún subconjunto de estos nodos, el postor puede consultar el intercambio. El intercambio puede responder sí, o puede revisar el conjunto de nodos SAT (λ ∗ L) y SAT (λ ∗ u) según sea necesario.5.5 Condiciones de terminación Una vez que cada postor ha cometido sus nuevas ofertas (y cumplió la regla RP o sufrió la multa), luego se cierra la ronda T. En este punto, la tarea es determinar la nueva valuación α y, a su vez, la asignación provisional λt y los precios provisionales Pt. También se verifica una condición de terminación para determinar si debe mover el intercambio a una ronda de último y final. Para definir la valuación α, calculamos las siguientes dos cantidades: pesimista en pesimista (pp) determinar un comercio eficiente, λ ∗ l, a valores pesimistas, es decir, para resolver maxλ i vi (λi) y establecer pp = i vi (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ (λ ()∗ li). Pesimista en optimista (PO) determina un comercio eficiente, λ ∗ u, a valores optimistas, es decir, para resolver maxλ i vi (λi) y establecer po = i vi (λ ∗ ui). Primero, tenga en cuenta que PP ≥ PO y PP ≥ 0 por definición, para todos los licitadores, aunque PO puede ser negativo (porque el comercio correcto en V no es actualmente un comercio útil en V). Reconociendo esto, defina γeff (PP, PO) = 1 + PP - PO PP, (27) cuando pp> 0, y observe que γeff (PP, PO) ≥ 1 cuando esto se define, y que γeff (PP, PO)Comenzará a lo grande y luego la tendencia hacia 1 a medida que la asignación optimista converja hacia la asignación pesimista. En cada ronda, definimos αeff ∈ [0, 1] AS: αeff = 0 cuando PP es 0 1/γeff de lo contrario (28), que es 0 mientras que PP es 0 y luego tendencias hacia 1 una vez PP> 0 en alguna ronda. Esto se usa para definir la valuación α Vα I = αeff VI + (1-αeff) VI, ∀i, (29) que se utiliza para definir la asignación provisional y los precios provisionales. El efecto es definir endógenmente un cronograma para pasar de valores optimistas a pesimistas en las rondas, en función de cuán cerca están los intercambios entre sí. Condición de terminación. Al pasar a la ronda de la última y final, y finalmente cerrar, también nos importa la convergencia de los pagos, además de la convergencia hacia un comercio eficiente. Para esto, introducimos otro parámetro, αthresh ∈ [0, 1], que tenden de 0 a 1 a medida que los pagos umbral en valoraciones inferiores y superiores convergen. Considere el siguiente parámetro: γthresh = 1 + || pthresh (v) - pthresh (v) || 2 (pp/nactive), (30) que se define para pp> 0, donde pthresh (v) denota los pagos de umbral enEl perfil de valoración V, Nactive es el número de postores que participan activamente en el comercio en el comercio de PP, y ||· || 2 es la norma L2. Tenga en cuenta que γthresh se define para pagos y no pagos. Esto es apropiado porque es la precisión del resultado del intercambio lo que importa: es decir, el comercio y los pagos. Dado esto, definimos αthresh = 0 cuando PP es 0 1/γthresh de lo contrario (31), que es 0, mientras que PP es 0 y luego las tendencias hacia 1 a medida que se realiza el progreso. Definición 5 (terminación). Transiciones de hielo a una ronda de último final cuando uno de los siguientes se mantiene: 1. αeff ≥ COTOFFEFF y αTHRESH ≥ CORTOFFRESH, 2. No hay comercio en los valores optimistas, donde el corte, el corte, el corte ∈ (0, 1] determine la precisión requeridapara la terminación. Al final de la última redonda y final, Vα = V se usa para definir el comercio final y los pagos de umbral final. Ejemplo 9. Considere nuevamente el ejemplo 1, y considere los límites superior e inferior como se muestra en la Figura 1. Primero, si los límites de los vendedores eran [−20, −4], entonces hay un comercio optimista pero no hay comercio pesimista, y po = −4 y pp = 0, y αeff = 0. En los límites representados, se producen los oficios optimistas y pesimistas y po = Pp = 4 y αeff = 1. Sin embargo, podemos ver que los pagos de umbral son (17, −17) en V pero (14, −14) en v. Evaluación de γthresh, tenemos γthresh = 1 + √ 1/2 (32 + 32) (4/2)= 5/2, y αthresh = 2/5. Para el corte del corte <2/5, el intercambio permanecería abierto. Por otro lado, si el valor de los compradores para +AB estaba entre [18, 24] y el valor de los vendedores para −AB estaba entre [−12, −6], los pagos de umbral son (15, −15) tanto enLímites inferiores, y αThresh = 1. 256 Agente de líneas de propósito de componentes. Captura el comportamiento estratégico y las decisiones de revelación de información 762 El soporte del modelo proporciona soporte XML para cargar bienes y valoraciones en el mundo 200 World realiza un seguimiento de todos los detalles de agentes, buenos y de valoración 998 Intercambios de controladores y controles de comunicación, y coordina el comportamiento del agente remoto 585 IMPLEMENTOS DE IDIACCIÓN DE PIDO.El lenguaje de licitación basado en árbol 1119 Regla de actividad implementa la regla de preferencia revelada con el soporte de rango 203 Comprobaciones del motor de la regla de cierre si la condición de terminación de subasta alcanzada 137 WD Engine proporciona el motor de precios lógico 377 relacionado con WD.por motores en nuestro Optimizer General Optimizer Formulación 346 Constructores de precios utilizados por tres etapas de fijación de precios 256 Constructores de determinación de ganadores utilizados por WD, regla de actividad, regla de cierre y código de soporte de la generación de restricciones de precios 365 Código de soporte;facilita el reemplazo modular de los componentes anteriores 510 Tabla 1: componente de intercambio y desglose de código.6. Infraestructura de sistemas El hielo es aproximadamente 6502 líneas de código Java, dividido en los paquetes funcionales descritos en la Tabla 1.10 El prototipo es modular para que los investigadores puedan reemplazar fácilmente los componentes para la experimentación. Además del intercambio central discutido en este documento, hemos desarrollado un componente de agente que permite a un usuario simular el comportamiento y el conocimiento de otros jugadores en el sistema, permitiendo mejor que un usuario formule su estrategia antes del juego real. Un usuario especifica un modelo de valoración en una interpretación XMLL de nuestro lenguaje de licitación, que se revela al intercambio a través de la estrategia de los agentes. Las principales tareas de intercambio son manejadas por motores que dictan la lógica específica de no optimizador. Estos motores impulsan los constructores MIP/LP apropiados. Nos dimos cuenta de que todas nuestras formulaciones de optimización se reducen a dos clases de problema de optimización. El primero, utilizado por la determinación del ganador, la regla de actividad, la regla de cierre y la generación de restricciones en los precios, es un MIP que encuentra operaciones que maximizan el valor, la mantenimiento de los precios y las holguras constantes. El segundo, utilizado por las tres etapas de precios, es un LP que mantiene constantes las operaciones, que busca minimizar la holgura, las ganancias o los precios. Aprovechamos la comunidad de estos problemas mediante el uso de constructores LP/MIP comunes que difieren solo en unos pocos ganchos funcionales para proporcionar las variables correctas para la optimización. Hemos generalizado nuestra interfaz de solucionador de optimización de back-end (actualmente admitimos CPLEX y la LPSOLVE con licencia LGPILS), y podemos aprovechar el equilibrio de carga y la capacidad de resolución de MIP/LP paralelo que proporciona esta biblioteca.7. Discusión El lenguaje de licitación se definió para permitir una simetría perfecta entre compradores y vendedores y proporcionar expresividad en un dominio de intercambio, por ejemplo, para licitadores mixtos interesados en ejecutar operaciones como swaps. Esto resultó especialmente desafiante. El avance se produjo cuando nos centramos en los cambios en el valor de las operaciones en lugar de proporcionar valores absolutos para las asignaciones. Para simplificar, requerimos la misma estructura de árbol para las valoraciones superiores e inferiores.10 El tamaño del código se mide en la línea de código de origen físico (SLOC), como se genera con el recuento SLOC de David A. Wheelers. El total de 6502 incluye 184 para instrumentación (no se muestra en la tabla). La interfaz JOPT Solver es otra línea de 1964, y Castor genera automáticamente alrededor de 5200 líneas de código para la manipulación de archivos XML.11 http://econcs.eecs.harvard.edu/jopt Esto permite que el lenguaje en sí mismo garantice la consistencia (con el valor superior al menos el valor más bajo en todas las operaciones) y aplique el endurecimiento monotónico de estos límites para todas las operaciones a través de las rondas. También proporciona un método eficiente para verificar la regla de actividad de RP, ya que hace que sea sencillo razonar sobre la incertidumbre compartida entre las operaciones. La decisión de adoptar un enfoque directo y proxy en el que los licitadores expresan sus valores superiores e inferiores a un agente de poder confiable que interactúa con el intercambio se realizó temprano en el proceso de diseño. En muchos sentidos, esta es la forma más clara e inmediata de generalizar el diseño en Parkes et al.[24] y hazlo iterativo. Además, esto elimina muchas oportunidades para la manipulación estratégica: los postores están restringidos a establecer declaraciones (incrementales) sobre sus valoraciones. Otra ventaja es que hace que la regla de la actividad sea fácil de explicar: los licitadores siempre pueden cumplir con la regla de la actividad ajustando los límites de tal manera que su verdadero valor permanece en el soporte.12 Quizás lo más importante, tener información explícita sobre los valores superiores e inferiores permite el progreso temprano en el progreso temprano.Rondas, incluso mientras no hay comercio eficiente en valores pesimistas. La información superior e inferior también proporciona orientación sobre cuándo terminar. Tenga en cuenta que tomado por sí mismo, PP = PO no implica que el comercio provisional actual sea eficiente con respecto a todos los valores consistentes con la información del valor actual. La diferencia en los valores entre diferentes operaciones, agregado en todos los postores, podría ser similar a los límites inferiores y superiores pero bastante diferentes a los valores intermedios (incluida la verdad). Sin embargo, conjeturamos que PP = PO demostrará un excelente indicador de eficiencia en entornos prácticos donde la forma de las valoraciones superiores e inferiores transmite información útil. Esto es digno de investigación experimental. Además, el uso de la actividad de precio y RP proporciona garantías adicionales. Adoptamos precios lineales (precios en artículos individuales) en lugar de precios no lineales (con precios en un comercio no igual a la suma de los precios en los artículos del componente) temprano en el proceso de diseño. La concisión de esta representación de precios es muy importante para la tractabilidad computacional dentro del intercambio y también para promover la simplicidad y la transparencia para los postores. La regla de actividad de RP se adoptó más tarde, y es una buena opción debido a sus excelentes propiedades teóricas cuando se combina con los precios de CE. Lo siguiente se puede establecer fácilmente: dados los precios exactos de CE PT-1 para el comercio provisional 12 Esto está en contraste con los enfoques basados en precios indirectos, como el proxy de reloj [1], en el que los licitadores deben poder razonar sobre el RP-restricciones implícitas por ofertas en cada ronda.257 λt-1 en las valoraciones Vα, entonces, si los valores superiores e inferiores al comienzo de la ronda T ya satisfacen la regla RP (y sin la necesidad de rompas de corbata), el comercio provisional es eficiente para todas las valoraciones consistentes con las actualesTOJOS Cuando existen precios lineales de CE, esto proporciona una declaración de solidez e integridad: si PP = PO, existen precios lineales de CE y la regla RP está satisfecha, el comercio provisional es eficiente (solidez);Si los precios son los precios exactos de CE para el comercio provisional en Vα, pero el comercio es ineficiente con respecto a algún perfil de valoración consistente con los árboles de licitación actuales, entonces al menos un postor debe fallar RP con su árbol de licitación actual y se realizará un progreso (lo completo). El trabajo futuro debe estudiar la convergencia experimentalmente y extender esta teoría para permitir precios aproximados. Algunos aspectos estratégicos de nuestro diseño de hielo merecen comentarios y más estudios. Primero, no afirmamos que respondiera sinceramente a la regla RP es un equilibrio ex post.13 Sin embargo, el intercambio está diseñado para imitar la regla umbral en su esquema de pago, que se sabe que tiene propiedades de incentivos útiles [16]. Sin embargo, debemos tener cuidado. Por ejemplo, no sugerimos proporcionar αeff a los postores, porque a medida que αeff se acerca 1, informaría a los postores que los valores de oferta se están volviendo irrelevantes para determinar el comercio, pero simplemente se usan para determinar los pagos (y los postores se volverían cada vez más reacios a aumentar sus valoraciones más bajas). Además, los postores no se han considerado en este trabajo al colusión. Este es un problema que merece cierta atención en el trabajo futuro.8. Conclusiones En este trabajo diseñamos y prototipos de un intercambio combinatorio iterativo escalable y altamente expresivo. El diseño incluye muchas características interesantes, que incluyen: un nuevo lenguaje de licitación para intercambios, un nuevo método para construir precios lineales aproximados a partir de idiomas expresivos, y un método de obtitación proxed con valoraciones optimistas y pesimistas con un nuevo método para evaluar una preferencia reveladaregla de actividad. El intercambio se implementa completamente en Java y está en una fase de validación. Los próximos pasos para nuestro trabajo son permitir a los postores refinar la estructura del árbol de ofertas además de los valores en el árbol. Tenemos la intención de estudiar las propiedades de obtención del intercambio y hemos reunido un conjunto de pruebas de instancias de problemas de intercambio. Además, estamos comenzando a participar en colaboraciones para aplicar el diseño al despegue de las aerolíneas y la programación de ranuras de aterrizaje y a la asignación de recursos en sistemas computacionales distribuidos de red Widearea. Agradecimientos Nos gustaría dedicar este documento a todos los participantes en CS 286R en la Universidad de Harvard en la primavera de 2004. Este trabajo es apoyado en parte por NSF Grant IIS-0238147.9. Referencias [1] L. Ausubel, P. Cramton y P. Milgrom. La subasta de reloj-proxy: un diseño práctico de subasta combinatoria. En Cramton et al.[9], Capítulo 5. [2] M. Babaioff, N. Nisan y E. Pavlov. Mecanismos para un mercado distribuido espacialmente. En Proc.5 ° ACM Conf.En Comercio electrónico, páginas 9-20. ACM Press, 2001. 13 Dado el teorema de imposibilidad de Myerson-Satterthwaite [22] y el método por el cual determinamos el comercio que no debemos esperar esto.[3] M. Ball, G. Donohue y K. Hoffman. Subastas para la asignación segura, eficiente y equitativa de los recursos del sistema del espacio aéreo. En S. Cramton, Shoham, editor, subastas combinatorias.2004. Próximo.[4] D. Bertsimas y J. Tsitsiklis. Introducción a la optimización lineal. Athena Scientific, 1997. [5] S. Bikhchandani y J. M. Ostroy. El modelo de asignación de paquetes. Journal of Economic Theory, 107 (2): 377-406, 2002. [6] C. Boutilier. Una formulación POMDP de problemas de obtención de preferencias. En Proc.18ª Conferencia Nacional sobre Inteligencia Artificial (AAAI-02), 2002. [7] C. Boutilier y H. Hoos. Idiomas de licitación para subastas combinatorias. En Proc.17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI-01), 2001. [8] W. Conen y T. Sandholm. PREVENTACIÓN DE PREFERENCIA EN SUBASTAS COMBINATORIALES. En Proc.3er ACM Conf.Sobre el comercio electrónico (EC-01), páginas 256-259. ACM Press, Nueva York, 2001. [9] P. Cramton, Y. Shoham y R. Steinberg, editores. Subastas combinatorias. MIT Press, 2004. [10] S. de Vries, J. Schummer y R. V. Vohra. En subastas ascendentes de Vickrey para objetos heterogéneos. Informe técnico, Meds, Kellogg School, Northwestern University, 2003. [11] S. de Vries y R. V. Vohra. Subastas combinatorias: una encuesta. Informs Journal on Computing, 15 (3): 284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana y T. Wilson. Prueba de algoritmos de precios lineales para su uso en subastas combinatorias ascendentes. Informe técnico, Seor, George Mason University, 2003. [13] Y. Fu, J. Chase, B. Chun, S. Schwab y A. Vahdat. Sharp: una arquitectura para la mirada de recursos seguros. En Actas del Simposio del XIX ACM sobre los principios de sistemas operativos, páginas 133-148. ACM Press, 2003. [14] B. Hudson y T. Sandholm. Efectividad de los tipos de consultas y políticas para la obtención de preferencias en subastas combinatorias. En Proc.3er int. Articulación. Conf.En agentes autónomos y sistemas de agentes múltiples, páginas 386-393, 2004. [15] V. Krishna. Teoría de la subasta. Academic Press, 2002. [16] D. Krych. Cálculo y análisis de los equilibrios de NASH de las reglas de pago basadas en Vickrey para intercambios combinatorios, Harvard College, abril de 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter y C. Demartini. Un diseño nuevo y mejorado para subastas iterativas de múltiples objetivos. Management Science, 2004. A aparecer.[18] E. Kwerel y J. Williams. Una propuesta para una transición rápida a la asignación del mercado del espectro. Informe técnico, Oficina de Planes y Política de la FCC, noviembre de 2002. [19] S. M. Lahaie y D. C. Parkes. Aplicación de algoritmos de aprendizaje a la obtención de preferencias. En Proc. ACM Conf.en el comercio electrónico, páginas 180-188, 2004. [20] R. P. McAfee. Una subasta de doble estrategia dominante. J. of Economic Theory, 56: 434-450, 1992. [21] P. Milgrom. Poner la teoría de la subasta para que funcione: la subasta ascendente simultánea. J.Pol. Econ., 108: 245-272, 2000. [22] R. B. Myerson y M. A. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Journal of Economic Theory, 28: 265-281, 1983. [23] N. Nisan. Licitación y asignación en subastas combinatorias. En Proc.2º ACM Conf.sobre Comercio Electrónico (EC-00), Páginas 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam y M. ESO. Lograr el equilibrio presupuestario con los esquemas de pago con sede en Vickrey en los intercambios. En Proc.17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI-01), páginas 1161-1168, 2001. [25] D. C. Parkes y L. H. Ungar. Subastas combinatorias iterativas: teoría y práctica. En Proc.17ª Conferencia Nacional sobre Inteligencia Artificial (AAAI-00), páginas 74-81, julio de 2000. [26] S. J. Rassenti, V. L. Smith y R. L. Bulfin. Un mecanismo combinatorio para la asignación de intervalos de tiempo del aeropuerto. Bell Journal of Economics, 13: 402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc y R. M. Harstad. Subastas combinatorias computacionalmente manejables. Management Science, 44 (8): 1131-1147, 1998. [28] T. Sandholm y C. Boutilier. PREVENTACIÓN DE PREFERENCIA EN SUBASTAS COMBINATORIALES. En Cramton et al.[9], Capítulo 10. [29] P. R. Wurman y M. P. Wellman. AKBA: una subasta combinatoria progresiva de precio anónimo. En la segunda conferencia ACM sobre comercio electrónico, páginas 21-29, 2000. 258