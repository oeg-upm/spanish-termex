Destilación de información basada en servicios públicos sobre documentos secuenciados temporalmente Yiming Yang Language Technologies Inst. Universidad de Carnegie Mellon Pittsburgh, EE. UU. Yiming@cs.cmu.edu Abhimanyu Lad Language Technologies Inst. Universidad de Carnegie Mellon Pittsburgh, EE. UU. Alad@cs.cmu.edu ni Lao Language Technologies Inst. Universidad de Carnegie Mellon Pittsburgh, EE. UU. Nlao@cs.cmu.edu abhay Harpale Language Technologies Inst. Universidad de Carnegie Mellon Pittsburgh, EE. UU. Aharpale@cs.cmu.edu Bryan Kisiel Language Technologies Inst. Universidad de Carnegie Mellon Pittsburgh, EE. UU. Bkisiel@cs.cmu.edu Monica Rogati Language Technologies Inst. Carnegie Mellon University Pittsburgh, EE. UU. Mrogati@cs.cmu.edu Resumen Este documento examina un nuevo enfoque para la destilación de información sobre documentos ordenados temporalmente y propone un nuevo esquema de evaluación para dicho marco. Combina las fortalezas y se extiende más allá del filtrado adaptativo convencional, la detección de novedad y la clasificación de pasaje no redundante con respecto a las necesidades de información duradera (tareas con múltiples consultas). Nuestro enfoque admite la retroalimentación de los usuarios de grano fino mediante la resaltación de tramos arbitrarios de texto y aprovecha dicha información para la optimización de servicios públicos en entornos adaptativos. Para nuestros experimentos, definimos tareas hipotéticas basadas en eventos de noticias en el corpus TDT4, con múltiples consultas por tarea. Se generaron claves de respuesta (pepitas) para cada consulta y se utilizó un procedimiento semiautomático para adquirir reglas que permiten que las pepitas de coincidencia automáticamente coincidan con las respuestas del sistema. También proponemos una extensión de la métrica NDCG para evaluar la utilidad de los pasajes clasificados como una combinación de relevancia y novedad. Nuestros resultados muestran mejoras alentadoras de utilidad utilizando el nuevo enfoque, en comparación con los sistemas de referencia sin aprendizaje incremental o los componentes de detección de novedades. Categorías y descriptores de sujetos H.3.3 [Búsqueda y recuperación de información]: filtrado de información, retroalimentación de relevancia, modelos de recuperación, proceso de selección;I.5.2 Términos generales Diseño, medición, rendimiento, experimentación.1. Introducción El seguimiento de la información nueva y relevante de los flujos de datos temporales para usuarios con necesidades duraderas ha sido un tema de investigación desafiante en la recuperación de la información. El filtrado adaptativo (AF) es una tarea de predicción en línea de la relevancia de cada nuevo documento con respecto a los temas predefinidos. Según la consulta inicial y algunos ejemplos positivos (si están disponibles), un sistema AF mantiene un perfil para cada tema de interés, y lo actualiza constantemente en función de los comentarios del usuario. La naturaleza de aprendizaje incremental de los sistemas AF los hace más potentes que los motores de búsqueda estándar que respaldan la recuperación ad-hoc (p. Ej. Google y Yahoo) en términos de encontrar información relevante con respecto a los temas de interés duraderos y más atractivos para los usuarios que están dispuestos a proporcionar comentarios para adaptar el sistema a sus necesidades de información específicas, sin tener que modificar sus consultas manualmente. Se han estudiado una variedad de algoritmos de aprendizaje supervisados (clasificadores de estilo Rocchio, modelos exponenciales-gaussianos, regresión local y enfoques de regresión logística) para obtener entornos adaptativos, examinados con retroalimentación de relevancia explícita e implícita, y se evalúa con respecto a la optimización de utilidad en los datos de contenido de referencia grandes en grandesColecciones en TREC (conferencias de recuperación de texto) y foros TDT (detección y seguimiento de temas) [1, 4, 7, 15, 16, 20, 24, 23]. La regresión logística regularizada [21] se ha encontrado representativa para los enfoques de última generación y altamente eficiente para adaptaciones de modelos frecuentes sobre grandes colecciones de documentos, como el Corpus TREC-10 (más de 800,000 documentos y 84 temas). A pesar de los logros sustanciales en la investigación de filtrado adaptativo reciente, los problemas significativos siguen sin resolverse con respecto a cómo aprovechar la retroalimentación de los usuarios de manera efectiva y eficiente. Específicamente, los siguientes problemas pueden limitar seriamente la verdadera utilidad de los sistemas AF en aplicaciones del mundo real: 1. El usuario tiene un papel bastante pasivo en la configuración de filtrado adaptativo convencional: él o ella reacciona al sistema solo cuando el sistema toma una decisión Sí en un documento, al confirmar o rechazar esa decisión. Una alternativa más activa sería permitir al usuario emitir múltiples consultas para un tema, revisar una lista clasificada de documentos candidatos (o pasajes) por consulta y proporcionar comentarios sobre la lista clasificada, refinando así su necesidad de información y solicitando listas clasificadas actualizadas. La última forma de interacción del usuario ha sido altamente efectiva en la recuperación estándar para consultas ad-hoc. Cómo implementar una estrategia de este tipo para las necesidades de información duradera en los entornos de AF es una pregunta abierta para la investigación.2. La unidad para recibir un juicio de relevancia (sí o no) está restringido al nivel de documento en la FA convencional. Sin embargo, un usuario real puede estar dispuesto a proporcionar comentarios más informativos y de grano fino al resaltar algunas piezas de texto en un documento recuperado como relevante, en lugar de etiquetar todo el documento como relevante. Aprovechar efectivamente dichos comentarios de grano fino podría mejorar sustancialmente la calidad de un sistema AF. Para esto, necesitamos habilitar el aprendizaje supervisado de las piezas de texto etiquetadas de lapso arbitrario en lugar de solo permitir documentos etiquetados.3. Los documentos seleccionados por el sistema a menudo son altamente redundantes. Un evento de noticias importante, por ejemplo, sería informado por múltiples fuentes repetidamente durante un tiempo, lo que hace que la mayor parte del contenido de información en esos artículos sea redundante entre sí. Un sistema AF convencional seleccionaría todas estas noticias redundantes para los comentarios de los usuarios, perdiendo el tiempo de los usuarios mientras ofrece poca ganancia. Claramente, las técnicas para la detección de novedad pueden ayudar en principio [25, 2, 22] para mejorar la utilidad de los sistemas AF. Sin embargo, la efectividad de tales técnicas a nivel de pasaje para detectar la novedad con respecto a la retroalimentación de los usuarios (de grano fino) y detectar la redundancia en las listas clasificadas aún no se ha evaluado utilizando una medida de utilidad que imita las necesidades de un usuario real. Para abordar las limitaciones anteriores de los sistemas AF actuales, proponemos y examinamos un nuevo enfoque en este documento, combinando las fortalezas de la FA convencional (aprendizaje incremental de los modelos de temas), recuperación de pasaje de múltiples pasos para consultas duraderas condicionadas sobre el tema, yDetección de novedad para la eliminación de la redundancia de las interacciones del usuario con el sistema. Llamamos al nuevo proceso de destilación de información basada en servicios públicos. Tenga en cuenta que los cuerpos de referencia convencionales para las evaluaciones de AF, que tienen juicios de relevancia a nivel de documento y no definen tareas con múltiples consultas, son insuficientes para evaluar el nuevo enfoque. Por lo tanto, ampliamos un corpus de referencia, la colección TDT4 de noticias y transmisiones de televisión, con definiciones de tareas, múltiples consultas por tarea y claves de respuesta por consulta. Hemos realizado nuestros experimentos en este corpus TDT4 extendido y hemos puesto los datos generados adicionalmente disponibles públicamente para futuras evaluaciones comparativas 1. Para evaluar automáticamente los tramos arbitrarios de texto arbitrarios retirados del sistema utilizando nuestras claves de respuesta, desarrollamos un esquema de evaluación con procedimiento semiautomático para 1 URL: http://nyc.lti.cs.cmu.edu/downloads que pueden adquirir reglas que puedencoincidir con las pepitas con respuestas del sistema. Además, proponemos una extensión de NDCG (ganancia acumulada con descuento normalizada) [9] para evaluar la utilidad de los pasajes clasificados en función de la relevancia y la novedad. El resto de este documento está organizado de la siguiente manera. La Sección 2 describe el proceso de destilación de información con un ejemplo concreto. La Sección 3 describe los núcleos técnicos de nuestro sistema llamado Motor de filtrado adaptativo CAF´E - CMU. La Sección 4 analiza temas con respecto a la metodología de evaluación y propone un nuevo esquema. La Sección 5 describe el corpus TDT4 extendido. La Sección 6 presenta nuestros experimentos y resultados. La Sección 7 concluye el estudio y ofrece perspectivas futuras.2. Una tarea de muestra considere un evento de noticias: el escape de siete convictos de una prisión de Texas en diciembre de 2000 y su captura un mes después. Suponiendo que un usuario estuviera interesado en este evento desde su etapa inicial, la necesidad de información podría ser: encontrar información sobre el escape de los convictos de la prisión de Texas e información relacionada con su recuperación. Las preguntas asociadas de nivel inferior podrían ser: 1. ¿Cuántos prisioneros escaparon?2. ¿Dónde y cuándo fueron vistos?3. ¿Quiénes son sus contactos conocidos dentro y fuera de la prisión?4. ¿Cómo están armados?5. ¿Tienen algún vehículo?6. ¿Qué pasos se han tomado hasta ahora? Llamamos a tal información que necesita una tarea y las preguntas asociadas como consultas en esta tarea. Se supone que un sistema de destilación monitorea los documentos entrantes, los procesa por fragmento en un orden temporal, seleccione pasajes potencialmente relevantes y novedosos de cada fragmento con respecto a cada consulta y presente una lista clasificada de pasajes al usuario. La clasificación de pasaje aquí se basa en cuán relevante es un pasaje con respecto a la consulta actual, cuán novedosa es con respecto al historial actual del usuario (de sus interacciones con el sistema) y cuán redundante es en comparación con otros pasajes conun rango más alto en la lista. Cuando se le presenta una lista de pasajes, el usuario puede proporcionar comentarios al resaltar los tramos arbitrarios de texto que él o ella encontró relevante. Estos tramos de texto se toman como ejemplos positivos en la adaptación del perfil de consulta, y también se agregan al historial de usuarios. Los pasajes no marcados por el usuario se toman como ejemplos negativos. Tan pronto como se actualiza el perfil de consulta, el sistema vuelve a publicar una búsqueda y devuelve otra lista clasificada de pasajes donde los pasajes previamente vistos se eliminan o se clasifican bajo, según la preferencia del usuario. Por ejemplo, si el usuario destaca ... Los funcionarios han publicado una recompensa de $ 100,000 por su captura ... como respuesta relevante a la consulta ¿Qué pasos se han tomado hasta ahora?, Entonces la pieza resaltada se usa como un ejemplo de entrenamiento positivo adicional enLa adaptación del perfil de consulta. Esta retroalimentación también se agrega al historial del usuario como un ejemplo visto, de modo que en el futuro, el sistema no colocará otro pasaje que mencione la recompensa de $ 100,000 en la parte superior de la lista clasificada. Sin embargo, un artículo que menciona ... los funcionarios han duplicado el dinero de la recompensa a $ 200,000 ... podría clasificarse alto, ya que es relevante para el perfil de consulta (actualizado) y novedoso con respecto al historial de usuarios (actualizado). El usuario puede modificar las consultas originales o agregar una nueva consulta durante el proceso;Los perfiles de consulta se cambiarán en consecuencia. Claramente, la detección de novedad es muy importante para la utilidad de dicho sistema debido a la búsqueda iterativa. Sin detección de novedad, los viejos pasajes relevantes se mostrarían al usuario repetidamente en cada lista clasificada. A través del ejemplo anterior, podemos ver las principales propiedades de nuestro nuevo marco para la destilación de información basada en servicios públicos sobre documentos ordenados temporalmente. Nuestro marco combina y extiende el poder del filtrado adaptativo (AF), la recuperación ad-hoc (IR) y la detección de novedad (ND). En comparación con el estándar IR, nuestro enfoque tiene el poder de aprender incrementalmente las necesidades de información a largo plazo y modelar una secuencia de consultas dentro de una tarea. En comparación con la FA convencional, permite un papel más activo del usuario en la refinación de sus necesidades de información y solicitar nuevos resultados al permitir la relevancia y la retroalimentación de novedad mediante el resaltado de los tramos arbitrarios de texto en los pasajes devueltos por el sistema. En comparación con el trabajo pasado, esta es la primera evaluación de la detección de novedad integrada con el filtrado adaptativo para consultas secuenciadas que permite la retroalimentación flexible de los usuarios sobre los pasajes clasificados. La combinación de AF, IR y ND con las nuevas extensiones plantea una importante pregunta de investigación sobre la metodología de evaluación: ¿Cómo podemos medir la utilidad de dicho sistema de destilación de información? Las métricas existentes en IR, AF y ND estándar son insuficientes, y se deben explorar nuevas soluciones, como discutiremos en la Sección 4, después de describir los núcleos técnicos de nuestro sistema en la siguiente sección.3. Núcleos técnicos Los componentes centrales de CAF´e son - 1) AF para el aprendizaje incremental de los perfiles de consulta, 2) IR para estimar la relevancia de los pasajes con respecto a los perfiles de consulta, 3) para evaluar la novedad de los pasajes con respecto a la historia de los usuarios, y4) Componente anti-redundancia para eliminar la redundancia de las listas clasificadas.3.1 Componente de filtrado adaptativo Utilizamos un algoritmo de última generación en el campo: el método de regresión logística regularizada que tuvo los mejores resultados en varios corpus de evaluación de referencia para AF [21]. La regresión logística (LR) es un algoritmo de aprendizaje supervisado para la clasificación estadística. Basado en un conjunto de capacitación de instancias etiquetadas, aprende un modelo de clase que puede usarse para predecir las etiquetas de instancias invisibles. Su rendimiento, así como la eficiencia en términos de tiempo de capacitación, lo convierten en un buen candidato cuando se requieren actualizaciones frecuentes del modelo de clase, como es el caso en el filtrado adaptativo, donde el sistema debe aprender de cada nuevo retroalimentación proporcionado por el usuario.(Ver [21] y [23] para los problemas de complejidad y implementación computacional). En el filtrado adaptativo, cada consulta se considera como una clase y la probabilidad de un pasaje que pertenece a esta clase corresponde al grado de relevancia del pasaje con respecto a la consulta. Para capacitar al modelo, utilizamos la consulta en sí como el ejemplo de entrenamiento positivo inicial de la clase, y las piezas de texto altas del usuario (marcadas como relevantes o no relevantes) durante la retroalimentación como ejemplos de capacitación adicionales. Para abordar el problema de inicio en frío en la etapa inicial antes de obtener cualquier retroalimentación del usuario, el sistema utiliza una pequeña muestra de un corpus retrospectivo como los ejemplos negativos iniciales en el conjunto de capacitación. Los detalles del uso de la regresión logística para el filtrado adaptativo (asignando diferentes pesos a instancias de entrenamiento positivas y negativas, y regularizar la función objetivo para evitar el ajuste en exceso en los datos de entrenamiento) se presentan en [21]. El modelo de clase W ∗ aprendió por regresión logística, o el perfil de consulta, es un vector cuyas dimensiones son términos individuales y cuyos elementos son los coeficientes de regresión, lo que indica cuán influyente es cada término en el perfil de consulta. El perfil de consulta se actualiza cada vez que se recibe una nueva pieza de comentarios de los usuarios. Se puede aplicar un peso en descomposición temporal a cada ejemplo de capacitación, como una opción, para enfatizar los comentarios más recientes del usuario.3.2 Componente de recuperación de pasaje Utilizamos técnicas IR estándar en esta parte de nuestro sistema. Los documentos entrantes se procesan en fragmentos, donde cada fragmento se puede definir como un lapso de tiempo fijo o como un número fijo de documentos, según lo prefiere el usuario. Para cada documento entrante, se actualizan las estadísticas de Corpus como la IDF (frecuencia de documento invertida) de cada término. Utilizamos un identificador y rastreador de la entidad nombrado de última generación [8, 12] para identificar nombres de personas y ubicaciones, y fusionarlos con entidades con nombres referentes vistas en el pasado. Luego, los documentos se segmentan en pasajes, que pueden ser un documento completo, un párrafo, una oración o cualquier otro tramo continuo de texto, como se prefiere. Cada pasaje se representa utilizando un vector de pesos TF-IDF (frecuencia de documento de frecuencia de término), donde el término puede ser una palabra o una entidad con nombre. Dado un perfil de consulta, es decir, la solución de regresión logística w ∗ como se describe en la Sección 3.1, el sistema calcula la probabilidad posterior de relevancia para cada pasaje x como frl (x) ≡ p (y = 1 | x, w ∗) = 1 (1 + E - W ∗ · x) (1) Los pasajes se ordenan por sus puntajes de relevancia, y los que tienen puntajes por encima de un umbral (sintonizado en un conjunto de entrenamiento) comprenden la lista de relevancia que se transmite al paso de detección de novedad.3.3 El componente de detección de novedades Caf´e mantiene un historial de usuario H (t), que contiene todos los tramos de texto HI que el usuario destacó (como retroalimentación) durante sus interacciones pasadas con el sistema, hasta el tiempo actual t.Denotando la historia como h (t) = n h1, h2, ..., ht o, (2) El puntaje de novedad de un nuevo pasaje candidato X se calcula como: fnd (x) = 1 - max i∈1 ..t {cos (x, hi)} (3) donde ambos pasos candidatos X y los tramos resaltados de texto HI se representan como vectores TF-IDF. El puntaje de novedad de cada pasaje se compara con un umbral presespecificado (también sintonizado en un conjunto de entrenamiento), y cualquier pasaje con un puntaje por debajo de este umbral se elimina de la lista de relevancia.3.4 Componente de clasificación anti-redundante Aunque el componente de detección de novedad asegura que solo la información novedosa (previamente no vista) permanezca en la lista de relevancia, esta lista aún podría contener la misma información novedosa en múltiples posiciones en la lista clasificada. Supongamos, por ejemplo, que el usuario ya ha leído una recompensa de $ 100,000 por información sobre los convictos escapados. Una nueva noticia de que el premio se ha incrementado a $ 200,000 es novedoso ya que el usuario aún no ha leído al respecto. Sin embargo, múltiples fuentes de noticias informarían esta noticia y podríamos terminar mostrando artículos (redundantes) de todas estas fuentes en una lista clasificada. Por lo tanto, una lista clasificada también debe hacerse no redundante con respecto a su propio contenido. Utilizamos una versión simplificada del método de relevancia marginal máxima [5], desarrollada originalmente para combinar relevancia y novedad en la recuperación y resumen de texto. Nuestro procedimiento comienza con la lista actual de pasajes ordenados por relevancia (Sección 3.2), filtrado por el componente de detección de novedad (Sección 3.3), y genera una nueva lista no redundante de la siguiente manera: 1. Tome el mejor pasaje en la lista actual como el mejor en la nueva lista.2. Agregue el siguiente pasaje X en la lista actual a la nueva lista solo si le FAR (x)> t donde FAR (x) = 1 - max pi borrado {cos (x, pi)} y lnew es el conjunto de pasajes ya seleccionadosen la nueva lista.3. Repita el paso 2 hasta que se hayan examinado todos los pasajes en la lista actual. Después de aplicar el algoritmo mencionado anteriormente, cada pasaje en la nueva lista es suficientemente diferente a los demás, favoreciendo así la diversidad en lugar de la redundancia en la nueva lista clasificada. El umbral anti-redundancia T se ajusta en un conjunto de entrenamiento.4. Metodología de evaluación El enfoque que propusimos anteriormente para la destilación de información plantea problemas importantes con respecto a la metodología de evaluación. En primer lugar, dado que nuestro marco permite que la salida sea pasajes a diferentes niveles de granularidad (por ejemplo, ventanas de oración K donde K puede variar) en lugar de una longitud fija, no es posible tener juicios de relevancia pre-anotados en todos estos niveles de granularidad. En segundo lugar, dado que deseamos medir la utilidad de la salida del sistema como una combinación de relevancia y novedad, las medidas tradicionales basadas en relevancia deben ser reemplazadas por medidas que penalizan la repetición de la misma información en la salida del sistema a lo largo del tiempo. En tercer lugar, dado que la salida del sistema se clasifica en listas, debemos recompensar aquellos sistemas que presentan información útil (tanto relevante como previamente invisible) utilizando listas de clasificación más cortas, y penalizar aquellos que presentan la misma información utilizando listas de clasificación más largas. Ninguna de las medidas existentes en recuperación ad-hoc, filtrado adaptativo, detección de novedad u otras áreas relacionadas (resumen de texto y respuesta de preguntas) tienen propiedades deseables en los tres aspectos. Por lo tanto, debemos desarrollar una nueva metodología de evaluación.4.1 Claves de respuesta Para habilitar la evaluación de un sistema cuya salida consiste en pasajes de longitud arbitraria, tomamos prestado el concepto de claves de respuesta de la comunidad de respuesta (QA), donde los sistemas pueden devolver los tramos arbitrarios de texto como respuestas. Las claves de respuesta definen lo que deberían estar presentes en una respuesta del sistema para recibir crédito, y están compuestos por una recopilación de pepitas de información, es decir, unidades de factoides sobre las cuales los asesores humanos pueden tomar decisiones binarias de si una respuesta del sistema las contiene o no. Definir claves de respuesta y tomar las decisiones binarias asociadas son tareas conceptuales que requieren mapeo semántico [19], ya que los pasajes retornados del sistema pueden contener la misma información expresada de muchas maneras diferentes. Por lo tanto, las evaluaciones de control de calidad se han basado en los evaluadores humanos para el mapeo entre varias expresiones, lo que hace que el proceso consuma, lento y no sea escalable para grandes consultas y colecciones de documentos, y amplias evaluaciones del sistema con diversas configuraciones de parámetros.4.1.1 Automatización de la evaluación basada en las claves de respuestas Los métodos de evaluación automática permitirían una construcción y ajuste de sistemas más rápida, así como proporcionar una forma objetiva y asequible de comparar varios sistemas. Recientemente, tales métodos se han propuesto, más o menos, basados en la idea de las concurrencias de N-Gram. Pourpre [10] asigna una puntuación de recuperación fraccional a una respuesta del sistema basada en su superposición unigram con una descripción de Nuggets dada. Por ejemplo, una respuesta al sistema A B C tiene el recuerdo 3/4 con respecto a una pepita con la descripción A B C D. Sin embargo, dicho enfoque es injusto para los sistemas que presentan la misma información pero que usan palabras distintas a A, B, C y D.Otro problema abierto es cómo soportar las palabras individuales para medir la cercanía de una coincidencia. Por ejemplo, considere la pregunta cuántos prisioneros escaparon? En la pepita, siete prisioneros escaparon de una prisión de Texas, no hay indicios de que Seven sea la palabra clave, y que debe igualarse para obtener algún crédito de relevancia. El uso de valores de IDF no ayuda, ya que siete generalmente no tendrá una IDF más alta que las palabras como Texas y la prisión. Además, redefinir la pepita como solo siete no resuelve el problema, ya que ahora podría igualar espuradamente cualquier mención de siete fuera de contexto. Nuggeteer [13] trabaja en principios similares, pero toma decisiones binarias sobre si una pepita está presente en una respuesta del sistema dada al ajustar un umbral. Sin embargo, también está plagado de relevancia espuria, ya que no todas las palabras contenidas en la descripción de la pepita (o respuestas correctas conocidas) son fundamentales para la pepita.4.1. Estas reglas son esencialmente consultas booleanas que solo coincidirán con los fragmentos que contienen la pepita. Por ejemplo, ¿una regla candidata para que coincidan con las respuestas a cuántos prisioneros escaparon?es (Texas y siete y Escape y (convictos o prisioneros)), posiblemente con otros sinónimos y variantes en la regla. Para un corpus de artículos de noticias, que generalmente siguen una prosa formal típica, es bastante fácil escribir reglas tan simples para que coincida con las respuestas esperadas usando un enfoque de arranque, como se describe a continuación. Proponemos un enfoque de dos etapas, inspirado en AutoSlog [14], que combina la fuerza de los humanos en la identificación de expresiones semánticamente equivalentes y la fuerza del sistema en la recopilación de evidencia estadística de un corpus de documentos humannotados. En la primera etapa, los sujetos humanos anotaron (utilizando una herramienta de resaltado) porciones de documentos ottopic que contenían respuestas a cada pepita 2. En la segunda etapa, los sujetos utilizaron nuestra herramienta de generación de reglas para crear reglas que coincidan con las anotaciones para cada pepita. La herramienta permite a los usuarios ingresar una regla booleana como disyunción de conjunciones (por ejemplo, ((A y B) o (A y C y D) o (E))). Dada una regla candidata, nuestra herramienta la usa como una consulta booleana sobre todo el conjunto de documentos sobre el tema y calcula su retiro y precisión con respecto a las anotaciones que se espera que coincida. Por lo tanto, los sujetos pueden comenzar con una regla simple y refinarla iterativamente hasta que estén satisfechos con su retiro y precisión. Observamos que era muy fácil para los humanos mejorar la precisión de una regla ajustando sus conjunciones existentes (agregando más y) y mejorando el recuerdo agregando más conjunciones a la disyunción (agregando más OR). Como ejemplo, intentemos crear una regla para la pepita que dice que siete prisioneros escaparon de la prisión de Texas. Comenzamos con una regla simple - (siete). Cuando ingresamos esto en la herramienta de generación de reglas, nos damos cuenta de que esta regla coincide con muchos sucesos espurios de siete (por ejemplo ... siete estados ...) y, por lo tanto, obtiene una puntuación de baja precisión. Podemos calificar aún más nuestra regla: Texas y siete y convictos. Luego, al observar las anotaciones perdidas, nos damos cuenta de que algunos artículos de noticias mencionados ... Siete prisioneros escaparon ... Luego reemplazamos a los convictos con la disyunción (convictos o prisioneros). Continuamos ajustando la regla de esta manera hasta que logremos un recuerdo y precisión suficientemente altos, es decir, el (pequeño número de) fallas y falsas alarmas se pueden ignorar de manera segura. Por lo tanto, podemos crear reglas de coincidencia de pepitas que capturen sucintamente varias formas de expresar una pepita, mientras evitan las respuestas incorrectas (o fuera de contexto) coincidentes. La participación humana en el proceso de creación de reglas garantiza reglas genéricas de alta calidad que luego pueden usarse para evaluar las respuestas arbitrarias del sistema de manera confiable.4.2 Evaluación de la utilidad de una secuencia de listas clasificadas La utilidad de un sistema de recuperación puede definirse como la diferencia entre cuánto ganó el usuario en términos de información útil y cuánto perdió el usuario en términos de tiempo y energía. Calculamos esta utilidad a partir de los servicios públicos de pasajes individuales de la siguiente manera. Después de leer cada pasaje devuelto por el sistema, el usuario obtiene alguna ganancia dependiendo de la presencia de información relevante y novedosa, e incurre en una pérdida en términos del tiempo y la energía gastada en el pasaje. Sin embargo, la probabilidad de que el usuario realmente lea un pasaje depende de su posición en la lista clasificada. Por lo tanto, para una consulta Q, la utilidad esperada 2 LDC [18] ya proporciona juicios de relevancia para 100 temas en el corpus TDT4. Además, nos aseguramos de que estos juicios sean exhaustivos en todo el corpus utilizando la agrupación.de un pasaje Pi en rango se puede definir como u (pi, q) = p (i) ∗ (ganancia (pi, q) - pérdida (pi, q)) (4) donde p (i) es la probabilidad de queEl usuario pasaría por un pasaje en el rango I. La utilidad esperada para una lista completa de longitud n se puede calcular simplemente agregando la utilidad esperada de cada pasaje: u (q) = nx i = 1 p (i) ∗ (ganancia (pi, q) - pérdida (pi,q)) (5) Tenga en cuenta que si ignoramos el término de pérdida y definimos p (i) como p (i) ∝ 1/ logb (b + i - 1) (6), entonces obtenemos la métrica recientemente popularizada llamada ganancia acumulada con descuento(DCG) [9], donde la ganancia (Pi, Q) se define como la relevancia graduada del paso PI. Sin embargo, sin el término de pérdida, DCG es una métrica puramente de retiro y no es adecuado para una configuración de filtrado adaptativo, donde la utilidad de los sistemas depende en parte de su capacidad para limitar el número de elementos que se muestran al usuario. Aunque P (i) podría definirse en función de los estudios empíricos del comportamiento del usuario, por simplicidad, usamos P (i) exactamente como se define en la Ecuación 6. La ganancia G (PI, Q) del paso PI con respecto a la consulta Q es una función de - 1) el número de pepitas relevantes presentes en Pi, y 2) la novedad de cada una de estas pepitas. Combinamos estos dos factores de la siguiente manera. Para cada Nugget NJ, asignamos un peso inicial WJ, y también mantenemos un recuento de NJ del número de veces que el usuario ha visto esta pepita en el pasado. Se supone que la ganancia derivada de cada ocurrencia posterior de la misma pepita se reduce mediante un factor de amortiguación γ. Por lo tanto, G (Pi, Q) se define como G (Pi, Q) = x nj ∈C (PI, Q) WJ ∗ γnj (7) donde C (Pi, Q) es el conjunto de todas las pepitas que aparecen en el pasoPi y también pertenecen a la clave de respuesta de la consulta q. Los pesos iniciales de WJ están establecidos de BE 1.0 en nuestros experimentos, pero también se pueden establecer en base a un enfoque piramidal [11]. La elección del factor de amortiguación γ determina la tolerancia de los usuarios para la redundancia. Cuando γ = 0, una pepita solo recibirá crédito por su primera ocurrencia, es decir, cuando NJ es cero3. Para 0 <γ <1, una pepita recibe un crédito más pequeño por cada ocurrencia sucesiva. Cuando γ = 1, no se produce una amortiguación y las ocurrencias repetidas de una pepita reciben el mismo crédito. Tenga en cuenta que los recuentos de ocurrencia de la pepita se conservan entre la evaluación de listas clasificadas sucesivas devueltas por el sistema, ya que se espera que los usuarios recuerden lo que el sistema les mostró en el pasado. Definimos la pérdida L (PI, Q) como un costo constante C (usamos 0.1) incurrido al leer un pasaje retirado del sistema. Por lo tanto, nuestra métrica puede reescribirse como u (q) = nx i = 1 ganancia (pi, q) logb (b + i-1)-l (n) (8) donde l (n) es la pérdida asociadacon una lista clasificada de longitud n: l (n) = c · nx i = 1 1 logb (b + i - 1) (9) 3 Tenga en cuenta que 00 = 1 debido a la similitud con ganancia acumulada con descuento (DCG), nosotrosLlame a nuestra utilidad acumulada con descuento métrica (DCU). El puntaje DCU obtenido por el sistema se convierte en una puntuación de DCU normalizada (NDCU) dividiéndola mediante el puntaje DCU de la lista clasificada ideal, que se crea ordenando pasajes por sus puntajes de utilidad decrecientes u (Pi, Q) cuando se detiene cuandoU (pi, q) ≤ 0, es decir, cuando la ganancia es menor o igual al costo de leer el pasaje.5. Los datos TDT4 fueron el corpus de referencia utilizado en evaluaciones TDT2002 y TDT2003. El corpus consta de más de 90, 000 artículos de noticias de múltiples fuentes (AP, NYT, CNN, ABC, NBC, MSNBC, Xinhua, Zaobao, Voice of America, PRI the World, etc.) publicado entre octubre de 2000 y enero de 2001, INLos idiomas del árabe, el inglés y el mandarín. También se proporcionaron versiones reconocidas por voz y traducidas a máquina de los artículos que no son ingleses. LDC [18] ha anotado el corpus con 100 temas, que corresponden a varios eventos de noticias en este período de tiempo. De estos, seleccionamos un subconjunto de 12 eventos procesables y definimos las tareas correspondientes para ellos4. Para cada tarea, definimos manualmente un perfil que consiste en un conjunto inicial de (5 a 10) consultas, una descripción de texto libre del historial del usuario, es decir, lo que el usuario ya sabe sobre el evento y una lista de información conocidaTema y documentos fuera del tema (si están disponibles) como ejemplos de capacitación. Para cada consulta, generamos claves de respuesta y reglas correspondientes de coincidencia de pepitas utilizando el procedimiento descrito en la Sección 4.1.2, y produjimos un total de 120 consultas, con un promedio de 7 pepitas por consulta.6. Experimentos y resultados 6.1 Basas de base Utilizamos Indri [17], un motor de recuperación basado en el modelo de lenguaje popular, como línea de base para comparar con CAF'E. Indri admite la funcionalidad de los motores de búsqueda estándar, incluida la retroalimentación de pseudo-relevancia (PRF) [3, 6], y es representativo de un sistema de recuperación típico basado en la consulta. Indri no admite ningún tipo de detección de novedad. Comparamos Indri con PRF activado y apagado, con Cafí con retroalimentación de usuarios, detección de novedad y clasificación antiredenunda encendida y apagada.6.2 Configuración experimental Dividimos el corpus TDT4 que abarca 4 meses en 10 trozos, cada uno definido como un período de 12 días consecutivos. En cualquier momento dado en el proceso de destilación, cada sistema accedió a los datos anteriores hasta el punto actual y devolvió una lista clasificada de 50 pasajes por consulta. Las 12 tareas definidas en el corpus se dividieron en un entrenamiento y prueba con 6 tareas cada una. Se permitió a cada sistema usar el conjunto de capacitación para ajustar sus parámetros para optimizar la NDCU (Ecuación 8), incluido el umbral de relevancia tanto para Indri como para CAF´e, y los umbrales de novedad y antironanciosos para CAF´E. El NDCU para cada ejecución del sistema se calcula automáticamente. También se simularon la retroalimentación del usuario: los juicios de relevancia para cada pasaje retornado del sistema (según lo determinado por las reglas de coincidencia de Nugget descritas en la Sección 4.1.2) fueron 4 URL: http://nyc.lti.cs.cmu.edu/downloads Figura 1: Rendimiento de Indri a través de fragmentos Figura 2: Rendimiento de CAF'E en fragmentos utilizados como retroalimentación de usuarios en la adaptación de los perfiles de consulta e historias de usuarios.6.3 Resultados en la Tabla 1, mostramos las puntuaciones de NDCU de los dos sistemas en diversos configuraciones. Estos puntajes se promedian sobre las seis tareas en el conjunto de pruebas, y se calculan con dos factores de amortiguación (ver Sección 4.2): γ = 0 y 0.1, para simular sin tolerancia y pequeña tolerancia para la redundancia, respectivamente. Usar γ = 0 crea una métrica mucho más estricta, ya que no da ningún crédito a un pasaje que contenga información relevante pero redundante. Por lo tanto, la mejora obtenida de habilitar la retroalimentación del usuario es menor con γ = 0 que la mejora obtenida de la retroalimentación con γ = 0.1. Esto revela una deficiencia de los sistemas de recuperación contemporáneos que el usuario da retroalimentación positiva sobre un pasaje, los sistemas ofrecen mayores pesos a los términos presentes en ese pasaje y tienden a recuperar otros pasajes que contienen los mismos términos, y por lo tanto, generalmente la misma información. Sin embargo, el usuario no se beneficia al ver tales pasajes redundantes, y generalmente está interesado en otros pasajes que contienen información relacionada. Es informativo evaluar los sistemas de recuperación utilizando nuestra medida de utilidad (con γ = 0) que explica la novedad y, por lo tanto, ofrece una imagen más realista de qué tan bien un sistema puede generalizarse a partir de la retroalimentación del usuario, en lugar de usar medidas IR tradicionales como el retiro y la precisión queDé una imagen incompleta de mejora obtenida de los comentarios de los usuarios. A veces, sin embargo, los usuarios pueden estar interesados en ver la misma información de múltiples fuentes, como una Tabla 1: puntajes NDCU de Indri y Caf´e para dos factores de amortiguación (γ) y diversos configuraciones (F: retroalimentación, N: novedadDetección, A: Ranking Anti-Redundante) Indri Caf´e γ Base +Base PRF +F +F +N +F +A +F +N +A 0 0.19 0.19 0.22 0.23 0.24 0.24 0.24 0.1 0.28 0.29 0.24 0.35 0.35 0.36 0.36indicador de su importancia o confiabilidad. En tal caso, simplemente podemos elegir un valor más alto para γ que corresponde a una mayor tolerancia a la redundancia y, por lo tanto, dejar que el sistema sintonice sus parámetros en consecuencia. Dado que los documentos fueron procesados por un fragmento, sería interesante ver cómo el rendimiento de los sistemas mejora con el tiempo. Las Figuras 1 y 2 muestran las tendencias de rendimiento para ambos sistemas a través de fragmentos. Si bien se espera que el rendimiento con y sin retroalimentación sobre los primeros fragmentos esté cerca, para los fragmentos posteriores, la curva de rendimiento con retroalimentación habilitada se eleva por encima de la que tiene la configuración sin retroalimentación. Las tendencias de rendimiento no son consistentes en todos los trozos porque los documentos sobre el tema no se distribuyen de manera uniforme sobre todos los trozos, lo que hace que algunas consultas sean más fáciles que otras en ciertos fragmentos. Además, dado que Indri usa la retroalimentación de pseudo-relevancia, mientras que CAF'E utiliza la retroalimentación basada en juicios de relevancia reales, la mejora en el caso de Indri es menos dramática que la de CAF'E.7. Observaciones finales Este documento presenta la primera investigación sobre la destilación de información basada en servicios públicos con un sistema que aprende las necesidades de información de larga duración de los comentarios de los usuarios de grano fino sobre una secuencia de pasajes clasificados. Nuestro sistema, llamado CAF´E, combina filtrado adaptativo, detección de novedad y clasificación de pasaje antiredado en un marco unificado para la optimización de servicios públicos. Desarrollamos un nuevo esquema para la evaluación automatizada y la retroalimentación basada en un procedimiento semiautomático para adquirir reglas que permiten que coincidan automáticamente las pepitas con las respuestas del sistema. También propusimos una extensión de la métrica NDCG para evaluar la utilidad de los pasajes clasificados como una combinación ponderada de relevancia y novedad. Nuestros experimentos en el Corpus de referencia TDT4 recientemente anotado muestran una mejora de servicios públicos alentador sobre Indri, y también sobre nuestro propio sistema con aprendizaje incremental y detección de novedad desactivadas.8. Agradecimientos Nos gustaría agradecer a Rosta Farzan, Jonathan Grady, Jaewook Ahn, Yefei Peng y el Programa de Análisis de Datos Qualitativos en la Universidad de Pittsburgh, dirigido por el Dr. Stuart Shulman por su ayuda con la recopilación y el procesamiento de las anotaciones TDT4 extendidas utilizadas en nuestros experimentos. Este trabajo es apoyado en piezas por la National Science Foundation (NSF) bajo la subvención IIS0434035, y la Agencia de Proyectos de Investigación Avanzada de Defensa (DARPA) bajo contratos NBCHD030010 y W0550432. Cualquier opinión, hallazgos, conclusiones o recomendaciones expresadas en este material son las de los autores y no reflejan necesariamente las opiniones de los patrocinadores.9. Autores adicionales Jian Zhang (jianzhan@stat.purdue.edu) ∗, Jaime Carbonell (jgc@cs.cmu.edu) †, Peter Brusilovsky (peterb+@pitt.edu) ‡, Daqing He (dah44@pitt.edu) ‡ 10. Referencias [1] J. Allan. Comentarios de relevancia incremental para el filtrado de información. Actas de la 19a Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 270-278, 1996. [2] J. Allan, C. Wade y A. Bolítar. Recuperación y detección de novedad a nivel de oración. Actas de la Conferencia ACM Sigir sobre investigación y desarrollo en recuperación de información, 2003. [3] C. Buckley, G. Salton y J. Allan. Recuperación automática con información de localidad utilizando SMART. Publicación especial de NIST, (500207): 59-72, 1993. [4] J. Callan. Aprendiendo mientras filtra documentos. Actas de la 21a Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 224-231, 1998. [5] J. Carbonell y J. Goldstein. El uso de MMR, Reranking basado en la diversidad para reordenar documentos y producir resúmenes. Actas de la 21a Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 335-336, 1998. [6] E. Efthimiadis. Expansión de consulta. Revisión anual de la Ciencia y Tecnología de la Información (ARIST), 31: P121-87, 1996. [7] J. Fiscus y G. Duddington. Detección de temas y descripción general de seguimiento. Detección y seguimiento de temas: Organización de información basada en eventos, páginas 17-31.[8] R. Florian, H. Hassan, A. Ittycheriah, H. Jing, N. Kambhatla, X. Luo, N. Nicolov y S. Roukos. Un modelo estadístico para la detección y seguimiento de entidades multilingües. NAACL/HLT, 2004. [9] K. J¨arvelin y J. Kek¨al¨ainen. Evaluación basada en ganancias acumuladas de técnicas IR. Transacciones ACM en Sistemas de Información (TOI), 20 (4): 422-446, 2002. [10] J. Lin y D. Demner-Fushman. Evaluar automáticamente las respuestas a las preguntas de definición. Actas de la Conferencia de Tecnología del Lenguaje Humano de 2005 y Conferencia sobre Métodos Empíricos en Procesamiento del Lenguaje Natural (HLT/EMNLP 2005), 2005. ∗ Estadística Departamento, Universidad de Purdue, West Lafayette, EE. UU. † Idiomas Technologies Inst., Universidad Carnegie Mellon, Pittsburgh, Pittsburgh,USA ‡ Escuela de Ciencias de la Información, Univ.de Pittsburgh, Pittsburgh, EE. UU. [11] J. Lin y D. Demner-Fushman. Will Pyramids construidas de pepitas se derrumba. Actas de HLT-Naacl, 2006. [12] X. Luo, A. Ittycheriah, H. Jing, N. Kambhatla y S. Roukos. Un algoritmo de resolución de coreferencia sincrónica de mención basado en el campanario. Proc.de ACL, 4: 136-143, 2004. [13] G. Marton. Nuggeteer: evaluación automática basada en pepitas utilizando descripciones y juicios. HLT/NAACL, 2006. [14] E. Riloff. Construyendo automáticamente un diccionario para tareas de extracción de información. Actas de la undécima Conferencia Nacional sobre Inteligencia Artificial, páginas 811-816, 1993. [15] S. Robertson y S. Walker. Microsoft Cambridge en TREC-9: pista de filtrado. La Novena Conferencia de Recuperación de Textos (TREC-9), páginas 361-368.[16] R. Schapire, Y. Cantante y A. Singhal. Aumento y rocchio aplicado al filtrado de texto. Actas de la 21a Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 215-223, 1998. [17] T. Strohman, D. Metzler, H. Turtle y W. Croft. Indri: un motor de búsqueda basado en modelos de idiomas para consultas complejas. Actas de la Conferencia Internacional sobre Análisis de Inteligencia, 2004. [18] El consorcio de datos lingüísticos.http://www.ldc.upenn.edu/.[19] E. Voorhees. Descripción general de la pista de respuesta a la pregunta TREC 2003. Actas de la duodécima Conferencia de Recuperación de Textos (TREC 2003), 2003. [20] Y. Yang y B. Kisiel. Regresión local basada en el margen para el filtrado adaptativo. Actas de la Duodécima Conferencia Internacional sobre Gestión de Información y Conocimiento, páginas 191-198, 2003. [21] Y. Yang, S. Yoo, J. Zhang y B. Kisiel. Robustez de los métodos de filtrado adaptativo en una evaluación de bencillo. Actas de la 28ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 98-105, 2005. [22] C. Zhai, W. Cohen y J. Lafferty. Más allá de la relevancia independiente: métodos y métricas de evaluación para la recuperación subtópica. Actas de la 26ª Conferencia Internacional de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 10-17, 2003. [23] J. Zhang e Y. Yang. Robustez de los métodos de clasificación lineal regularizados en la categorización de texto. Actas de la 26ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, páginas 190-197, 2003. [24] Y. Zhang. Uso de antecedentes bayesianos para combinar clasificadores para el filtrado adaptativo. Actas de la 27ª Conferencia Internacional Anual de Investigación y Desarrollo en Recuperación de Información, páginas 345-352, 2004. [25] Y. Zhang, J. Callan y T. Minka. Detección de novedad y redundancia en filtrado adaptativo. Actas de la 25ª Conferencia Anual de ACM Sigir sobre investigación y desarrollo en recuperación de información, 2002.