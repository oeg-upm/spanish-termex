Esquema de indexación basado en la ubicación para los días Debopam Acharya y Vijay Kumar 1 Informática e Informática Universidad de Missouri-Kansas Ciudad Kansas City, MO 64110 Dargc(kumarv)@umkc.edu Resumen Discusión a través de canales inalámbricos para la información de transmisión a los consumidores se está volviendo bastante común. Se han propuesto muchos esquemas de difusión, pero la mayoría de ellos empujan datos a canales inalámbricos para el consumo general. La transmisión basada en Push [1] es esencialmente asimétrica, es decir, el volumen de datos es más alto del servidor a los usuarios que de los usuarios de regreso al servidor. El esquema basado en push requiere alguna indexación que indique cuándo se transmitirán los datos y su posición en la transmisión. La latencia de acceso y el tiempo de ajuste son los dos parámetros principales que pueden usarse para evaluar un esquema de indexación. Dos de los esquemas de indexación importantes propuestos anteriormente fueron basados en árboles y los esquemas de indexación exponencial. Ninguno de estos esquemas pudo abordar los requisitos de los datos dependientes de la ubicación (LDD), que es una característica altamente deseable de la difusión de datos. En este documento, discutimos la transmisión de LDD en los datos de nuestro proyecto en su espacio (días), y proponemos un esquema para indexar LDD. Argumentamos que este esquema, cuando se aplica a LDD, mejora significativamente el rendimiento en términos de tiempo de ajuste sobre los esquemas mencionados anteriormente. Probamos nuestro argumento con la ayuda de los resultados de la simulación. Categorías y descriptores de sujetos H.3.1 [Sistemas de información]: Almacenamiento y recuperación de información - Análisis e indexación de contenido;H.3.3 [Sistemas de información]: Almacenamiento y recuperación de información: búsqueda y recuperación de información. Algoritmos de términos generales, rendimiento, experimentación 1. Introducción La diseminación de datos inalámbricos es una forma económica y eficiente de poner a disposición de los datos deseados a una gran cantidad de usuarios móviles o estáticos. El modo de transferencia de datos es esencialmente asimétrico, es decir, la capacidad de la transferencia de datos (comunicación aguas abajo) del servidor al cliente (usuario móvil) es significativamente mayor que el cliente o usuario móvil al servidor (comunicación aguas arriba). La efectividad de un sistema de difusión de datos se juzga por su capacidad de proporcionar a los datos del usuario en cualquier lugar y en cualquier momento. Una de las mejores maneras de lograr esto es a través de la difusión de servicios (LBS) altamente personalizados que permite a los usuarios acceder a datos dependientes de ubicación personalizada. Un ejemplo sería alguien que use su dispositivo móvil para buscar un restaurante vegetariano. La aplicación LBS interactuaría con otros componentes de tecnología de ubicación o utilizaría la entrada de usuarios móviles para determinar la ubicación de los usuarios y descargar la información sobre los restaurantes cerca del usuario sintonizando el canal inalámbrico que está difundiendo LDD. Vemos una implementación limitada de LB por algunos proveedores de servicios. Pero existen todas las indicaciones de que con el tiempo algunos de los problemas técnicos complejos, como el marco de ubicación uniforme, el cálculo y las ubicaciones de seguimiento en todo tipo de lugares, posicionan en varios entornos, aplicaciones innovadoras de ubicación, etc., se resolverán y LB se convertirá en unInstalación común y ayudará a mejorar la productividad del mercado y la comodidad del cliente. En nuestro proyecto llamado Days, utilizamos el mecanismo de transmisión de datos inalámbricos para impulsar el LDD a los usuarios y los usuarios móviles monitorean y sintonizan el canal para encontrar y descargar los datos requeridos. Sin embargo, es probable que una transmisión simple cause una degradación significativa del rendimiento en los dispositivos móviles limitados de energía y una solución común a este problema es el uso de la indexación de aire eficiente. El enfoque de indexación almacena información de control que le indica al usuario sobre la ubicación de los datos en la transmisión y cómo y cuándo podría acceder a ella. Un usuario móvil, por lo tanto, tiene algo de tiempo libre para entrar en el modo Doze que conserva la valiosa potencia. También permite al usuario personalizar su propio dispositivo móvil sintonizando selectivamente la información de su elección. La eficiencia de acceso y la conservación de la energía son los dos problemas que son significativos para los sistemas de transmisión de datos. La eficiencia de acceso se refiere a la latencia experimentada cuando se inicia una solicitud hasta que se recibe la respuesta. La conservación de energía [7, 10] se refiere al uso eficiente de la energía limitada del dispositivo móvil para acceder a los datos de transmisión. Dos parámetros que afectan estos son el tiempo de ajuste y la latencia de acceso. El tiempo de ajuste se refiere al tiempo durante el cual la unidad móvil (MU) permanece en estado activo para ajustar el canal y descargar sus datos requeridos. También se puede definir como el número de cubos ajustados por el dispositivo móvil en estado activo para obtener sus datos requeridos. La latencia de acceso puede definirse como el tiempo transcurrido desde que se ha emitido una solicitud hasta que se haya recibido la respuesta.1 Esta investigación fue apoyada por una subvención de NSF IIS-0209170. Se han propuesto varios esquemas de indexación en el pasado y los prominentes entre ellos están basados en árboles y los esquemas de indexación exponencial [17]. Las principales desventajas de los esquemas a base de árboles son que se basan en estructuras de árbol centralizadas. Para comenzar una búsqueda, el MU tiene que esperar hasta llegar a la raíz del próximo árbol de transmisión. Esto afecta significativamente el tiempo de ajuste de la unidad móvil. Los esquemas exponenciales facilitan la replicación del índice al compartir enlaces en diferentes árboles de búsqueda. Para las transmisiones con una gran cantidad de páginas, se ha demostrado que el esquema exponencial funciona de manera similar a los esquemas basados en árboles en términos de latencia de acceso. Además, la duración promedio de la transmisión aumenta debido a la replicación del índice y esto puede causar un aumento significativo en la latencia de acceso. Ninguno de los esquemas de indexación anteriores es igualmente efectivo en los datos dependientes de la ubicación de transmisión. Además de proporcionar baja latencia, carecen de propiedades que se utilizan para abordar los problemas de LDD. Proponemos un esquema de indexación en días que se encarga de algunos de estos problemas. Mostramos con los resultados de la simulación que nuestro esquema supera a algunos de los esquemas de indexación anteriores para transmitir LDD en términos de tiempo de ajuste. El resto del documento se presenta de la siguiente manera. En la Sección 2, discutimos los trabajos anteriores relacionados con la indexación de datos de transmisión. La Sección 3 describe nuestros días arquitectura. Los datos dependientes de la ubicación, su generación y la transmisión posterior se presentan en la Sección 4. La Sección 5 analiza nuestro esquema de indexación en detalle. La simulación de nuestro esquema y su evaluación de rendimiento se presenta en la Sección 6. La Sección 7 concluye el documento y menciona un trabajo relacionado con el futuro.2. Trabajo anterior Se han utilizado varias técnicas de indexación basadas en disco para la indexación de aire. Imielinski et al.[5, 6] aplicó el árbol de índice B+, donde los nodos de la hoja almacenan los tiempos de llegada de los elementos de datos. Se propuso el método de indexación distribuido para replicar y distribuir eficientemente el árbol de índice en una transmisión. Específicamente, el árbol índice se divide en una parte replicada y una parte no replicada. Cada transmisión consta de la parte replicada y la parte no replicada que indexa los elementos de datos inmediatamente siguientes. Como tal, cada nodo en la parte no replicada aparece solo una vez en una transmisión y, por lo tanto, reduce el costo de replicación y la latencia de acceso mientras logra un buen tiempo de ajuste. Chen et al.[2] y Shivakumar et al.[8] consideraron estructuras de árboles desequilibradas para optimizar el consumo de energía para el acceso a datos no uniformes. Estas estructuras minimizan el costo promedio de búsqueda de índice al reducir el número de búsquedas de índice de datos calientes a expensas de gastar más en datos de frío. Tan y Yu discutieron la organización de datos e índices bajo el hash de transmisión sesgados y los métodos de firma también se han sugerido para la transmisión inalámbrica que admite consultas de igualdad [9]. Se propuso un método de indexación flexible en [5]. El índice flexible primero clasifica los elementos de datos en el orden ascendente (o descendente) de los valores de la clave de búsqueda y luego los divide en segmentos P. El primer cubo en cada segmento de datos contiene un índice de control, que es un índice binario que asigna un valor de clave dado para el segmento que contiene esa clave, y un índice local, que es un índice de entrada M, asigna un valor clave dado a los cubos dentroel segmento actual. Al ajustar los parámetros de P y M, los clientes móviles pueden lograr un buen tiempo de ajuste o una buena latencia de acceso. Otra técnica de indexación propuesta es el esquema de indexación exponencial [17]. En este esquema, se utiliza un índice parametrizado, llamado índice exponencial para optimizar la latencia de acceso o el tiempo de ajuste. Facilita la replicación del índice al vincular diferentes árboles de búsqueda. Todos los esquemas mencionados anteriormente se han aplicado a datos que no están relacionados entre sí. Estos datos no relacionados pueden agruparse o no agruparse. Sin embargo, ninguno de ellos ha abordado específicamente los requisitos de LDD. Los datos dependientes de la ubicación son datos asociados con una ubicación. Actualmente hay varias aplicaciones que tratan con LDD [13, 16]. Casi todos representan LDD con la ayuda de estructuras jerárquicas [3, 4]. Esto se basa en la propiedad de contención de los datos dependientes de la ubicación. La propiedad de contención ayuda a determinar la posición relativa de un objeto definiendo o identificando ubicaciones que contienen esos objetos. Las ubicaciones subordinadas están jerárquicamente relacionadas entre sí. Por lo tanto, la propiedad de contención limita el rango de disponibilidad u operación de un servicio. Utilizamos esta propiedad de contención en nuestro esquema de indexación para indexar LDD.3. Days Architecture Days ha sido conceptualizado para difundir datos tópicos y no tópicos a los usuarios en un espacio de transmisión local y aceptar consultas de usuarios individuales a nivel mundial. Los datos tópicos, por ejemplo, información meteorológica, información de tráfico, información sobre acciones, etc., cambian constantemente con el tiempo. Los datos no tópicos, como hotel, restaurante, precios de bienes raíces, etc., no cambian con tanta frecuencia. Por lo tanto, imaginamos la presencia de dos tipos de distribución de datos: en el primer caso, el servidor empuja los datos a los usuarios locales a través de canales inalámbricos. El otro caso se ocupa del servidor que envía resultados de consultas de usuarios a través de canales inalámbricos de enlace descendente. Técnicamente, vemos la presencia de dos tipos de colas en el acceso a datos basados en extracción. Una es una cola muy cargada que contiene consultas cargadas globalmente. El otro es una cola relativamente ligeramente cargada que consiste en consultas cargadas localmente. La arquitectura de los días [12] como se muestra en la Figura 1 consiste en un servidor de datos, un programador de transmisión, coordinador de días, red de satélites LEO para la entrega de datos globales y un espacio de transmisión local. Los datos se empujan al espacio de transmisión local para que los usuarios puedan sintonizar los canales inalámbricos para acceder a los datos. El espacio de transmisión local consiste en una torre de transmisión, unidades móviles y una red de máquinas de estadificación de datos llamadas sustitutos. La puesta en escena de datos en sustitutos se ha investigado anteriormente como una técnica exitosa [12, 15] a los datos relacionados con los usuarios de caché. Creemos que la estadificación de datos puede usarse para reducir drásticamente el tiempo de latencia tanto para los datos de transmisión locales como para las respuestas globales. La solicitud de consulta en los sustitutos puede usarse posteriormente para generar los patrones de popularidad que finalmente deciden el horario de transmisión [12].18 Comentarios de popularidad de los sustitutos para el programador de transmisión de transmisión local de transmisión de transmisión Torre de transmisión Subrogatemu Mu Mu Servidor de datos Broadcast Coordinator Coordinator Local Downlink Channel Global Downink Channel Strish Solicitud de requisitos Global Solicitud Global Solicitud Local Solicitud de cola Ubicación basada en el índice Starbucks Plaza Kansas City Figura 1. Arquitectura de días Figura 2. Estructura de ubicación de Estturbucks, Plaza 4. Datos dependientes de la ubicación (LDD) Argumentamos que incorporar información de ubicación en la transmisión de datos inalámbricos puede disminuir significativamente la latencia de acceso. Esta propiedad se vuelve muy útil para la unidad móvil que tiene una capacidad limitada de almacenamiento y procesamiento. Hay una variedad de aplicaciones para obtener información sobre el tráfico, la reserva de restaurantes y hoteles, comida rápida, estaciones de servicio, oficina de correos, supermercados, etc. Si estas aplicaciones se combinan con la información de ubicación, la búsqueda será rápida y altamente rentable. Una propiedad importante de las ubicaciones es la contención que ayuda a determinar la ubicación relativa de un objeto con respecto a su padre que contiene el objeto. Por lo tanto, la contención limita el rango de disponibilidad de un datos. Utilizamos esta propiedad en nuestro esquema de indexación. La base de datos contiene el contenido de transmisión que se convierten en LDD [14] al asociarlos con ubicaciones respectivas para que pueda transmitirse de manera agrupada. La agrupación de LDD ayuda al usuario a localizar información de manera eficiente y admite la propiedad de contención. Presentamos un ejemplo para justificar nuestra proposición. Ejemplo: Suponga que un usuario emite consulta Starbucks Coffee en Plaza, por favor.Para acceder a la información sobre la sucursal de Plaza de Starbucks Coffee en Kansas City. En el caso de la ubicación, la configuración independiente, el sistema enumerará todas las cafeterías de Starbucks en el área de Kansas City. Es obvio que tales respuestas aumentarán la latencia de acceso y no son deseables. Estos se pueden administrar de manera eficiente si el servidor tiene datos dependientes de la ubicación, es decir, una asignación entre los datos de una cafetería Starbucks y su ubicación física. Además, para una consulta que incluye la gama de ubicaciones de Starbucks, será suficiente una sola consulta que solicite ubicaciones para toda la región de Kansas City, como se muestra en la Figura 2. Esto ahorrará una enorme cantidad de ancho de banda al disminuir la cantidad de mensajes y al mismo tiempo será útil para prevenir el cuello de botella de escalabilidad en un área altamente poblada.4.1 Función de mapeo para LDD El ejemplo justifica la necesidad de una función de mapeo para procesar consultas dependientes de la ubicación. Esto será especialmente importante para consultas basadas en tirones en todo el mundo para las cuales la respuesta podría estar compuesta para diferentes partes del mundo. La función de mapeo es necesaria para construir el horario de transmisión. Definimos el conjunto de propiedades globales (GPS) [11], el conjunto de contenido de información (IC) y la jerarquía de ubicación (LH) establecida donde IC ⊆ GPS y LH ⊆ GPS para desarrollar una función de mapeo. Lh = {l1, l2, l3 ..., lk} donde Li representa ubicaciones en el árbol de ubicación e IC = {ic1, ic2, ic3, ..., icn} donde ICI representa el tipo de información. Por ejemplo, si tenemos información de tráfico, clima y acciones se transmiten, entonces ic = {ictraffic, icweather e icstock}. El esquema de mapeo debe poder identificar y seleccionar un miembro IC y un nodo LH para (a) asociación correcta, (b) coincidencia de granularidad, (c) y condición de terminación. Por ejemplo, el clima ∈ Ic podría estar asociado con un país o un estado o una ciudad o una ciudad de LH. La coincidencia de granularidad entre el clima y un nodo LH es según los requisitos del usuario. Por lo tanto, con una información climática de granularidad gruesa se asocia con un país para obtener el clima del campo y con la ciudad en una granularidad más fina. Si una ciudad es la mejor granularidad, entonces define la condición terminal para la asociación entre IC y LH para el clima. Esto significa que un usuario no puede obtener información meteorológica sobre la subdivisión de una ciudad. En realidad, el clima de una subdivisión no tiene ningún sentido. Desarrollamos un esquema de enfoque de mapeo heurístico simple basado en el requisito del usuario. Sea ic = {m1, m2, m3., ..., mk}, donde mi representa su elemento y vamos lh = {n1, n2, n3, ..., nl}, donde Ni representa el miembro de LHS. Definimos GPS para IC (GPSIC) ⊆ GPS y para LH (GPSLH) ⊆ GPS como GPSIC = {P1, P2, ..., Pn}, donde P1, P2, P3, ..., Pn son propiedades de sus miembros y GPSLH = {Q1, Q2, ..., QM} donde Q1, Q2, ..., QM son propiedades de sus miembros. Las propiedades de un miembro particular de IC son un subconjunto de GPSIC. En general, es cierto que (Conjunto de propiedades (mi∈ Ic) ∪ Conjunto de propiedades (mj∈ Ic)) ≠ ∅, sin embargo, puede haber casos en los que la intersección no es nula. Por ejemplo, el stock ∈ IC y la calificación de la película ∈ IC no tienen ninguna propiedad en común. Suponemos que dos o más miembros de IC tienen al menos una propiedad geográfica común (es decir, ubicación) porque los días transmiten información sobre esas categorías, que están estrechamente vinculadas con una ubicación. Por ejemplo, las acciones de una empresa están relacionadas con un país, el clima está relacionado con una ciudad o estado, etc. Definimos el subconjunto de propiedad de mi∈ Ic como psm i ∀ mi ∈ Ic y psm i = {p1, p2, ..., pr} donde r ≤ n.∀ PR {pr ∈ Psm I → Pr∈ GPSIC} que implica que ∀ I, PSM I ⊆ GPSIC. Las propiedades geográficas de este conjunto son indicativas de si MI ∈ Ic se puede asignar a un solo nivel de granularidad (es decir, una sola ubicación) en LH o niveles de granularidad múltiples (es decir, más de un nodos en 19 la jerarquía) en LH. ¿Cuántos y qué niveles de granularidad deben un mapa de MI depende del nivel en el que el proveedor de servicios desee proporcionar información sobre el MI en cuestión? Del mismo modo, definimos un subconjunto de propiedad de los miembros de LH como PSN J ∀ NJ ∈ LH que puede escribirse como PSN J = {Q1, Q2, Q3, ..., QS} donde s ≤ m.Además, ∀ QS {QS∈ PSN J → QS∈ GPSLH} que implica que ∀J, PSN J ⊆ GPSLH. El proceso de mapeo de IC a LH se identifica para algunos mx∈ IC uno o más ny∈ Lh tal que PSMX ∩ PSNV ≠ φ. Esto significa que cuando MX se asigna a NY y todos los niños de NY si MX puede mapear a múltiples niveles de granularidad o mapas MX solo para NY si MX puede mapear a un solo nivel de granularidad. Suponemos que los nuevos miembros pueden unirse y los viejos miembros pueden dejar IC o LH en cualquier momento. La eliminación de miembros del espacio IC es simple, pero la adición de miembros al espacio IC es más restrictiva. Si queremos agregar un nuevo miembro al espacio IC, primero definimos una propiedad establecida para el nuevo miembro: PSMNEW_M = {P1, P2, P3, ..., PT} y la agregamos solo si la condición: ∀PW {PW∈ PSPNEW_M → PW∈ GPSIC} está satisfecho. Este esquema tiene un beneficio adicional de permitir que los proveedores de servicios de información tengan un control sobre qué tipo de información desean proporcionar a los usuarios. Presentamos el siguiente ejemplo para ilustrar el concepto de mapeo. Ic = {tráfico, stock, restaurante, clima, fechas importantes de historia, condiciones de carretera} lh = {país, estado, ciudad, código postal, carreteras mayores} gpsic = {superficie-moderia, carreteras, alto, bajo, italiano-Alimentos, nombre de estatua, temperatura, nombre de la ciudad, disponibilidad de asientos, zip, jams de tráfico, precio de stock, nombre de campo, MajorRoadName, Wars, descubrimientos, mundo} GPSLH = {país, campo, nombre de estatua, nombre de la ciudad, zip, MajorRoadname} PS (ICSTOCK) = {Stock-privado, rentable, alto, bajo} ps (ictraffic) = {-modificación de superficie, carreteras, altas, bajas, Jams de tráfico, CityName} PS (fechas Icimpráticas en la historia) = {World, Wars, Discoveries}Ps (condiciones icroad) = {precipitación, statename, cityname} ps (iCrestaurant) = {italiano-comida, código zip} ps (icweather) = {statename, cityname, precipitación, temperatura} ps (lhcountry) = {countryName, campo}Ps (lhstate = {statename, tamaño de estado}, ps (lhcity) = {cityname, size de la ciudad} ps (lhzipcode) = {zipcodenum} ps (lhmajor roads) = {majorroadname} ahora, solo ps (icstock). Además, PS (ICSTOCK) indicó que el stock puede mapear solo un país de ubicación. Cuando consideramos el tráfico miembro del espacio IC, solo PS (ictraffic) ∩ pScity ≠ φ. Como PS (Ictraffic) indica que el tráfico puede mapear solo una ubicación, solo se asigna a la ciudad y a ninguno de sus hijos. Ahora, a diferencia del stock, el mapeo de tráfico con carreteras principales, que es un hijo de la ciudad, es significativo. Sin embargo, los proveedores de servicios tienen derecho a controlar los niveles de granularidad en los que desean proporcionar información sobre un miembro del espacio IC. PS (condiciones de icroad) ∩ Psstate ≠ φ y PS (condiciones de icroad) ∩ pScity ≠ φ. Por lo tanto, las condiciones de la carretera se asignan tanto al estado como a la ciudad. Como PS (condiciones de ICROAD) indica que las condiciones de la carretera pueden asignarse a múltiples niveles de granularidad, las condiciones de la carretera también se asignarán al código postal y las carreteras principales, que son los hijos del estado y la ciudad. Del mismo modo, los mapas de restaurantes solo para el código postal y los mapas meteorológicos para el estado, la ciudad y sus hijos, las carreteras principales y el código postal.5. Esquema de indexación basado en la ubicación Esta sección analiza nuestro esquema de indexación basado en la ubicación (LBIS). El esquema está diseñado para ajustarse a la transmisión de LDD en nuestros días de proyecto. Como se discutió anteriormente, utilizamos la propiedad de contención de LDD en el esquema de indexación. Esto limita significativamente la búsqueda de nuestros datos requeridos a una parte particular de la transmisión. Por lo tanto, argumentamos que el esquema proporciona tiempo de sintonización limitado. Describimos la arquitectura de nuestro esquema de indexación. Nuestro esquema contiene cubos de datos separados y cubos de índice. Los cubos de índice son de dos tipos. El primer tipo se llama el índice principal. El índice principal proporciona información sobre los tipos de datos transmitidos. Por ejemplo, si tenemos la intención de transmitir información como entretenimiento, clima, tráfico, etc., entonces el índice principal apunta a estos tipos principales de información y/o sus principales subtipos de información, el número de subtipos principales que varían de una información a otra. Esto limita estrictamente el número de accesos a un índice importante. El índice principal nunca apunta a los datos originales. Señala los índices subcontratales llamados índice menor. Los índices menores son los índices que realmente apuntan a los datos originales. Llamamos a estos punteros de índice menores como punteros de ubicación, ya que apunta a los datos asociados con una ubicación. Por lo tanto, nuestra búsqueda de datos incluye el acceso de un índice importante y algunos índices menores, el número de índice menor que varía según el tipo de información. Por lo tanto, nuestro esquema de indexación tiene en cuenta la naturaleza jerárquica del LDD, la propiedad de contención y requiere que nuestro horario de transmisión se agrupe en función del tipo de datos y la ubicación. La estructura de la jerarquía de ubicación requiere el uso de diferentes tipos de índice en diferentes niveles. La estructura y las posiciones del índice dependen estrictamente de la jerarquía de ubicación como se describe en nuestro esquema de mapeo anteriormente. Ilustramos la implementación de nuestro esquema con un ejemplo. Las reglas para enmarcar el índice se mencionan posteriormente.20 A1 Película de restaurante de entretenimiento A2 A3 A4 R1 R2 R3 R4 R5 R6 R7 R8 CELIENCIA KC SL JC SF ENTRETENTO R1 R2 R3 R4 R5 R6 R7 R8 KC SL JC SF (A, R, SIGUIENTE = 8) 3, R5 4, R7 Tipo, R7 Tipo(S, l) er w e em (1, 4) (5, 4) (1, 4), (9, 4) (9, 4) tipo (s, l) w e em er (1, 4) (5, 8) (5, 4) (9, 4) Tipo (S, L) E Em Er W (1, 8) (1, 4) (5, 4) (9, 4) A1 A1 A2 A3 A4 MEJORA DE RESTURADOR1 2 3 4 5 6 7 8 9 10 11 12 ÍNDICE MAYOR ÍNDICE MAYOR INDICE MAYOR ÍNDICE MENOR ÍNDICE MAYOR ÍNDICE MENOR Figura 3. Información mapeada de ubicación para la transmisión Figura 4. Datos junto con el ejemplo del índice basado en la ubicación: supongamos que nuestro contenido de transmisión contiene IcenterTernment y Icweather que se representa como se muestra en la figura 3. La IA representa áreas de ciudad e RI representa carreteras en un área determinada. Las hojas de la estructura meteorológica representan cuatro ciudades. La estructura del índice se da en la Fig. 4 que muestra la posición del índice mayor y menor y los datos en el cronograma de transmisión. Proponemos las siguientes reglas para la creación del cronograma de transmisión indexado de aire: • Se crean el índice principal y el índice menor.• El índice principal contiene la posición y la gama de diferentes tipos de elementos de datos (clima y entretenimiento, Figura 3) y sus categorías. Las sub categorías de entretenimiento, cine y restaurante, también están en el índice. Por lo tanto, el índice principal contiene entretenimiento (e), película de entretenimiento (EM), entretenimiento-restaurante (ER) y clima (W). La tuple (S, L) representa la (s) posición (s) inicial del elemento de datos y L representa el rango del elemento en términos de número de cubos de datos.• El índice menor contiene las variables A, R y un puntero a continuación. En nuestro ejemplo (Figura 3), la carretera R representa el primer nodo del área A. El índice menor se utiliza para señalar los cubos de datos reales presentes en los niveles más bajos de la jerarquía. En contraste, el índice principal apunta a una gama más amplia de ubicaciones y, por lo tanto, contiene información sobre las categorías principales y subcatíferas de datos.• La información del índice no se incorpora en los cubos de datos. Los cubos de índice están separados que contienen solo la información de control.• El número de los principales cubos de índice M = # (IC), IC = {IC1, IC2, IC3, ..., ICN} donde ICI representa el tipo de información y # representa la cardinalidad del conjunto de contenido de información. En este ejemplo, ic = {icmovie, icweather, restaurante} y sonic) = 3. Por lo tanto, el número de principales cubos de índice es 3. • El mecanismo para resolver la consulta está presente en el coordinador basado en Java en MU. Por ejemplo, si una consulta Q se presenta como Q (Entertainment, Movie, Road_1), entonces la búsqueda resultante será para la información de EM en el índice principal. Decimos, Q em. Nuestro índice propuesto funciona de la siguiente manera: supongamos que un MU emite una consulta representada por el coordinador de Java presente en el MU como información del restaurante en la carretera 7. Esto es resuelto por el coordinador como Q er. Esto significa que uno debe buscar la unidad de índice ER en el índice principal. Supongamos que el MU registra el canal en R2. El primer índice que recibe es un índice menor después de R2. En este índice, el valor de la siguiente variable = 4, lo que significa que el siguiente índice principal está presente después del cubo 4. El MU puede entrar en modo Doze. Se activa después del cubo 4 y recibe el índice principal. Busca información de ER, que es la primera entrada en este índice. Ahora es seguro que el MU obtendrá la posición del cubo de datos en el índice menor adyacente. La segunda unidad en el índice menor representa la posición de los datos requeridos R7. Dice que el cubo de datos es el primer cubo en el área 4. El MU entra en modo Doze nuevamente y se activa después del cubo 6. Obtiene los datos requeridos en el siguiente cubo. Presentamos el algoritmo para buscar el índice basado en la ubicación. Algoritmo 1 Búsqueda de índice basado en ubicación en los días 1. Escanear transmitido para el siguiente cubo de índice, encontrado = Falso 2. Mientras que (no se encuentra) haz 3. Si el cubo es un índice principal, entonces 4. Encuentre el tipo y tuple (S, L) 5. Si S es mayor que 1, vaya al modo Doze durante s segundos 6. Fin si 7. Despertar en el cubo STH y observar el índice menor 8. Fin si 9. Si el cubo es un índice menor, entonces 10. Si se escribe que no se escribe igual a tipo de tipo y (a, r) no se encuentra igual a (a, r), entonces 11. Vaya al modo Doze hasta el siguiente y repita desde el paso 3 12. Fin si 13. De lo contrario, encuentre la entrada en el índice menor que apunta a los datos 14. Calcule el tiempo de llegada t del cubo de datos 15. Entra en modo Doze hasta T 16. Despertar en los datos de T y Access, encontrado = Verdadero 17. Fin el otro 18. Fin si 19. Fin mientras 21 6. La conservación de la energía de la evaluación del rendimiento es la principal preocupación cuando intentamos acceder a los datos de la transmisión inalámbrica. Un esquema eficiente debe permitir que el dispositivo móvil acceda a sus datos requeridos permaneciendo activos durante un período mínimo de tiempo. Esto ahorraría una cantidad considerable de energía. Dado que los elementos se distribuyen según los tipos y se asignan a ubicaciones adecuadas, argumentamos que nuestra transmisión trata con los tipos de datos agrupados. La unidad móvil tiene que acceder a un índice importante más grande y un índice menor relativamente más pequeño para obtener información sobre el momento de la llegada de los datos. Esto contrasta con el esquema exponencial donde los índices son de igual tamaños. El ejemplo discutido y el Algoritmo 1 revela que para acceder a cualquier datos, necesitamos acceder al índice principal solo una vez seguido de uno o más accesos al índice menor. El número de acceso al índice menor depende del número de ubicaciones internas. Como el número de ubicaciones internas varía para un elemento a otro (por ejemplo, el clima generalmente se asocia con una ciudad, mientras que el tráfico está granulado hasta carreteras principales y menores de una ciudad), argumentamos que la estructura de la información mapeada de ubicación puede visualizarseComo un bosque que es una colección de árboles generales, el número de árboles generales que depende de los tipos de información transmitidos y la profundidad de un árbol dependiendo de la granularidad de la información de ubicación asociada con la información. Para nuestros experimentos, asumimos el bosque como una colección de árboles M-ARRY equilibrados. Además, asumimos que los árboles M-ARY están llenos al asumir la presencia de nodos ficticios en diferentes niveles de un árbol. Por lo tanto, si el número de elementos de datos es d y la altura del árbol es m, entonces n = (m*d-1)/(m-1) donde n es el número de vértices en el árbol y i = (D-1)/(M-1) donde yo es el número de vértices internos. El tiempo de ajuste para un elemento de datos implica 1 unidad de tiempo requerida para acceder al índice principal más el tiempo requerido para acceder a los elementos de datos presentes en las hojas del árbol. Por lo tanto, el tiempo de ajuste con los elementos de datos D es t = logmd+1 podemos decir que el tiempo de ajuste está limitado por O (LOGMD). Comparamos nuestro esquema con la indexación distribuida y el esquema exponencial. Suponemos una transmisión plana y un número de páginas que varían de 5000 a 25000. Los diversos parámetros de simulación se muestran en la Tabla 1. La Figura 5-8 muestra los tiempos de sintonización relativos de tres algoritmos de indexación, es decir, LBIS, esquema exponencial y el esquema de árbol distribuido. La Figura 5 muestra el resultado para el número de nodos de ubicación interna = 3. Podemos ver que los LBI superan significativamente los otros esquemas. El tiempo de sintonización en LBIs varía de aproximadamente 6.8 a 8. Este gran tiempo de ajuste se debe al hecho de que después de alcanzar el índice menor más bajo, el MU puede tener que acceder a pocos cubos secuencialmente para obtener el cubo de datos requerido. Podemos ver que el tiempo de sintonización tiende a ser estable a medida que aumenta la longitud de la transmisión. En la Figura 6 consideramos M = 4. Aquí podemos ver que el exponencial y el distribuido funcionan casi de manera similar, aunque el primero parece funcionar un poco mejor a medida que aumenta la longitud de transmisión. Un patrón muy interesante es visible en la Figura 7. Para un tamaño de transmisión más pequeño, el LBI parece tener un tiempo de ajuste más grande que los otros dos esquemas. Pero a medida que aumenta la duración de la transmisión, es claramente visible que el LBI supera a los otros dos esquemas. La indexación de árbol distribuido muestra un comportamiento similar como los LBI. El tiempo de sintonización en LBI sigue siendo bajo porque el algoritmo permite que la MU saltea algunos índices menores intermedios. Esto permite que el MU se mueva a niveles más bajos directamente después de entrar en modo activo, ahorrando así una energía valiosa. Esta acción no es posible en la indexación de árbol distribuido y, por lo tanto, podemos observar que su tiempo de ajuste es más que el esquema LBIS, aunque funciona mejor que el esquema exponencial. La Figura 8, en contraste, nos muestra que el tiempo de ajuste en LBI, aunque menos que los otros dos esquemas, tiende a aumentar bruscamente a medida que la longitud de transmisión se vuelve mayor que las 15000 páginas. Esto puede atribuirse tanto debido al aumento en el tiempo requerido para escanear los índices menores intermedios y la longitud de la transmisión. Pero podemos observar que la pendiente de la curva LBIS es significativamente menor que las otras dos curvas. Tabla 1 Parámetros de simulación P Valores de definición P Número de elementos de datos 5000 - 25000 m Número de nodos de ubicación interna 3, 4, 5, 6 B Capacidad de cubo sin índice (para índice exponencial) 10,64,128,256 I Base de índice para el índice exponencial 2,4,6,8 K Tamaño del índice para el árbol distribuido 8 bytes Los resultados de la simulación establecen algunos hechos sobre nuestro esquema de indexación basado en la ubicación. El esquema funciona mejor que los otros dos esquemas en términos de tiempo de sintonización en la mayoría de los casos. A medida que aumenta la longitud de la transmisión, después de un cierto punto, aunque el tiempo de ajuste aumenta como resultado de los factores que hemos descrito antes, el esquema siempre funciona mejor que los otros dos esquemas. Debido al límite prescrito del número de páginas en el documento, no podemos mostrar más resultados. Pero estos resultados omitidos muestran una tendencia similar a los resultados representados en la Figura 5-8.7. Conclusión y trabajo futuro En este documento hemos presentado un esquema para el mapeo de datos de transmisión inalámbrica con sus ubicaciones. Hemos presentado un ejemplo para mostrar cómo la estructura jerárquica del árbol de ubicación se mapea con los datos para crear LDD. Hemos presentado un esquema llamado LBI para indexar este LDD. Hemos utilizado la propiedad de contención de LDD en el esquema que limita la búsqueda a un rango estrecho de datos en la transmisión, ahorrando así una energía valiosa en el dispositivo. La asignación de datos con ubicaciones y el esquema de indexación se utilizará en nuestro proyecto Days para crear la arquitectura basada en push. El LBI se ha comparado con otros dos esquemas de indexación prominentes, es decir, el esquema de indexación de árbol distribuido y el esquema de indexación exponencial. Mostramos en nuestras simulaciones que el esquema LBI tiene el tiempo de ajuste más bajo para las transmisiones que tienen una gran cantidad de páginas, ahorrando así una valiosa potencia de batería en el MU.22 En el futuro trabajo, intentamos incorporar la arquitectura basada en la extracción en nuestro proyecto Days. Los datos del servidor están disponibles para el acceso por los usuarios globales. Esto se puede hacer colocando una solicitud al servidor de origen. La consulta en este caso es una consulta global. Se transfiere desde el servidor de origen de los usuarios al servidor de destino mediante el uso de satélites LEO. Tenemos la intención de utilizar nuestro esquema LDD y arquitectura de estadificación de datos en la arquitectura basada en Pull. Mostraremos que el esquema LDD junto con la arquitectura de estadificación de datos mejora significativamente la latencia para la consulta global y local.8. Referencias [1] Acharya, S., Alonso, R. Franklin, M y Zdonik S. Disco de transmisión: gestión de datos para entornos de comunicaciones asimétricas. En Actas de la Conferencia ACM Sigmod sobre la gestión de datos, páginas 199-210, San José, CA, mayo de 1995. [2] Chen, M.S., Wu, K.L.y Yu, P. S. Optimización de la asignación de índice para transmisión de datos secuenciales en informática móvil inalámbrica. Transacciones IEEE sobre conocimiento e ingeniería de datos (TKDE), 15 (1): 161-173, enero/febrero de 2003. Figura 5. Tamaño de transmisión (# cubos) Dist Tree Expo LBI Figura 6. Tamaño de transmisión (# cubos) Dist Tree Expo LBIS Figura 7. Tamaño de transmisión (# cubos) Dist Tree Expo LBIS Figura 8. Tamaño de transmisión (# cubos) Dist Tree Expo LBIS LBIS AVERAGETUNINGTIME AVERAGETUNINGTIME AVERAGETUningTime AveragetuningTime 23 [3] Hu, Q. L., Lee, D. L. y Lee, W.C. Evaluación del rendimiento de un sistema de diseminación de datos jerárquicos inalámbricos. En Actas de la 5ª Conferencia Anual de ACM International sobre computación y redes móviles (Mobicom99), páginas 163-173, Seattle, WA, agosto de 1999. [4] Hu, Q. L. Lee, W.C.y Lee, D. L. Consultas de atributos múltiples conservadores de potencia en la transmisión de datos. En Actas de la 16ª Conferencia Internacional sobre Ingeniería de Datos (ICDE00), páginas 157-166, San Diego, CA, febrero de 2000. [5] Imielinski, T., Viswanathan, S. y Badrinath. B. R. Filtrado eficiente de potencia de datos en el aire. En Actas de la 4ta Conferencia Internacional sobre Tecnología de Base de Datos Extensión (EDBT94), páginas 245-258, Cambridge, Reino Unido, marzo de 1994. [6] Imielinski, T., Viswanathan, S. y Badrinath. B. R. Datos sobre el aire: organización y acceso. Transacciones IEEE sobre conocimiento e ingeniería de datos (TKDE), 9 (3): 353-372, mayo/junio de 1997. [7] Shih, E., Bahl, P. y Sinclair, M. J. Wake On Wireless: una estrategia de ahorro de energía impulsada por el evento para dispositivos que funcionan con baterías. En Actas de la 8ª Conferencia Anual de ACM International sobre computación y redes móviles (Mobicom02), páginas 160-171, Atlanta, GA, septiembre de 2002. [8] Shivakumar N. y Venkatasubramanian, S. Indexación de eficiencia energética para diseminación de información en la diseminación de información ensistemas. ACM/Baltzer Journal of Mobile Networks and Applications (Monet), 1 (4): 433-446, diciembre de 1996. [9] Tan K. L. y Yu, J. X. Filtrado energético de transmisión no uniforme. En Actas de la 16ª Conferencia Internacional sobre Sistemas de Computación distribuida (ICDCS96), páginas 520-527, Hong Kong, mayo de 1996. [10] Viredaz, M. A., Brakmo, L. S. y Hamburgen, W. R. Gestión de energía en dispositivos de mano. ACM Queue, 1 (7): 44-52, octubre de 2003. [11] Garg, N. Kumar, V. y Dunham, M.H. Mapeo e indexación de información en días, sexto taller internacional sobre movilidad en bases de datos y sistemas distribuidos, junto con la 14ª Conferencia Internacional sobre Base de Datos y Aplicaciones de Sistemas Expertos del 1 al 5 de septiembre, Praga, República Czech, 2003. [12] Acharya D.,Kumar, V. y Dunham, M.H. InfoSpace: sistema de difusión de datos públicos híbridos y adaptativos para la computación ubicua. Aceptado para su publicación en el número especial de la computación generalizada. Wiley Journal for Wireless Communications and Mobile Computing, 2004. [13] Acharya D., Kumar, V. y Prabhu, N. Descubriendo y utilizando servicios web en M-Commerce, procedimientos para el 5º Taller VLDB sobre tecnologías para servicios electrónicos,Toronto, Canadá, 2004.[14] Acharya D., Kumar, V. Datos dependientes de la ubicación de indexación en el entorno de transmisión. Aceptado para su publicación, JDIM Número especial sobre gestión de datos distribuidos, 2005. [15] Flinn, J., Sinamohideen, S. y Satyanarayan, M. Estado de datos en sustitutos no confiables, Intel Research, Pittsburg, informe no publicado, 2003. [16 [16] Seydim, A.Y., Dunham, M.H.& Kumar, V. Procesamiento de consultas dependientes de la ubicación, Actas del segundo taller internacional de ACM sobre ingeniería de datos para acceso inalámbrico y móvil, p.47-53, Santa Bárbara, California, EE. UU., 2001. [17] Xu, J., Lee, W.C., Tang., X. Índice exponencial: un esquema de indexación distribuida parametrizada para datos en el aire. En Actas de la 2da Conferencia Internacional de ACM/Usenix sobre sistemas móviles, aplicaciones y servicios (Mobisys04), Boston, MA, junio de 2004. 24