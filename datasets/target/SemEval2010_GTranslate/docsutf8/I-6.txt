Semántica dinámica para lenguajes de comunicación de agentes Michael Rovatsos School of Informatics La Universidad de Edimburgo Edimburgo EH8 9LE Reino Unido mrovatso@inf.ed.ac.uk Resumen Este documento propone semántica dinámica para los lenguajes de comunicación de agentes (ACL) como un método para abordar algunos de losProblemas fundamentales asociados con la comunicación de agentes en sistemas multiagentes abiertos. Basado en la idea de proporcionar variantes semánticas alternativas para los actos del habla y las reglas de transición entre ellas que dependen del comportamiento de los agentes anteriores, nuestro marco proporciona una noción mejorada de semántica de base en la interacción continua, un mecanismo simple para distinguir entre el comportamiento compatible y esperado, yUna forma de especificar mecanismos de sanción y recompensa como parte de la ACL misma. Extendemos un marco común para la semántica de ACL basada en el compromiso para obtener estas propiedades, discutimos Desiderata para el diseño de semántica dinámica concreta junto con ejemplos y analizar sus propiedades. Categorías y descriptores de sujetos I.2.11 [Inteligencia artificial]: Sistemas de inteligencia artificial distribuida-Multiagente 1. Introducción El campo del lenguaje de comunicación de agentes (ACL) La investigación ha estado plagada de problemas de verificabilidad y conexión a tierra [10, 13, 17]. Semántica mentalista temprana que especifica la semántica del habla actos en términos de pre y después de las condiciones dependientes de los estados mentales de los participantes (por ejemplo, [3, 4, 12, 15]) carecen de verificabilidad con respecto al cumplimiento de los agentes con la semántica prevista (como la mentalLos estados de los agentes no pueden observarse en sistemas multiagentes abiertos (masa)). Incapaces de salvaguardarse contra el abuso por los agentes maliciosos, engañosos o que no funcionan mal, la semántica mentalista es inherentemente poco confiable e inapropiada para su uso en MAS abiertos en el que los agentes con objetivos potencialmente conflictivos pueden explotar deliberadamente a sus adversarios las concepciones de la semante de mensajes para provocar un cierto comportamiento. La semántica basada en el compromiso [6, 8, 14], por otro lado, definen el significado de los mensajes intercambiados entre agentes en términos de compromisos públicamente observables, es decir, promesas a lograr un estado de cosas o realizar ciertas acciones. Dicha semántica resuelve el problema de verificabilidad, ya que permiten rastrear el estado de los compromisos existentes en cualquier momento dados los mensajes y acciones observados para que cualquier observador pueda, por ejemplo, establecer si un agente ha realizado una acción prometida. Sin embargo, esto solo se puede hacer a posteriori, y esto crea un problema de fundamento, ya que no se pueden formar expectativas con respecto a lo que sucederá en el futuro al momento de pronunciar o recibir un mensaje únicamente por la semántica de ACL. Además, esto implica que la especificación de semántica no proporciona una interfaz para los mecanismos de deliberación y planificación de los agentes y, por lo tanto, no está claro cómo los agentes racionales podrían decidir si suscribirse a una semántica de ACL sugerida cuando se implementa. Finalmente, ninguno de los enfoques existentes permite al LCA especificar cómo responder a una violación de su semántica por parte de agentes individuales. Esto tiene dos implicaciones: en primer lugar, le deja al agente individual razonar sobre posibles violaciones, es decir, soportar la carga de planificar su propia reacción a otros comportamientos no conformes (por ejemplo, para sancionarlas) y anticipar a otrosreacciones a poseer mala conducta sin ninguna orientación de la especificación de ACL. En segundo lugar, los enfoques existentes no explotan las posibilidades de sancionar y recompensar ciertos comportamientos de manera inherente a la comunicación al modificar el significado futuro de los mensajes pronunciados o recibidos por agentes cumplidos/desviados. En este artículo, proponemos semántica dinámica (DSS) para ACL como una solución a estos problemas. Nuestra noción de DS se basa en la idea muy simple de definir diferentes alternativas para el significado de los actos de habla individuales (llamadas variantes semánticas) en una especificación de semántica de ACL y reglas de transición entre los estados semánticos (es decir, colecciones de variantes para diferentes actos de habla) que describen el significado actual de la ACL. Estos elementos tomados en conjunto dan como resultado una visión similar a FSM de las especificaciones de ACL donde cada estado individual proporciona una semántica de ACL completa y las transiciones de estado son desencadenadas por el comportamiento del agente observado para (1) reflejar las expectativas futuras basadas en la experiencia de interacción previa y (2)sanción o recompensa ciertos tipos de comportamiento. Al definir un marco DS para las ACL basadas en el compromiso, este documento hace tres contribuciones: 1. Una extensión de la semántica de ACL basada en el compromiso para proporcionar una noción mejorada de compromisos de base en la interacción del agente y para permitir que las especificaciones de ACL se usen directamente para la toma de decisiones racionales basadas en la planificación.2. Una forma simple de distinguir entre el comportamiento compatible y esperado con respecto a una especificación de ACL que permite el razonamiento sobre el comportamiento potencial de los agentes puramente desde una perspectiva de semántica de LCA.3. Un mecanismo para especificar cómo el significado evoluciona con el comportamiento del agente y cómo se puede usar para describir la sanción inherente a la comunicación y los mecanismos gratificantes esenciales para el diseño de la masa abierta. Además, discutimos Desiderata para el diseño de DS que se puede derivar de nuestro marco, presentes ejemplos y analizar sus propiedades. El resto de este documento está estructurado de la siguiente manera: la Sección 2 introduce un marco formal para la semántica dinámica de ACL. En la Sección 3 presentamos un análisis y discusión de este marco y discutimos Desiderata para el diseño de ACL con semántica dinámica. La Sección 4 revisa los enfoques relacionados, y la Sección 5 concluye.2. Marco formal Nuestro marco general para describir el tipo de masa que nos interesa es bastante simple. Sea ag = {1 ,..., n} Un conjunto finito de agentes, {aci} i∈Ag una colección de conjuntos de acción (donde ACI son las acciones del agente i), a = × n i = 1aci el espacio de acción conjunta y envéano un conjunto de estados de entorno. Una ejecución es una secuencia r = e1 a1 →...AT - 1 → ET donde ai ∈ A (ai [j] denota la acción del agente j en esta tupla), y ei ∈ Env. Definimos | r |= t, último (r) = et, r [1: j] es corto para la subsecedencia inicial de J-long de R, y escribimos R R para cualquier ejecución R IFF ∃j ∈ N.R = R [1: J]. Escribiendo R (Env, a) Para el conjunto de todas las ejecuciones posibles, podemos ver cada agente I como una función GI: R (Env, A) → ACI que describe las opciones de acción de los agentes dependiendo de la historia de los estados del entorno previo y las acciones conjuntas. El conjunto de todas las funciones de agentes para I Ded A y Env se denota por GI (Env, A). El entorno (finito, discreto, estacario, totalmente accesible, determinista) está definido por una función de transformador de estado F: Env × A → Env, de modo que la operación de sistemas para un estado inicial E1 se define por EI+1 = F (EI,G (E1 A1 → ... Ai - 1 → Ei)) para todos los i ≥ 1 (g es el vector conjunto de funciones GI). Esta definición implica que la ejecución de acciones se sincroniza entre los agentes, de modo que el sistema evoluciona a través de una ejecución de rondas donde todos los agentes realizan sus acciones simultáneamente. Denotamos el conjunto de todas las ejecuciones dada una configuración particular de funciones de agente G por R (Env, A, G). Escribimos gi ∼ r donde gi una función de agente y r a ejecución iff ∀1 ≤ j ≤ | r | .gi (r [1: j]) = aj [i] (es decir, gi es compatible con R en cada vez queen lo que respecta a las acciones). Utilizamos un lenguaje lógico proposicional (estándar) l con relación de implicación e | = ϕ para e ∈ Env y ϕ ∈ L Deunset Pending Pendiente Activo Cancelado Violado Figura 1: Estados de compromiso y transiciones estatales en el modelo Fornara y Colombetti: Bordes dibujados usando sólidoLas líneas indican transiciones provocadas por la comunicación del agente, las líneas discontinuas indican la acción del agente físico o los eventos ambientales que causan transiciones estatales multadas de la manera habitual.1 Introducimos proposiciones especiales (i, a) para cada acción a ∈ ∪n i = 1aci en lPara denotar, es cierto que la acción A se acaba de realizar, extendiendo | = a ejecutar R de la siguiente manera: R | = ϕ si Last (r) | = ϕ r | = Done (i, a) si r = e1 a1→...AT - 1 → ET ∧ A = AT - 1 [I] I.E. Hecho (i, a) es exactamente cierto para aquellas acciones que formaron parte del vector de acción conjunta Ai - 1 en el estado predecesor, y todas las demás fórmulas que fueron implicadas por el último estado de R siguen siendo válidos. Nuestro modelo implica que cada agente ejecuta exactamente una acción en cada paso de tiempo.2.1 Compromisos Nuestra noción de compromisos se basa en una ligera variación del marco propuesto por Fornara y Colombetti [6]: los compromisos surgen como INNSET, p.Cuando una solicitud para lograr χ si una determinada condición ϕ se hace realidad se emite de i a j. El compromiso queda pendiente si el deudor J debe cumplirlo, p.después de haberlo aceptado. Un compromiso pendiente se activa si su condición ϕ se vuelve verdadera, y si se produce χ en ese caso, se cumple, de otra manera violado. Los compromisos pueden cancelarse en diferentes situaciones, p.Si se rechaza un compromiso no establecido. Además, los eventos ambientales pueden conducir a χ para ser verdaderos, en cuyo caso el compromiso se cumple sin la contribución de los deudores. La Figura 1 proporciona una representación gráfica de las transiciones de estado de compromiso en este marco. Además de una notación ligeramente diferente utilizada para mantener un historial de compromisos más detallado, los ampliaremos para contener una condición de desactivación ψ aparte de ϕ (que llamamos condición de activación) que hace que cualquier compromiso se cancele si se hace realidad.1 más precisamente L contiene proposiciones atómicas p = {p, q ,...}, los conectivos habituales ∨ y ¬ (con abreviaturas ⇒ y ∧). En cuanto a la semántica, una función de interpretación de funciones I: P × env → {, ⊥} asigna un valor de verdad para cada proposición en cada estado ambiental, y la relación de implicación e | = ϕ para e ∈ Env y ϕ ∈ L se define inductivamente:E | = ϕ si ϕ ∈ P e I (ϕ, e) =;e | = ¬ϕ si e | = ϕ;e | = ϕ ∨ ψ si e | = ϕ o e | = ψ. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 101 D: CS ← CS∪ {ι, C: χ ⊕ ϕ ψ t |ι, s: χ ⊕ ϕ ψ ∈ Cs, r | = ψ, s ∈ {u, p, a}, ι, c: χ ⊕ ϕ ψ /∈ Cs} a: CS ← CS∪ {ι, A: χ⊕ ϕ ψ t |ι, P: χ ⊕ ϕ ψ ∈ Cs, R | = ϕ, ι, A: χ ⊕ ϕ ψ /∈ CS} S: CS ← CS∪ {ι, F: χ ⊕ ϕ ψ T |ι, a: χ ⊕ ϕ ψ ∈ CS, R | = χ, ι, F: χ ⊕ ϕ ψ /∈ CS} F: CS ← CS∪ {ι, F: χ ⊕ ϕ ψ I → J T |ι, a: χ ⊕ ϕ ψ i → J t - 1 ∈ Cs, r | = Done (i, a), causas (a, χ)} V: CS ← Cs∪ {ι, V: χ ⊕ ϕ ψ I →J T |ι, a: χ ⊕ ϕ ψ I → J t - 1 ∈ Cs, r | = Done (i, a), ¬ Causes (a, χ)} Tabla 1: Reglas de procesamiento de compromiso ambiental para la ejecución actual R con | R |= T Definición 1. Un compromiso es una estructura ι, s: χ ⊕ ϕ ψ I → J t donde - ι es un identificador de compromiso único, - S denota el estado de compromiso (cualquiera de los no establecidos, pendientes, activos, violados, cumplidos o cancelados, abreviado por elrespectivo inicial), - i es el deudor, j es el acreedor, - χ ∈ L es el debitum (es decir, la proposición que me compromete a hacer realidad frente a J), - ϕ, ψ ∈ L son las condiciones de activación/desactivación, - y T es el instante (en una ejecución) en el que este compromiso entró en su estado actual s.Como ejemplo, X, V: Recibido (5, $ 500) ⊕ Recibió (3, Toys) devuelto (3, Toys) 3 → 5 12 Denota que el Agente 3 violó el Compromiso X con el Agente 5 para pagarle $ 500 en TimeStep 12. Se suponía que debía realizar el pago después de recibir los juguetes a menos que enviara los juguetes. Introducimos las condiciones de desactivación para poder revocar completamente los compromisos existentes: enviar el dinero no constituye un cumplimiento del contrato original, sino una anulación de los mismos. Esto nos proporciona la capacidad de definir las condiciones de validez utilizando ϕ y ψ, lo cual es útil para cosas como plazos para compromisos no establecidos (si no recibo una respuesta dentro de 3 pasos de tiempo, mi solicitud caducará). Para la brevedad, a veces omitimos índices o elementos de contenido cuando está claro del contexto (en particular, a menudo escribimos γ para el contenido χ ⊕ ϕ ψ). Escribimos C para el conjunto de todos los compromisos posibles y denotamos conjuntos de compromisos (las llamadas tiendas de compromiso) por cs ∈ ℘fin (c). Para manejar los efectos de los eventos ambientales y las acciones de los agentes en una tienda de compromiso CS, la Tabla 1 presenta cinco reglas de transición de compromiso que se ejecutan en cada paso de tiempo por el sistema o cualquier observador que tenga la intención de aclarar el estado de los compromisos existentes en el orden mostrado en el orden mostrado:La regla de desactivación D es la primera en disparar y cancela los compromisos no establecidos, pendientes o activos si ψ se vuelve verdadero. Para los compromisos pendientes restantes 2, la regla de activación A describe cómo estos se vuelven activos si ϕ se vuelve verdadero. Tenga en cuenta que cuando ϕ es verdadero en los estados posteriores, verificamos si 2 para evitar problemas con especificaciones de compromiso contradictorias (por ejemplo, cuando tanto ϕ y ψ se vuelven verdaderos), damos una precedencia estricta de desactivación sobre la activación.Este compromiso activo está contenido en CS para evitar duplicados (esto se debe a que mantenemos un registro completo del historial de compromiso por razones que se aclararán a continuación) .3 La regla S atiende la casualidad, es decir, el cumplimiento de los compromisos no provocados por el agente respectivo,pero simplemente por cambios ambientales que hicieron que el debitum fuera verdad. Finalmente, las reglas de cumplimiento/violación f/v registran si la acción realizada por el deudor en el paso anterior (r | = hecho (i, a)) ha causado el debitum χ de cualquier compromiso que se convirtiera en activo en el tiempo de tiempo anterior para convertirse enverdadero. Solo necesitamos considerar aquellos compromisos que se volvieron activos en el paso anterior T - 1, ya que podemos verificar su estado de cumplimiento en t.Esta verificación depende de un predicado dependiente del dominio causas (a, χ) que no hemos mencionado hasta ahora. Debería ser cierto si se supone que la acción A provoca χ, y delinea la noción social existente de lo que constituye un intento razonable de lograr χ en el contexto dado (su definición puede variar desde requerir que χ realmente se haya logrado para permitir cualquier accióna que no necesariamente resulta en ¬χ).2.2 Grounding en Fornara y Colombettis y enfoques similares, el estado de los compromisos es verificable, pero no se basan en las expectativas sobre la interacción. Dicha semántica (similar en estilo a lo que acaba de definir en términos de reglas de actualización de CS) nos dice qué compromisos existen y en qué estado están, pero no cómo esto afectará el comportamiento del agente futuro. Para proporcionar tal base, presentamos nociones de comportamiento compatible y esperado. Un agente se está comportando de conformidad con sus compromisos si siempre cumple inmediatamente todos los compromisos activos. Más precisamente, se dice que el comportamiento del agente I cumple con CS en el momento T IFF ∀K ≤ T ι, A: γ I → J k ∈ Cs ⇒ ι, F: γ I → J k ∈ Cs aunque simple, esta definición deEl cumplimiento no es muy útil porque impone restricciones a CSS pero no a las funciones de agentes reales. Para lograr esto, en su lugar podemos usar el contenido de la CS para restringir el rango de funciones de agentes admisibles a aquellos que están de acuerdo con él utilizando la siguiente definición: Definición 2. Para cualquier ejecución r ∈ R (env, a), deje CS (R) el conjunto de compromisos que han resultado de la ejecución de R suponiendo que ciertas acciones (incluidos los mensajes) creen compromisos o cambien su estado. El conjunto de funciones de agentes compatibles con respecto a una tienda de compromiso CS es 3, mientras que los identificadores de compromiso afectan negativamente la legibilidad de nuestra notación, son necesarias aquí para determinar de manera única qué compromiso pendiente se activa.102 El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) definidos como cumplidos (CS): = ˘ GI ∈ Gi (Env, A) ˛ ˛ ∀r ∼ Gi.ι, P: χ ⊕ ϕ ψ I → J ∈ Cs (R) = CS.∀r r.ι, A: χ ⊕ ϕ ψ I → J | R |∈ Cs (R) ⇒ `∃a ∈ Aci.Causes (a, χ) ∧ GI (R) = A ´ ¯ Lo que captura esta definición es la siguiente caracterización de una función de agente compatible GI: para todas las ejecuciones r que la función del agenteGI contribuye a: si R ha creado un compromiso pendiente con respecto a χ, entonces si este compromiso se activa al final de alguna extensión R de R en el futuro, GI hará que el agente realice una acción A que causa χ.4 Siguiente, siguiente,Para atender la anticipación del comportamiento no conforme, necesitamos introducir una noción de comportamiento esperado que anule el comportamiento compatible. Para esto, presentamos un segundo tipo de compromisos que llamaremos expectativas para evitar confusiones y distinguir los compromisos ordinarios (ahora llamados normativos) mediante el uso de soportes redondos (ι, s: γ) I → J t. Se tratan exactamente como otros compromisos en términos de las reglas presentadas anteriormente, pero expresan lo que se espera que haga el agente (en el sentido no normativo de una predicción objetiva del comportamiento) en lugar de lo que se supone que debe hacer en un sentido normativo. Para definir las nociones que necesitamos a continuación, introducimos las siguientes construcciones: Cs: = {ι, S: γ ∈ Cs | S ∈ {U, P, A, F, V}} Cs: = {(ι, S: γ) ∈ CS | (ι, S: γ) ∈ Cs, ι, S: γ ∈ CS, S, S ∈ {U, P, A, F, V}} CS simplemente restringe el almacén de compromiso a todos los compromisos normativos. Por lo tanto, el cumplimiento (CS) especifica lo que se supone que deben hacer los agentes. CS, por otro lado, anula todos los elementos de compromiso normativo en CS para los cuales también existe una expectativa, es decir, las expectativas tienen precedencia sobre los compromisos normativos. Con esto, podemos definir el comportamiento esperado como se esperaba (CS): = Cumplante (CS), es decir, el comportamiento que se adhiere a las expectativas donde tales expectativas existen y de lo contrario cumple. El tratamiento separado, paralelo, del comportamiento cumplido y esperado tiene dos ventajas: en primer lugar, podemos responder a un comportamiento inesperado, es decir, cuando esperamos que alguien no obedezca sus compromisos, aún podemos responder a él si lo hacen (y, por ejemplo,, recupere la confianza en ellos). En segundo lugar, podemos atender una variedad de reglas para traducir tiendas de compromiso a eventos futuros reales que un agente de razonamiento puede usar en su proceso de planificación. Para los fines de este documento, asumiremos que los agentes basan sus predicciones sobre los demás en el comportamiento esperado si es diferente del comportamiento compatible y que predicen el comportamiento compatible, de lo contrario.4 Tenga en cuenta la cuantificación en esta definición: la propiedad debe mantenerse para cada carrera que dio lugar a ι y es compatible con GI. En particular, esto debe ser independiente de cualquier parte de la historia (por ejemplo, otras acciones de agentes y estados de entorno previos) dados CS (R). También cuantificamos sobre todas las extensiones R de R, es decir, el cumplimiento del compromiso tiene que suceder si surgen las condiciones apropiadas independientemente de otros factores.2.3 Semántica de ACL estática La Tabla 2 muestra un ejemplo para un pequeño fragmento de una semántica de ACL definida usando nuestro marco, con dos definiciones alternativas (AC y AC2) para la semántica del tipo de mensaje de aceptación. Cada uno de los llamados operadores de diálogo (similar a los esquemas de acción de planificación de IA) se define utilizando la notación gráfica P a Q donde P, A y Q son esquemas para condiciones previas, mensajes (de cierto tipo) y post-condiciones, respectivamente. Las condiciones previas determinan si un esquema de acción es aplicable en una determinada situación o no y contiene fórmulas de L y/o restricciones en el contenido actual de CS. Las postcondiciones contienen cambios en la base de conocimiento y modificaciones a CS, es decir, se interpretan como ADD/DeletEls en la planificación tradicional de IA. Para cualquier operador de este tipo O = P, A, Q Definimos pre (O) = P, Acción (O) = A y Post (O) = Q. Todos los elementos de un operador de diálogo pueden contener variables lógicas en sus variables previas y posteriores a las condiciones y el remitente/receptor/contenido en la ranura de acción. En nuestro fragmento de ejemplo, el operador RQ para solicitudes crea un compromiso no establecido con un nuevo identificador ι y una marca de tiempo actual (suponemos que r | = Time (t) ⇔ | r | = t, y hay un tiempo de sistema global que puede serinspeccionado por todos los agentes), y AC/RJ agregue un equivalente pendiente/cancelado de ι a CS. Un fragmento que consiste en {rq, rj, ac} es equivalente a la semántica estándar de los tipos performativos respectivos definidos en [6] .5 Tenga en cuenta que nuestros operadores solo contienen condiciones previas y posteriores verificables, y si los agentes desean conformarsea él necesitan cumplir con estos operadores. A continuación, asumiremos que los agentes siempre se adhieren a la especificación de ACL sintácticamente 6. El uso de AC2 en lugar de AC nos permite explotar el poder de nuestra distinción entre el comportamiento cumplido y esperado, expresando que no confiamos en que me adhiera a la semántica normal de aceptación: su poscondición especifica que esperado (CS) no está restringido a los comportamientos queCumplir el compromiso, pero sugiera que en realidad se haya cancelado. Al mismo tiempo, mantenemos el compromiso normativo de que ι está pendiente, por lo que se considera que el comportamiento se encuentra dentro de los cumplidos (C) si me desvía de nuestra expectativa (pesimista) y hace lo correcto.2.4 Semántica dinámica 2.4.1 Definición de la semántica dinámica Para definir DS para ACL ahora introducimos un sistema de transición de estado en el que cada estado especifica una semántica ordinaria (estática) basada en el compromiso y una gama de pares de agentes para los cuales se supone que estos semánticos aplican.5 Tenga en cuenta que permitimos solicitar cosas idénticas antes de recibir una respuesta y responder varias veces a la misma solicitud. Se pueden introducir condiciones adicionales simples para evitar estos efectos que omitimos aquí por falta de espacio. Lo mismo es cierto para las restricciones adicionales para administrar problemas de flujo de control en los diálogos reales (por ejemplo, toma de turnos).6 Esto significa que, para una sustitución variable apropiada ϑ, r | = pre (O) ϑ se mantiene cuando O se aplica en R y que CS (R) se transforma de acuerdo con Post (O) ϑ después de su aplicación. El sexto intl. Conf.sobre agentes autónomos y sistemas de múltiples agentes (Aamas 07) 103 RQ: Time (T), nueva (ι) solicitud (I, J, ι: γ) CS ← CS ∪ {ι, U: γ I → J T} RJ:ι, u: γ j → i t ∈ Cs, tiempo (t) rechazar (i, j, ι: γ) cs ← cs ∪ {ι, c: γ i → j t} ac: ι, u: γ j → i t ∈Cs, tiempo (t) aceptar (i, j, ι: γ) cs ← cs ∪ {ι, p: γ i → j t} ac2: ι, u: γ j → i t ∈ Cs, tiempo (t) aceptar (i, J, ι: γ) CS ← CS ∪ {ι, P: γ I → J T} ∪ {(ι, C: γ) I → J T} Tabla 2: Ejemplo de semántica basada en compromiso para un pequeño fragmento de ACL ι, v: Γ I → J ∈ Cs: {(i, ∗)} ∪ {(j, i)} S0 S1 ∀ ι, V: γ I → J t ∈ Cs ∃ ι, F: γ I → J t ∈ Cs.T>t: {(i, ∗)} Figura 2: Diagrama de transición de estado similar a FSM que describe la relación δ en una definición de especificación DS 3. Una semántica dinámica (DS) es una estructura O, S, S0, δ donde - O = {O1, O2 ,..., en} un conjunto de operadores de diálogo, - S ⊆ ℘ ℘ (O) es un conjunto de estados semánticos especificados como subconjuntos de operadores de diálogo que son válidos en este estado, - s0 ∈ S es el estado semántico inicial, y la relación de transiciónΔ ⊆ S × ℘ (C) × ℘ (Ag × Ag) × S define las transiciones sobre S activadas por las condiciones expresadas como elementos de ℘ (c) (C es el conjunto de todos los compromisos posibles). El significado de una transición (s, c, {(i1, j1), ..., (in, jn)}, s) ∈ δ es el siguiente: Suponga un acto de mapeo: Ag × Ag → S que especifica que elLa semántica de los operadores en s es para los mensajes enviados de i a j. Entonces, si CS ∈ C (es decir, el CS actual coincide con la restricción C dada como una colección de CSS posibles), esto desencadenará una transición a State S para todos los pares de agentes en {(i1, j1) ,..., (en, jn)} para el cual se cumplió la restricción y actualizará actuar en consecuencia. En otras palabras, el ACT mapeo rastrea qué versión de la semántica es válida para los que pares de socios de comunicación con el tiempo.2.4.2 Ejemplo Para ilustrar estos conceptos, considere el siguiente ejemplo: Sea O = {RQ, RJ, AC, AC2}, S = {S0, S1} donde s0 = {rq, rj, ac} y s1 = {rq,RJ, AC2}, es decir, hay dos posibles estados de la semántica que solo difieren en su definición de aceptación (llamamos versiones alternativas de un solo operador de diálogo como las variantes semánticas AC y AC2). Suponemos que inicialmente actúan (i, j) = s0 para todos los agentes i, j ∈ Ag. Describimos δ por el diagrama de transición que se muestra en la Figura 2. En este diagrama, los bordes transportan etiquetas C: A donde C es una restricción en el contenido de CS seguido de una descripción del conjunto de pares de agentes A para el cual se debe hacer la transición al estado objetivo. Escribir A (S) = Act-1 (s) para el llamado rango de pares de agentes para los cuales S está activo, usamos variables de agentes como I y J y el símbolo comodín ∗ que puede estar vinculado a cualquier agente en A (s), y suponemos que este vinculante se traslada a las descripciones de A. Por ejemplo, el borde con la etiqueta ι, v: γ i → j ∈ Cs: {(i, ∗)} ∪ {(j, i)} se puede interpretar de la siguiente manera: seleccione todos los pares (i, j) ∈ A (S0) para el cual se aplica ι, V: γ I → J ∈ Cs (es decir, he violado cierto compromiso hacia J) y hacer que S1 sea válido para el conjunto de agentes {(i, k) | k ∈ A (S0)} ∪ ∪ ∪(Ji)}. Esto significa que para todos los agentes que han mentido, S1 se volverá activo para (i, j) donde j ∈ A (S0) y S1 también se actuarán activos para (J, I). La forma en que funciona el DS del diagrama anterior es la siguiente: inicialmente la semántica dice (para cada agente I) que cumplirán cualquier compromiso con sinceridad (el uso de AC asegura que el comportamiento esperado sea equivalente a un comportamiento compatible). Si un agente, viola un compromiso una vez que S1 se activa para I hacia todos los demás agentes, por lo que no esperarán que cumpla con los compromisos futuros. Además, esto también se aplicará a (J, I) para que el culpable no deba esperar que el agente engañado J mantenga sus promesas hacia I en el futuro. Sin embargo, esto no afectará las expectativas con respecto a sus interacciones con I por agentes distintos a mí (es decir, todavía no tienen derecho a violar sus propios compromisos). Esto refleja la idea de que (solo) agentes que han sido engañados pueden traspasar (solo) contra aquellos agentes que los traspastaron. Sin embargo, si alguna vez cumple algún compromiso (después de la última violación, esto se garantiza por la compleja restricción utilizada como etiqueta para la transición de S1 a S0), la semántica en S0 será válida para i nuevamente. Sin embargo, en este caso, S1 seguirá siendo válido para el par (j, i), es decir, el agente J recuperará la confianza en I, pero no se puede esperar que sea confiable para que nunca más. En lugar de sugerir que este es un mecanismo inherente a la comunicación particularmente útil para sancionar y recompensar tipos específicos de comportamiento, este ejemplo sirve para ilustrar la expresividad de nuestro marco y el tipo de distinciones que nos permite hacer.2.4.3 Semántica formal La semántica de un DS se puede definir de manera inductiva de la siguiente manera: Sea CS (R) denotar el contenido de la tienda de compromiso después de correr R como antes. Usamos la notación a (δ, cs) = {(i, j) | cs | i, j ∈ C} ∩ a (s) ∩ a para denotar el conjunto de agentes que se moverán de s a s debido aRegla de transición Δ = (S, C, A, S) ∈ δ dada CS, donde CS | I, J es el conjunto de compromisos que mencionan I y/o J (en sus ranuras de remitente/receptor/contenido). En otras palabras, A (δ, Cs) contiene aquellos pares de agentes que (i) mencionados en los compromisos cubiertos por la restricción c, (ii) contenida en el rango de S, y (iii) listados explícitamente en A As pertenecientea aquellos pares de agentes que deberían verse afectados por la transición δ.104 El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) Definición 4. El estado de una semántica dinámica O, S, S0, δ después de ejecutar R con predecesor inmediato R se define como un mapeo ACTR como sigue: 1. r = ε: actε (i, j) = s0 para todos i, j ∈ AG2. r = ε: actr (i, j) = 8> <>: s ifδ = (s, c, a, s) ∈ δ.(i, j) ∈ A (δ, CS (R)) ACTR (I, J) De lo contrario, esto mantiene la propiedad Act - 1 R (S) = ACT - 1 R (S) - A (δ, CS (R)), que especifica que los pares de agentes que se moverán de S a S se eliminan del rango de S y se agregan al rango de S. Lo que no garantiza esta definición es la coherencia del sistema de transición del estado, es decir, asegurarse de que el estado sucesor semántico se identifique de manera única para cualquier estado de la tienda de compromiso y el estado anterior para que a cada par de agentes solo se le asigne un estado activo en cada paso, es decir, ACTR es en realidad una función para cualquier integración R.7 2.4.4 Una vez que se ha especificado el DS en sí, necesitamos integrar los diferentes componentes de nuestro marco para monitorear la dinámica de nuestra semántica de ACL y sus implicaciones para el comportamiento de los agentes esperados. Comenzando con una tienda de compromiso inicialmente vacía CS y el estado semántico inicial S0 tal que actε (I, J) = S0 para dos agentes I y J, el agente (o observador externo) observa (un subconjunto parcial de) todo lo que se comunica enel sistema en cada paso. Al aplicar las reglas de transición de compromiso (D, A, S, F y V), podemos actualizar CS en consecuencia, ignorando cualquier mensaje observado enviado de I a J que no coincida sintácticamente el conjunto de operadores de diálogo definido en ACTR (I, J) parauna ejecución actual r.Después de que se haya realizado esta actualización para todos los mensajes y acciones observados en este ciclo, que no deberían depender del orden de los mensajes8, podemos calcular cualquier mensaje enviado desde i a j El nuevo valor de ACTR (i, j) dependiendo delReglas de transición semántica del DS si R es la ejecución sucesora de r.Con esto, podemos determinar cuál será el comportamiento compatible y esperado de los agentes en estas nuevas condiciones. Por lo tanto, un agente puede usar información sobre el comportamiento esperado en sus propios procesos de planificación al suponer que todos los agentes involucrados exhibirán sus comportamientos esperados (en lugar de simplemente cumplidos). Esta predicción no siempre será más precisa que la semántica de ACL normal (estática), pero dado que es de conocimiento común que los agentes asumen que ocurre el comportamiento esperado (y, en virtud de la especificación DS-ACL, tienen el derecho de hacerlo)Las especificaciones de ACL dinámicas razonables harán disposiciones para garantizar que sea más seguro asumir un comportamiento esperado en lugar de complementar si desean promover su uso por parte de los agentes.7 Una forma de garantizar esto es exigir que ∀s ∈ S. (∩ {C | (S, C, A, S) ∈ δ (S)} = ∅) para que no hay dos restricciones relacionadas con los bordes salientes de S CANser cumplido por CS a la vez. En algunos casos, esto puede ser demasiado grueso: sería suficiente para que las limitaciones sean mutuamente excluyentes para el mismo par de agentes en cualquier momento, pero esto tendría que ser verificado para un DS individual en caso de caso por caso.8 Este es el caso de nuestros operadores, porque sus condiciones previas y posteriores nunca se referen o afectan a ningún compromiso que no sea aquellos que involucran tanto a I y J- Evitar cualquier conexión con terceros nos ayuda a mantener la actualización CS independiente del pedido del pedido.en el que se procesan las observaciones.2.4.5 Problemas de complejidad La principal desventaja de nuestro enfoque es la complejidad espacial de la especificación de ACL dinámico: si D es el número de operadores de diálogo en un idioma y B es el número máximo de variantes semánticas de un solo operador de diálogo dentro de este idioma,La especificación DS tendría que especificar estados O (db). En muchos casos, sin embargo, la mayoría de los actos de habla no tendrán diferentes variantes (como RQ y RJ en nuestro ejemplo) y esto puede reducir significativamente el número de estados DS que deben especificarse. En cuanto al comportamiento en tiempo de ejecución de nuestro mecanismo de procesamiento de semántica, podemos suponer que N mensajes/acciones se envían/realizan en cada paso de procesamiento en un sistema con N agentes. Cada regla de procesamiento de compromiso (D, S, etc.) tiene que realizar un paso sobre el contenido de CS. En el peor de los casos, cada compromiso creado originalmente (de los cuales puede haber NT después de los pasos) puede haberse vuelto pendiente, activo y violado (que no requiere ninguna acción física adicional, para que cada agente pueda crear un nuevo compromiso en cada paso).Estre, si algún agente crea un nuevo compromiso en cada paso sin cumplirlo, esto dará como resultado que el tamaño total de CS esté en O (NT) .9 con respecto a las transiciones de estado semántico, hasta que sean n.afectado en una sola iteración por N mensajes. Suponiendo que la verificación de las restricciones CS para estas transiciones tomaría O (NT), esto produce un tiempo de actualización total de O (N2 T) para rastrear la evolución de DS. Este límite puede reducirse a O (N2) si se hace un supuesto de cuasi-estatificaridad limitando la ventana de compromisos anteriores que se consideran al verificar las limitaciones de transición a un tamaño constante (y así obtener un conjunto finito de posibles tiendas de compromiso).10 3. Análisis y discusión La principal fortaleza de nuestro marco es que nos permite explotar los tres elementos principales de la reciprocidad: • Adaptación basada en la reputación: el DS adapta las expectativas hacia el agente I según el comportamiento previo al modificar el estado semántico para reflejar mejorEste comportamiento (basado en la suposición de que se repetirá en el futuro).• Mutualidad de las expectativas: el DS adapta las expectativas hacia el comportamiento JS de acuerdo con el comportamiento previo hacia J para reflejar mejor la respuesta JS al comportamiento observado (en particular, permitiendo que J se comporte hacia I como me comporté hacia J antes).• Mecanismos de recuperación: el DS permite que i vuelva a un estado semántico anterior después de haber deshecho un cambio en las expectativas por parte posterior, un cambio de comportamiento posterior (por ejemplo, por medio de la redención). En los sistemas abiertos en los que no podemos hacer cumplir ciertos comportamientos, estos son efectivamente el único medio disponible para sanciones y recompensas indirectas.9 Esto es en realidad solo un límite más bajo en la complejidad para el procesamiento de compromiso que podría empeorar aún más si domina la complejidad de verificar la implicación | =;Sin embargo, esto también se mantendría para una semántica de ACL estática.10 Por ejemplo, esto podría ser útil si queremos descartar compromisos cuyo estado se modificó por última vez hace más de k pasos de tiempo (esto es problemático, ya que podría obligarnos a descartar ciertos compromisos unset/pendientes antes de que sean pendientes/activos). El sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 105 Hay dos dimensiones adicionales que afectan los mecanismos de sanciones y recompensas basados en DS y son ortogonales a lo anterior: uno se refiere al carácter de los cambios en el estado semántico (es decir, si es una recompensa.o castigo), el otro el grado de adaptación (mecanismos basados en la reputación, por ejemplo, no necesitan reflejar de manera realista el comportamiento del culpable, sino que puede utilizar la estigmatización inmediata (exagerada) de los agentes como elemento disuasorio). Aunque simple, nuestro ejemplo DS descrito anteriormente utiliza todos estos aspectos, y aparte de la consistencia e integridad, también satisface algunas otras propiedades útiles: 1. No redundancia: no hay dos operadores de diálogo en O deben tener condiciones previas y posteriores a las condiciones, y las dos variantes semánticas de un operador deben diferir en términos de condiciones previas y/o posteriores: ∀o, o ∈ O.(pre (o) = pre (o) ∧post (o) = post (o) ⇒ o = o) ∀o, o ∈ O.(Acción (O) = Acción (O) ⇒ Pre (O) = Pre (O) ∨ Post (O) = Post (O)) 2. Accesibilidad de todos los estados semánticos: cualquier restricción que cause una transición debe ser satisfactable en principio al usar los operadores de diálogo y las acciones físicas que se proporcionan: ∀ (S, C, A, S) ∈ Δ ∃r ∈ R (Env, A).CS (R) ∩ C = ∅ 3. Distinción entre el comportamiento esperado y el cumplimiento: el contenido de las expectativas debe diferir del de los compromisos normativos al menos para algunas variantes semánticas (dando lugar a expectativas no conformes para algunas carreras): ∃r ∈ R (env, a). Exexión (CS (CS(r)) = Cumplante (CS (R)) 4. Cumplimiento/desviación Realiabilidad: debe ser posible que los agentes en principio cumplan con compromisos normativos o se desvíen de ellos en principio: ∃r ∈ R (env, a). Exexión (CS (R)) = ∅∧ Cumplante (CS (R (R (R (R (R (R (R) (R (R (R (R (R (R (R (R))) = ∅ Aunque no es absolutamente esencial, constituyen desiderata para el diseño de DS-ACL a medida que aumentan la simplicidad y la claridad de una especificación de semántica dada. Nuestro marco plantea preguntas interesantes sobre otras propiedades potenciales de DS como: 1. Respeto por la autonomía del compromiso: la semántica no debe permitir que un agente cree un compromiso pendiente para otro agente o viole un compromiso en nombre de otro agente. Si bien en algunos casos algunos agentes deberían poder hacer cumplir los compromisos en otros, esto generalmente debe evitarse para garantizar la autonomía del agente.2. Evitar la inconsistencia del compromiso: el ACL debe no permitir el compromiso con acciones o creencias contradictorias, o al menos proporcionar operadores para rectificar tales afirmaciones contradictorias. Bajo compromisos contradictorios, no se puede cumplir el comportamiento posible para que el diseñador decida en qué medida se debe permitir esto.3. Juicio sin prejuicios: la predicción del comportamiento esperado no debe desviarse de la predicción de comportamiento que cumple si el comportamiento desviado no se ha observado hasta ahora (en particular, esto debe durar para el estado semántico inicial). Esto no siempre es deseable ya que la desconfianza inicial es necesaria en algunos sistemas, pero aumenta las posibilidades de que los agentes acepten participar en la comunicación.4. Convergencia: el estado semántico de cada uno de los operadores de diálogo permanecerá estable después de un número finito de transiciones, independientemente de cualquier comportamiento de agente adicional11. Si esta propiedad se mantiene, esto implicaría que los agentes pueden dejar de rastrear las transiciones de estado semántico después de una cantidad de interacción inicial. La ventaja de esto es la reducción de la complejidad, que, por supuesto, tiene el precio de renunciar a la adaptividad.5. Perdón: después de la desviación inicial, el comportamiento más conforme de un agente debería conducir a un estado semántico que predice un comportamiento compatible para ese agente nuevamente. Aquí, tenemos que intercambiar cautelicias contra la provisión de incentivos para reanudar el comportamiento cooperativo. Sin embargo, confiar en un agente hace que otros sean vulnerables a la explotación: la lista negra de un agente para siempre podría llevar a ese agente a mantener su comportamiento impredecible y potencialmente malicioso.6. Igualdad: a menos que esto sea requerido por restricciones específicas del dominio, la misma dinámica de la semántica debería aplicarse a todas las partes involucradas. Nuestra semántica de ejemplo simple satisface todas estas propiedades de convergencia. Muchas de las propiedades anteriores son discutibles, ya que tenemos que intercambiar cautelicias contra la provisión de incentivos para el comportamiento cooperativo. Si bien no podemos hacer ninguna declaración general aquí con respecto al diseño óptimo de DS-ACL, nuestro marco proporciona las herramientas para probar y evaluar el rendimiento de diferentes tales mecanismos sancionadores y gratificantes inherentes a la comunicación (es decir, reglas sociales que no presuponen la capacidad de dirigir o recompensar el castigo o recompensara través de acciones físicas) en aplicaciones del mundo real.4. El razonamiento basado en las expectativas laborales relacionados sobre la interacción se propuso por primera vez en [2], considerando la evolución de las expectativas descritas como expectativas probabilísticas de la comunicación y las secuencias de acción. Los mismos autores sugirieron un marco más general para la semántica de comunicación basada en expectativas [9], y defienden una visión consecuencialista de la semántica que se basa en definir el significado de las expresiones en términos de sus consecuencias esperadas y actualizar estas expectativas con nuevas observaciones [11] Sin embargo, su enfoque no utiliza una noción explícita de compromisos que en nuestro marco media entre la comunicación y el fundamento basado en el comportamiento, y proporciona una clara distinción entre una noción normativa de cumplimiento y una noción más empírica de expectativa. La base de la semántica de ACL (mentalista) se ha investigado en [7], donde la información fundamentada se considera información que se expresa y aceptan públicamente como cierta por todos los agentes que participan en una conversación. Al igual que [1] (que basa la noción de públicamente expresada en roles en lugar de estados internos de los agentes), esta principal preocupación de los autores es proporcionar una base verificable para determinar la semántica de los estados mentales y los compromisos expresados. Aunque nuestro marco solo se preocupa por el compromiso con el logro de los estados de cosas en lugar de la información intercambiada, en cierto sentido, DS proporciona una visión alternativa al especificar qué sucederá si se violan los supuestos sobre los que se acepta públicamente.11 en un sentido no trivial, es decir, cuando algunas transiciones iniciales son posibles en principio 106 el sexto intl. Conf.En agentes autónomos y sistemas de múltiples agentes (AAMAS 07), nuestro marco también está relacionado con los métodos deoípicos para la especificación de obligaciones, normas y sanciones. En esta área, [16] es el único marco que somos conscientes del cual considera obligaciones dinámicas, normas y sanciones. Sin embargo, como hemos descrito anteriormente, utilizamos únicamente la evolución semántica como un mecanismo sancionador y gratificante, es decir, a diferencia de este trabajo, no asumimos que los agentes pueden ser castigados o recompensados directamente. Finalmente, la estructura similar a FSM de los sistemas de transición DS en combinación con la comunicación de agentes recuerda al trabajo en instituciones electrónicas [5], pero allí está el enfoque en proporcionar diferentes medios de comunicación en diferentes escenas del proceso de interacción (por ejemplo, diferentes protocolosPara diferentes fases de interacción basada en el mercado) mientras que nos centramos en diferentes variantes semánticas que se utilizarán en el mismo contexto de interacción.5. Conclusión Este documento introduce una semántica dinámica para las ACL como un método para lidiar con algunos problemas fundamentales de comunicación de agentes en sistemas abiertos, la idea subyacente simple es que los diferentes cursos de comportamiento de los agentes pueden dar lugar a diferentes interpretaciones del significado de los mensajes intercambiados entre los agentes. Basado en un marco común de semántica basada en el compromiso, presentamos una noción de base para compromisos basados en nociones de comportamiento compatible y esperado. Luego definimos la semántica dinámica como sistemas de transición de estado en diferentes estados semánticos que pueden verse como diferentes versiones de la semántica de LCA en el sentido tradicional, y se pueden asociar fácilmente con una visión basada en la planificación del razonamiento sobre la comunicación. De este modo, nuestro enfoque estaba en la simplicidad y en proporcionar mecanismos para rastrear la evolución semántica de manera algorítmica, para garantizar la aplicabilidad a muchos diseños de agentes diferentes. Discutimos las propiedades de nuestro marco que muestran cómo se puede utilizar como un poderoso mecanismo inherente a la comunicación para recompensar y sancionar el comportamiento del agente en los sistemas abiertos sin comprometer la autonomía del agente, discutió su integración con los procesos de planificación de los agentes, problemas de complejidad y presentó una lista de una lista deDesiderata para el diseño de ACL con tal semántica. Actualmente, estamos trabajando en especificaciones completas de semántica dinámica para idiomas más complejos y en extender nuestro enfoque a la semántica mentalista donde vemos declaraciones sobre los estados mentales como compromisos con respecto a las implicaciones racionales de estos estados mentales (un ejemplo simple para esto es que es queUn agente se compromete a dejar caer una intención ostensible de que afirme mantener si esa intención resulta inalcanzable). En este contexto, estamos particularmente interesados en los mecanismos apropiados para detectar y responder a la mentira interrogando a agentes sospechosos y obligándolos a comprometerse con (conjuntos de) estados mentales públicamente mientras los sancionan cuando estos son incompatibles con sus acciones.6. Referencias [1] G. Boella, R. Damiano, J. Hulstijn y L. van der Torre. Semántica de ACL entre compromisos sociales y actitudes mentales. En Actas del Taller Internacional sobre Comunicación de Agentes, 2006. [2] W. Brauer, M. Nickles, M. Rovatsos, G. Weiß y K. F. Lorentzen. Análisis y diseño orientados a las expectativas. En Actas del segundo taller sobre ingeniería de software orientada al agente, LNCS 2222, 2001. Springer-Verlag, Berlín.[3] P. R. Cohen y H. J. Levesque. Acciones comunicativas para agentes artificiales. En Actas de la primera conferencia internacional sobre sistemas de múltiples agentes, páginas 65-72, 1995. [4] P. R. Cohen y C. R. Perrault. Elementos de una teoría de los actos de discurso basados en planes. Cognitive Science, 3: 177-212, 1979. [5] M. Esteva, J. Rodríguez, J. Arcos, C. Sierra y P. García. Formalización de instituciones electrónicas mediadas por agente. En el Congreso Catalán sobre IA, páginas 29-38, 2000. [6] N. Fornara y M. Colombetti. Especificación operativa de un lenguaje de comunicación de agente basado en compromiso. En Actas de la primera conferencia conjunta internacional sobre agentes autónomos y sistemas múltiples, páginas 536-542, Bolonia, Italia, 2002. ACM Press.[7] B. Gaudou, A. Herzig, D. Longin y M. Nickles. Una nueva semántica para el lenguaje de comunicación del agente de la FIPA basado en actitudes sociales. En Actas de la 17ª Conferencia Europea sobre Inteligencia Artificial, Riva del Garda, Italia, 2006. IOS Press.[8] F. Guerin y J. Pitt. Semántica denotacional para lenguajes de comunicación de agentes. En Actas de la Quinta Conferencia Internacional sobre Agentes Autónomos, páginas 497-504. ACM Press, 2001. [9] M. Nickles, M. Rovatsos y G. Weiss. Semántica empírica de la comunicación de agentes. En Actas de la Tercera Conferencia Conjunta Internacional sobre Agentes Autónomos y Sistemas Multiagentes, Nueva York, NY, 2004. [10] J. Pitt y A. Mamdani. Algunos comentarios sobre la semántica del lenguaje de comunicación del agente FIPAS. Agentes autónomos y sistemas de múltiples agentes, 2: 333-356, 1999. [11] M. Rovatsos, M. Nickles y G. Weiß. La interacción es el significado: un nuevo modelo para la comunicación en sistemas abiertos. En Actas de la Segunda Conferencia Internacional Conjunta sobre Agentes Autónomos y Sistemas Multiagentes, Melbourne, Australia, 2003. [12] M. D. Sadek. Los actos de diálogo son planes racionales. En Actas del Taller ESCA/ETRW sobre la estructura del diálogo multimodal, páginas 1-29, 1991. [13] M. Singh. Lenguajes de comunicación del agente: repensar los principios. IEEE Computer, 31 (12): 55-61, 1998. [14] M. Singh. Una semántica social para los idiomas de comunicación de agentes. En Actas del Taller de IJCAI sobre lenguajes de comunicación de agentes, 2000. [15] M. P. Singh. Una semántica para los actos del habla. Anales de Matemáticas e Inteligencia Artificial, 8 (1-2): 47-71, 1993. [16] G. Weiß, M. Nickles, M. Rovatsos y F. Fischer. Especificando el entrelazamiento de la cooperación y la autonomía en los sistemas basados en agentes. Journal of Networks and Computer Applications, 29, 2007. [17] M. J. Wooldridge. Semántica verificable para lenguajes de comunicación de agentes. En Actas de la Tercera Conferencia Internacional sobre Sistemas de Aguos Multi-Agentes, páginas 349-356, París, Francia, 1998. El sexto intl. Conf.en agentes autónomos y sistemas de múltiples agentes (AAMAS 07) 107