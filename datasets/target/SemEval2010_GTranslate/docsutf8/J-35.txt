Eficiencia y equilibrio de NASH en un sistema de guiones para redes P2P Eric J. Friedman Escuela de Operaciones Investigación e Ingeniería Industrial Cornell University eJF27@cornell.edu Joseph Y. Halpern Departamento de Ciencias de la Computación. Cornell University halpern@cs.cornell.edu Ian Kash Computer Science Departamento. Cornell University kash@cs.cornell.edu Resumen Se analiza un modelo de servicio en una red P2P. Se muestra que al agregar un sistema de guiones, se puede obtener un mecanismo que admite un equilibrio de Nash razonable que reduce la conducción libre. Se analiza el efecto de variar la cantidad total de dinero (scrip) en el sistema sobre la eficiencia (es decir, el bienestar social), y se muestra que al mantener la relación apropiada entre la cantidad total de dinero y el número de agentes, la eficiencia esmaximizado. El trabajo tiene implicaciones para muchos sistemas en línea, no solo las redes P2P, sino también una amplia variedad de foros en línea para los cuales los sistemas de guiones son populares, pero han faltado análisis formales. Categorías y descriptores de sujetos C.2.4 [Redes de comunicación por computadora]: sistemas distribuidos;I.2.11 [Inteligencia artificial]: Sistemas distribuidos de inteligencia artificial-multiagente;J.4 [Ciencias sociales y conductuales]: Economía;K.4.4 [Computadoras y sociedad]: Comercio electrónico Términos generales Economía, Teoría 1. Introducción Una característica común de muchos sistemas distribuidos en línea es que las personas se brindan servicios entre sí. Las redes de tope de pares (P2P) (como Kazaa [25] o Bittorrent [3]) han demostrado ser populares como mecanismos para compartir archivos, y las aplicaciones como el cálculo distribuido y el almacenamiento de archivos están en el horizonte;sistemas como Seti@Home [24] proporcionan asistencia computacional;Sistemas como SlashDot [21] proporcionan contenido, evaluaciones y foros de asesoramiento en los que las personas se responden a las preguntas. Hacer que las personas se proporcionen mutuamente el servicio generalmente aumenta el bienestar social: el individuo que utiliza los recursos del sistema obtiene un beneficio mayor que el costo para la persona que lo proporciona. Sin embargo, el costo de proporcionar servicio aún puede ser no trivial. Por ejemplo, los usuarios de Kazaa y BitTorrent pueden cargarse por el uso de ancho de banda;Además, en algunos sistemas de intercambio de archivos, existe la posibilidad de ser demandado, que puede verse como parte del costo. Por lo tanto, en muchos sistemas hay un fuerte incentivo para convertirse en un jinete libre y beneficiarse del sistema sin contribuir a él. Esto no es simplemente un problema teórico;Los estudios de la red Gnutella [22] han demostrado que casi el 70 por ciento de los usuarios no comparten archivos y casi el 50 por ciento de las respuestas son del 1 por ciento superior de los hosts compartidos [1]. Tener relativamente pocos usuarios proporciona la mayor parte del servicio crea un punto de centralización;La desaparición de un pequeño porcentaje de usuarios puede afectar en gran medida la funcionalidad del sistema. Además, las tendencias actuales parecen estar llevando a la eliminación de los usuarios altruistas en los que dependen estos sistemas. Estos usuarios pesados son algunos de los clientes más caros que tienen los ISP. Por lo tanto, a medida que la cantidad de tráfico ha crecido, los ISP han comenzado a buscar formas de reducir este tráfico. Algunas universidades han comenzado a cobrar a los estudiantes por el uso excesivo de ancho de banda;Otros revocan el acceso a la red para él [5]. Varias compañías también han formado cuyo servicio es detectar el uso excesivo de ancho de banda [19]. Estas tendencias hacen que el desarrollo de un sistema que fomente una distribución más igualitaria del trabajo crítico para la viabilidad continua de las redes P2P y otros sistemas en línea distribuidos. Se ha producido una cantidad significativa de investigación para diseñar sistemas de reputación para brindar un tratamiento preferencial a los usuarios que comparten archivos. Algunas de las redes P2P actualmente en uso han implementado versiones de estas técnicas. Sin embargo, estos enfoques tienden a caer en una de dos categorías: son como trueque o reputales. Por un trueque, nos referimos a que cada agente basa sus decisiones solo en la información que ha derivado de sus propias interacciones. Quizás el ejemplo más conocido de un sistema tipo trueque es BitTorrent, donde los clientes que descargan un archivo intentan encontrar otros clientes con piezas que faltan para que puedan comerciar, creando así una cantidad de trabajo aproximadamente igual. Dado que el trueque está restringido a los usuarios actualmente interesados en un solo archivo, esto funciona bien para archivos populares, pero tiende a tener problemas para mantener la disponibilidad de los menos populares. Un ejemplo de un sistema tipo trueque construido sobre un sistema de intercambio de archivos más tradicional es el sistema de crédito utilizado por EMULE 140 [8]. Cada usuario rastrea su historial de interacciones con otros usuarios y da prioridad a los que ha descargado en el pasado. Sin embargo, en un sistema grande, la probabilidad de que un par de usuarios elegidos al azar hayan interactuado antes es bastante pequeño, por lo que este historial de interacción no será terriblemente útil. Anagnostakis y Greenwald [2] presentan una versión más sofisticada de este enfoque, pero aún parece sufrir problemas similares. Se han realizado varios intentos para proporcionar sistemas de reputación general (por ejemplo, [12, 13, 17, 27]). La idea básica es agregar la experiencia de cada usuarios en un número global para cada individuo que representa intuitivamente la visión de los sistemas de la reputación de los individuos. Sin embargo, estos intentos tienden a sufrir problemas prácticos porque consideran implícitamente a los usuarios como buenos o malos, suponen que los buenos usuarios actuarán de acuerdo con el protocolo especificado y que hay relativamente pocos usuarios malos. Desafortunadamente, si hay formas fáciles de jugar el sistema, una vez que esta información se vuelve ampliamente disponible, es probable que los usuarios racionales lo utilicen. No podemos contar con que solo unos pocos usuarios sean malos (en el sentido de no seguir el protocolo prescrito). Por ejemplo, Kazaa usa una medida de la relación de la cantidad de cargas para el número de descargas para identificar usuarios buenos y malos. Sin embargo, para evitar penalizar a los nuevos usuarios, les dieron a los nuevos usuarios una calificación promedio. Los usuarios descubrieron que podían usar esta calificación relativamente buena para un viaje gratuito durante un tiempo y, una vez que comenzó a ser mal.una discusión y [11] para un análisis formal de este blanqueo). Así, el sistema de reputación de Kazaas es ineficaz. Este es un caso simple de una vulnerabilidad más general de tales sistemas a los ataques de Sybil [6], donde un solo usuario mantiene múltiples identidades y las usa de manera coordinada para obtener un mejor servicio de lo que lo haría. El trabajo reciente ha demostrado que los sistemas de reputación más comunes son vulnerables (en el peor de los casos) a tales ataques [4];Sin embargo, el grado de esta vulnerabilidad aún no está claro. Los análisis de las vulnerabilidades prácticas y la existencia de tales sistemas que son inmunes a tales ataques siguen siendo un área de investigación activa (por ejemplo, [4, 28, 14]). Los sistemas económicos simples basados en un scrip o dinero parecen evitar muchos de estos problemas, son fáciles de implementar y son bastante populares (ver, por ejemplo, [13, 15, 26]). Sin embargo, tienen un conjunto diferente de problemas. Quizás el más común implica determinar la cantidad de dinero en el sistema. En términos generales, si hay muy poco dinero en el sistema en relación con la cantidad de agentes, entonces relativamente pocos usuarios pueden permitirse hacer una solicitud. Por otro lado, si hay demasiado dinero, los usuarios no sentirán la necesidad de responder a una solicitud;Ya tienen suficiente dinero. Un problema relacionado implica manejar a los recién llegados. Si los recién llegados reciben una cantidad positiva de dinero, entonces el sistema está abierto a ataques Sybil. Quizás no sea sorprendente que los sistemas de guiones terminen teniendo que lidiar con problemas económicos estándar como la inflación, las burbujas y los choques [26]. En este artículo, proporcionamos un modelo formal para analizar los sistemas de scrip. Describimos un sistema de guión simple y mostramos que, bajo suposiciones razonables, por cada cantidad fija de dinero, hay un equilibrio NASH no trivial que involucra estrategias de umbral, donde un agente acepta una solicitud si tiene menos de $ K por algún umbral K.1 AN ANEl aspecto interesante de nuestro análisis es que, en equilibrio, la distribución de usuarios con cada cantidad de dinero es la distribución que maximiza la entropía (sujeto a la restricción de oferta monetaria). Esto nos permite calcular la oferta monetaria que maximiza la eficiencia (bienestar social), dado el número de agentes. También conduce a una solución para el problema de tratar con los recién llegados: simplemente asumimos que los nuevos usuarios entran sin dinero y ajustan el precio del servicio (que es equivalente a ajustar la oferta monetaria) para mantener la relación que maximiza la eficiencia. Si bien asumiendo que los nuevos usuarios vengan sin dinero que no funcionarán en todos los entornos, creemos que el enfoque será ampliamente aplicable. En los sistemas donde el objetivo es trabajar, los nuevos usuarios pueden adquirir dinero realizando trabajo. También debería funcionar en el sistema Kazaalike donde un usuario puede entrar con algunos recursos (por ejemplo, una colección privada de MP3). El resto del documento está organizado de la siguiente manera. En la Sección 2, presentamos nuestro modelo formal y observamos que puede usarse para comprender el efecto de los altruistas. En la Sección 3, examinamos lo que sucede en el juego en Nonstrategic Play, si todos los agentes usan la misma estrategia de umbral. Mostramos que, en este caso, el sistema converge rápidamente a una situación en la que la distribución del dinero se caracteriza por la máxima entropía. Usando este análisis, mostramos en la Sección 4 que, bajo suposiciones mínimas, hay un equilibrio de NASH no trivial en el juego donde todos los agentes usan alguna estrategia umbral. Además, mostramos en la Sección 5 que el análisis conduce a una comprensión de cómo elegir la cantidad de dinero en el sistema (o, de manera equivalente, el costo de cumplir una solicitud) para maximizar la eficiencia, y también muestra cómo manejar nuevosusuarios. En la Sección 6, discutimos en qué medida nuestro enfoque puede manejar sybils y colusión. Concluimos en la Sección 7. 2. El modelo para comenzar, formalizamos proporcionar servicio en una red P2P como un juego no cooperativo. A diferencia de gran parte del modelado en esta área, nuestro modelo modelará las interacciones asimétricas en un sistema de intercambio de archivos en el que la coincidencia de los jugadores (aquellos que solicitan un archivo con aquellos que tienen ese archivo en particular) es una parte clave del sistema. Esto está en contraste con mucho trabajo previo que utiliza una coincidencia aleatoria en un dilema de los prisioneros. Dichos modelos se estudiaron en la literatura económica [18, 7] y se aplicaron por primera vez a la reputación en línea en [11];Una aplicación a P2P se encuentra en [9]. Este modelo de coincidencia aleatoria no puede capturar algunos aspectos sobresalientes de una serie de configuraciones importantes. Cuando se realiza una solicitud, generalmente hay muchas personas en la red que pueden satisfacerla (especialmente en una gran red P2P), pero no todas pueden. Por ejemplo, algunas personas pueden no tener el tiempo o los recursos para satisfacer la solicitud. El proceso de RandomMatching ignora el hecho de que algunas personas pueden no ser capaces de satisfacer la solicitud. Presumiblemente, si la persona coincidiera con el solicitante no pudiera satisfacer el partido, tendría que desertar. Además, no captura el hecho de que la decisión sobre si se debe ser voluntario para satisfacer la solicitud debe hacerse antes del proceso de correspondencia, no después. Es decir, el proceso de correspondencia no captura 1, aunque nos referimos a nuestra unidad de scrip como el dólar, estos no son dólares reales ni los vemos como convertibles en dólares.141 El hecho de que si alguien no está dispuesto a satisfacer la solicitud, sin duda habrá otros que puedan satisfacerla. Finalmente, las acciones y los pagos en el juego de dilema de los prisioneros no se corresponden obviamente a las elecciones reales que se pueden hacer. Por ejemplo, no está claro qué deserción por parte del solicitante significa. En nuestro modelo tratamos de lidiar con todos estos problemas. Supongamos que hay N agentes. En cada ronda, un agente se elige uniformemente al azar para hacer una solicitud. El agente de los demás puede satisfacer esta solicitud con probabilidad β> 0 en todo momento, independientemente del comportamiento anterior. El término β está destinado a capturar la probabilidad de que un agente esté ocupado o no tenga los recursos para cumplir con la solicitud. Suponiendo que β es independiente del tiempo no captura la intute de que ser un incapaz de cumplir una solicitud en el momento T puede correlacionarse con no poder cumplirlo en el momento t+1. Creemos que, en sistemas grandes, deberíamos poder eliminar la suposición de independencia, pero lo dejamos para el trabajo futuro. En cualquier caso, aquellos agentes que pueden satisfacer la solicitud deben elegir si se ofrecen o no ser voluntarios para satisfacerla. Si al menos un agente voluntario, el solicitante obtiene un beneficio de 1 Util (el trabajo está hecho) y uno de los voluntarios se elige al azar para cumplir con la solicitud. El agente que cumple la solicitud paga un costo de α <1. Como es estándar en la literatura, suponemos que los agentes descuentan los pagos futuros por un factor de δ por unidad de tiempo. Esto captura la intuición de que un Util ahora vale más que un Utily Mañana, y nos permite calcular la utilidad total derivada de un agente en un juego infinito. Por último, asumimos que con más solicitudes de jugadores viene con más frecuencia. Por lo tanto, suponemos que el tiempo entre rondas es 1/N. Esto captura el hecho de que los sistemas que queremos modelar realmente están procesando muchas solicitudes en paralelo, por lo que esperaríamos que el número de solicitudes concurrentes sea proporcional al número de usuarios.2 Sea G (N, δ, α, β) denotarEste juego con n agentes, un factor de descuento de δ, un costo para satisfacer las solicitudes de α y una probabilidad de poder satisfacer las solicitudes de β. Cuando los últimos dos parámetros no son relevantes, a veces escribimos G (n, δ). Utilizamos la siguiente notación en todo el documento: • PT denota el agente elegido en la ronda T.• bt i ∈ {0, 1} denota si el agente puedo satisfacer la solicitud en la ronda t.Bt i = 1 con probabilidad β> 0 y Bt I es independiente de Bt I para todos t = t.• V t i ∈ {0, 1} denota que el agente es la decisión sobre si se ofrece como voluntario en la ronda t;1 indica voluntariado. V t i está determinado por el agente es la estrategia.• vt ∈ {j |V T J BT J = 1} denota el agente elegido para satisfacer la solicitud. Este agente se elige uniformemente al azar de aquellos que están dispuestos (v t j = 1) y capaces (bt j = 1) para satisfacer la solicitud.• UT I denota agente es utilidad en la ronda t.Un agente estándar es aquel cuya utilidad se determina como se discute en la introducción;A saber, el agente obtiene 2 para N grande, nuestro modelo converge a uno en el que los jugadores realizan solicitudes en tiempo real, y el tiempo entre las solicitudes de un jugador se distribuye exponencialmente con la media 1. Además, el tiempo entre las solicitudes atendidas por un solo jugador también se distribuye exponencialmente.Una utilidad de 1 para una solicitud y utilidad cumplida −α para cumplir con una solicitud. Por lo tanto, si I es un agente estándar, entonces UT i = 8 <: 1 si i = pt y p j = i v t j bt j> 0 −α si i = vt 0 de lo contrario.• ui = p∞ t = 0 Δt/n ut i denota la utilidad total para el agente i. Es el total descontado de agente es utilidad en cada ronda. Tenga en cuenta que el factor de descuento efectivo es Δ1/N ya que un aumento en N conduce a un acortamiento del tiempo entre rondas. Ahora que tenemos un modelo de hacer y satisfacer solicitudes, lo usamos para analizar la conducción gratuita. Tome un altruista para ser alguien que siempre satisface las solicitudes. Agente I podría comportarse racionalmente altruista si el agente es la función de utilidad tiene la siguiente forma, para algunos α> 0: ut i = 8 <: 1 si i = pt y p j = i v t j bt j> 0 α si i = vt 0de lo contrario. Por lo tanto, en lugar de sufrir una pérdida de utilidad al satisfacer una solicitud, un agente deriva una utilidad positiva de satisfacerla. Tal función de utilidad es una representación razonable del placer que algunas personas obtienen del sentido de que proporcionan la música que todos están tocando. Para tales agentes altruistas, interpretar la estrategia que establece V T i = 1 para todo T es dominante. Si bien tener una función de utilidad no estándar podría ser una razón por la que un agente racional podría usar esta estrategia, ciertamente hay otros. Por ejemplo, un usuario ingenuo de software de intercambio de archivos con una buena conexión podría seguir esta estrategia. Todo lo que importa para la siguiente discusión es que hay algunos agentes que usan esta estrategia, por cualquier razón. Como hemos observado, tales usuarios parecen existir en algunos sistemas grandes. Supongamos que nuestro sistema tiene un altruistas. Intuitivamente, si A es moderadamente grande, logrará satisfacer la mayoría de las solicitudes en el sistema, incluso si otros agentes no funcionan. Por lo tanto, hay pocos incentivos para que cualquier otro agente sea voluntario, porque ya está al máximo la ventaja de participar en el sistema. En base a esta intuición, es un cálculo relativamente sencillo para determinar un valor de A que depende solo de α, β y δ, pero no el número N de los jugadores en el sistema, de modo que la estrategia dominante para todos los agentes estándar es Inunca ser voluntario para satisfacer ninguna solicitud (es decir, v t i = 0 para todo t). Proposición 2.1. Existe una A que depende solo de α, β y δ tal que, en G (N, δ, α, β) con al menos un altruistas, no voluntario en cada ronda es una estrategia dominante para todos los agentes estándar. Prueba. Considere la estrategia para un jugador estándar J en presencia de un altruistas. Incluso sin dinero, el jugador J recibirá una solicitud satisfecha con la probabilidad 1 - (1 - β) A solo a través de las acciones de estos altruistas. Por lo tanto, incluso si J se elige para hacer una solicitud en cada ronda, la utilidad esperada más adicional que puede esperar ganar al tener dinero isp∞ k = 1 (1 - β) a ΔK = (1 - β) A /(1- δ). If (1 - β) a /(1 - δ)> α o, de manera equivalente, si a> log1 - β (α (1 - δ)), nunca voluntariado es una estrategia dominante. Considere los siguientes valores razonables para nuestros parámetros: β = .01 (para que cada jugador pueda satisfacer el 1% de las solicitudes), α = .1 (un costo bajo pero no desplegable), δ = .9999/día 142 (quecorresponde a un factor de descuento anual de aproximadamente 0.95), y un promedio de 1 solicitud por día por jugador. Entonces solo necesitamos un> 1145. Si bien este es un gran número, es pequeño en relación con el tamaño de una gran red P2P. Todos los sistemas actuales tienen un grupo de usuarios que se comportan como nuestros altruistas. Esto significa que los intentos de agregar un sistema de reputación además de un sistema P2P existente para influir en los usuarios para que cooperen no tendrán ningún efecto en los usuarios racionales. Para tener una distribución justa del trabajo, estos sistemas deben ser rediseñados fundamentalmente para eliminar el grupo de usuarios altruistas. En cierto sentido, esto no es un problema en absoluto. En un sistema con altruistas, los altruistas son presumiblemente felices, al igual que los agentes estándar, que obtienen casi todas sus solicitudes satisfechas sin tener que hacer ningún trabajo. De hecho, la red P2P actual funciona bastante bien en términos de distribuir contenido a las personas. Sin embargo, como dijimos en la introducción, hay alguna razón para creer que estos altruistas pueden no estar cerca para siempre. Por lo tanto, vale la pena mirar lo que se puede hacer para que estos sistemas funcionen en su ausencia. Para el resto de este documento, suponemos que todos los agentes son estándar e intentan maximizar la utilidad esperada. Estamos interesados en los equilibrios basados en un sistema de scrip. Cada vez que un agente tiene una solicitud satisfecha de que debe pagarle a la persona que lo cumplió con alguna cantidad. Por ahora, suponemos que el pago es fijo;Para simplificar, la cantidad es de $ 1. Denotamos por M la cantidad total de dinero en el sistema. Suponemos que M> 0 (de lo contrario, nadie podrá pagar). En principio, los agentes son libres de adoptar una variedad muy amplia de estrategias. Pueden tomar decisiones basadas en los nombres de otros agentes o usar una estrategia que depende en gran medida de la historia y mezcle estas estrategias libremente. Para ayudar a nuestro análisis, nos gustaría poder restringir nuestra atención a una clase más simple de estrategias. La clase de estrategias que nos interesan es fácil de motivar. La razón intuitiva para querer ganar dinero es atender la posibilidad de que un agente se agote antes de que tenga la oportunidad de ganar más. Por otro lado, un agente racional con mucho hueso no querría trabajar, porque para cuando haya logrado gastar todo su dinero, el Util tendrá menos valor que el costo actual de trabajar. El equilibrio natural entre estos dos es una estrategia umbral. Deje que SK sea la estrategia donde un agente se ofrece como voluntario cada vez que tiene menos de K dólares y no de otra manera. Tenga en cuenta que S0 es la estrategia en la que el agente nunca se ofrece como voluntario. Si bien todos los que juegan S0 son un equilibrio de Nash (a nadie puede hacerlo mejor voluntariamente si nadie más está dispuesto a hacerlo), es poco interesante. Como mostraremos en la Sección 4, es suficiente restringir nuestra atención a esta clase de estrategias. Usamos KT I para denotar la cantidad de agente de dinero que tengo en el momento t.Claramente kt+1 i = kt i a menos que el agente i tenga una solicitud satisfecha, en cuyo caso kt+1 i = kt+1 i - 1 o agente i cumple una solicitud, en cuyo caso kt+1 i = kt+1 i+1. Formalmente, kt + 1 i = 8 <: kt i - 1 si i = pt, p j = i v t j bt j> 0 y kt i> 0 kt i + 1 if i = vt y kt pt> 0 kt i ide lo contrario. La estrategia de umbral SK es la estrategia tal que v t i =  1 si kt pt> 0 y kt i <k 0 de lo contrario.3. El juego bajo el juego no construido antes de considerar el juego estratégico, examinamos lo que sucede en el sistema si todos solo juegan la misma estrategia SK. Nuestro objetivo general es demostrar que hay cierta distribución sobre el dinero (es decir, la fracción de personas con cada cantidad de dinero) de modo que el sistema converge a esta distribución en cierto sentido para ser precisa en breve. Supongamos que todos juegan SK. Por simplicidad, suponga que todos tienen como máximo K dólares. Podemos hacer esta suposición esencialmente sin pérdida de generalidad, ya que si alguien tiene más de K dólares, solo gastará dinero hasta que tenga como máximo K dólares. Después de este punto, nunca adquirirá más que k.Por lo tanto, eventualmente el sistema estará en tal estado. Si m ≥ kN, ningún agente estará dispuesto a trabajar. Por lo tanto, para los propósitos de esta sección suponemos que m <kn. Desde la perspectiva de un solo agente, en el equilibrio (estocástico), el agente está experimentando una caminata aleatoria. Sin embargo, los parámetros de esta caminata aleatoria dependen de los caminatas aleatorias de los otros agentes y es bastante complicado resolverlo directamente. Por lo tanto, consideramos un análisis alternativo basado en la evolución del sistema en su conjunto. Si todos tienen como máximo K dólares, entonces la cantidad de dinero que tiene un agente es un elemento de {0 ,..., k}. Si hay N agentes, entonces el estado del juego se puede describir identificando cuánto dinero tiene cada agente, por lo que podemos representarlo por un elemento de SK, n = {0 ,..., k} {1, ..., n}. Dado que la cantidad total de dinero es constante, no todos estos estados pueden surgir en el juego. Por ejemplo, el estado donde cada jugador tiene $ 0 es imposible de alcanzar en cualquier juego con dinero en el sistema. Sea ms (s) = p i∈ {1 ... n} s (i) denota el montaje total de dinero en el juego en el estado s, donde s (i) es la cantidad de dólares que el agente i tiene en el estado s.Queremos considerar solo aquellos estados donde el dinero total en el sistema es M, a saber, SK, N, M = {S ∈ Sk, N |MS (S) = M}. Bajo el supuesto de que todos los agentes usan la estrategia SK, la evolución del sistema puede tratarse como una cadena de Markov MK, N, M sobre el espacio de estado SK, N, M. Es posible moverse de un estado a otro en una sola ronda si eligiendo un agente en particular para hacer una solicitud y un agente en particular para satisfacerlo, las cantidades de dinero poseidas por cada agente se convierten en las del segundo estado. Por lo tanto, la probabilidad de una transición de un estado s a t es 0 a menos que existan dos agentes i y j tal que s (i) = t (i) para todos i /∈ {i, j}, t (i) = s(i) + 1, y t (j) = s (j) - 1. En este caso, la probabilidad de transición de S a T es la probabilidad de que J se elija para gastar un dólar y tenga a alguien dispuesto y capaz de satisfacer su solicitud ((1/n) (1 - (1 - β) | {i |s (i) = k} | −ij) multiplicado por la probabilidad de ser elegido para satisfacer su solicitud (1/(| ({i | s (i) = k} | - ij)). IJ es 0 si J tiene K dólares y 1 de lo contrario (es solo una corrección por el hecho de que J no puede satisfacer su propia solicitud). Deje que ∆k denote el conjunto de distribuciones de probabilidad en {0 ,..., k}. Podemos pensar en un elemento de ∆K que describe la fracción de personas con cada cantidad de dinero. Esta es una forma útil de ver el sistema, ya que generalmente no nos importa quién tiene cada cantidad de dinero, sino solo la fracción de personas que tienen cada cantidad. Como antes, no todos los elementos de ∆K son posibles, dada nuestra restricción de que el monto total de 143 dinero es M. en lugar de pensar en términos de la cantidad total de dinero en el sistema, será más útil pensar en términos deLa cantidad promedio de dinero que tiene cada jugador. Por supuesto, la cantidad total de dinero en un sistema con n agentes es m si la cantidad promedio que tiene cada jugador es m = m/n. Deje que ∆k m denote todas las distribuciones d ∈ ∆K tal que e (d) = m (es decir, pk j = 0 d (j) j = m). Dado un estado s ∈ Sk, n, m, que ds ∈ ∆K m denota la distribución de dinero en s.Nuestro objetivo es mostrar que, si N es grande, entonces hay una distribución d ∗ ∈ ∆K m de tal manera que, con alta probabilidad, la cadena de Markov MK, N, M casi siempre estará en un estado tal que DS está cercaa d ∗. Por lo tanto, los agentes pueden basar sus decisiones sobre qué estrategia usar sobre el supuesto de que estarán en tal estado. De hecho, podemos caracterizar completamente la distribución d ∗. Dada una distribución d ∈ ∆K, Sea h (d) = - x {j: d (j) = 0} d (j) log (d (j)) denota la entropía de d.Si ∆ es un conjunto convexo cerrado de distribuciones, entonces es bien sabido que hay una distribución única en ∆ en la que la función de entropía toma su valor máximo en ∆. Dado que ∆K M se ve fácilmente como un conjunto convexo cerrado de distribuciones, se deduce que hay una distribución única en ∆K m que denotamos d ∗ k, m cuya entropía es mayor que la de todas las demás distribuciones en ∆k m.Ahora mostramos que, para N suficientemente grande, la cadena Markov MK, N, M está casi seguramente en un estado de tal que DS está cerca de D ∗ K, M/N. La declaración es correcta bajo una serie de sentidos de cierre. Para definición, consideramos la distancia euclidiana. Dado> 0, Sk, N, M, denote el conjunto de estados en SK, N, Mn tal que Pk J = 0 | DS (J) - D ∗ K, M | 2 <. Dada una cadena de Markov sobre un espacio de estado S y S ⊆ s, Sea Xt, S, S la variable aleatoria que denota que M está en un estado de S en el tiempo T, cuando se inicia en el estado s.Teorema 3.1. Para todos> 0, todos k, y todos m, existe n tal que para todos los n> n y todos los estados s ∈ Sk, n, mn, existe un tiempo t ∗ (que puede depender de k, n, m,y) tal que para t> t ∗, tenemos pr (xt, s, sk, n, m,)> 1 -. Prueba.(Boceto) Suponga que en algún momento t, PR (XT, S, S) es uniforme para todos los s. Entonces, la probabilidad de estar en un conjunto de estados es solo el tamaño del conjunto dividido por el número total de estados. Una técnica estándar de la mecánica estadística es mostrar que existe un fenómeno de concentración alrededor de la distribución máxima de entropía [16]. Más precisamente, utilizando un argumento combinatorio directo, se puede demostrar que la fracción de estados no en SK, N, M, está limitada por P (N)/ECN, donde P es un polinomio. Esta fracción claramente va a 0 a medida que N se vuelve grande. Por lo tanto, para N suficientemente grande, PR (XT, S, SK, N, M,)> 1 - Si PR (XT, S, S) es uniforme. Es relativamente sencillo mostrar que nuestra cadena Markov tiene una distribución de límite π sobre SK, N, Mn, de modo que para todos S, S ∈ Sk, N, Mn, Limt → ∞ PR (XT, S, S) = πs. Deje que PIJ denote la probabilidad de transición del estado I al estado j. Se verifica fácilmente por un cálculo explícito de las probabilidades de transición de que Pij = PJI para todos los estados I y J. Se deduce inmediatamente de esta simetría que πs = πs, por lo que π es uniforme. Después de una cantidad suficiente de tiempo, la distribución estará lo suficientemente cerca de π, que las probabilidades están nuevamente limitadas por constante, que es suficiente para completar el teorema.0 0.002 0.004 0.006 0.008 0.01 Distancia euclidiana 2000 2500 3000 3500 4000 Número de pasos Figura 1: Distancia de la distribución de entropía máxima con 1000 agentes.5000 10000 15000 20000 25000 Número de agentes 0.001 0.002 0.003 0.004 0.005 Máxima Distancia Figura 2: Distancia máxima de la distribución de Maximumentropy en 106 TimesPs.0 5000 10000 15000 20000 25000 Número de agentes 0 20000 40000 60000 Timetodistance.001 Figura 3: Tiempo promedio para obtener .001 de la distribución de entropía máxima.144 Realizamos una serie de experimentos que muestran que el comportamiento máximo de entropía descrito en el Teorema 3.1 surge rápidamente para valores bastante prácticos de N y T.El primer experimento mostró que, incluso si N = 1000, alcanzamos la distribución de entropía máxima rápidamente. Promediamos 10 corridas de la cadena de Markov para k = 5, donde hay suficiente dinero para que cada agente tenga $ 2 a partir de una distribución muy extrema (cada agente tiene $ 0 o $ 5) y consideró el tiempo promedio necesario a varias distancias dela distribución máxima de entropía. Como muestra la Figura 1, después de 2,000 pasos, en promedio, la distancia euclidiana de la distribución promedio de dinero a la distribución de entropía máxima es de .008;Después de 3.000 pasos, la distancia se reduce a .001. Tenga en cuenta que esto es realmente solo 3 unidades en tiempo real, ya que con 1000 jugadores tenemos 1000 transacciones por unidad de tiempo. Luego consideramos qué tan cerca permanece la distribución a la distribución máxima de entropía una vez que la ha alcanzado. Para simplificar las cosas, comenzamos el sistema en un estado cuya distribución estaba muy cerca de la distribución de entropía máxima y la ejecutamos durante 106 pasos, para varios valores de n.Como muestra la Figura 2, el sistema no se mueve lejos de la distribución de entropía máxima una vez que está allí. Por ejemplo, si N = 5000, el sistema nunca es más de la distancia .001 desde la distribución de entropía máxima;Si n = 25, 000, nunca es más de .0002 de la distribución de entropía máxima. Finalmente, consideramos cuán cuidadosamente la rapidez con la que el sistema converge a la distribución de entropía máxima para varios valores de n.Hay aproximadamente estados posibles, por lo que el tiempo de convergencia podría ser bastante grande. Sin embargo, sospechamos que la cadena de Markov que surge aquí es una mezcla rápidamente, lo que significa que convergerá significativamente más rápido (ver [20] para obtener más detalles sobre la mezcla rápida). Creemos que el tiempo realmente necesario es o (n). Este comportamiento se ilustra en la Figura 3, que muestra que para nuestra cadena de ejemplo (nuevamente promediada en 10 corridas), después de pasos 3n, la distancia euclidiana entre la distribución real de dinero en el sistema y la distribución de entropía máxima es inferior a .001.4. El juego bajo juego estratégico hemos visto que el sistema se porta bien si todos los agentes siguen una estrategia umbral;Ahora queremos demostrar que hay un equilibrio de Nash no trivial donde lo hacen (es decir, un equilibrio de Nash donde todos los agentes usan SK para algunos k> 0) Esto no es cierto en general. Si δ es pequeño, entonces los agentes no tienen incentivos para trabajar. Intuitivamente, si la utilidad futura tiene suficiente descuento, entonces todo lo que importa es el presente, y no tiene sentido ser voluntario para trabajar. Con un pequeño δ, S0 es el único equilibrio. Sin embargo, mostramos que para δ lo suficientemente grande, hay otro equilibrio en las estrategias de umbral. Hacemos esto al mostrar primero que, si cualquier otro agente está jugando una estrategia de umbral, entonces hay una mejor respuesta que también es una estrategia de umbral (aunque no necesariamente la misma). Luego mostramos que debe haber alguna estrategia de umbral (mixta) para la cual esta mejor respuesta es la misma estrategia. Se deduce que esta tupla de estrategias de umbral es un equilibrio de Nash. Como primer paso, mostramos que, para todos K, si todos los que no sean agentes I están jugando SK, entonces hay una estrategia de umbral SK que es una mejor respuesta para el Agente I. Para probar esto, debemos suponer que el sistema está cerca de la distribución de estados estadizos (es decir, la distribución de entropía máxima). Sin embargo, mientras δ esté suficientemente cerca de 1, podemos ignorar lo que sucede durante el período de que el sistema no está en estado estacionario.3 Hasta ahora hemos considerado estrategias umbral de la forma SK, donde K es un número natural;Este es un conjunto discreto de estrategias. Para una prueba posterior, será útil tener un conjunto continuo de estrategias. Si γ = K + γ, donde K es un número natural y 0 ≤ γ <1, sea Sγ la estrategia que realiza SK con probabilidad 1 - γ y SK + 1 con probabilidad γ.(Tenga en cuenta que no estamos considerando estrategias arbitrarias de umbral mixto aquí, sino simplemente mezclar entre estrategias adyacentes con el único propósito de distinguir estrategias continuas de manera natural). El teorema 3.1 se aplica a las estrategias Sγ (la misma prueba pasa sin cambios), donde γ es un número real no negativo arbitrario. Teorema 4.1. Arregle una estrategia Sγ y un agente i. Existe δ ∗ <1 y N ∗ de tal manera que si Δ> δ ∗, n> n ∗ y cada agente que no sean jugando sγ en el juego g (n, δ), entonces hay un entero k tal que el mejorLa respuesta para el agente I es SK. O K es único (es decir, hay una mejor respuesta única que también es una estrategia umbral), o existe un entero K de tal manera que Sγ es una mejor respuesta para el Agente I para todos los γ en el intervalo [K, K +1] (y estas son las únicas mejores respuestas entre las estrategias de umbral). Prueba.(Sketch :) Si δ es suficientemente grande, podemos ignorar lo que sucede antes de que el sistema converja a la distribución de maximumentropy. Si N es suficientemente grande, entonces la estrategia jugada por un agente no afectará significativamente la distribución del dinero. Por lo tanto, la probabilidad de que me mude de un estado (monto en dólares) a otro depende solo de la estrategia es (ya que podemos tomar la probabilidad de que me elijan hacer una solicitud y la probabilidad de que me elijan para satisfacer una solicitud aser constante). Por lo tanto, desde el punto de vista, el sistema es un proceso de decisión de Markov (MDP), y necesito calcular la política óptima (estrategia) para este MDP. Se deduce de los resultados estándar [23, Teorema 6.11.6] que existe una política óptima que es una política umbral. El argumento de que la mejor respuesta es única o hay un intervalo de las mejores respuestas se deriva de un análisis más cuidadoso de la función de valor para el MDP. Observamos que puede haber las mejores respuestas que no son estrategias de umbral. Todo ese teorema 4.1 muestra que, entre las mejores respuestas, hay al menos una que es una estrategia umbral. Dado que sabemos que hay una mejor respuesta que es una estrategia umbral, podemos buscar un equilibrio de Nash en el espacio de estrategias de umbral. Teorema 4.2. Para todo M, existe δ ∗ <1 y N ∗ de tal manera que si δ> δ ∗ y n> n ∗, existe un equilibrio NASH en el juego g (n, δ) donde todos los agentes juegan Sγ para algunos enteros γ>0. Prueba. Se deduce fácilmente del teorema de prueba 4.1 que si BR (δ, γ) es la estrategia de umbral de mejor respuesta mínima si todos los demás agentes juegan Sγ y el factor de descuento es δ, entonces para δ fijo, br (δ, ·)una función de paso. También sigue a 3 formalmente, necesitamos definir las estrategias cuando el sistema está lejos del equilibrio. Sin embargo, estas estrategias de equilibrio (estocásticas) no afectarán el comportamiento de equilibrio cuando N es grande y las desviaciones del equilibrio son extremadamente raras.145 del teorema de que si hay dos mejores respuestas, entonces una mezcla de ellas también es una mejor respuesta. Por lo tanto, si podemos unir los pasos por una línea vertical, obtenemos una curva de mejor respuesta. Es fácil ver que en todas partes esta curva de respuesta mejor cruza la diagonal Y = X define un equilibrio de Nash donde todos los agentes están utilizando la misma estrategia de umbral. Como ya hemos observado, uno de esos equilibrios ocurre en 0. Si solo hay $ M en el sistema, podemos restringir a las estrategias de umbral SK donde k ≤ m + 1. Como nadie puede tener más de $ M, todas las estrategias SK para K> m son equivalentes a SM;Estas son solo las estrategias en las que el agente siempre es voluntario en respuesta a la solicitud hecha por alguien que puede pagar. Claramente br (δ, sm) ≤ m para todos δ, por lo que la mejor función de respuesta es en o por debajo del equilibrio en M. Si k ≤ m/n, cada jugador tendrá al menos k dólares y, por lo tanto, no estará dispuesto a trabajar yLa mejor respuesta es solo 0. Considere K ∗, la K más pequeña de tal manera que K> m/n. No es difícil demostrar que para k ∗ existe A δ ∗ de tal manera que para todos δ ≥ Δ ∗, br (δ, k ∗) ≥ k ∗. Continuidad se deduce que si δ ≥ δ ∗, debe haber algo de γ tal que Br (δ, γ) = γ. Este es el equilibrio de Nash deseado. Este argumento también nos muestra que en general no podemos esperar que los puntos fijos sean únicos. Si BR (δ, K ∗) = K ∗ y Br (δ, K + 1)> K + 1, entonces nuestro argumento muestra que debe haber un segundo punto fijo. En general, puede haber múltiples puntos fijos incluso cuando BR (δ, k ∗)> k ∗, como se ilustra en la Figura 4 con n = 1000 y M = 3000. 0 5 10 15 20 25 Strategia del resto de agentes 0 5 1015 20 25 Best -Respuesta Figura 4: La mejor función de respuesta para N = 1000 y M = 3000. Teorema 4.2 nos permite restringir nuestro diseño a los agentes que utilizan estrategias de umbral con la confianza de que habrá un equilibrio no trivial. Sin embargo, no descarta la posibilidad de que pueda haber otros equilibrios que no implicen estrategias de umbral. Incluso es posible (aunque parece poco probable) que algunos de estos equilibrios puedan ser mejores.5. Bienestar social y escala Nuestros teoremas muestran que para cada valor de M y N, para δ suficientemente grande, existe un equilibrio NASH no trivial donde todos los agentes usan alguna estrategia umbral Sγ (M, N). Desde el punto de vista del diseñador del sistema, no todos los equilibrios son igualmente buenos;Queremos un equilibrio donde, tan pocos agentes posibles tengan $ 0 cuando tienen la oportunidad de hacer una solicitud (para que puedan pagar la solicitud) y relativamente pocos agentes tienen más que la cantidad umbral de dinero (por lo que siempre hay muchosde agentes para cumplir con la solicitud). Hay una tensión entre estos objetivos. No es difícil demostrar que a medida que la fracción de agentes con $ 0 aumenta en la distribución máxima de entropía, la fracción de agentes con la cantidad máxima de dinero disminuye. Por lo tanto, nuestro objetivo es comprender cuál debería ser la cantidad óptima de dinero en el sistema, dada el número de agentes. Es decir, queremos saber la cantidad de dinero que maximiza la eficiencia, es decir, la utilidad total esperada si todos los agentes usan Sγ (M, N).4 Primero observamos que el equilibrio más eficiente depende solo de la relación de M a N, no en los valores reales de M y N.Teorema 5.1. Existe n ∗ tal que para todos los juegos G (N1, δ) y G (N2, δ) donde N1, N2> N ∗, si M1/N1 = M2/N2, entonces Sγ (M1, N1) = Sγ (M2, n2). Prueba. Arreglar m/n = r.El teorema 3.1 muestra que la distribución de entropía máxima depende solo de k y la relación m/n, no en myn por separado. Por lo tanto, dada R, por cada elección de K, hay una distribución de entropía máxima única DK, r. La mejor respuesta BR (δ, K) depende solo de la distribución DK, R, no M o N.Por lo tanto, el equilibrio NASH depende solo de la relación r.Es decir, para todas las opciones de M y N de tal manera que N es suficientemente grande (de modo que se aplica el Teorema 3.1) y M/N = R, las estrategias de equilibrio son las mismas. A la luz del teorema 5.1, el diseñador del sistema debe asegurarse de que haya suficiente dinero en el sistema para que la relación entre M/N sea óptima. Actualmente estamos explorando exactamente cuál es la relación óptima. Como muestran nuestros resultados muy preliminares para β = 1 en la Figura 5, la relación parece aumentar la monótona en δ, lo que coincide con la intuición de que deberíamos proporcionar a más agentes de pacientes con la oportunidad de ahorrar más dinero. Además, parece ser relativamente suave, lo que sugiere que puede tener una buena solución analítica.0.9 0.91 0.92 0.93 0.94 0.95 tasa de descuento ∆ 5 5.5 6 6.5 7 óptimo de óptimofmn Figura 5: cantidad promedio óptima de dinero para el .25 más cercano para β = 1 comentamos que, en la práctica, puede ser más fácil para el diseñador variar el preciode cumplir con una solicitud en lugar de 4 si hay equilibrios múltiples, tomamos Sγ (M, N) como el equilibrio NASH que tiene más alta eficiencia para M y N fijos.146 inyectando dinero en el sistema. Esto produce el mismo efecto. Por ejemplo, cambiar el costo de cumplir con una solicitud de $ 1 a $ 2 es equivalente a reducir a la mitad la cantidad de dinero que tiene cada agente. Del mismo modo, reducir a la mitad el costo de cumplir con una solicitud es equivalente a duplicar la cantidad de dinero que todos tienen. Con una cantidad fija de dinero M, existe un producto óptimo NC del número de agentes y el costo C de cumplir con una solicitud. El Teorema 5.1 también nos dice cómo lidiar con un grupo dinámico de agentes. Nuestro sistema puede manejar los recién llegados con relativa facilidad: simplemente permítales unirse sin dinero. Esto no les da a los agentes existentes ningún incentivo para irse y volver a unirse como recién llegados. Luego cambiamos el precio de cumplir con una solicitud para que se mantenga la relación óptima. Este método tiene la buena característica de que se puede implementar de manera distribuida;Si todos los nodos en el sistema tienen una buena estimación de N, todos pueden ajustar los precios automáticamente.(Alternativamente, el número de agentes en el sistema se puede publicar en un lugar público). Los enfoques que dependen de ajustar la cantidad de dinero pueden requerir cálculos costosos en todo el sistema (ver [26] para un ejemplo), y deben ajustarse cuidadosamente para evitar crear incentivos para que los agentes manipulen el sistema por el cual esto se hace. Tenga en cuenta que, en principio, la comprensión de que el costo de cumplir una solicitud puede cambiar puede afectar la estrategia de los agentes. Por ejemplo, si un agente espera que aumente el costo, entonces puede querer diferir el voluntariado para cumplir con una solicitud. Sin embargo, si el número de agentes en el sistema siempre está aumentando, entonces el costo siempre disminuye, por lo que nunca hay ninguna ventaja en la espera. Puede haber una ventaja en retrasar una solicitud, pero es mucho más costoso, en términos de costos de espera que en brindar servicio, ya que asumimos que la necesidad de un servicio a menudo está sujeta a costos de espera reales, mientras que la necesidad de suministrar el servicioes simplemente aumentar una oferta monetaria.(Los problemas relacionados se discuten en [10].) En última instancia, esperamos modificar el mecanismo para que el precio de un trabajo se pueda establecer endógenamente dentro del sistema (como en las economías del mundo real), con agentes que ofertan por trabajos en lugar de haber un costo fijo establecido externamente. Sin embargo, aún no hemos explorado los cambios necesarios para implementar este cambio. Por lo tanto, por ahora, suponemos que el costo se establece en función del número de agentes en el sistema (y que no existe la posibilidad de que los agentes satisfagan una solicitud de menos que el costo oficial o de los solicitantes que ofrezcan másque eso).6. Sybils y colusión en un sentido ingenuo, nuestro sistema es esencialmente a prueba de sybil. Para obtener dólares D, sus sybils juntos aún tienen que realizar unidades de trabajo D. Además, dado que los recién llegados ingresan al sistema con $ 0, no hay beneficio de crear nuevos agentes simplemente para aprovechar una dotación inicial. Sin embargo, hay algunas formas menos directas en que un agente podría aprovechar los sybils. Primero, al tener más identidades tendrá una mayor probabilidad de ser elegido para hacer una solicitud. Es fácil ver que esto llevará a que el agente tenga una utilidad total más alta. Sin embargo, esto es solo un artefacto de nuestro modelo. Para que nuestro sistema sea fácil de analizar, hemos asumido que las oportunidades de solicitud llegaron de manera uniforme al azar. En la práctica, se hacen solicitudes para satisfacer un deseo. Nuestro modelo asumió implícitamente que todos los agentes tienen la misma probabilidad de tener un deseo en un momento particular. Tener sybils no debe aumentar la necesidad de satisfacer una solicitud. De hecho, sería razonable suponer que los sybils no realizan solicitudes en absoluto. En segundo lugar, tener Sybils hace que sea más probable que uno de los Sybils sea elegido para cumplir con una solicitud. Esto puede permitir que un usuario aumente su utilidad estableciendo un umbral más bajo;es decir, para usar una estrategia SK donde K es más pequeña que la K utilizada por la estrategia de equilibrio Nash. Intuitivamente, la necesidad de dinero no es tan crítica si el dinero es más fácil de obtener. A diferencia de la primera preocupación, esto parece un problema real. Parece razonable creer que cuando las personas toman una decisión entre varios nodos de satisfacer una solicitud, lo hacen al azar, al menos hasta cierto punto. Incluso si buscan funciones de nodo anunciadas para ayudar a tomar esta decisión, Sybils permitiría a un usuario anunciar una amplia gama de características. En tercer lugar, un agente puede reducir el costo de cumplir con una solicitud al introducir muchos sybils. Del mismo modo, podría aumentar el costo (y, por lo tanto, el valor de su dinero) al hacer que varios sybils abandonen el sistema. De manera consecutiva, podría alternarse entre estas técnicas para magnificar los efectos del trabajo que hace. Todavía no hemos calculado el efecto exacto de este cambio (interactúa con los otros dos efectos de tener sybils que ya hemos señalado). Dado el número de sybils que se necesitarían para causar un cambio real en el tamaño percibido de una gran red P2P, la practicidad de este ataque depende en gran medida de cuánto cuestan sybils a un atacante y qué recursos tiene disponibles. El segundo punto planteado con respecto a los sybils también se aplica a la colusión si permitimos que se presten dinero. Si los agentes K coluden, pueden estar de acuerdo en que, si uno se queda sin dinero, otro en el grupo le prestará dinero. Al agrupar su dinero de esta manera, los agentes K pueden volver a hacerlo mejor estableciendo un umbral más alto. Tenga en cuenta que el mecanismo de préstamo no necesita ser integrado en el sistema;Los agentes simplemente pueden usar una transacción falsa para transferir el dinero. Estas parecen ser las principales vías para los ataques colusivos, pero todavía estamos explorando este problema.7. Conclusión Hemos dado un análisis formal de un sistema de guiones y hemos demostrado que la existencia de un equilibrio de Nash donde todos los agentes usan una estrategia umbral. Además, podemos calcular la eficiencia de la estrategia de equilibrio y optimizar el precio (o la oferta monetaria) para maximizar la eficiencia. Por lo tanto, nuestro análisis proporciona un mecanismos formales para resolver algunos problemas importantes en la implementación de sistemas de scrip. Nos dice que con una población fija de usuarios racionales, es muy poco probable que estos sistemas se vuelvan inestables. Por lo tanto, si esta estabilidad es una creencia común entre los agentes, no esperaríamos inflación, burbujas o accidentes debido a la especulación del agente. Sin embargo, no podemos descartar la posibilidad de que los agentes tengan otras creencias que les hagan especular. Nuestro análisis también nos dice cómo escalar el sistema para manejar una afluencia de nuevos usuarios sin introducir estos problemas: escalar la oferta monetaria para mantener constante la cantidad promedio de dinero (o ajustar de manera equivalente los precios para lograr el mismo objetivo). Hay una serie de cuestiones teóricas que aún están abiertas, incluida una caracterización de la multiplicidad de equilibrios: ¿existen por lo general 2? Además, esperamos que uno pueda calcular las estimaciones analíticas para la mejor función de respuesta y el precio óptimo que nos permitirían comprender la relación entre los precios y los varios parámetros en el modelo.147 También sería de gran interés extender nuestro análisis para manejar configuraciones más realistas. Mencionamos algunas posibles extensiones aquí: • Hemos asumido que el mundo es homogéneo de varias maneras, incluida la frecuencia de solicitud, la utilidad y la capacidad de satisfacer las solicitudes. Sería interesante examinar cuán relajante de estos supuestos alteraría nuestros resultados.• Hemos asumido que no hay costo para un agente para ser miembro del sistema. En cambio, supongamos que impusimos un pequeño costo simplemente por estar presente en el sistema para reflejar los costos de los mensajes de enrutamiento y el mantenimiento de la superposición. Esta modificación podría tener un impacto significativo en los ataques de Sybil.• Hemos descrito un sistema de guiones que funciona cuando no hay altruistas y hemos demostrado que ningún sistema puede funcionar una vez que hay suficientes altruistas. ¿Qué sucede entre estos extremos?• Un tipo de comportamiento irracional encontrado con los sistemas de scrip es el acaparamiento. Hay algunas similitudes entre el acaparamiento y el comportamiento altruista. Mientras que un altruista brinda servicio a todos, un acaparador se ofrecerá como voluntario para todos los trabajos (para obtener más dinero) y rara vez solicitará servicio (para no gastar dinero). Sería interesante investigar en qué medida nuestro sistema es robusto contra los acaparadores. Claramente, con demasiados acaparadores, puede que no quede suficiente dinero entre los no hurtadores para garantizar que, por lo general, un no ganador tendrá suficiente dinero para satisfacer una solicitud.• Finalmente, en los sistemas de archivo de archivos P2P, hay comunidades superpuestas de varios tamaños que tienen mucho más probabilidades de satisfacer las solicitudes de los demás. Sería interesante investigar el efecto de tales comunidades en el equilibrio de nuestro sistema. También hay una serie de problemas de implementación que tendrían que resolverse en un sistema real. Por ejemplo, debemos preocuparnos por la posibilidad de que los agentes falsifiquen el dinero o mientan si realmente se brindó el servicio. Karma [26] Provdes Techniques para lidiar con ambos problemas y varios otros, pero algunas de las decisiones de implementación de Karmas apuntan a problemas para nuestro modelo. Por ejemplo, es prohibitivamente costoso garantizar que los saldos de la cuenta bancaria nunca puedan ser negativos, un hecho de que nuestro modelo no captura. Otro ejemplo es que el karma tiene nodos que sirven como contables para otros saldos de cuentas de nodos. Al igual que mantener una presencia en la red, esto impone un costo en el nodo, pero a diferencia de eso, la responsabilidad puede ser fácilmente trasero. Karma sugiere varias formas de incentivar los nodos para realizar estos deberes. No hemos investigado si estos mecanismos se incorporan sin perturbar nuestro equilibrio.8. Agradecimientos Nos gustaría agradecer a Emin Gun Sirer, Shane Henderson, Jon Kleinberg y 3 árbitros anónimos por sugerencias útiles. EF, IK y JH son apoyados en parte por NSF bajo Grant ITR-0325453. JH también es apoyado en parte por NSF bajo las subvenciones CTC-0208535 e IIS-0534064, por ONR bajo Grant N00014-01-10-511, por el Programa de Iniciativa de Investigación Universitaria Multidisciplinaria del Departamento-1-0795 y N00014-04-1-0725, y por AFOSR bajo la subvención F49620-021-0101.9. Referencias [1] E. Adar y B. A. Huberman. Montar gratis en Gnutella. Primer lunes, 5 (10), 2000. [2] K. G. Anagnostakis y M. Greenwald. Mecanismos de incentivos basados en el intercambio para el intercambio de archivos entre pares. En la Conferencia Internacional sobre Sistemas de Computación Distribuida (ICDCS), páginas 524-533, 2004. [3] BitTorrent Inc. BitTorrent Sitio web.http://www.bittorent.com.[4] A. Cheng y E. Friedman. Mecanismos de reputación a prueba de sybil. En Taller sobre Economía de los Sistemas de Pesos (P2PECON), páginas 128-132, 2005. [5] Cornell Information Technologies. Cornells Comodity Estadísticas de uso de Internet.http://www.cit.cornell.edu/computer/students/ Bandwidth/charts.html.[6] J. R. Douceur. El ataque Sybil. En Taller Internacional sobre Sistemas de Pesos (IPTP), páginas 251-260, 2002. [7] G. Ellison. Cooperación en el dilema de los prisioneros con coincidencia aleatoria anónima. Review of Economic Studies, 61: 567-588, 1994. [8] Proyecto Emule.Sitio web de EMULE.http://www.emule-project.net/.[9] M. Feldman, K. Lai, I. Stoica y J. Chuang. Técnicas de incentivos robustas para redes entre pares. En la Conferencia ACM sobre Comercio Electrónico (CE), páginas 102-111, 2004. [10] E. J. Friedman y D. C. Parkes. Precios WiFi en Starbucks: problemas en el diseño del mecanismo en línea. En EC 03: Actas de la 4ta Conferencia ACM sobre Comercio Electrónico, páginas 240-241. ACM Press, 2003. [11] E. J. Friedman y P. Resnick. El costo social de los seudónimos baratos. Journal of Economics and Management Strategy, 10 (2): 173-199, 2001. [12] R. Guha, R. Kumar, P. Raghavan y A. Tomkins. Propagación de confianza y desconfianza. En la Conferencia sobre World Wide Web (WWW), páginas 403-412, 2004. [13] M. Gupta, P. Judge y M. H. Ammar. Un sistema de reputación para redes entre pares. En Soporte de red y sistema operativo para audio digital y video (NossDAV), páginas 144-152, 2003. [14] Z. Gyongi, P. Berkhin, H. García-Molina y J. Pedersen. Enlace la detección de spam basada en la estimación de masa. Informe técnico, Universidad de Stanford, 2005. [15] J. Ioannidis, S. Ioannidis, A. D. Keromytis y V. Prevelakis. Fileteller: pagar y recibir pagos por el almacenamiento de archivos. En criptografía financiera, páginas 282-299, 2002. [16] E. T. Jaynes. ¿Dónde nos paramos en la entropía máxima? En R. D. Levine y M. Tribus, editores, el formalismo máximo de entropía, páginas 15-118. MIT Press, Cambridge, Mass., 1978. 148 [17] S. D. Kamvar, M. T. Schlosser y H. García-Molina. El algoritmo Eigentrust para la gestión de la reputación en las redes P2P. En la Conferencia sobre la World Wide Web (WWW), páginas 640-651, 2003. [18] M. Kandori. Normas sociales y aplicación de la comunidad. Review of Economic Studies, 59: 63-80, 1992. [19] Logisense Corporation. Sitio web de logisense.http://www.logisense.com/tm p2p.html.[20] L. Lovasz y P. Winkler. Mezcla de caminatas aleatorias y otras difusiones en un gráfico. En Surveys in Combinatorics, 1993, Walker (ed.), London Mathematical Society Lecture Note Series 187, Cambridge University Press.1995. [21] Grupo de tecnología de código abierto. SlashDot Preguntas frecuentes y moderación.http://slashdot.org/faq/com-mod.shtml#cm700.[22] OSMB LLC. Sitio web de Gnutella.http://www.gnutella.com/.[23] M. L. Puterman. Procesos de decisión de Markov. Wiley, 1994. [24] Seti@Home. Página web seti@inicio.http://setiathome.ssl.berkeley.edu/.[25] Sitio web de Kazaa de Sharman Networks Ltd.http://www.kazaa.com/.[26] V. Vishnumurthy, S. Chandrakumar y E. Sirer. Karma: un marco económico seguro para el intercambio de recursos entre pares. En Taller sobre Economía de Sistemas de Pesos (P2PECON), 2003. [27] L. Xiong y L. Liu. Creación de confianza en comunidades electrónicas descentralizadas entre pares. En Conferencia Internacional sobre Investigación de Comercio Electrónico (ICESCR), 2002. [28] H. Zhang, A. Goel, R. Govindan, K. Mason y B. V. Roy. Haciendo que los sistemas de reputación basados en el vector propio sean robustos para la colusión. En taller sobre algoritmos y modelos para el Graph Web (WAW), páginas 92-104, 2004. 149