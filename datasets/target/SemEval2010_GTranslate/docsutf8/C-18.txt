Un análisis inicial y una presentación de malware que exhibe un comportamiento de enjambre Fernando C.Col´on Osorio System Wireless Security Research Laboratory (W.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 fcco@cs.wpi.edu Zachi Klopman Sistema inalámbrico Laboratorio de Investigación de Seguridad (W.S.S.S.R.L.) 420 Lakeside Avneue Marlboro, Massachusetts 01752 zachi@cs.wpi.edu abstracto del martillo, que actualmente es el más rápido, el comodidad es el acelerador de la computadora en el acelerador en el acelerador en el acelerador.Se observó que la historia registrada infectaba al 90 por ciento de todos los anfitriones de Internet vulnerables en 10 minutos. Aunque la acción principal que toma el gusano del slammer es una replicación relativamente poco sofisticada de sí misma, todavía se propaga tan rápido que la respuesta humana era ineficaz. La mayoría de las estrategias de contramedidas propuestas se basan principalmente en la detección de tasas y los algoritmos limitantes. Sin embargo, tales estrategias están siendo diseñadas y desarrolladas para contener eficazmente gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, presentamos la hipótesis de que los gusanos de próxima generación serán radicalmente diferentes, y potencialmente tales técnicas resultarán ineficaces. Específicamente, proponemos estudiar una nueva generación de gusanos llamados gusanos de enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La inteligencia emergente es el comportamiento de los sistemas, muy parecidos a los sistemas biológicos como las hormigas o las abejas, donde las interacciones locales simples de los miembros autónomos, con acciones primitivas simples, da lugar al comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios básicos detrás de la idea de los gusanos de enjambre, así como la estructura básica requerida para ser considerado un gusano de enjambre. Además, presentaremos resultados preliminares sobre las velocidades de propagación de uno de esos gusanos de enjambre, llamado gusano zachik. Mostraremos que Zachik es capaz de propagarse a una velocidad 2 órdenes de magnitud más rápido que los gusanos similares sin capacidades de enjambre. Categorías y descriptores de sujetos C.2.4 [Sistemas distribuidos]: detección de intrusos;D.4.6 [Seguridad y protección]: Software invasivo Términos generales de experimentación, Seguridad 1. Introducción y trabajo previo en las primeras horas de la mañana (05:30 GMT) del 25 de enero de 2003 El gusano informático más rápido en la historia registrada comenzó a difundirse por Internet. Dentro de los 10 minutos posteriores al primer huésped infectado (paciente cero), el 90 por ciento de todos los huéspedes vulnerables se habían visto comprometidos creando una interrupción significativa en la infraestructura global de Internet. Vern Paxson, del Instituto Internacional de Ciencias de la Computación y el Laboratorio Nacional de Lawrence Berkeley, en su análisis de Slammer, comentó: El gusano Slammer se extendió tan rápido que la respuesta humana fue ineficaz, ver [4] la parte interesante, desde nuestra perspectiva, sobre la propagación de Slammer ISque era un gusano relativamente poco sofisticado con comportamiento benigno, a saber, la auto-reproducción. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagación rápida y han diseñado estrategias de contramedidas basadas principalmente en la detección de tarifas y los algoritmos limitantes. Por ejemplo, Zou, et al., [2], propuso un esquema donde se usa un filtro Kalman para detectar la propagación temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes inalcanzables de destino son monitoreadas por firewalls, y un aumento significativo más allá de lo normal, alerta a la organización sobre la presencia potencial de un gusano. Sin embargo, tales estrategias sufren del síndrome de la última guerra. Es decir, los sistemas están siendo diseñados y desarrollados para contener efectivamente gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquí, presentamos la hipótesis de que los gusanos de próxima generación serán diferentes y, por lo tanto, tales técnicas pueden tener algunas limitaciones significativas. Específicamente, proponemos estudiar una nueva generación de gusanos llamados gusanos de enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente se estudió por primera vez en asociación con sistemas biológicos. En tales estudios, los primeros investigadores descubrieron una variedad de interesantes comportamientos de insectos o animales en la naturaleza. Una bandada de pájaros atraviesa el cielo. Un grupo de forrajes de hormigas para alimentos. Una escuela de peces nadan, giros, pulgas juntas de un depredador, etc. En general, este tipo de movimiento agregado se ha llamado comportamiento del enjambre. Los biólogos y los informáticos en el campo de la inteligencia artificial han estudiado tales enjambres biológicos, y 323 intentaron crear modelos que expliquen cómo los elementos de un enjambre interactúan, logran objetivos y evolucionan. Además, en los últimos años, el estudio de la inteligencia del enjambre se ha vuelto cada vez más importante en los campos de la robótica, el diseño de redes ad-hoc móviles (Manets), el diseño de sistemas de detección de intrusos, el estudio de los patrones de tráfico en los sistemas de transporte, en militares, en militaresAplicaciones y otras áreas, ver [3]. Los conceptos básicos que se han desarrollado en la última década para explicar los enjambres, y el comportamiento del enjambre incluyen cuatro componentes básicos. Estos son: 1. Simplicidad de la lógica y las acciones: un enjambre está compuesto por n agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llamaron a estas acciones o comportamientos primitivos;2. Mecanismos de comunicación local: los agentes interactúan con otros miembros en el enjambre a través de simples mecanismos de comunicación local. Por ejemplo, un pájaro en un rebaño detecta la posición del ave adyacente y aplica una regla simple de evitar y seguir.3. Control distribuido: los agentes autónomos interactúan con su entorno, que probablemente consiste en otros agentes, pero actúan de manera relativamente independiente de todos los demás agentes. No existe un comando o líder central, y ciertamente no hay un plan global.4. Inteligencia emergente: el comportamiento agregado de los agentes autónomos da como resultado comportamientos inteligentes complejos;incluyendo autoorganización. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genéricos. Este modelo, que extiende el trabajo de Weaver [5], se presenta aquí en la Sección 2. Además, tenemos la intención de extender dicho modelo de tal manera que explica claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados gusanos de enjambre. Los gusanos de enjambre se comportan mucho como enjambres biológicos y exhiben un alto grado de aprendizaje, comunicación e inteligencia distribuida. Tales gusanos enjambres son potencialmente más dañinos que sus contrapartes genéricas similares. Específicamente, se creó la primera instancia, hasta donde sabemos, se creó un gusano de aprendizaje, llamado Zachik. Zachik es un gusano de enjambre de crujido de contraseña simple que incorpora diferentes estrategias de aprendizaje e intercambio de información. Tal gusano de enjambre se implementó tanto en una red de área local de treinta (30) hosts, así como se simuló en una topología de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer los huéspedes a velocidades de hasta dos órdenes de magnitud más rápido que su contraparte genérica. El resto de este manuscrito es la estructura de la siguiente manera. En la Sección 2 se presenta un modelo abstracto de gusanos genéricos como de gusanos enjambres. Este modelo se usa en la Sección 2.6 para describir la primera instancia de un gusano enjambre, Zachik. En la Sección 4, se presentan resultados preliminares a través de mediciones empíricas y simulación. Finalmente, en la Sección 5 se presentan nuestras conclusiones e ideas sobre el trabajo futuro.2. Modelado de gusanos Para estudiar el comportamiento de los gusanos de enjambre En general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y no necesariamente está vinculado a una instancia específica. En esta sección, describimos dicho modelo donde se describe que un gusano general tiene cuatro (4) componentes o subfunciones básicas. Por definición, un gusano es un programa autocontinido y autoproductivo. Por lo tanto, en términos simples, tiene dos funciones principales: lo que se propaga y lo que hace otras cosas. Proponemos que hay una tercera funcionalidad amplia de un gusano, la de la autoconservación. También proponemos que la otra funcionalidad de un gusano puede clasificarse más apropiadamente como acciones basadas en objetivos (GBA), ya que cualquier funcionalidad incluida en un gusano dependerá naturalmente de cualquier objetivo (y subggoals) que tenga el autor. El trabajo presentado por Weaver et.Alabama.En [5] nos proporciona principalmente una taxonomía basada en la acción y la técnica de los gusanos informáticos, que utilizamos y extendemos aún más aquí.2.1 Propagación La función de propagación en sí misma puede descomponerse en tres acciones: adquirir el objetivo, enviar escaneo e infectar el objetivo. Adquirir el objetivo simplemente significa elegir un anfitrión para atacar a continuación. Enviar un escaneo implica verificar si ese host es receptivo a un intento de infección, ya que el espacio de IP está escasamente poblado. Esto puede implicar un ping simple para verificar si el host está vivo o una evaluación de vulnerabilidad completa. Infectar el objetivo es el método real utilizado para enviar el código de gusano al nuevo host. En el formulario de algoritmo: propagate () {host: = adquire_target () éxito: = send_scan (host) if (éxito) luego infectar (host) endif} en el caso de un gusano simple que no verifica si el host es esDisponible o susceptible (como Slammer), el método de escaneo se elimina: propagate () {host: = adquire_target () infect (host)} Cada una de estas acciones puede tener un costo asociado para su inclusión y ejecución, como el mayor tamaño del gusanoy CPU o carga de red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que se puede incluir en las acciones de Worms. Esto se discute más a fondo después de expandir estas acciones a continuación.2.2 Adquisición de objetivos: la fase de adquisición objetivo de nuestro algoritmo de gusano se construye directamente a partir de la sección de descubrimiento de objetivos en [5]. Weaver et.Alabama.Taxonomizar esta tarea en 5 categorías separadas. Aquí, ampliamos aún más su trabajo a través de la parametrización. Escaneo: el escaneo puede considerarse un método basado en la ecuación para elegir un host. Se puede usar cualquier tipo de ecuación para llegar a una dirección IP, pero hasta ahora hay tres tipos principales: preferencia secuencial, aleatoria y local. El escaneo secuencial es exactamente como suena: comience en una dirección IP e incrementando a través de todo el espacio IP. Esto podría llevar consigo las opciones de las cuales IP para comenzar (valor elegido por el usuario, aleatorio o basado en IP de host infectado) y 324 cuántas veces se incrementan (valor continuo, elegido o basado en subred). El escaneo aleatorio está completamente al azar (dependiendo del método PRNG elegido y su valor de semilla). El escaneo de preferencias locales es una varianza de secuencial o aleatorio, por lo que tiene una mayor probabilidad de elegir una dirección IP local sobre una remota (por ejemplo, la división tradicional 80/20). Listas de objetivos previamente generados: las listas de objetivos previamente generadas, o las llamadas listas de golpes, podrían incluir las opciones para el porcentaje de población total y porcentaje incorrecto, o simplemente el número de IP para incluir. Implícito para este tipo está el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de cada instancia que alcanza exactamente las mismas máquinas. Listas de destino generadas externamente: las listas de objetivos generadas externamente dependen de una o más fuentes externas que se puedan consultar para los datos del host. Esto involucrará a los servidores que normalmente están disponibles públicamente, como los meta-servidores de juegos o los que el autor o el autor de gusano o de gusano lo configuran explícitamente. Los meta-servidores normalmente disponibles podrían tener parámetros para las tasas de cambio, como muchos aparecen por la noche o que se van por la mañana. Cada servidor también podría tener consultas máximas/segundo que podría manejar. El gusano también necesitaría una forma de encontrar estos servidores, ya sea dura o mediante escaneo. Listas de objetivos internos: las listas de objetivos internos dependen en gran medida del host infectado. Este método podría parametrizar la elección de cuánta información está en el host, como todas las máquinas en la subred, todas las cajas de Windows en la subred, servidores particulares, número de interno/externo, o alguna combinación. Pasivo: los métodos pasivos están determinados por interacciones normales entre hosts. Los parámetros pueden incluir una tasa de interacción con máquinas particulares, tasa de interacción interna/externa o tasa de interacción basada en subred. Cualquiera de estos métodos también se puede combinar para producir diferentes tipos de estrategias de adquisición de objetivos. Por ejemplo, el gusano A puede comenzar con una lista de golpes inicial de 100 hosts o subredes diferentes. Una vez que ha agotado su búsqueda usando la lista de golpes, puede proceder a realizar escaneo aleatorio con un sesgo local del 50%. Sin embargo, es importante tener en cuenta que el consumo de recursos de cada método no es el mismo. Los diferentes métodos pueden requerir que el gusano sea grande, como los bytes adicionales requeridos por una lista de golpes, o que tomen más tiempo de procesamiento, como buscar en el host direcciones de otros hosts vulnerables. Se deben realizar más investigaciones y análisis en esta área para determinar los costos asociados para usar cada método. Los costos podrían usarse para determinar las compensaciones de diseño en las que participan los autores de gusanos. Por ejemplo, las listas de HIT proporcionan una alta tasa de infección, pero a un alto costo del tamaño de la carga útil de gusanos.2.2.1 Enviar un escaneo Las pruebas de la función de escaneo de envío para ver si el host está disponible para infección. Esto puede ser tan simple como verificar si el host está en la red o tan complejo como verificación si el host es vulnerable a la exploit que se utilizará. El envío de un escaneo antes del intento de infección puede aumentar la tasa de escaneo si el costo por fallar una infección es mayor que el costo de fallar un escaneo o enviar un escaneo más infección;y las fallas son más frecuentes que los éxitos. Un parámetro importante para esto sería la elección del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. Además, ya sea que pruebe o no para que el host esté activo o si se trata de una prueba completa para la vulnerabilidad (o para múltiples vulnerabilidades).2.2.2 Vector de infección (iv) El vector de infección particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad particular elegida para explotar. En un sentido no específico, depende del protocolo de transporte elegido para usar y del tamaño del mensaje que se enviará. La Sección 3 de [5] también propone tres clases particulares de IV: autocrutado, segundo canal e incrustado.2.3 Auto preservación Las acciones de auto -preservación de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos deshabilitan el software antivirus o evitan que se envíe a ciertas direcciones antivirus conocidas. También se ha visto que intentan deshabilitar otros gusanos que pueden estar luchando por el mismo sistema. También creemos que un escaneo acelerado basado en el tiempo puede ayudar al gusano a deslizarse bajo el radar. También proponemos un método de señuelo, por el cual un gusano liberará a algunos niños que causan mucho ruido para que el padre no se note. También se ha propuesto [5] que un gusano causa daño a su huésped si, y solo si, se altera de alguna manera. Este módulo podría contener parámetros para: probabilidad de éxito en deshabilitar el antivirus u otras actualizaciones de software, la probabilidad de ser notado y, por lo tanto, eliminado, o endurecimiento del host contra otros gusanos.2.4 Acciones basadas en objetivos Una funcionalidad GBA de Worms depende de la lista de objetivos de los autores. La sección de cargas útiles de [5] proporciona algunas sugerencias útiles para dicho módulo. La apertura de una puerta trasera puede hacer que el anfitrión sea susceptible a más ataques. Esto implicaría una probabilidad de que se utilice la puerta trasera y cualquier utilización del tráfico asociada. También podría proporcionar una lista de otros gusanos que este anfitrión ahora es susceptible o una lista de vulnerabilidades que ahora tiene este host. Los relés de spam y los proxis HTTP, por supuesto, tienen un consumo de ancho de banda asociado o un patrón de tráfico. Los ataques de DOS de Internet tendrían un tiempo establecido de activación, un objetivo y un patrón de tráfico. El daño de los datos tendría una probabilidad asociada de que el host muera debido al daño. En la Figura 1, se resume este modelo general de un gusano. Tenga en cuenta que en este modelo no hay aprendizaje, ni muy poco, compartir información entre instancias de gusanos, y ciertamente no hay coordinación de acciones. En la siguiente sección expandimos el modelo para incluir tales mecanismos y, por lo tanto, llegamos al modelo general de un gusano enjambres.2.5 Swarms: modelo general como se describe en la Sección 1, las características básicas que distinguieron el comportamiento del enjambre de lo que parece ser comportamientos coordinados colectivos son cuatro atributos básicos. Estos son: 1. Simplicidad de lógica y acciones;2. Mecanismos de comunicación local;3. Control distribuido;y 4. Inteligencia emergente, incluida la autoorganización.325 FUNCIÓN DE ESTRUCTURA/Ejemplo Infección, Infection Vector Ejecutable es Protección de ejecución y sigiloso Deshabilitar McAfee (permanecer vivo) Enviar correo electrónico a todos en la acción de la libreta de direcciones Acción basada en objetivos (GBA) ddos www.sco.com Todo lo demás, a menudo llamado carga útil Figura 1:Modelo de gusano general En este trabajo agregamos todos estos atributos bajo el título general de aprendizaje, comunicación y control distribuido. La presencia de estos atributos distingue gusanos de enjambre de gusanos regulares u otros tipos de malware, como los zombis. En figura ??, El modelo genérico de un gusano se expande para incluir este conjunto de acciones. En este contexto, entonces, un gusano como Slammer no puede clasificarse como un gusano enjambre debido al hecho de que las nuevas instancias del gusano no coordinan sus acciones o comparten información. Por otro lado, los zombis y muchas otras formas de DDoS, que a primera vista pueden considerar los gusanos de enjambre no lo son. Esto se debe simplemente al hecho de que en el caso de los zombis, el control no está distribuido sino más bien centralizado, y no surgen comportamientos emergentes. Este último, la aparición potencial de inteligencia o nuevos comportamientos es lo que hace que los gusanos enjambres sean tan potencialmente peligrosos. Finalmente, cuando se considera la mayoría de las interrupciones recientes a la infraestructura de Internet, y a la luz de nuestra descripción de los ataques de enjambre, las interrupciones pueden clasificarse fácilmente como precursores para un comportamiento verdaderamente enjambre. Específicamente, • DDoS: una gran cantidad de hosts comprometidos envían paquetes inútiles que requieren procesamiento (Stacheldraht, http: //www.cert.org/ incidentNotes/in - 99 - 04.html). Los ataques DDoS son los primeros precursores de los ataques de enjambre debido a la gran cantidad de agentes involucrados.• Code Red CRV1, Code Red II, NIMBDA: exhiben nociones tempranas de ataques de enjambre, incluido un canal de comunicación de puerta trasera.• Staniford y Paxson en ¿Cómo ser dueño de Internet en su tiempo libre?Explore las modificaciones a CRV1, Code Red I, II con un tipo de comportamiento como enjambre. Por ejemplo, especulan en nuevos gusanos que emplean la comunicación directa de gusanos a gusanos y emplean actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de escaneo de permutación (auto coordinación).2.6 Gusano de enjambre: Los detalles al considerar la creación de lo que creíamos que era el primer gusano enjambre que existía, ¿queríamos adherirnos lo más cerca posible del modelo general presentado en la sección??mientras que al mismo tiempo facilita el análisis a gran escala, tanto empírico como a través de simulaciones, del comportamiento del enjambre. Por esta razón, seleccionamos como la función de estructura de primera instancia/ejemplo de infección, la infección por vectores de infección es la protección de ejecución y el sigilo Deshabilitar la propagación de McAfee (permanecer vivo) Enviar correo electrónico a todos en el aprendizaje de la libreta de direcciones, comunicación, feromonas/banderas (control y control distribuidoSi el gusano ya está presente) bombas de tiempo, algoritmos de aprendizaje, acción de objetivos basado en objetivos del canal IRC (GBA) DDOS www.sco.com Todo lo demás, a menudo llamado carga útil Figura 2: Modelo general de un gusano enjambre del enjambre Un gusano de agrietamiento de contraseña simple. El objetivo de este gusano simplemente es infectar un host intentando inicialmente iniciar sesión en el host utilizando contraseñas conocidas (ataque de diccionario), contraseñas que cualquier miembro del Swarm y contraseñas aleatorias han descubierto previamente. Una vez que un host está infectado, el gusano creará canales de comunicación con sus vecinos conocidos en ese momento, así como con cualquier descripción que genera con éxito. En este contexto, una generación exitosa de una descendencia significa simplemente infectar un nuevo host y replicar una copia exacta de sí misma en dicho host. Llamamos a este gusano del enjambre el gusano zachik en honor a uno de sus creadores. Como se puede ver en esta descripción, el gusano Zachik exhibe todos los elementos descritos antes. En las siguientes secciones, describimos en detalle cada uno de los elementos del gusano Zachik.2.7 Vector de infección El vector de infección utilizado para el gusano Zachik es el Protocolo de concha seguro SSH. Se escribió un cliente modificado que es capaz de recibir contraseñas de la línea de comandos e integrado con un script que lo proporciona varias contraseñas: conocido y aleatorio. Cuando se encuentra una contraseña para un objetivo apropiado, comienza el proceso de infección. Después de descubrir la contraseña de root de un host, el gusano infecta el host de destino y se replica. El gusano crea un nuevo directorio en el host de destino, copia el cliente SSH modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseñas conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts recién infectados, que generan el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podría argumentar, correctamente, que el gusano Zachik puede ser fácilmente derrotado por las técnicas actuales de contramedidas presentes en la mayoría de los sistemas hoy en día, como no permitir los inicios de raíz directa de la red. Dentro de este contexto, Zachik puede descartarse rápidamente como un gusano muy simple e inofensivo que no requiere más estudio. Sin embargo, el lector debe considerar lo siguiente: 1. Zachik se puede modificar fácilmente para incluir una variedad de vectores de infección. Por ejemplo, podría programarse para adivinar los nombres de usuario comunes y sus contraseñas;Obtenga 326 acceso a un sistema, luego adivine la contraseña de root o use otras vulnerabilidades bien conocidas para obtener privilegios raíz;2. Zachik es una prueba de gusano conceptual. La importancia de Zachik es que incorpora todos los comportamientos de un gusano enjambres, incluidos, pero no restringidos, control distribuido, comunicación entre agentes y aprendizaje;3. Zachik está compuesto por una gran colección de agentes que operan independientemente que se presta naturalmente a algoritmos paralelos, como una búsqueda paralela del espacio de direcciones IPv4. Dentro de este contexto, Slammer, incorpora una capacidad de búsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de Zachik, el conocimiento descubierto por la búsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, uno no debería descartar el potencial de esta nueva clase de gusanos, sino adoptar su estudio.2.8 Auto-conservación En el caso del gusano Zachik, las principales técnicas de autoconservación utilizadas simplemente mantienen la carga útil pequeña. En este contexto, esto simplemente significa restringir el número de contraseñas que una descendencia hereda, disfrazando los mensajes de gusano como solicitudes HTTP comunes y restringir el número de vecinos a un máximo de cinco (5).2.9 Propagación Elección del siguiente objetivo (s) en un asunto eficiente requiere pensamiento. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado técnicas de propagación que variaron. Estos incluyen: selección estrictamente aleatoria de un host vulnerable potencial;listas de objetivos de hosts vulnerables;selección aleatoria sesgada localmente (seleccione un objetivo de host al azar de una subred local);y una combinación de algunas o todas las anteriores. En nuestros entornos de prueba y simulación, aplicaremos una combinación de selección localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido al hecho de que el gusano Zachik es un gusano enjambre, el descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirá la información entre los miembros del enjambre. Los subprocesos de infección y propagación realizan el siguiente conjunto de actividades repetidamente: • Elija una dirección • Verifique la validez de la dirección • Elija un conjunto de contraseñas • Intente infectar el host seleccionado con este conjunto de contraseñas como se describe anteriormente, elegir una dirección hace usode una combinación de selección aleatoria, sesgo local y listas de objetivos. Específicamente, para elegir una dirección, la instancia puede: • Generar una nueva dirección aleatoria • Generar una dirección en la red local • Elija una dirección de una lista de transferencia.Dependencia de la propagación de elecciones particulares. La contraseña se elige de la lista de contraseñas conocidas o recién generadas. Cuando falla una infección de una dirección válida, se agrega a una lista de transferencias, que se envía a los vecinos para tratar de trabajar.2.10 Aprendizaje, Comunicación y distribuida Control 2.10.1 Comunicación El concepto de un enjambre se basa en la transferencia de información entre los vecinos, que transmiten sus nuevos mensajes entrantes a sus vecinos, y así sucesivamente hasta que cada instancia de gusano en el enjambre sea consciente de estos mensajes. Hay dos clases de mensajes: datos o mensajes de información y comandos. Los mensajes de comando están destinados a un usuario externo (también conocido como hackers y/o galletas salientes) para controlar las acciones de las instancias, y actualmente no se implementan. Los mensajes de información son actualmente de tres tipos: nuevo miembro, contraseñas y direcciones explotables (transferencias). Los nuevos mensajes de los miembros son mensajes que una nueva instancia envía a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la múltiple conexión del enjambre, y sin ellos, la topología será una estructura de alojamiento, donde eliminar un solo nodo causaría que las instancias debajo de él sean inaccesibles. Los mensajes de contraseñas informan instancias de contraseñas recién descubiertas, e informando todas las instancias, el enjambre como total recopila esta información, lo que le permite infectar nuevas instancias de manera más efectiva. Los mensajes de transferencia informan instancias de direcciones válidas que no podrían verse comprometidas (falle en romper la contraseña para la cuenta raíz). Dado que el espacio de direcciones es bastante escaso, lleva un tiempo relativamente largo (es decir, muchas pruebas) para descubrir una dirección válida. Por lo tanto, al entregar direcciones válidas descubiertas, el enjambre (a) conserva la energía al no volver a descubrir las mismas direcciones (b) atacar de manera más efectiva. En cierto modo, esta es una instancia simple de actividad coordinada de un enjambre.2.10.2 Coordinación Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunos hilos de infección y continúa manejando los mensajes entrantes (registrando vecinos, agregando nuevas contraseñas, recibiendo direcciones y transmitiendo estos mensajes).2.10.3 Control distribuido El control en el gusano Zachik se distribuye en el sentido de que cada instancia del gusano realiza un conjunto de acciones independientemente de cualquier otra instancia y, al mismo tiempo, se beneficia del aprendizaje alcanzado por sus vecinos inmediatos.2.11 Acciones basadas en objetivos La primera instanciación del gusano Zachik tiene dos objetivos básicos. Estos son: (1) propagarse y (2) descubrir y compartir con los miembros de las nuevas contraseñas de root en el enjambre.3. Diseño experimental Para verificar nuestra hipótesis de que los gusanos de enjambre son más capaces y, por lo tanto, peligrosos que otros 327 gusanos conocidos, se creó una prueba de red y se creó un simulador, capaz de simular topologías similares a Internet (espacio IPv4),desarrollado. La red de redes consistió en una red de área local de 30 computadoras basadas en Linux. El simulador fue escrito en C ++. El simple gusano de enjambre descrito en la Sección 2.6 se usó para infectar al paciente-cero, y luego se permitió que el gusano enjambre se propagara a través de sus propios mecanismos de propagación, control distribuido y comportamientos de enjambre. En el caso de una red de área local simple de 30 computadoras, se seleccionaron seis (6) contraseñas de raíz diferentes de un espacio de contraseña de 4 dígitos (10000 opciones). Al comienzo del experimento, se conoce una única contraseña conocida, la del paciente-cero. Todas las contraseñas compartidas se distribuyen al azar en todos los nodos. Del mismo modo, en el caso de la simulación, se construyó una topología de red de 10,000 hosts, cuyas direcciones se seleccionaron aleatoriamente a través del espacio IPv4. Dentro de ese espacio, se seleccionaron y se distribuyeron un total de 200 contraseñas compartidas y se distribuyeron al azar y/o dirigidas a subredes de topologías de red específicas. Por ejemplo, en una de nuestras ejecuciones de simulación, la topología de la red consistió en 200 subredes cada una que contenía 50 hosts. En tal topología, las contraseñas compartidas se distribuyeron en subredes donde se compartió un porcentaje variable de contraseñas en las subredes. Los porcentajes de contraseñas compartidas utilizadas reflejaron los primeros estudios empíricos, donde se descubrió que hasta el 39.7% de las contraseñas comunes se compartían.4. Resultados en la Figura 3, se presentan los resultados que comparan el comportamiento de ataque de enjambre versus el de un gusano malformado típico para una LAN de 30 nodos. En este conjunto de ejecuciones empíricas, seis (6) contraseñas compartidas se distribuyeron al azar en todos los nodos de una posible de 10,000 contraseñas desconocidas. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o gusanos de enjambre. La clase de gusanos presentados son las siguientes: • I-NS-NL: = Generic Worm, Independent (I), sin aprendizaje/Memoria (NL) y sin compartir información con vecinos o descendientes (NS);• S-L-S-SP: = gusano Swarm (s), aprendizaje (L), mantiene la lista de contraseñas aprendidas y el intercambio de contraseñas (SP) en los vecinos y descendientes más cercanos;y • S-L-SP&A: = WeMm Worm (s), Learning (L), mantiene la lista de contraseñas aprendidas y el intercambio de contraseñas y direcciones existentes (SP&A) en los vecinos y descendientes más cercanos. Como se muestra en la Figura 3, los resultados validan nuestra hipótesis original de que los gusanos enjambres son significativamente más eficientes y peligrosos que los gusanos genéricos. En este conjunto de experimentos, el intercambio de contraseñas proporciona un orden de mejora de magnitud sobre un gusano aleatorio sin memoria. Del mismo modo, un gusano enjambre que comparte contraseñas y direcciones es aproximadamente dos órdenes de magnitud más eficiente que su contraparte genérica. En la Figura 3, se puede observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeño espacio de muestra utilizado para este experimento. Básicamente, tan pronto como se rompe una contraseña, todos los nodos que comparten esa contraseña específica se infectan en unos pocos segundos. Tenga en cuenta que es trivial que un gusano enjambre escanee y descubra un pequeño espacio de contraseña compartida. En la Figura 4, se presentan los resultados de la simulación que comparan el comportamiento del ataque del enjambre versus el de un gusano malformado genérico. En este conjunto de ejecuciones de simulación, se construyó una topología de red de 10,000 hosts, cuyas direcciones se seleccionaron aleatoriamente a través del espacio IPv4. Dentro de ese espacio, se seleccionaron y se distribuyeron un total de 200 contraseñas compartidas y se distribuyeron al azar y/o dirigidas a subredes de topologías de red específicas. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos de gusanos o enjambres y dos (2) estrategias de escaneo de selección de host objetivo diferente (escaneo aleatorio y sesgo local). La cantidad de sesgo local se varió en múltiples ejecuciones de simulación. Los resultados presentados son comportamientos agregados. En general, se simularon la siguiente clase de gusanos genéricos y gusanos de enjambre. Escaneo de direcciones: • aleatorias: = Las direcciones se seleccionan al azar desde un subconjunto del espacio IPv4, a saber, un espacio de direcciones 224;y • Sesgo local: = Las direcciones se seleccionan al azar desde una subred local (256 direcciones) o desde un subconjunto del espacio IPv4, a saber, un espacio de direcciones 224. El porcentaje de sesgo local varía en múltiples ejecuciones. Aprendizaje, comunicación y control distribuido • I-NL-NS: gusano genérico, independiente (i), sin aprendizaje/ memoria (NL) y sin compartir información con vecinos o descendientes (NS);• I-L-OO: gusano genérico, independiente (i), aprendizaje/ sin memoria (l) y una vez compartiendo información con descuentos solo (OOS);• S-L-S-SP: = gusano Swarm (s), aprendizaje (L), mantiene la lista de contraseñas aprendidas y el intercambio de contraseñas (SP) en los vecinos y descendientes más cercanos;• S-L-S & AOP: = Swarm Worm (s), Learning (L), mantiene la lista de contraseñas aprendidas y el intercambio de direcciones con vecinos y descendientes, comparte contraseñas solo una vez (en la creación) con descendientes (SA & OP);• S-L-SP & A: = Swarm Worm (S), Learning (L), mantiene la lista de contraseñas aprendidas y el intercambio de contraseñas y direcciones existentes (SP&A) en los vecinos y descendientes más cercanos. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empíricos. Además, se pueden hacer las siguientes observaciones.1. La preferencia local es increíblemente efectiva.2. Las transferencias de direcciones cortas son más efectivas que las largas. Variamos el tamaño de la lista permitida en el intercambio de direcciones;La sobrecarga asociada con una larga lista de direcciones es perjudicial para el rendimiento del gusano del enjambre, así como para su sigilo;3. Para el caso de sesgo local, compartir direcciones válidas de anfitrión susceptible, S-L-S & AOP Worm (retiro, el S-S-S & AOP Swarm que comparte contraseñas, una sola vez, con Offsprings 328 en el momento de la creación) es más efectivo que compartir contraseñas en caso de queSwarm de S-L-S-SP. En este caso, podemos pensar en el enjambre como lanzar un ataque DistributedDictionary: diferentes segmentos del enjambre usan diferentes contraseñas para tratar de entrar en el host no infectado susceptible. En el modo de sesgo local, al principio de la vida del enjambre, el intercambio de direcciones es más efectivo que el intercambio de contraseñas, hasta que se descubren la mayoría de las subredes. Luego, la orientación de las direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre deben perder el tiempo redescubriendo las contraseñas;y 4. Infectar el último 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. Básicamente, la lista de contraseñas compartidas en las subredes se ha agotado, y el enjambre vuelve a un descubrimiento aleatorio del algoritmo de contraseña. Figura 3: Comportamiento de ataque de enjambre versus gusano malform: resultados empíricos, 30node LAN Figura 4: Comportamiento de ataque de enjambre versus gusano malform: resultados de simulación 5. Resumen y trabajo futuro En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genérica de los gusanos. El modelo presentado en la Sección 2 se extendió para incorporar una nueva clase de gusanos potencialmente peligrosos llamados gusanos de enjambre. Los gusanos de enjambre se comportan mucho como enjambres biológicos y exhiben un alto grado de aprendizaje, comunicación e inteligencia distribuida. Tales gusanos enjambres son potencialmente más dañinos que sus contrapartes genéricas. Además, se creó la primera instancia, hasta donde sabemos, de este gusano de aprendizaje, llamado Zachik. Zachik es un gusano de enjambre de crujido de contraseña simple que incorpora diferentes estrategias de aprendizaje e intercambio de información. Tal gusano de enjambre se implementó tanto en una red de área local de treinta (30) hosts, así como se simuló en una topología de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer los hosts a tasas de hasta 2 órdenes de magnitud más rápido que su contraparte genérica mientras retiene las capacidades de sigilo. Este trabajo abre una nueva área de problemas interesantes. Algunos de los problemas más interesantes y apremiantes a considerar son los siguientes: • ¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los últimos diez años en las áreas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseño de enjambres sofisticados¿Los gusanos de tal manera que tiene lugar el verdadero comportamiento emergente?• ¿Las técnicas actuales se desarrollan en el diseño de sistemas de detección de intrusos y contramedidas y sistemas sobrevivibles efectivos contra esta nueva clase de gusanos?;y • ¿Qué técnicas, si alguna, se pueden desarrollar para crear defensas contra gusanos enjambres?6. Agradecimientos Este trabajo se realizó como parte de un mayor esfuerzo en el desarrollo de los sistemas de detección de intrusos y contramedidas de próxima generación en WSSRL. El trabajo se lleva a cabo bajo los auspicios de Grant ACG-2004-06 por Acumen Consulting Group, Inc., Marlboro, Massachusetts.7. Referencias [1] C.C. Zou, L. Gao, W. G. y Towsley, D. Monitoreo y advertencia temprana para gusanos de Internet. En la décima Conferencia ACM sobre seguridad informática y comunicaciones, Washington, DC (octubre de 2003).[2] Liu, S. y Passino, K. Inteligencia de enjambre: descripción general de la literatura. En el Departamento de Ingeniería Eléctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000).[3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S. y Weaver, N. La propagación del gusano Saphire/Slammer. Tecnología.Rep., Un esfuerzo conjunto de Caida, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomíade gusanos de computadora. En Actas del Taller ACM sobre Malware Rapid (WORM) (2003).329