Diseño óptimo de Laplaciano para la recuperación de imágenes Xiaofei He Yahoo! El feedback de relevancia es una técnica poderosa para mejorar el rendimiento de la Recuperación de Imágenes Basada en Contenido (CBIR). Solicita las valoraciones de relevancia de los usuarios sobre las imágenes recuperadas por los sistemas CBIR. La etiqueta de los usuarios se utiliza luego para entrenar un clasificador que distinga entre imágenes relevantes e irrelevantes. Sin embargo, las imágenes principales que se devuelven pueden no ser las más informativas. El desafío consiste en determinar qué imágenes sin etiquetar serían las más informativas (es decir, mejorarían más al clasificador) si fueran etiquetadas y utilizadas como muestras de entrenamiento. En este artículo, proponemos un novedoso algoritmo de aprendizaje activo, llamado Diseño Óptimo Laplaciano (LOD), para la recuperación de imágenes con retroalimentación de relevancia. Nuestro algoritmo se basa en un modelo de regresión que minimiza el error cuadrático mínimo en las imágenes medidas (o etiquetadas) y al mismo tiempo preserva la estructura geométrica local del espacio de la imagen. Específicamente, asumimos que si dos imágenes están lo suficientemente cerca una de la otra, entonces sus medidas (o etiquetas) también son cercanas. Al construir un grafo de vecinos más cercanos, la estructura geométrica del espacio de la imagen puede ser descrita por el Laplaciano del grafo. Discutimos cómo los resultados del campo del diseño experimental óptimo pueden ser utilizados para guiar nuestra selección de un subconjunto de imágenes, que nos proporciona la mayor cantidad de información. Los resultados experimentales en la base de datos Corel sugieren que el enfoque propuesto logra una mayor precisión en la recuperación de imágenes con retroalimentación de relevancia. Categorías y Descriptores de Asignaturas H.3.3 [Almacenamiento y recuperación de información]: Búsqueda y recuperación de información-Retroalimentación de relevancia; G.3 [Matemáticas de la Computación]: Probabilidad y Estadística-Diseño experimental Términos Generales Algoritmos, Rendimiento, Teoría 1. INTRODUCCIÓN En muchas tareas de aprendizaje automático y recuperación de información, no hay escasez de datos no etiquetados pero las etiquetas son costosas. El desafío consiste en determinar qué muestras sin etiquetar serían las más informativas (es decir, mejorarían más el clasificador) si fueran etiquetadas y utilizadas como muestras de entrenamiento. Este problema se llama típicamente aprendizaje activo [4]. Aquí la tarea es minimizar un costo general, que depende tanto de la precisión del clasificador como del costo de la recolección de datos. Muchas aplicaciones del mundo real pueden ser adaptadas al marco de aprendizaje activo. Particularmente, consideramos el problema de la recuperación de imágenes basada en contenido impulsada por la retroalimentación de relevancia (CBIR) [13]. La Recuperación de Imágenes Basada en Contenido ha atraído un interés sustancial en la última década [13]. Está motivado por el rápido crecimiento de las bases de datos de imágenes digitales que, a su vez, requieren esquemas de búsqueda eficientes. En lugar de describir una imagen usando texto, en estos sistemas se describe una consulta de imagen utilizando una o más imágenes de ejemplo. Las características visuales de bajo nivel (color, textura, forma, etc.) se extraen automáticamente para representar las imágenes. Sin embargo, las características de bajo nivel pueden no caracterizar con precisión los conceptos semánticos de alto nivel. Para reducir la brecha semántica, se introduce la retroalimentación de relevancia en la recuperación de información basada en el contenido (CBIR) [12]. En muchos de los sistemas actuales de recuperación de imágenes basados en retroalimentación de relevancia, se requiere que el usuario proporcione sus juicios de relevancia sobre las imágenes principales devueltas por el sistema. Las imágenes etiquetadas se utilizan luego para entrenar un clasificador que separe las imágenes que coinciden con el concepto de la consulta de aquellas que no lo hacen. Sin embargo, en general, las imágenes principales que se devuelven pueden no ser las más informativas. En el peor de los casos, todas las imágenes principales etiquetadas por el usuario pueden ser positivas y, por lo tanto, las técnicas estándar de clasificación no pueden aplicarse debido a la falta de ejemplos negativos. A diferencia de los problemas de clasificación estándar donde las muestras etiquetadas están predefinidas, en la recuperación de imágenes con retroalimentación de relevancia, el sistema puede seleccionar activamente las imágenes a etiquetar. Por lo tanto, el aprendizaje activo puede ser introducido de forma natural en la recuperación de imágenes. A pesar de la existencia de muchas técnicas de aprendizaje activo, el aprendizaje activo de Máquina de Vectores de Soporte (SVM) [14] y el aprendizaje activo basado en regresión [1] han sido los que han despertado mayor interés. Basado en la observación de que cuanto más cerca del límite del SVM se encuentre una imagen, menos confiable es su clasificación, el aprendizaje activo del SVM selecciona aquellas imágenes no etiquetadas más cercanas al límite para solicitar retroalimentación del usuario con el fin de lograr un refinamiento máximo en el hiperplano entre las dos clases. La principal desventaja del aprendizaje activo de SVM es que es posible que el límite estimado no sea lo suficientemente preciso. Además, puede que no se aplique al principio de la recuperación cuando no hay imágenes etiquetadas. Algunos otros algoritmos de aprendizaje activo basados en SVM se pueden encontrar en [7], [9]. En estadística, el problema de seleccionar muestras para etiquetar se conoce típicamente como diseño experimental. La muestra x se denomina experimento, y su etiqueta y se denomina medición. El estudio del diseño experimental óptimo (DEO) se preocupa por el diseño de experimentos que se espera que minimicen las varianzas de un modelo parametrizado. La intención del diseño experimental óptimo suele ser maximizar la confianza en un modelo dado, minimizar las varianzas de los parámetros para la identificación del sistema, o minimizar la varianza de la salida de los modelos. Los enfoques clásicos de diseño experimental incluyen el Diseño A-Óptimo, el Diseño D-Óptimo y el Diseño E-Óptimo. Todos estos enfoques se basan en un modelo de regresión de mínimos cuadrados. En comparación con los algoritmos de aprendizaje activo basados en SVM, los enfoques de diseño experimental son mucho más eficientes en términos de computación. Sin embargo, este tipo de enfoques solo tienen en cuenta los datos medidos (o etiquetados) en su función objetivo, mientras que los datos no medidos (o no etiquetados) son ignorados. Beneficiar de los avances recientes en diseño experimental óptimo y aprendizaje semisupervisado, en este artículo proponemos un nuevo algoritmo de aprendizaje activo para recuperación de imágenes, llamado Diseño Óptimo Laplaciano (LOD). A diferencia de los métodos tradicionales de diseño experimental cuyas funciones de pérdida solo están definidas en los puntos medidos, la función de pérdida de nuestro algoritmo propuesto LOD está definida tanto en los puntos medidos como en los no medidos. Específicamente, introducimos un regularizador que preserva la localidad en la función de pérdida estándar basada en el error cuadrático mínimo. La nueva función de pérdida tiene como objetivo encontrar un clasificador que sea localmente lo más suave posible. En otras palabras, si dos puntos están suficientemente cerca uno del otro en el espacio de entrada, se espera que compartan la misma etiqueta. Una vez que se define la función de pérdida, podemos seleccionar los puntos de datos más informativos que se presentan al usuario para su etiquetado. Sería importante tener en cuenta que las imágenes más informativas pueden no ser las primeras imágenes devueltas. El resto del documento está organizado de la siguiente manera. En la Sección 2, proporcionamos una breve descripción del trabajo relacionado. Nuestro algoritmo propuesto de Diseño Óptimo de Laplaciano se introduce en la Sección 3. En la Sección 4, comparamos nuestro algoritmo con los algoritmos de última generación y presentamos los resultados experimentales sobre la recuperación de imágenes. Finalmente, proporcionamos algunas observaciones finales y sugerencias para trabajos futuros en la Sección 5.2. TRABAJO RELACIONADO Dado que nuestro algoritmo propuesto se basa en un marco de regresión. El trabajo más relacionado es el diseño experimental óptimo [1], que incluye el Diseño A-Óptimo, el Diseño D-Óptimo y el Diseño E-Óptimo. En esta sección, damos una breve descripción de estos enfoques. 2.1 El Problema del Aprendizaje Activo El problema genérico del aprendizaje activo es el siguiente. Dado un conjunto de puntos A = {x1, x2, · · · , xm} en Rd , encuentra un subconjunto B = {z1, z2, · · · , zk} ⊂ A que contenga los puntos más informativos. En otras palabras, los puntos zi(i = 1, · · · , k) pueden mejorar el clasificador al máximo si están etiquetados y se utilizan como puntos de entrenamiento. 2.2 Diseño Experimental Óptimo Consideramos un modelo de regresión lineal y = wT x + (1) donde y es la observación, x es la variable independiente, w es el vector de pesos y es un error desconocido con media cero. Diferentes observaciones tienen errores que son independientes, pero con varianzas iguales σ2. Definimos f(x) = wT x como la salida del aprendiz dada la entrada x y el vector de pesos w. Supongamos que tenemos un conjunto de puntos de muestra etiquetados (z1, y1), · · · , (zk, yk), donde yi es la etiqueta de zi. Por lo tanto, la estimación de máxima verosimilitud para el vector de peso, ˆw, es aquella que minimiza la suma del error cuadrado Jsse(w) = k i=1 wT zi − yi 2 (2). La estimación ˆw nos proporciona una estimación de la salida en una entrada novedosa: ˆy = ˆwT x. Según el teorema de Gauss-Markov, sabemos que ˆw − w tiene una media cero y una matriz de covarianza dada por σ2 H−1 sse, donde Hsse es la Hessiana de Jsse(w) Hsse = ∂2 Jsse ∂w2 = k i=1 zizT i = ZZT donde Z = (z1, z2, · · · , zk). Las tres medidas escalares más comunes del tamaño de la matriz de covarianza de parámetros en el diseño experimental óptimo son: • Diseño D-óptimo: determinante de Hsse. • Diseño A-óptimo: traza de Hsse. • Diseño E-óptimo: valor propio máximo de Hsse. Dado que el cálculo del determinante y los valores propios de una matriz es mucho más costoso que el cálculo de la traza de la matriz, el diseño A-óptimo es más eficiente que los otros dos. Algunos trabajos recientes sobre diseño experimental se pueden encontrar en [6], [16]. DISEÑO ÓPTIMO LAPLACIANO Dado que la matriz de covarianza Hsse utilizada en enfoques tradicionales solo depende de las muestras medidas, es decir, zis, estos enfoques no logran evaluar los errores esperados en las muestras no medidas. En esta sección, presentamos un novedoso algoritmo de aprendizaje activo llamado Diseño Óptimo Laplaciano (LOD) que hace un uso eficiente tanto de muestras medidas (etiquetadas) como no medidas (sin etiquetar). 3.1 La Función Objetivo En muchos problemas de aprendizaje automático, es natural asumir que si dos puntos xi, xj están suficientemente cerca uno del otro, entonces sus mediciones (f(xi), f(xj)) también son cercanas. Sea S una matriz de similitud. Por lo tanto, una nueva función de pérdida que respeta la estructura geométrica del espacio de datos se puede definir de la siguiente manera: J0(w) = k i=1 f(zi)−yi 2 + λ 2 m i,j=1 f(xi)−f(xj) 2 Sij (3) donde yi es la medición (o etiqueta) de zi. Se debe tener en cuenta que la función de pérdida (3) es esencialmente la misma que la utilizada en la Regresión Regularizada Laplaciana (LRR, [2]). Sin embargo, LRR es un algoritmo de aprendizaje pasivo donde se proporcionan los datos de entrenamiento. En este artículo, nos enfocamos en cómo seleccionar los datos más informativos para el entrenamiento. La función de pérdida con nuestra elección de pesos simétricos Sij (Sij = Sji) incurre en una penalización severa si los puntos vecinos xi y xj se asignan lejos uno del otro. Por lo tanto, minimizar J0(w) es un intento de asegurar que si xi y xj están cerca, entonces f(xi) y f(xj) también estén cerca. Hay muchas opciones de la matriz de similitud S. Una definición simple es la siguiente: Sij = ⎧ ⎨ ⎩ 1, si xi está entre los p vecinos más cercanos de xj, o xj está entre los p vecinos más cercanos de xi; 0, en otro caso. (4) Sea D una matriz diagonal, Dii = j Sij, y L = D−S. La matriz L se llama Laplaciano de grafo en la teoría espectral de grafos [3]. Sea y = (y1, · · · , yk)T y X = (x1, · · · , xm). Siguiendo algunos pasos algebraicos simples, vemos que: J0(w) = k i=1 wT zi − yi 2 + λ 2 m i,j=1 wT xi − wT xj 2 Sij = y − ZT w T y − ZT w + λwT m i=1 DiixixT i − m i,j=1 SijxixT j w = yT y − 2wT Zy + wT ZZT w +λwT m i=1 DiixixT i − m i,j=1 SijxixT j w = yT y − 2wT Zy + wT ZZT + λXLXT w La Hessiana de J0(w) se puede calcular de la siguiente manera: H0 = ∂2 J0 ∂w2 = ZZT + λXLXT En algunos casos, la matriz ZZT +λXLXT es singular (por ejemplo, si m < d). Por lo tanto, no hay una solución estable para el problema de optimización Ec. (3). Una forma común de abordar este problema mal planteado es introducir un regularizador de Tikhonov en nuestra función de pérdida: J(w) = k i=1 wT zi − yi 2 + λ1 2 m i,j=1 wT xi − wT xj 2 Sij +λ2 w 2 (5) El Hessiano de la nueva función de pérdida está dado por: H = ∂2 J ∂w2 = ZZT + λ1XLXT + λ2I := ZZT + Λ donde I es una matriz identidad y Λ = λ1XLXT + λ2I. Claramente, H tiene rango completo. Exigir que el gradiente de J(w) con respecto a w se anule proporciona la estimación óptima ˆw: ˆw = H−1 Zy. La siguiente proposición establece las propiedades de sesgo y varianza del estimador para el vector de coeficientes w. Proposición 3.1. E( ˆw − w) = −H−1 Λw, Cov( ˆw) = σ2 (H−1 − H−1 ΛH−1 ) Demostración. Dado que y = ZTw + y E( ) = 0, se deduce que E( ˆw − w) (6) = H−1 ZZTw − w = H−1 (ZZT + Λ − Λ)w − w = (I − H−1 Λ)w − w = −H−1 Λw (7) Nótese que Cov(y) = σ2 I, la matriz de covarianza de ˆw tiene la expresión: Cov( ˆw) = H−1 ZCov(y)ZT H−1 = σ2 H−1 ZZT H−1 = σ2 H−1 (H − Λ)H−1 = σ2 (H−1 − H−1 ΛH−1 ) (8) Por lo tanto, la matriz de error cuadrático medio para los coeficientes w es E(w − ˆw)(w − ˆw)T (9) = H−1 ΛwwT ΛH−1 + σ2 (H−1 − H−1 ΛH−1 ) (10) Para cualquier x, sea ˆy = ˆwT x su observación predicha. El error cuadrático de predicción esperado es E(y − ˆy)2 = E( + wT x − ˆwT x)2 = σ2 + xT [E(w − ˆw)(w − ˆw)T ]x = σ2 + xT [H−1 ΛwwT ΛH−1 + σ2 H−1 − σ2 H−1 ΛH−1 ]x Claramente, el error cuadrático de predicción esperado depende de la variable explicativa x, por lo tanto, el error cuadrático de predicción promedio esperado sobre el conjunto de datos completo A es 1 m m i=1 E(yi − ˆwT xi)2 = 1 m m i=1 xT i [H−1 ΛwwT ΛH−1 + σ2 H−1 − σ2 H−1 ΛH−1 ]xi +σ2 = 1 m Tr(XT [σ2 H−1 + H−1 ΛwwT ΛH−1 − σ2 H−1 ΛH−1 ]X) +σ2 Dado que Tr(XT [H−1 ΛwwT ΛH−1 − σ2 H−1 ΛH−1 ]X) Tr(σ2 XT H−1 X), nuestro criterio de optimalidad laplaciano se formula minimizando la traza de XT H−1 X. Definición 1. Diseño óptimo de Laplaciano min Z=(z1,··· ,zk) Tr XT ZZT + λ1XLXT + λ2I −1 X (11) donde z1, · · · , zk son seleccionados de {x1, · · · , xm}. 4. DISEÑO ÓPTIMO DEL NÚCLEO LAPLACIANO Enfoques canónicos de diseño experimental (por ejemplo, Los diseños A-óptimos, D-óptimos y E-óptimos solo consideran funciones lineales. No logran descubrir la geometría intrínseca en los datos cuando el espacio de datos es altamente no lineal. En esta sección, describimos cómo realizar el Diseño Experimental Laplaciano en el Espacio de Hilbert de Núcleos Reproductores (RKHS), lo que da lugar al Diseño Experimental Laplaciano de Núcleo (KLOD). Para los puntos de datos dados x1, · · · , xm ∈ X con un núcleo de Mercer positivo definido K : X ×X → R, existe un único RKHS HK de funciones de valores reales en X. Sea Kt(s) la función de s obtenida al fijar t y dejar que Kt(s) = K(s, t). HK consiste en todas las combinaciones lineales finitas de la forma ∑ i=1 αiKti con ti ∈ X y los límites de tales funciones a medida que los ti se vuelven densos en X. Tenemos Ks, Kt HK = K(s, t). 4.1 Derivación de LOD en el Espacio de Hilbert del Núcleo Reproductor. Considera el problema de optimización (5) en RKHS. Por lo tanto, buscamos una función f ∈ HK tal que se minimice la siguiente función objetivo: min f∈HK k i=1 f(zi)−yi 2 + λ1 2 m i,j=1 f(xi)−f(xj) 2 Sij+λ2 f 2 HK (12). Tenemos la siguiente proposición. Proposición 4.1. Sea H = { m i=1 αiK(·, xi)|αi ∈ R} un subespacio de HK, la solución al problema (12) está en H. Demostración. Sea H⊥ el complemento ortogonal de H, es decir, HK = H ⊕ H⊥. Por lo tanto, para cualquier función f ∈ HK, tiene una descomposición ortogonal de la siguiente manera: f = fH + fH⊥ Ahora, evaluemos f en xi: f(xi) = f, Kxi HK = fH + fH⊥ , Kxi HK = fH, Kxi HK + fH⊥ , Kxi HK Observa que Kxi ∈ H mientras que fH⊥ ∈ H⊥. Esto implica que fH⊥ , Kxi HK = 0. Por lo tanto, f(xi) = fH, Kxi HK = fH(xi). Esto completa la prueba. La Proposición 4.1 nos dice que el minimizador del problema (12) admite una representación f∗ = m i=1 αiK(·, xi). Por favor, consulte [2] para ver los detalles. Sea φ : Rd → H un mapeo de características del espacio de entrada Rd a H, y K(xi, xj) =< φ(xi), φ(xj) >. Que X denote la matriz de datos en RKHS, X = (φ(x1), φ(x2), · · · , φ(xm)). De manera similar, definimos Z = (φ(z1), φ(z2), · · · , φ(zk)). Por lo tanto, el problema de optimización en RKHS se puede escribir de la siguiente manera: min Z Tr XT ZZT + λ1XLXT + λ2I −1 X (13) Dado que la función de mapeo φ generalmente es desconocida, no hay una forma directa de resolver el problema (13). En lo siguiente, aplicamos trucos de kernel para resolver este problema de optimización. Sea X−1 la inversa de Moore-Penrose (también conocida como pseudoinversa) de X. Así, tenemos: XT ZZT + λ1XLXT + λ2I −1 X = XT XX−1 ZZT + λ1XLXT + λ2I −1 (XT )−1 XT X = XT X ZZT X + λ1XLXT X + λ2X −1 (XT )−1 XT X = XT X XT ZZT X + λ1XT XLXT X + λ2XT X −1 XT X = KXX KXZKZX + λ1KXXLKXX + λ2KXX −1 KXX donde KXX es una matriz m × m (KXX,ij = K(xi, xj)), KXZ es una matriz m×k (KXZ,ij = K(xi, zj)), y KZX es una matriz k×m (KZX,ij = K(zi, xj)). Por lo tanto, el Diseño Óptimo del Laplaciano del Núcleo se puede definir de la siguiente manera: Definición 2. En este subapartado, discutimos cómo resolver los problemas de optimización (11) y (14). Particularmente, si seleccionamos un núcleo lineal para KLOD, entonces se reduce a LOD. Por lo tanto, nos enfocaremos en el problema (14) a continuación. Se puede demostrar que el problema de optimización (14) es NP-duro. En esta subsección, desarrollamos un enfoque codicioso secuencial simple para resolver (14). Supongamos que se han seleccionado n puntos, denotados por una matriz Zn = (z1, · · · , zn). El punto (n + 1)-ésimo zn+1 puede ser seleccionado resolviendo el siguiente problema de optimización: max Zn+1=(Zn,zn+1) Tr KXX KXZn+1 KZn+1X + λ1KXXLKXX + λ2KXX −1 KXX (15) Las matrices de kernel KXZn+1 y KZn+1X pueden ser reescritas de la siguiente manera: KXZn+1 = KXZn , KXzn+1 , KZn+1X = KZnX Kzn+1X Por lo tanto, tenemos: KXZn+1 KZn+1X = KXZn KZnX + KXzn+1 Kzn+1X Definimos: A = KXZn KZnX + λ1KXXLKXX + λ2KXX A solo depende de X y Zn. Por lo tanto, el punto (n + 1)-ésimo zn+1 se da por: zn+1 = arg min zn+1 Tr KXX A + KXzn+1 Kzn+1X −1 KXX. Cada vez que seleccionamos un nuevo punto zn+1, la matriz A se actualiza por: A ← A + KXzn+1 Kzn+1X. Si la función de kernel se elige como producto interno K(x, y) = x, y, entonces HK es un espacio funcional lineal y el algoritmo se reduce a LOD. 5. RECUPERACIÓN DE IMÁGENES BASADA EN CONTENIDO UTILIZANDO DISEÑO ÓPTIMO LAPLACIANO En esta sección, describimos cómo aplicar el Diseño Óptimo Laplaciano a la RCIB. Comenzamos con una breve descripción de la representación de imágenes utilizando características visuales de nivel bajo. 5.1 Representación de Imágenes de Nivel Bajo La representación de imágenes de nivel bajo es un problema crucial en la Recuperación de Información Basada en el Contenido (CBIR). Las características visuales generales incluyen color, textura, forma, etc. Las características de color y textura son las características visuales más ampliamente utilizadas en la recuperación de información basada en contenido (CBIR). En comparación con las características de color y textura, las características de forma suelen describirse después de que las imágenes hayan sido segmentadas en regiones u objetos. Dado que la segmentación de imágenes robusta y precisa es difícil de lograr, el uso de características de forma para la recuperación de imágenes se ha limitado a aplicaciones especiales donde los objetos o regiones están fácilmente disponibles. En este trabajo, combinamos un histograma de color de 64 dimensiones y un Momento de Textura de Color (CTM, [15]) de 64 dimensiones para representar las imágenes. El histograma de color se calcula utilizando 4 × 4 × 4 contenedores en el espacio HSV. El Momento de Textura de Color es propuesto por Yu et al. [15], el cual integra las características de color y textura de la imagen en una forma compacta. CTM adopta la transformada de Fourier local como un esquema de representación de texturas y deriva ocho mapas característicos para describir diferentes aspectos de las relaciones de co-ocurrencia de píxeles de imagen en cada canal del espacio de color (SVcosH, SVsinH, V). Entonces, CTM calcula el primer y segundo momento de estos mapas como una representación de la distribución de píxeles de la imagen en color natural. Por favor, consulte [15] para más detalles. 5.2 Recuperación de imágenes con retroalimentación de relevancia La retroalimentación de relevancia es una de las técnicas más importantes para reducir la brecha entre las características visuales de bajo nivel y los conceptos semánticos de alto nivel [12]. Tradicionalmente, los comentarios de relevancia de los usuarios se utilizan para actualizar el vector de consulta o ajustar el peso de las diferentes dimensiones. Este proceso puede ser visto como un proceso de aprendizaje en línea en el que el sistema de recuperación de imágenes actúa como un aprendiz y el usuario actúa como un maestro. El proceso típico de recuperación se describe de la siguiente manera: 1. El usuario envía un ejemplo de imagen de consulta al sistema. El sistema clasifica las imágenes en la base de datos según alguna métrica de distancia predefinida y presenta al usuario las imágenes mejor clasificadas. El sistema selecciona algunas imágenes de la base de datos y solicita al usuario que las etiquete como relevantes o irrelevantes. El sistema utiliza la información proporcionada por los usuarios para reorganizar las imágenes en la base de datos y devolver al usuario las imágenes principales. Ve al paso 2 hasta que el usuario esté satisfecho. Nuestro algoritmo de Diseño Óptimo de Laplaciano se aplica en el segundo paso para seleccionar las imágenes más informativas. Una vez que obtenemos las etiquetas para las imágenes seleccionadas por LOD, aplicamos la Regresión Regularizada Laplaciana (LRR, [2]) para resolver el problema de optimización (3) y construir el clasificador. El clasificador se utiliza luego para reordenar las imágenes en la base de datos. Ten en cuenta que, para reducir la complejidad computacional, no utilizamos todas las imágenes sin etiquetar en la base de datos, sino solo aquellas dentro de los 500 primeros resultados de la iteración anterior. 6. RESULTADOS EXPERIMENTALES En esta sección, evaluamos el rendimiento de nuestro algoritmo propuesto en una gran base de datos de imágenes. Para demostrar la efectividad de nuestro algoritmo LOD propuesto, lo comparamos con la Regresión Regularizada de Laplaciano (LRR, [2]), la Máquina de Vectores de Soporte (SVM), el Aprendizaje Activo de Máquina de Vectores de Soporte (SVMactive) [14], y el Diseño A-Óptimo (AOD). Tanto SVMactive, AOD y LOD son algoritmos de aprendizaje activo, mientras que LRR y SVM son algoritmos de clasificación estándar. SVM solo hace uso de las imágenes etiquetadas, mientras que LRR es un algoritmo de aprendizaje semi-supervisado que hace uso tanto de imágenes etiquetadas como no etiquetadas. Para SVMactive, AOD y LOD, los algoritmos seleccionan 10 imágenes de entrenamiento en cada iteración. Para LRR y SVM, utilizamos las 10 imágenes principales como datos de entrenamiento. Sería importante señalar que SVMactive se basa en el SVM ordinario, LOD se basa en LRR y AOD se basa en la regresión ordinaria. Los parámetros λ1 y λ2 en nuestro algoritmo LOD se establecen empíricamente en 0.001 y 0.00001. Para ambos algoritmos LRR y LOD, utilizamos la misma estructura de grafo (ver Ecuación 4) y establecemos el valor de p (número de vecinos más cercanos) en 5. Comenzamos con un ejemplo sintético simple para dar una intuición sobre cómo funciona LOD. 6.1 Ejemplo Sintético Simple Se presenta un ejemplo sintético simple en la Figura 1. El conjunto de datos contiene dos círculos. Ocho puntos son seleccionados por AOD y LOD. Como se puede ver, todos los puntos seleccionados por AOD son del círculo grande, mientras que LOD selecciona cuatro puntos del círculo grande y cuatro del círculo pequeño. Los números junto a los puntos seleccionados indican su orden de selección. Claramente, los puntos seleccionados por nuestro algoritmo LOD pueden representar mejor el conjunto de datos original. No comparamos nuestro algoritmo con SVMactive porque SVMactive no se puede aplicar en este caso debido a la falta de puntos etiquetados. 6.2 Diseño Experimental de Recuperación de Imágenes La base de datos de imágenes que utilizamos consta de 7,900 imágenes de 79 categorías semánticas, del conjunto de datos COREL. Es un conjunto de imágenes grande y heterogéneo. Cada imagen se representa como un vector de 128 dimensiones según se describe en la Sección 5.1. La Figura 2 muestra algunas imágenes de muestra. Para exhibir las ventajas de usar nuestro algoritmo, necesitamos una forma confiable de evaluar el rendimiento de recuperación y las comparaciones con otros algoritmos. Listamos a continuación diferentes aspectos del diseño experimental. 6.2.1 Métricas de Evaluación Utilizamos la curva de precisión-alcance y la tasa de precisión [10] para evaluar la efectividad de los algoritmos de recuperación de imágenes. El alcance está especificado por el número (N) de imágenes mejor clasificadas presentadas al usuario. La precisión es la proporción entre el número de imágenes relevantes presentadas al usuario y el (a) Conjunto de datos 1 2 3 4 5 6 7 8 (b) AOD 1 2 3 4 5 6 7 8 (c) LOD Figura 1: Selección de datos por algoritmos de aprendizaje activo. Los números junto a los puntos seleccionados indican su orden de selección. Claramente, los puntos seleccionados por nuestro algoritmo LOD pueden representar mejor el conjunto de datos original. Se debe tener en cuenta que el algoritmo SVMactive no se puede aplicar en este caso debido a la falta de puntos etiquetados. (a) (b) (c) Figura 2: Imágenes de muestra de las categorías cuentas, elefante y barco. El alcance de precisión describe la precisión con varios alcances y, por lo tanto, proporciona una evaluación general del rendimiento de los algoritmos. Por otro lado, la tasa de precisión enfatiza la precisión en un valor particular de alcance. En general, es apropiado presentar 20 imágenes en una pantalla. Agregar más imágenes en una pantalla puede afectar la calidad de las imágenes presentadas. Por lo tanto, la precisión en los primeros 20 (N = 20) es especialmente importante. En los sistemas de recuperación de imágenes del mundo real, la imagen de consulta generalmente no se encuentra en la base de datos de imágenes. Para simular dicho entorno, utilizamos validación cruzada de cinco pliegues para evaluar los algoritmos. Más precisamente, dividimos toda la base de datos de imágenes en cinco subconjuntos de tamaño igual. Por lo tanto, hay 20 imágenes por categoría en cada subconjunto. En cada ejecución de validación cruzada, se selecciona un subconjunto como conjunto de consulta, y los otros cuatro subconjuntos se utilizan como base de datos para la recuperación. La curva de precisión del precisionscope y la tasa de precisión se calculan promediando los resultados de la validación cruzada de cinco pliegues. 6.2.2 Esquema de retroalimentación automática de relevancia Diseñamos un esquema de retroalimentación automática para modelar el proceso de recuperación. Para cada consulta enviada, nuestro sistema recupera y clasifica las imágenes en la base de datos. Se seleccionaron 10 imágenes de la base de datos para que los usuarios las etiqueten y la información de las etiquetas es utilizada por el sistema para volver a clasificarlas. Ten en cuenta que las imágenes seleccionadas en iteraciones anteriores están excluidas de selecciones posteriores. Para cada consulta, se realiza el mecanismo de retroalimentación automática de relevancia durante cuatro iteraciones. Es importante señalar que el esquema de retroalimentación automática de relevancia utilizado aquí es diferente de los descritos en [8], [11]. En [8], [11], las cuatro imágenes relevantes e irrelevantes principales fueron seleccionadas como las imágenes de retroalimentación. Sin embargo, esto puede no ser práctico. En los sistemas de recuperación de imágenes del mundo real, es posible que la mayoría de las imágenes mejor clasificadas sean relevantes (o irrelevantes). Por lo tanto, es difícil para el usuario encontrar tanto cuatro imágenes relevantes como irrelevantes. Es más razonable que los usuarios proporcionen información de retroalimentación solo sobre las 10 imágenes seleccionadas por el sistema. 6.3 Rendimiento de recuperación de imágenes En el mundo real, no es práctico requerir que el usuario proporcione muchas rondas de retroalimentación. El rendimiento de recuperación después de las dos primeras rondas de retroalimentación (especialmente la primera ronda) es más importante. La Figura 3 muestra las curvas de precisión-alcance promedio de los diferentes algoritmos para las dos primeras iteraciones de retroalimentación. Al principio de la recuperación, las distancias euclidianas en el espacio original de 128 dimensiones se utilizan para clasificar las imágenes en la base de datos. Después de que el usuario proporcione retroalimentación de relevancia, se aplican los algoritmos LRR, SVM, SVMactive, AOD y LOD para volver a clasificar las imágenes. Para reducir la complejidad temporal de los algoritmos de aprendizaje activo, no seleccionamos las imágenes más informativas de toda la base de datos, sino de las 500 imágenes principales. Para LRR y SVM, se requiere que el usuario etiquete las 10 imágenes principales. Para SVMactive, AOD y LOD, se requiere que el usuario etiquete las 10 imágenes más informativas seleccionadas por estos algoritmos. Tenga en cuenta que, SVMactive solo puede ser ap(a) Iteración de retroalimentación 1 (b) Iteración de retroalimentación 2 Figura 3: Las curvas de precisión promedio-alcance de diferentes algoritmos para las dos primeras iteraciones de retroalimentación. El algoritmo LOD funciona mejor en todo el alcance. Se debe tener en cuenta que, en la primera ronda de retroalimentación, el algoritmo SVMactive no se puede aplicar. Se aplica el SVM ordinario para construir el clasificador inicial. (a) Precisión en el Top 10 (b) Precisión en el Top 20 (c) Precisión en el Top 30 Figura 4: Evaluación del rendimiento de los cinco algoritmos de aprendizaje para la recuperación de imágenes con retroalimentación de relevancia. (a) Precisión en el top 10, (b) Precisión en el top 20 y (c) Precisión en el top 30. Como se puede observar, nuestro algoritmo LOD supera consistentemente a los otros cuatro algoritmos. Por lo tanto, no se puede aplicar en la primera ronda y utilizamos el SVM estándar para construir el clasificador inicial. Como se puede ver, nuestro algoritmo LOD supera a los otros cuatro algoritmos en todo el ámbito. Además, el algoritmo LRR tiene un mejor rendimiento que SVM. Esto se debe a que el algoritmo LRR hace un uso eficiente de las imágenes no etiquetadas al incorporar un regularizador de preservación de la localidad en la función objetivo de regresión ordinaria. El algoritmo AOD es el que tiene peor rendimiento. A medida que el alcance se amplía, la diferencia de rendimiento entre estos algoritmos disminuye. Al agregar de forma iterativa los comentarios de los usuarios, los resultados de precisión correspondientes (en los primeros 10, 20 y 30 lugares) de los cinco algoritmos se muestran respectivamente en la Figura 4. Como se puede ver, nuestro algoritmo LOD tiene el mejor rendimiento en todos los casos y el algoritmo LRR tiene el segundo mejor rendimiento. Ambos de estos dos algoritmos hacen uso de las imágenes sin etiquetar. Esto demuestra que las imágenes sin etiquetar son útiles para descubrir la estructura geométrica intrínseca del espacio de imágenes y, por lo tanto, mejorar el rendimiento de recuperación. En el mundo real, es posible que el usuario no esté dispuesto a proporcionar demasiadas retroalimentaciones de relevancia. Por lo tanto, el rendimiento de recuperación en las primeras dos rondas es especialmente importante. Como se puede observar, nuestro algoritmo LOD logra una mejora del rendimiento del 6.8% para los 10 mejores resultados, del 5.2% para los 20 mejores resultados y del 4.1% para los 30 mejores resultados, en comparación con el segundo mejor algoritmo (LRR) después de las dos primeras rondas de retroalimentación de relevancia. 6.4 Discusión Se han realizado sistemáticamente varios experimentos en la base de datos de Corel. Nos gustaría resaltar varios puntos interesantes: 1. Es claro que el uso del aprendizaje activo es beneficioso en el ámbito de la recuperación de imágenes. Hay un aumento significativo en el rendimiento al utilizar los métodos de aprendizaje activo. Especialmente, de los tres métodos de aprendizaje activo (SVMactive, AOD, LOD), nuestro algoritmo propuesto LOD es el que tiene mejor rendimiento. En muchas aplicaciones del mundo real, como la recuperación de imágenes con retroalimentación de relevancia, generalmente hay dos formas de reducir la tarea laboriosa de etiquetado manual. Uno es el aprendizaje activo que selecciona las muestras más informativas para etiquetar, y el otro es el aprendizaje semi-supervisado que utiliza las muestras no etiquetadas para mejorar el rendimiento del aprendizaje. Ambas estrategias han sido estudiadas extensamente en el pasado [14], [7], [5], [8]. El trabajo presentado en este artículo se centra en el aprendizaje activo, pero también aprovecha los avances recientes en el aprendizaje semi-supervisado [2]. Específicamente, incorporamos un regularizador que preserva la localidad en el marco de regresión estándar y encontramos las muestras más informativas con respecto a la nueva función objetivo. De esta manera, las técnicas de aprendizaje activo y de aprendizaje semi-supervisado se unifican de manera fluida para aprender un clasificador óptimo. 3. La técnica de retroalimentación de relevancia es crucial para la recuperación de imágenes. Para los cinco algoritmos, el rendimiento de recuperación mejora con más retroalimentación proporcionada por el usuario. CONCLUSIONES Y TRABAJOS FUTUROS Este artículo describe un novedoso algoritmo de aprendizaje activo, llamado Diseño Óptimo Laplaciano, para permitir una recuperación de imágenes con retroalimentación de relevancia más efectiva. Nuestro algoritmo se basa en una función objetivo que minimiza simultáneamente el error empírico y preserva la estructura geométrica local del espacio de datos. Utilizando técnicas de diseño experimental, nuestro algoritmo encuentra las imágenes más informativas para etiquetar. Estas imágenes etiquetadas y las imágenes sin etiquetar en la base de datos se utilizan para aprender un clasificador. Los resultados experimentales en la base de datos Corel muestran que tanto el aprendizaje activo como el aprendizaje semi-supervisado pueden mejorar significativamente el rendimiento de recuperación. En este documento, consideramos el problema de recuperación de imágenes en un conjunto de datos de imágenes pequeño, estático y de dominio cerrado. Un dominio mucho más desafiante es la World Wide Web (WWW). Para la búsqueda de imágenes en la web, es posible recopilar una gran cantidad de información sobre los clics de los usuarios. Esta información puede ser utilizada de forma natural para construir el grafo de afinidad en nuestro algoritmo. Sin embargo, la complejidad computacional en el escenario web puede convertirse en un problema crucial. Además, aunque nuestro interés principal en este artículo se centra en la recuperación de imágenes con retroalimentación de relevancia, nuestros resultados también pueden ser de interés para investigadores en reconocimiento de patrones y aprendizaje automático, especialmente cuando hay una gran cantidad de datos disponibles pero solo se pueden etiquetar muestras limitadas. 8. REFERENCIAS [1] A. C. Atkinson y A. N. Donev. Diseños experimentales óptimos. Oxford University Press, 2002. [2] M. Belkin, P. Niyogi, y V. Sindhwani. Regularización de variedades: Un marco geométrico para el aprendizaje a partir de ejemplos. Revista de Investigación de Aprendizaje Automático, 7:2399-2434, 2006. [3] F. R. K. Chung. Teoría Espectral de Grafos, volumen 92 de la Serie de Conferencias Regionales en Matemáticas. AMS, 1997. [4] D. A. Cohn, Z. Ghahramani y M. I. Jordan. Aprendizaje activo con modelos estadísticos. Revista de Investigación en Inteligencia Artificial, 4:129-145, 1996. [5] A. Dong y B. Bhanu. Un nuevo algoritmo EM semisupervisado para la recuperación de imágenes. En la Conferencia IEEE sobre Visión por Computadora y Reconocimiento de Patrones, Madison, WI, 2003. [6] P. Flaherty, M. I. Jordan y A. P. Arkin. Diseño robusto de experimentos biológicos. En Advances in Neural Information Processing Systems 18, Vancouver, Canadá, 2005. [7] K.-S. Goh, E. Y. Chang y W.-C. Lai. Aprendizaje activo dependiente del concepto multimodal para la recuperación de imágenes. En Actas de la Conferencia ACM sobre Multimedia, Nueva York, octubre de 2004. [8] X. Lo siento, la oración "He." no tiene un significado claro en inglés. ¿Podrías proporcionar más contexto o una oración completa para que pueda traducirla al español de manera precisa? Aprendizaje de subespacios semisupervisado incremental para la recuperación de imágenes. En Actas de la Conferencia ACM sobre Multimedia, Nueva York, octubre de 2004. [9] S. C. Hoi y M. R. Lyu. Un marco de aprendizaje activo semi-supervisado para la recuperación de imágenes. En la Conferencia Internacional de IEEE sobre Visión por Computadora y Reconocimiento de Patrones, San Diego, CA, 2005. [10] D. P. Huijsmans y N. Sebe. Cómo completar los gráficos de rendimiento en la recuperación de imágenes basada en contenido: Agregar generalidad y normalizar el alcance. IEEE Transactions on Pattern Analysis and Machine Intelligence, 27(2):245-251, 2005. [11] Y.-Y.

Transacciones del IEEE sobre Inteligencia Artificial y Análisis de Patrones, 27(2):245-251, 2005. [11] Y.-Y. Lin, T.-L. Liu y H.-T. Chen. Aprendizaje de variedades semánticas para la recuperación de imágenes. En Actas de la Conferencia ACM sobre Multimedia, Singapur, noviembre de 2005. [12] Y. Rui, T. S. Huang, M. Ortega y S. Mehrotra. Retroalimentación de relevancia: Una herramienta poderosa para la recuperación de imágenes basada en contenido de forma interactiva. IEEE Transactions on Circuits and Systems for Video Technology, 8(5), 1998. [13] A. W. Smeulders, M. Worring, S. Santini, A. Gupta, and R. Jain. 

Traducción: IEEE Transactions on Circuits and Systems for Video Technology, 8(5), 1998. [13] A. W. Smeulders, M. Worring, S. Santini, A. Gupta y R. Jain. Recuperación de imágenes basada en contenido al final de los primeros años. IEEE Transactions on Pattern Analysis and Machine Intelligence, 22(12):1349-1380, 2000. [14] S. Tong y E. Chang. Aprendizaje activo de máquina de vectores de soporte para recuperación de imágenes. En Actas de la novena conferencia internacional de ACM sobre Multimedia, páginas 107-118, 2001. [15] H. Yu, M. Li, H.-J. Zhang y J. Feng. Momentos de textura de color para la recuperación de imágenes basada en contenido. En la Conferencia Internacional de Procesamiento de Imágenes, páginas 24-28, 2002. [16] K. Yu, J. Bi y V. Tresp. Aprendizaje activo a través del diseño experimental transductivo. En Actas de la 23ª Conferencia Internacional sobre Aprendizaje Automático, Pittsburgh, PA, 2006.