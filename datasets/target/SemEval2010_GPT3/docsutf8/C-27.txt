Un sistema de localización de alta precisión y bajo costo para redes de sensores inalámbricos Radu Stoleru, Tian He, John A. Stankovic, David Luebke Departamento de Ciencias de la Computación Universidad de Virginia, Charlottesville, VA 22903 {stoleru, tianhe, stankovic, luebke}@cs.virginia.edu RESUMEN El problema de la localización de nodos de sensores inalámbricos ha sido considerado durante mucho tiempo como muy difícil de resolver, al considerar las realidades de los entornos del mundo real. En este artículo, describimos formalmente, diseñamos, implementamos y evaluamos un nuevo sistema de localización, llamado Spotlight. Nuestro sistema utiliza las propiedades espacio-temporales de eventos bien controlados en la red (por ejemplo, luz) para obtener las ubicaciones de los nodos sensores. Demostramos que se puede lograr una alta precisión en la localización sin la necesidad de hardware costoso en los nodos sensores, como lo requieren otros sistemas de localización. Evaluamos el rendimiento de nuestro sistema en despliegues de nodos Mica2 y XSM. A través de evaluaciones de rendimiento de un sistema real desplegado al aire libre, obtenemos un error de localización de 20 cm. Una red de sensores, con cualquier cantidad de nodos, desplegada en un área de 2500m2, puede ser localizada en menos de 10 minutos, utilizando un dispositivo que cuesta menos de $1000. Hasta donde sabemos, este es el primer informe de un error de localización de submetro, obtenido en un entorno exterior, sin equipar los nodos de sensor inalámbricos con hardware especializado de alcance. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicaciones]: Sistemas Distribuidos; C.3 [Sistemas Especiales y Basados en Aplicaciones]: Sistemas en Tiempo Real y Sistemas Integrados. Términos generales Algoritmos, Medición, Rendimiento, Diseño, Experimentación 1. INTRODUCCIÓN Recientemente, los sistemas de redes de sensores inalámbricos se han utilizado en muchas aplicaciones prometedoras, incluyendo vigilancia militar, monitoreo de hábitats, seguimiento de vida silvestre, etc. [12] [22] [33] [36]. Si bien muchos servicios de middleware, para apoyar estas aplicaciones, han sido diseñados e implementados con éxito, la localización - encontrar la posición de los nodos sensores - sigue siendo uno de los desafíos de investigación más difíciles de resolver en la práctica. Dado que la mayoría de las aplicaciones emergentes basadas en nodos de sensores en red requieren conciencia de la ubicación para ayudar en sus operaciones, como anotar datos captados con contexto de ubicación, es un requisito indispensable que un nodo de sensor pueda encontrar su propia ubicación. Se han propuesto muchos enfoques en la literatura [4] [6] [13] [14] [19] [20] [21] [23] [27] [28], sin embargo, aún no está claro cómo estas soluciones pueden ser implementadas de manera práctica y económica. Un GPS a bordo [23] es una solución típica de alta gama, que requiere hardware sofisticado para lograr una sincronización de tiempo de alta resolución con los satélites. Las limitaciones de potencia y coste para los nodos de sensores pequeños descartan esto como una solución viable. Otras soluciones requieren dispositivos por nodo que puedan realizar la medición de distancia entre nodos vecinos. Las dificultades de estos enfoques son de dos tipos. Primero, bajo restricciones de factor de forma y suministro de energía, los rangos efectivos de tales dispositivos son muy limitados. Por ejemplo, el rango efectivo de los transductores ultrasónicos utilizados en el sistema Cricket es de menos de 2 metros cuando el emisor y el receptor no están enfrentados [26]. Segundo, dado que la mayoría de los nodos sensores son estáticos, es decir, no se espera que cambie su ubicación, no resulta rentable equipar estos sensores con circuitos especiales solo para una localización única. Para superar estas limitaciones, se han propuesto muchos esquemas de localización sin rango. La mayoría de estos esquemas estiman la ubicación de los nodos sensores aprovechando la información de conectividad de radio entre los nodos vecinos. Estos enfoques eliminan la necesidad de hardware especializado de alto costo, a cambio de una localización menos precisa. Además, las características de propagación de radio varían con el tiempo y dependen del entorno, lo que impone altos costos de calibración para los esquemas de localización sin rango. Con estas limitaciones en mente, este documento aborda el siguiente desafío de investigación: ¿Cómo conciliar la necesidad de una alta precisión en la estimación de la ubicación con el costo para lograrlo? Nuestra respuesta a este desafío es un sistema de localización llamado Spotlight. Este sistema emplea una arquitectura asimétrica, en la que los nodos sensores no necesitan ningún hardware adicional, aparte de lo que tienen actualmente. Todo el hardware sofisticado y la computación residen en un único dispositivo Spotlight. El dispositivo Spotlight utiliza una fuente de luz láser dirigible, iluminando los nodos sensores colocados dentro de un terreno conocido. Demostramos que esta localización es mucho más precisa (es decir, decenas de centímetros) que los esquemas de localización basados en rango y que tiene un rango efectivo mucho más largo (es decir, miles de metros) que las soluciones basadas en ultrasonido/rango acústico. Al mismo tiempo, dado que solo se necesita un único dispositivo sofisticado para localizar toda la red, el costo amortizado es mucho menor que el costo de añadir componentes de hardware a los sensores individuales. TRABAJO RELACIONADO En esta sección, discutimos el trabajo previo en localización en dos categorías principales: los esquemas de localización basados en rango (que utilizan dispositivos de rango costosos por nodo para una alta precisión, o soluciones de rango menos precisas, como el Indicador de Fuerza de Señal Recibida (RSSI)), y los esquemas sin rango, que utilizan solo información de conectividad (salto a salto) como indicación de proximidad entre los nodos. El problema de localización es un problema de investigación fundamental en muchos dominios. En el campo de la robótica, se ha estudiado extensamente [9] [10]. Los errores de localización reportados están en el orden de decenas de centímetros, al utilizar hardware de medición especializado, es decir, un telémetro láser o ultrasonido. Debido al alto costo y al tamaño no despreciable del hardware de alcance, estas soluciones no pueden aplicarse simplemente a las redes de sensores. El RSSI ha sido una solución atractiva para estimar la distancia entre el emisor y el receptor. El sistema RADAR utiliza el RSSI para construir un repositorio centralizado de intensidades de señal en varias posiciones con respecto a un conjunto de nodos de baliza. La ubicación de un usuario móvil se estima dentro de unos pocos metros. De manera similar, MoteTrack [17] distribuye los valores de RSSI de referencia a los nodos de baliza. También se han propuesto soluciones que utilizan RSSI y no requieren nodos de baliza [5] [14] [24] [26] [29]. Todos comparten la idea de usar un faro móvil. Los nodos sensores que reciben las balizas aplican diferentes algoritmos para inferir su ubicación. En [29], Sichitiu propone una solución en la que los nodos que reciben la baliza construyen, basándose en el valor de RSSI, una restricción en su estimación de posición. En [26], Priyantha et al. proponen MAL, un método de localización en el cual un nodo móvil (moviéndose estratégicamente) ayuda a medir distancias entre pares de nodos, hasta que las restricciones en las distancias generen un grafo rígido. En [24], Pathirana et al. formulan el problema de localización como una estimación en línea en un sistema dinámico no lineal y proponen un Filtro de Kalman Extendido Robusto para resolverlo. Elnahrawy [8] proporciona fuertes evidencias de las limitaciones inherentes de la precisión de la localización utilizando RSSI, en entornos interiores. Una técnica de medición más precisa utiliza la diferencia de tiempo entre una señal de radio y una onda acústica para obtener distancias entre pares de nodos sensores. Este enfoque produce errores de localización más pequeños, a costa de hardware adicional. El sistema de soporte de ubicación Cricket [25] puede lograr una granularidad de ubicación de decenas de centímetros con transceptores de ultrasonido de corto alcance. AHLoS, propuesto por Savvides et al. [27], emplea técnicas de medición de Tiempo de Llegada (ToA) que requieren hardware extenso y la resolución de sistemas de ecuaciones no lineales relativamente grandes. Una técnica similar de ToA se emplea en [3]. En [30], Simon et al. implementan un sistema distribuido (utilizando el rango acústico) que localiza a un francotirador en un terreno urbano. El posicionamiento mediante medición acústica también es utilizado por Kwon et al. [15]. Los errores reportados en la localización varían de 2.2m a 9.5m, dependiendo del tipo (centralizado vs. distribuido) del algoritmo de Escalado de Mínimos Cuadrados utilizado. Para las redes de sensores inalámbricos, el rango es una opción difícil. El costo del hardware, el gasto de energía, el factor de forma, el alcance limitado, todos son compromisos difíciles, y es difícil imaginar que dispositivos baratos, poco confiables y con limitaciones de recursos hagan uso de soluciones de localización basadas en el alcance. Sin embargo, la alta precisión de localización lograda por estos esquemas es muy deseable. Para superar los desafíos planteados por los esquemas de localización basados en el rango, cuando se aplican a redes de sensores, se ha propuesto y evaluado un enfoque diferente en el pasado. Este enfoque se llama sin rango y trata de obtener información de ubicación a partir de la proximidad a un conjunto de nodos de referencia conocidos. Bulusu et al. proponen en [4] un esquema de localización, llamado Centroid, en el cual cada nodo se localiza en el centroide de sus nodos de referencia cercanos. En [13], He et al. proponen APIT, un esquema en el cual cada nodo decide su posición basándose en la posibilidad de estar dentro o fuera de un triángulo formado por cualquier tres nodos de baliza escuchados por el nodo. El Sistema de Coordenadas Global [20], desarrollado en el MIT, utiliza el conocimiento a priori de la densidad de nodos en la red para estimar la distancia promedio de salto. La familia de esquemas de localización DV-* [21] utiliza el número de saltos desde los nodos faro conocidos hasta los nodos en la red para inferir la distancia. La mayoría de los esquemas de localización sin rango han sido evaluados en simulaciones o en entornos controlados. Varios estudios [11] [32] [34] han destacado los desafíos que plantean los entornos reales. Langendoen y Reijers presentan un estudio detallado y comparativo de varios esquemas de localización en [16]. Hasta donde sabemos, Spotlight es el primer esquema de localización sin rango que funciona muy bien en un entorno exterior. Nuestro sistema requiere una línea de visión entre un solo dispositivo y los nodos sensores, y el mapa del terreno donde se encuentra el campo de sensores. El sistema Spotlight tiene un largo alcance efectivo (miles de metros) y no requiere infraestructura adicional ni hardware para los nodos sensores. El sistema Spotlight combina las ventajas y no sufre de las desventajas de las dos clases de localización. 3. DISEÑO DEL SISTEMA DE FOCO La idea principal del sistema de localización Spotlight es generar eventos controlados en el campo donde se desplegaron los nodos sensores. Un evento podría ser, por ejemplo, la presencia de luz en un área. Usando el momento en que un evento es percibido por un nodo sensor y las propiedades espacio-temporales de los eventos generados, se puede inferir información espacial (es decir, la ubicación) sobre el nodo sensor. Figura 1. Localización de una red de sensores utilizando el sistema Spotlight. Visualizamos, y representamos en la Figura 1, un escenario de despliegue y localización de una red de sensores de la siguiente manera: los nodos de sensores inalámbricos son desplegados aleatoriamente desde un vehículo aéreo no tripulado. Después de la implementación, los nodos sensores se autoorganizan en una red y ejecutan un protocolo de sincronización de tiempo. Una aeronave (por ejemplo, un helicóptero), equipada con un dispositivo llamado Spotlight, vuela sobre la red y genera eventos de luz. Los nodos sensores detectan los eventos y envían de vuelta al dispositivo Spotlight, a través de una estación base, los momentos en que los eventos fueron detectados. El dispositivo Spotlight calcula la ubicación de los nodos sensores. Durante el diseño de nuestro sistema Spotlight, hicimos las siguientes suposiciones: - la red de sensores a localizar está conectada y un middleware, capaz de enviar datos desde los nodos sensores al dispositivo Spotlight, está presente. - el vehículo aéreo tiene un conocimiento muy preciso de su posición y orientación (6 parámetros: 3 de traslación y 3 de rotación de cuerpo rígido) y posee el mapa del campo donde se desplegó la red. - un potente dispositivo Spotlight está disponible y es capaz de generar 14 eventos espacialmente grandes que pueden ser detectados por los nodos sensores, incluso en presencia de ruido de fondo (luz del día). - existe una línea de visión entre el dispositivo Spotlight y los nodos sensores. Nuestras suposiciones son suposiciones simplificadoras, destinadas a reducir la complejidad de la presentación, para mayor claridad. Proponemos soluciones que no se basan en estas suposiciones simplificadoras, en la Sección 6. Para describir formalmente y generalizar el sistema de localización Spotlight, introducimos las siguientes definiciones. 3.1 Definiciones y formulación del problema. Supongamos que el espacio A ⊂R3 contiene todos los nodos sensores N, y que cada nodo Ni está posicionado en pi(x, y, z). Para obtener pi(x, y, z), un sistema de localización Spotlight necesita soportar tres funciones principales, a saber, una Función de Distribución de Eventos (EDF) E(t), una Función de Detección de Eventos D(e), y una Función de Localización L(Ti). Se definen formalmente de la siguiente manera: Definición 1: Un evento e(t, p) es un fenómeno detectable que ocurre en el tiempo t y en el punto p є A. Ejemplos de eventos son la luz, el calor, el humo, el sonido, etc. Sea Ti={ti1, ti2, …, tin} un conjunto de n marcas de tiempo de eventos detectados por un nodo i. Sea T={t1, t2, …, tm} el conjunto de m marcas de tiempo de eventos generados en el campo del sensor. Definición 2: La Función de Detección de Eventos D(e) define un algoritmo de detección binaria. Para un evento dado e: ⎩ ⎨ ⎧ = detectadoNoesEventofalso, detectadoesEventoverdadero, )( e e eD (1) Definición 3: La Función de Distribución de Eventos (EDF) E(t) define la distribución puntual de eventos dentro de A en el tiempo t: }{ verdaderopteDApptE =∧∈= )),((|)( (2) Definición 4: La Función de Localización L(Ti) define un algoritmo de localización con entrada Ti, una secuencia de marcas de tiempo de eventos detectados por el nodo i: I iTt i tETL ∈ = )()( (3) Figura 2. Como se muestra en la Figura 2, la función de detección de eventos D(e) está respaldada por los nodos sensores. Se utiliza para determinar si ocurre un evento externo o no. Puede implementarse a través de un algoritmo de detección basado en un umbral simple o mediante otras técnicas avanzadas de procesamiento digital de señales. Las funciones de Distribución de Eventos E(t) y de Localización L(Ti) son implementadas por un dispositivo Spotlight. La función de localización es un algoritmo de agregación que calcula la intersección de múltiples conjuntos de puntos. La Función de Distribución de Eventos E(t) describe la distribución de eventos a lo largo del tiempo. Es el núcleo del sistema Spotlight y es mucho más sofisticado que las otras dos funciones. Debido a que E(t) es realizada por el dispositivo Spotlight, los requisitos de hardware para los nodos sensores siguen siendo mínimos. Con el apoyo de estas tres funciones, el proceso de localización se desarrolla de la siguiente manera: 1) Un dispositivo Spotlight distribuye eventos en el espacio A a lo largo del tiempo. 2) Durante la distribución de eventos, los nodos sensores registran la secuencia de tiempo Ti = {ti1, ti2, …, tin} en la que detectan los eventos. 3) Después de la distribución de eventos, cada nodo sensor envía la secuencia de tiempo de detección de vuelta al dispositivo Spotlight. 4) El dispositivo Spotlight estima la ubicación de un nodo sensor i, utilizando la secuencia de tiempo Ti y la función E(t) conocida. La Función de Distribución de Eventos E(t) es la técnica principal utilizada en el sistema Spotlight y proponemos tres diseños para ella. Estos diseños tienen diferentes compensaciones y la comparación de costos se presenta en la Sección 3.5. 3.2 Función de Distribución de Eventos de Escaneo Puntual Para ilustrar la funcionalidad básica de un sistema de Spotlight, comenzamos con un sistema de sensor simple donde un conjunto de nodos se coloca a lo largo de una línea recta (A = [0, l] R). El dispositivo Spotlight genera eventos puntuales (por ejemplo, manchas de luz) a lo largo de esta línea con velocidad constante s. El conjunto de marcas de tiempo de los eventos detectados por un nodo i es Ti={ti1}. La Función de Distribución de Eventos E(t) es: ⊂ }{ stpApptE *)( =∧∈= (4) donde t ∈[0, l/s]. La función de localización resultante es: }{ sttETL iii ∗== 11 )()( (5) donde D(e(ti1, pi)) = true para el nodo i posicionado en pi. La implementación de la Función de Distribución de Eventos E(t) es sencilla. Como se muestra en la Figura 3(a), cuando una fuente de luz emite un haz de luz con la velocidad angular dada por d s dt d S )(cos 2 αα α == , se genera un evento de mancha de luz con velocidad constante s a lo largo de la línea situada a una distancia d. Figura 3. La implementación del escaneo de puntos EDF se puede generalizar al caso en el que los nodos están ubicados en un plano bidimensional R2. En este caso, el sistema Spotlight escanea progresivamente el plano para activar los nodos sensores. Este escenario está representado en la Figura 3(b). 3.3 Función de Distribución de Eventos de Escaneo de Línea Algunos dispositivos, por ejemplo, láseres de diodo, pueden generar toda una línea de eventos simultáneamente. Con estos dispositivos, podemos soportar fácilmente la Función Distribuida de Eventos de Escaneo de Línea. Suponemos que los 15 nodos sensores están ubicados en un plano bidimensional (A=[l x l] ⊂R2) y que la velocidad de escaneo es s. El conjunto de marcas de tiempo de los eventos detectados por un nodo i es Ti={ti1, ti2}. Figura 4. La implementación del Line Scan EDF se define de la siguiente manera: ( ){ ks,*tpl][0,kp(t)E kkx =∧∈= } para t ∈[0, l/s] y: ({ ls*tk,pl][0,kp(t)E kky −=∧∈= )} (6) para t ∈[ l/s, 2l/s]. Podemos localizar un nodo calculando la intersección de las dos líneas de eventos, como se muestra en la Figura 4. Más formalmente: I )()()( 21 iii tEtETL = (7) donde D(e(ti1, pi)) = true, D(e(ti2, pi)) = true para el nodo i posicionado en pi. 3.4 Función de Distribución de Eventos de Cobertura de Área Otros dispositivos, como proyectores de luz, pueden generar eventos que cubren un área. Esto permite la implementación del Área de Cobertura EDF. La idea de Area Cover EDF es dividir el espacio A en múltiples secciones y asignar un identificador binario único, llamado código, a cada sección. Supongamos que la localización se realiza dentro de un plano (A R2). Cada sección Sk dentro de A tiene un código único k. El Área de Cobertura EDF se define entonces de la siguiente manera: ⊂ ⎩ ⎨ ⎧ = 0iskofbitjthiffalse, 1iskofbitjthiftrue, ),( jkBIT (8) }{ truetkBITSpptE k =∧∈= ),()( y el algoritmo de localización correspondiente es: { ∧∈=∧== )),(()(|)( iki TtiftruetkBITSCOGppTL (9)})`),(( iTTtiffalsetkBIT −∈= donde COG(Sk) denota el centro de gravedad de Sk. Ilustramos el Área de Cobertura EDF con un ejemplo sencillo. Como se muestra en la Figura 5, el plano A está dividido en 16 secciones. Cada sección Sk tiene un código único k. El dispositivo Spotlight distribuye los eventos de acuerdo a estos códigos: en el tiempo j, una sección Sk está cubierta por un evento (iluminada por luz), si el j-ésimo bit de k es 1. Un nodo ubicado en cualquier lugar de la sección Sk se localiza en el centro de gravedad de esa sección. Por ejemplo, los nodos dentro de la sección 1010 detectan los eventos en el tiempo T = {1, 3}. En t = 4 se puede determinar la sección donde reside cada nodo. Una localización más precisa requiere una partición más fina del plano, por lo tanto, el número de bits en el código aumentará. Considerando el ruido presente en un entorno real al aire libre, es fácil observar que un error relativamente pequeño en la detección del patrón de bits correcto podría resultar en un gran error de localización. Volviendo al ejemplo mostrado en la Figura 5, si un nodo sensor se encuentra en la sección con el código 0000, y debido al ruido, en el tiempo t = 3, cree que detectó un evento, concluirá incorrectamente que su código es 1000, y se posicionará dos cuadros por debajo de su posición correcta. La precisión de la localización puede deteriorarse aún más si hay múltiples errores en la transmisión del código. Una solución natural a este problema es utilizar códigos correctores de errores, los cuales reducen en gran medida la probabilidad de un error, sin tener que pagar el precio de una retransmisión, o alargar demasiado el tiempo de transmisión. Varios esquemas de corrección de errores han sido propuestos en el pasado. Dos de los más destacados son el código de Hamming (7, 4) y el código de Golay (23, 12). Ambos son códigos de corrección de errores lineales perfectos. El esquema de codificación de Hamming puede detectar hasta 2 errores de bits y corregir 1 error de bit. En el esquema de Hamming (7, 4), un mensaje que tiene 4 bits de datos (por ejemplo, dddd, donde d es un bit de datos) se transmite como una palabra de 7 bits añadiendo 3 bits de control de error (por ejemplo, dddpdpp, donde p es un bit de paridad). Figura 5. Los pasos de Area Cover EDF. Los eventos cubren las áreas sombreadas. Los pasos de la técnica de Cobertura de Área, al usar el esquema de Hamming (7, 4), se muestran en la Figura 6. Los códigos Golay pueden detectar hasta 6 errores de bits y corregir hasta 3 errores de bits. Similar a Hamming (7, 4), Golay construye una palabra de código de 23 bits a partir de datos de 12 bits. Los códigos Golay han sido utilizados en la transmisión de datos de satélites y naves espaciales y son más adecuados en casos donde se desean longitudes de palabras de código cortas. Figura 6. Los pasos de Area Cover EDF con ECC de Hamming (7, 4). Los eventos cubren las áreas sombreadas. Supongamos una probabilidad de error de 1 bit del 0.01, y un mensaje de 12 bits que necesita ser transmitido. La probabilidad de una transmisión fallida es la siguiente: 0.11 si no se utiliza detección y corrección de errores; 0.0061 para el esquema de Hamming (es decir, más de 1 error de bit); y 0.000076 para el esquema de Golay (es decir, más de 3 errores de bit). Golay es así 80 veces más robusto que el esquema de Hamming, que es 20 veces más robusto que el esquema sin corrección de errores. Considerando que un número limitado de correcciones es posible en cualquier esquema de codificación, surge una pregunta natural: ¿podemos minimizar el error de localización cuando hay errores que no se pueden corregir? Esto se puede lograr mediante una colocación inteligente de códigos en la cuadrícula. Como se muestra en la Figura 7, la ubicación A, en presencia de un error de 1 bit, tiene un error de localización promedio más pequeño en comparación con la ubicación B. El objetivo de nuestra estrategia de colocación de códigos es reducir la distancia euclidiana total entre todos los pares de códigos con distancias de Hamming menores que K, el mayor número esperado de errores de 1 bit. Figura 7. Diferentes estrategias de ubicación de códigos. Formalmente, una ubicación está representada por una función P: [0, l]d → C, que asigna un código a cada coordenada en el cubo d-dimensional de tamaño l (por ejemplo, en el caso plano, ubicamos códigos en una cuadrícula bidimensional). Denotamos por dE(i, j) la distancia euclidiana y por dH(i, j) la distancia de Hamming entre dos códigos i y j. En un entorno ruidoso, dH(i,j) determina la probabilidad de cruce entre los dos códigos. Para el caso de detecciones independientes, cuanto mayor sea dH(i, j), menor será la probabilidad de cruce. La función objetivo se define de la siguiente manera: d Kjid E ljiwherejid H ],0[,}),(min{ ),( ∈∑≤ (10) La Ecuación 10 es un problema de programación no lineal y no convexo. En general, es analíticamente difícil obtener el mínimo global. Para superar esto, proponemos un método de Colocación Ávida para obtener resultados subóptimos. En este método inicializamos la cuadrícula bidimensional con códigos. Luego intercambiamos los códigos dentro de la cuadrícula repetidamente, para minimizar la función objetivo. Para cada intercambio, elegimos de forma codiciosa un par de códigos que pueda reducir la función objetivo (Ecuación 10) al máximo. El método de Colocación Ávida propuesto finaliza cuando ningún intercambio de códigos puede minimizar aún más la función objetivo. Para la evaluación, comparamos el error promedio de localización en presencia de un error de K bits para dos estrategias: el Colocación Codiciosa propuesta y la Colocación en Mayor Fila (coloca los códigos consecutivamente en el arreglo, en orden de fila primero). 0 0.5 1 1.5 2 2.5 3 3.5 4 4 9 16 25 36 49 64 81 Tamaño de la cuadrícula Error de Localización [unidad de cuadrícula] Colocación Consecutiva en Mayor Fila Colocación Codiciosa Figura 8. Error de localización con colocación de código y sin capacidad de ECC. Como muestra la Figura 8, si no hay capacidad de detección/corrección de errores y se producen errores de 1 bit, entonces nuestro método de Colocación Codiciosa puede reducir el error de localización en un promedio del 23%, en comparación con la Colocación en Mayor Fila. Si se utilizan esquemas de detección y corrección de errores (por ejemplo, Hamming (12, 8) y si ocurren errores de 3 bits (K=3) entonces el método de Colocación Codiciosa reduce el error de localización en un 12%, en comparación con la Colocación en Mayor Fila, como se muestra en la Figura 9. Si K=1, entonces no hay beneficio en utilizar el método de Colocación Codiciosa, ya que el error de 1 bit puede ser corregido por el esquema de Hamming. 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 4 9 16 25 36 49 64 81 Tamaño de la cuadrícula Error de localización [unidad de cuadrícula] Colocación consecutiva en orden de fila Colocación codiciosa Figura 9. Error de localización con el emplazamiento del código y análisis de la función de distribución de eventos Hamming ECC 3.5. Aunque las tres técnicas mencionadas anteriormente son capaces de localizar los nodos sensores, difieren en el tiempo de localización, sobrecarga de comunicación y energía consumida por la Función de Distribución de Eventos (llamémosla Sobrecarga de Eventos). Supongamos que todos los nodos sensores están ubicados en un cuadrado de tamaño de borde D, y que el dispositivo Spotlight puede generar N eventos (por ejemplo, Los eventos de Cobertura de Punto, Línea y Área ocurren cada segundo y el error de localización máximo tolerable es r. La Tabla 1 presenta la comparación de costos de ejecución de las tres técnicas de Spotlight diferentes. Tabla 1. El cuadro 1 indica que el Sobrecosto de Evento para el método de Escaneo de Puntos es el más pequeño: requiere una cobertura única del área, de ahí el D2. Sin embargo, el escaneo de punto lleva mucho más tiempo que la técnica de cobertura de área, que se completa en logrD segundos. El método de escaneo de línea equilibra bien el tiempo de sobrecarga del evento con el tiempo de localización. Al duplicar la Sobrecarga del Evento, el método de Escaneo de Línea solo tarda un porcentaje de tiempo de r/2D en completarse, en comparación con el método de Escaneo de Puntos. A partir de la Tabla 1, se puede observar que los costos de ejecución no dependen del número de nodos sensores a localizar. Es importante destacar la proporción de Sobrecarga de Eventos por unidad de tiempo, la cual es indicativa de los requisitos de energía para el dispositivo Spotlight. Esta proporción es constante para el Escaneo Puntual (r2 *N) mientras crece linealmente con el área, para la Cobertura de Área (D2 *N/2). Si el área de despliegue es muy grande, el uso del EDF de Cobertura de Área es prohibitivamente caro, si no imposible. Para propósitos prácticos, el Área de Cobertura es una solución viable para redes de tamaño pequeño a mediano, mientras que el Escaneo de Línea funciona bien para redes grandes. Discutimos las implicaciones del requisito de energía para el dispositivo Spotlight, y ofrecemos una solución híbrida en la Sección 6. Análisis del Error de Localización La precisión de la localización con la técnica Spotlight depende de muchos aspectos. Los principales factores que se consideraron durante la implementación del sistema se discuten a continuación: 17 - Sincronización de tiempo: el sistema Spotlight intercambia marcas de tiempo entre los nodos sensores y el dispositivo Spotlight. Es necesario que el sistema alcance consenso sobre la hora global a través de la sincronización. Debido a la incertidumbre en el procesamiento de hardware y la comunicación inalámbrica, solo podemos limitar dichos errores dentro de ciertos límites (por ejemplo, un instante). Una entrada imprecisa a la Función de Localización L(T) conduce a un error en la localización del nodo. - Incertidumbre en la Detección: la tasa de muestreo de los nodos sensores es finita, por lo tanto, habrá un retraso impredecible entre el momento en que un evento está realmente presente y cuando el nodo sensor lo detecta. Las tasas de muestreo más bajas generarán errores de localización más grandes. - Tamaño del evento: los eventos distribuidos por el dispositivo Spotlight no pueden ser infinitamente pequeños. Si un nodo detecta un evento, le resulta difícil estimar la ubicación exacta de sí mismo dentro del evento. - Realización de la Función de Distribución de Eventos: EDF define las ubicaciones de los eventos en el tiempo t. Debido a la precisión limitada (por ejemplo, imprecisión mecánica), un dispositivo Spotlight podría generar eventos que se ubiquen de manera diferente a donde se supone que deberían estar esos eventos. Es importante señalar que el error de localización es independiente del número de nodos sensores en la red. Esta independencia, así como la independencia mencionada del costo de ejecución, indican las muy buenas propiedades de escalabilidad (con el número de nodos sensores, pero no con el área de despliegue) que posee el sistema Spotlight. 4. IMPLEMENTACIÓN DEL SISTEMA Para nuestra evaluación de rendimiento, implementamos dos sistemas Spotlight. Usando estas dos implementaciones pudimos investigar el espectro completo de técnicas de Distribución de Eventos, propuestas en la Sección 3, a un costo único reducido (menos de $1,000). La primera implementación, llamada μSpotlight, tenía un alcance corto (10-20 metros), sin embargo, su capacidad para generar todo el espectro de EDFs la hizo muy útil. Utilizamos esta implementación principalmente para investigar las capacidades del sistema Spotlight y ajustar su rendimiento. No se pretendía representar la solución completa, sino solo una versión reducida del sistema. La segunda implementación, el sistema Spotlight, tenía un alcance mucho más largo (hasta 6500m), pero estaba limitado en los tipos de EDF que podía generar. El objetivo de esta implementación era mostrar cómo funciona el sistema Spotlight en un entorno real al aire libre, y mostrar correlaciones con los resultados experimentales obtenidos de la implementación del sistema μSpotlight. En la parte restante de esta sección, describimos cómo implementamos los tres componentes (Distribución de Eventos, Detección de Eventos y Funciones de Localización) de la arquitectura Spotlight, y el protocolo de sincronización de tiempo, un componente clave de nuestro sistema. Sistema µSpotlight En el primer sistema que construimos, llamado μSpotlight, utilizamos como dispositivo Spotlight un proyector Infocus LD530 conectado a una computadora portátil IBM Thinkpad. El sistema se muestra en la Figura 10. La Función de Distribución de Eventos se implementó como una interfaz gráfica de usuario en Java. Debido a los estrictos requisitos de tiempo y al retraso causado por el almacenamiento en búfer en el sistema de ventanas de una PC, utilizamos la API de Modo Exclusivo de Pantalla Completa proporcionada por Java2. Esto nos permitió evitar el sistema de ventanas y estimar con mayor precisión el momento en que un evento es mostrado por el proyector, logrando así una mayor precisión en las marcas de tiempo de los eventos. Debido a la frecuencia de actualización de 50Hz de nuestro proyector, aún existía una incertidumbre en el marcado temporal de los eventos de 20mseg. Exploramos la posibilidad de utilizar y modificar el kernel de Linux para exponer la interrupción de sincronización vertical (VSYNC), generada por el dispositivo de visualización después de cada actualización de pantalla, fuera del modo kernel. Los resultados de la evaluación de desempeño mostraron, sin embargo, que este nivel de precisión no era necesario. Los nodos sensores que utilizamos fueron los motes Berkeley Mica2 equipados con placas multi-sensor MTS310 de Crossbow. Esta placa de sensor contiene un sensor de fotos CdSe que puede detectar la luz del proyector. Figura 10. Implementación del sistema μSpotlight Con esta implementación del sistema Spotlight, pudimos generar eventos de Escaneo de Punto, Línea y Área. 4.2 Sistema Spotlight El segundo sistema Spotlight que construimos utilizó, como dispositivo Spotlight, láseres de diodo, un montaje de telescopio computarizado (Celestron CG-5GT, mostrado en la Figura 11), y una computadora portátil IBM Thinkpad. La computadora portátil estaba conectada, a través de interfaces RS232, al montaje del telescopio y a un nodo XSM600CA [7], actuando como estación base. Los láseres de diodo que utilizamos tenían una potencia que iba desde 7mW hasta 35mW. Ellos emitieron a 650nm, cerca del punto de mayor sensibilidad para el fotosensor de CdSe. Los láseres de diodo estaban equipados con lentes que nos permitían controlar la divergencia del haz. Figura 11. Implementación del sistema de iluminación. El montaje del telescopio tiene engranajes de tornillo sin fin para un movimiento suave y mediciones angulares de alta precisión. Las dos medidas angulares que utilizamos fueron las llamadas Alt (de Altitud) y Az (de Acimut). En astronomía, la Altitud de un objeto celeste es su distancia angular por encima o por debajo del horizonte celeste, y el Azimut es la distancia angular de un objeto hacia el este del meridiano, a lo largo del horizonte. La computadora portátil, a través de una interfaz gráfica de Java, controla el movimiento del montaje del telescopio, orientándolo de manera que se realice un Escaneo Puntual completo de un área, similar al descrito en la Figura 3(b). Para cada punto de giro i, se registra el trío de valores (ángulos de altitud y azimut y la marca de tiempo ti). El sistema Spotlight utiliza la marca de tiempo recibida de un nodo sensor j, para obtener las medidas angulares Altj y Azj para su ubicación. Para los nodos sensores, utilizamos motas XSM, principalmente debido a su mayor alcance de comunicación. El mote XSM tiene el sensor de fotos incorporado en su placa principal. Tuvimos que hacer ajustes menores en la carcasa de plástico para exponer el sensor de fotos al exterior. El mismo código mote, escrito en nesC para TinyOS, se utilizó tanto para las implementaciones de los sistemas µSpotlight y Spotlight. 4.3 Función de Detección de Eventos D(t) La Función de Detección de Eventos tiene como objetivo detectar el inicio de un evento y registrar el momento en que se observó el evento. Implementamos una función de detección muy simple basada en el valor máximo observado. Un evento se marcará con la marca de tiempo ti, si la lectura del fotosensor dti cumple la condición: itdd <Δ+max donde dmax es el valor máximo reportado por el fotosensor antes de ti y Δ es una constante que asegura que la primera detección grande da la marca de tiempo del evento (es decir, las pequeñas variaciones alrededor de la primera señal grande no se consideran). Por lo tanto, Δ garantiza que solo los cambios bruscos en el valor detectado generan un evento observado. 4.4 Función de Localización L(T) La Función de Localización está implementada en la interfaz gráfica de Java. Coincide los sellos de tiempo creados por la Función de Distribución de Eventos con los reportados por los nodos sensores. La función de localización para el escaneo de puntos EDF tiene como entrada una secuencia de tiempo Ti = {t1}, según lo reportado por el nodo i. La función realiza una búsqueda simple del evento con una marca de tiempo más cercana a t1. Si t1 está restringido por: 11 + << nn ee ttt donde en y en+1 son dos eventos consecutivos, entonces la ubicación obtenida para el nodo i es: 11 , ++ == nn ee yyxx. El caso del Escaneo de Línea se trata de manera similar. La entrada a la Función de Localización es la secuencia de tiempo Ti = {t1, t2} reportada por el nodo i. Si los sellos de tiempo reportados están limitados por: 11 + << nn ee ttt, y 12 + << mm ee ttt donde en y en+1 son dos eventos consecutivos en el escaneo horizontal y em y em+1 son dos eventos consecutivos en el escaneo vertical, entonces la ubicación inferida para el nodo i es: 11, ++ == mn ee yyxx. La Función de Localización para el Área de Cobertura EDF tiene como entrada un conjunto de sellos de tiempo Ti={ti1, ti2, …, tin} de los n eventos detectados por el nodo i. Recordamos la notación para el conjunto de m marcas de tiempo de eventos generados por el dispositivo Spotlight, T={t1, t2, …, tm}. Se construye un código di=di1di2…dim para cada nodo i, de manera que dij=1 si tj ∈Ti y dij=0 si tj ∉ Ti. La función realiza una búsqueda de un evento con un código idéntico. Si la condición siguiente es verdadera: nei dd = donde en es un evento con código den, entonces la ubicación inferida para el nodo i es: nn ee yyxx == , 4.5 Sincronización de Tiempo La sincronización de tiempo en el sistema Spotlight consta de dos partes: - Sincronización entre nodos sensores: Esto se logra a través del Protocolo de Sincronización de Tiempo por Inundación [18]. En este protocolo, los nodos sincronizados (el nodo raíz es el único nodo sincronizado al principio) envían mensajes de sincronización de tiempo a los nodos no sincronizados. El remitente coloca la marca de tiempo en el mensaje de sincronización justo antes de que se transmitan los bytes que contienen la marca de tiempo. Una vez que un receptor recibe el mensaje, sigue el tiempo del remitente y realiza los cálculos necesarios para compensar la deriva del reloj. - Sincronización entre los nodos del sensor y el dispositivo Spotlight: Implementamos esta parte a través de un saludo de dos vías entre el dispositivo Spotlight y un nodo, utilizado como estación base. El nodo del sensor está conectado al dispositivo Spotlight a través de una interfaz serial. Figura 12. Sincronización bidireccional Como se muestra en la Figura 12, supongamos que el dispositivo Spotlight envía un mensaje de sincronización (SYNC) en el tiempo local T1, el nodo del sensor lo recibe en su tiempo local T2 y lo confirma en el tiempo local T3 (ambos T2 y T3 se envían de vuelta a través de ACK). Después de que el dispositivo Spotlight recibe el ACK, en su tiempo local T4, la sincronización de tiempo se puede lograr de la siguiente manera: 2 )()( 4312 TTTT Offset −+− = (11) OffsetTTT spotlightnodeglobal +== Se observa que la Ecuación 11 asume que los retrasos de ida y vuelta son iguales. En la práctica, esto no se sostiene lo suficientemente bien. Para mejorar el rendimiento, separamos el proceso de saludo de los intercambios de marcas de tiempo. El saludo se realiza rápidamente, a través de un intercambio de 2 bytes entre el dispositivo Spotlight y el nodo del sensor (los sellos de tiempo aún se registran, pero no se envían). Después de este rápido apretón de manos, se intercambian los sellos de tiempo registrados. El resultado indica que este enfoque puede mejorar significativamente la precisión de la sincronización de tiempo. EVALUACIÓN DEL RENDIMIENTO En esta sección presentamos la evaluación del rendimiento de los sistemas Spotlight al utilizar las tres funciones de distribución de eventos, es decir, Punto de exploración, exploración de línea y cobertura de área, descritos en la Sección 3.19. Para el sistema µSpotlight utilizamos 10 motas Mica2. Los nodos sensores fueron colocados en una placa de Veltex posicionada verticalmente. Al proyectar la luz en los nodos del sensor, podemos generar eventos de Punto, Línea y Área bien controlados. El dispositivo Spotlight pudo generar eventos, es decir, proyectar patrones de luz, cubriendo un área de tamaño aproximado de 180x140cm2. La resolución de pantalla del proyector era de 1024x768, y el movimiento de las técnicas de Escaneo de Puntos y Escaneo de Líneas se realizaba a través de incrementos (en la dirección adecuada) de 10 píxeles entre eventos. Cada punto experimental se obtuvo a partir de 10 ejecuciones sucesivas del procedimiento de localización. Cada serie de 10 carreras fue precedida por una fase de calibración, con el objetivo de estimar los retrasos totales (entre el dispositivo Spotlight y cada nodo sensor) en la detección de un evento. Durante la calibración, creamos un evento que cubrió todo el campo del sensor (iluminamos toda el área). El sello de tiempo reportado por cada nodo sensor, en conjunto con el sello de tiempo creado por el dispositivo Spotlight, se utilizaron para obtener el desfase horario de cada nodo sensor. Procedimientos de calibración más sofisticados han sido reportados previamente [35]. Además del desplazamiento horario, añadimos un parámetro configurable manualmente, llamado sesgo. Se utilizaba para estimar mejor el centro de un evento. Figura 13. Sitio de despliegue para el sistema Spotlight Para la evaluación del sistema Spotlight, desplegamos 10 nodos XSM en un campo de fútbol. El sitio se muestra en la Figura 13 (los rayos láser están representados con flechas rojas y los nodos sensores con puntos blancos). Se realizaron dos series de experimentos, con el dispositivo Spotlight posicionado a 46m y a 170m del campo de sensores. Los nodos del sensor fueron alineados y el dispositivo Spotlight ejecutó un Escaneo Puntual. El sistema de localización calculó las coordenadas de los nodos del sensor, y el dispositivo Spotlight fue orientado, a través de un comando GoTo enviado al montaje del telescopio, hacia la ubicación calculada. En las etapas iniciales de los experimentos, medimos manualmente el error de localización. Para nuestra evaluación experimental, las métricas de interés fueron las siguientes: - Error de localización, definido como la distancia entre la ubicación real y la obtenida del sistema Spotlight. - Duración de la localización, definida como el lapso de tiempo entre el primer y último evento. - Rango de localización, definido como la distancia máxima entre el dispositivo Spotlight y los nodos sensores. - Una función de Costo de Localización Costo:{{precisión de localización}, {duración de localización}} → [0,1] cuantifica el equilibrio entre la precisión en la localización y la duración de la localización. El objetivo es minimizar la función de costo de localización. Al denotar con ei el error de localización para el i-ésimo escenario, con di la duración de localización para el i-ésimo escenario, con max(e) el error de localización máximo, con max(d) la duración de localización máxima, y con α el factor de importancia, la función de Costo de Localización se define formalmente como: )max( )1( )max( ),( d d e e deCost ii ii ∗−+∗= αα - Sesgo de Localización. Esta métrica se utiliza para investigar la efectividad del procedimiento de calibración. Si, por ejemplo, todas las ubicaciones calculadas tienen un sesgo en la dirección oeste, se puede utilizar un factor de calibración para compensar la diferencia. Los parámetros que variamos durante la evaluación del rendimiento de nuestro sistema fueron: el tipo de escaneo (Punto, Línea y Área), el tamaño del evento, la duración del evento (para Área de Cobertura), la velocidad de escaneo, la potencia del láser y la distancia entre el dispositivo Spotlight y el campo del sensor, para estimar el alcance del sistema. En este experimento, investigamos cómo el tamaño del evento y la velocidad de escaneo afectan el error de localización del sistema μSpotlight de escaneo de puntos. La Figura 14 muestra los errores de localización promedio con sus desviaciones estándar. Se puede observar que, mientras la velocidad de escaneo, que varía entre 35 cm/s y 87 cm/s, tiene una influencia menor en la precisión de la localización, el tamaño del evento tiene un efecto dramático. 0 2 4 6 8 10 12 14 7.0 10.5 14.0 17.5 21.0 24.5 Tamaño del Evento [cm] Error de Localización [cm] 87 cm/s 58 cm/s 43 cm/s 35 cm/s Figura 14. Error de localización vs. El tamaño del evento para el escaneo puntual EDF. El error de localización obtenido varió desde tan poco como 2 cm hasta más de 11 cm para el evento más grande. Esta dependencia puede ser explicada por nuestro algoritmo de Detección de Eventos: la primera detección por encima de un umbral proporcionó la marca de tiempo para el evento. La duración del esquema de localización se muestra en la Figura 15. La dependencia de la duración de la localización en el tamaño del evento y la velocidad de escaneo es natural. Un evento más grande permite una reducción en la duración total de hasta un 70%. La duración de la localización es directamente proporcional a la velocidad de escaneo, como se esperaba, y se muestra en la Figura 15. 0 20 40 60 80 100 120 7.0 10.5 14.0 17.5 21.0 24.5 Tamaño del Evento [cm] Duración de la Localización [seg] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 15. Duración de la localización vs. Tamaño del evento para el escaneo de puntos EDF 20. Un interesante compromiso se encuentra entre la precisión de la localización (generalmente el factor más importante) y el tiempo de localización (importante en entornos donde la sigilosidad es primordial). La Figura 16 muestra la función de Costo de Localización, para α = 0.5 (la precisión y la duración son igualmente importantes). Como se muestra en la Figura 16, se puede observar que un tamaño de evento de aproximadamente 10-15 cm (dependiendo de la velocidad de escaneo) minimiza nuestra función de Costo. Para α = 1, el mismo gráfico sería una función monótonamente creciente, mientras que para α = 0, sería una función monótonamente decreciente. 0.40 0.45 0.50 0.55 0.60 0.65 0.70 5.0 10.0 15.0 20.0 25.0 30.0 Tamaño del Evento [cm] Costo de Localización [%] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 16. Costo de localización vs. Tamaño del evento para el sistema de exploración de línea EDF 5.2 Line Scan - μSpotlight. De manera similar al Point Scan EDF, para el Line Scan EDF estábamos interesados en la dependencia del error de localización y la duración en función del tamaño del evento y la velocidad de exploración. Representamos en la Figura 17 el error de localización para diferentes tamaños de eventos. Es interesante observar la dependencia (forma cóncava) del error de localización vs. el tamaño del evento. Además, una pregunta que debería surgir es por qué no se observó la misma dependencia en el caso de Point Scan EDF. 0 1 2 3 4 5 6 7 8 9 10 1.7 3.5 7.0 10.5 14.0 17.5 Tamaño del Evento [cm] Error de Ubicación [cm] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 17. Error de localización vs. Tamaño del evento para el escaneo de línea EDF. La explicación de esta dependencia cóncava es la existencia de un sesgo en la estimación de la ubicación. Como recordatorio, se introdujo un factor de sesgo para estimar mejor el punto central de eventos que tienen un tamaño grande. Lo que muestra la Figura 17 es que el factor de sesgo fue óptimo para un tamaño de evento de aproximadamente 7 cm. Para eventos más pequeños y más grandes que este, el factor de sesgo era demasiado grande y demasiado pequeño, respectivamente. Por lo tanto, introdujo errores sesgados en la estimación de la posición. La razón por la que no observamos la misma dependencia en el caso del EDF de Escaneo de Puntos fue que no experimentamos con tamaños de eventos por debajo de 7 cm, debido al largo tiempo que hubiera tomado escanear todo el campo con eventos tan pequeños como 1.7 cm. Los resultados de la duración de la localización en función del tamaño del evento se muestran en la Figura 18. Como se muestra, la duración de la localización es directamente proporcional a la velocidad de escaneo. El tamaño del evento tiene una influencia menor en la duración de la localización. Se puede observar una duración promedio de localización de aproximadamente 10 segundos, mucho más corta que la duración obtenida en el experimento de Escaneo Puntual. La dependencia de la función de costo de localización en el tamaño del evento y la velocidad de escaneo, para α=0.5, se muestra en la Figura 19. La dependencia de la velocidad de escaneo es muy pequeña (la Función de Costo alcanza un mínimo en el mismo rango de 4-6 cm). Es interesante notar que este tamaño óptimo de evento de 4-6 cm es más pequeño que el observado en el caso de Point Scan EDF. La explicación de esto es que la duración de localización más corta observada en el Line Scan EDF permitió un cambio (hacia tamaños de eventos más pequeños) en la Función de Costo Total de Localización. 0 5 10 15 20 1.7 3.5 7.0 10.5 14.0 17.5 Tamaño del Evento [cm] Duración de Localización [seg] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 18. Duración de la localización vs. Tamaño del evento para el escaneo de línea EDF 0.50 0.55 0.60 0.65 0.70 0.75 0.80 1.0 3.0 5.0 7.0 9.0 11.0 Tamaño del evento [cm] Costo de localización [%] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 19. Función de Costo vs. Durante nuestros experimentos con el Line Scan EDF, observamos evidencia de un sesgo en la estimación de la ubicación. Las ubicaciones estimadas de todos los nodos sensores mostraron diferentes sesgos, dependiendo del tamaño del evento. Por ejemplo, para un tamaño de evento de 17.5 cm, la ubicación estimada para los nodos sensores estaba en la parte superior izquierda de la ubicación real. Esto equivalía a una detección temprana, ya que nuestro escaneo se realizaba de izquierda a derecha y de arriba abajo. La velocidad de escaneo no influyó en el sesgo. Para comprender mejor los fenómenos observados, analizamos nuestros datos. La Figura 20 muestra el sesgo en la dirección horizontal, para diferentes tamaños de eventos (el sesgo vertical fue casi idéntico y lo omitimos debido a limitaciones de espacio). A partir de la Figura 20, se puede observar que el sesgo observado más pequeño, y por lo tanto la posición más precisa, fue para un evento de tamaño 7 cm. Estos resultados son consistentes con el error de localización observado, mostrado en la Figura 17. También ajustamos el error de localización medido (mostrado en la Figura 17) por el sesgo observado (mostrado en la Figura 20). Los resultados de un caso ideal del sistema de Localización de Focos con Escaneo de Línea EDF se muestran en la Figura 21. Los errores son notablemente pequeños, variando entre 0.1cm y 0.8cm, con una tendencia general de mayores errores de localización para tamaños de eventos más grandes. 21 -6 -5 -4 -3 -2 -1 0 1 2 3 1.7 3.5 7.0 10.5 14.0 17.5 Tamaño del Evento [cm] Sesgo Horizontal [cm] 87cm/seg 58cm/seg 43cm/seg 35cm/seg Figura 20. Error de estimación de posición para el escaneo de línea EDF 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.7 3.5 7.0 10.5 14.0 17.5 Tamaño del evento [cm] Error de localización sin sesgo [cm] 87 cm/seg 58 cm/seg 43 cm/seg 35 cm/seg Figura 21. Estimación de posición sin sesgo (ideal), para el sistema de Área de Cobertura de Escaneo de Línea EDF 5.3 - μSpotlight. En este experimento, investigamos cómo el número de bits utilizados para cuantificar todo el campo del sensor afectaba la precisión de la localización. En nuestro primer experimento no utilizamos códigos correctores de errores. Los resultados se muestran en la Figura 22. 0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 6 8 10 12 Número de Bits Error de ubicación [cm] 20ms/evento 40ms/evento 60ms/evento 80ms/evento 100ms/evento Figura 22. Error de localización vs. El tamaño del evento para el área cubierta por EDF Uno se puede observar una precisión notable, con un error de localización del orden de 0.3-0.6 cm. Lo importante de observar es la variabilidad en el error de localización. En el escenario donde se usaron 12 bits, aunque el error promedio fue muy pequeño, hubo un par de casos en los que una detección de evento incorrecta generó un error mayor al esperado. Un ejemplo de cómo puede ocurrir este error fue descrito en la Sección 3.4. Los resultados experimentales, presentados en la Figura 22, enfatizan la necesidad de corregir los errores en los patrones de bits observados y reportados por los nodos sensores. Los resultados de la duración de la localización se muestran en la Figura 23. Se puede observar que la duración es directamente proporcional al número de bits utilizados, con duraciones totales que van desde 3 segundos, para el método menos preciso, hasta 6-7 segundos para el más preciso. La duración de un evento tuvo una pequeña influencia en el tiempo total de localización, al considerar el mismo escenario (mismo número de bits para el código). La dependencia de la Función de Costo en el número de bits en el código, para α=0.5, se muestra en la Figura 24. Generalmente, dado que la duración de la localización para el Escaneo de Área puede ser extremadamente corta, se desea una mayor precisión en la localización. Mientras que la función de costo alcanza un mínimo cuando se utilizan 10 bits, atribuimos el ligero aumento observado al usar 12 bits a los dos escenarios de 12 bits donde se observaron errores mayores de lo esperado, concretamente de 6-7 mm (como se muestra en la Figura 22). 0 1 2 3 4 5 6 7 8 9 10 6 8 10 12 Número de Bits Duración de Localización [seg] 20 ms/evento 40 ms/evento 60 ms/evento 80 ms/evento 100 ms/evento Figura 23. Duración de la localización vs. Tamaño del evento para el área cubierta EDF 0.40 0.45 0.50 0.55 0.60 0.65 0.70 0.75 0.80 4 6 8 10 12 14 Número de bits Función de costo [%] 20ms/evento 40ms/evento 60ms/evento 80ms/evento 100ms/evento Figura 24. Función de Costo vs. Tamaño del evento para el área cubierta EDF -0.4 -0.1 0.2 0.5 0.8 1.1 1.4 20 40 60 80 100 Duración del evento [ms/event] Error de ubicación [cm] sin ECC con ECC Figura 25. Error de localización con y sin corrección de errores. Los dos escenarios problemáticos (mostrados en la Figura 22, donde para códigos de 12 bits observamos errores mayores que el tamaño del evento, debido a errores en la detección) fueron explorados más a fondo utilizando códigos de corrección de errores. Como se describe en la Sección 3.3, implementamos un mecanismo de corrección de errores Golay extendido (24, 12) en nuestro algoritmo de estimación de ubicación. Los resultados experimentales se muestran en la Figura 25 y muestran una precisión consistente. El escenario sin códigos de corrección de errores es simplemente el mismo escenario de código de 12 bits, mostrado en la Figura 22. Solo investigamos el escenario de 12 bits, debido a su coincidencia con los datos de 12 bits requeridos por el esquema de codificación Golay (Golay extendido que produce palabras de código de 24 bits). 22 5.4 Escaneo de Puntos - Sistema Spotlight En esta sección describimos los experimentos realizados en un estadio de fútbol, utilizando nuestro sistema Spotlight. El hardware que teníamos disponible nos permitió evaluar la técnica de escaneo de puntos del sistema Spotlight. En nuestra evaluación, nos interesaba ver el rendimiento del sistema en diferentes rangos. Las figuras 26 y 27 muestran el error de localización versus el tamaño del evento en dos rangos diferentes: 46m y 170m. La Figura 26 muestra una precisión notable en la localización. Los errores están en el rango de centímetros. Nuestras mediciones iniciales manuales del error de localización fueron la mayoría de las veces difíciles de realizar, ya que el punto del láser casi cubría perfectamente el nodo XSM. Somos capaces de lograr errores de localización de unos pocos centímetros, algo que solo los esquemas de localización basados en rangos pueden lograr [25]. La dependencia observada del tamaño del evento es similar a la observada en la evaluación del sistema μSpotlight, y se muestra en la Figura 14. Esto demostró que el sistema μSpotlight es una alternativa viable para investigar EDFs complejos, sin incurrir en los costos del hardware necesario. 0 5 10 15 20 25 0 5 10 15 20 25 30 Tamaño del Evento [cm] Error de Localización [cm] 0.41m/seg 0.81m/seg 1.7m/seg Figura 26. Error de localización vs. En los experimentos realizados a una distancia mucho mayor entre el dispositivo Spotlight y la red de sensores, el error de localización promedio sigue siendo muy pequeño. Se midieron errores de localización de 510 cm, como muestra la Figura 27. Nos quedamos simplemente asombrados por la precisión de la que es capaz el sistema, considerando que el sistema Spotlight operaba a lo largo de un estadio de fútbol. A lo largo de nuestra experimentación con el sistema Spotlight, hemos observado errores de localización que eran simplemente desplazamientos de ubicaciones reales. Dado que se observó el mismo fenómeno al experimentar con el sistema μSpotlight, creemos que con la auto-calibración, el error de localización puede reducirse aún más. 0 5 10 15 20 25 6 12 18 Tamaño del Evento [cm] Error de Localización [cm] 0.7m/seg 1.4m/seg 3m/seg Figura 27. Error de localización vs. El tamaño del evento para el sistema Spotlight a 170m. El tiempo requerido para la localización utilizando el sistema Spotlight con un EDF de Escaneo Puntual, está dado por: t=(L*l)/(s*Es), donde L y l son las dimensiones del campo de la red de sensores, s es la velocidad de escaneo, y Es es el tamaño del evento. La Figura 28 muestra el tiempo para localizar una red de sensores desplegada en un área del tamaño de un campo de fútbol utilizando el sistema Spotlight. Aquí ignoramos el tiempo de propagación del mensaje, desde los nodos del sensor hasta el dispositivo Spotlight. A partir de la Figura 28 se puede observar que los errores de localización muy pequeños son prohibitivamente costosos en el caso del Escaneo Puntual. Cuando los errores de localización de hasta 1 metro son tolerables, la duración de la localización puede ser tan baja como 4 minutos. Las duraciones de localización de 5-10 minutos y los errores de localización de 1m son actualmente el estado del arte en el ámbito de los esquemas de localización sin rango. Y estos resultados se logran utilizando el esquema de Escaneo de Puntos, que requirió el mayor Tiempo de Localización, como se mostró en la Tabla 1. 0 5 10 15 20 25 30 35 40 0 25 50 75 100 125 150 Tamaño del Evento [cm] Tiempo de Localización [min] 3m/seg 6m/seg 9m/seg Figura 28. Tiempo de localización vs. El tamaño del evento para el sistema Spotlight. Una característica importante del sistema Spotlight es su alcance. Los dos factores más importantes son la sensibilidad del fotosensor y la potencia de la fuente de luz Spotlight. Estábamos interesados en medir el alcance de nuestro sistema Spotlight, considerando nuestras capacidades (placa de sensor MTS310 y láser de diodo económico, de $12 a $85). Como resultado, medimos la intensidad del haz láser, manteniendo el mismo enfoque, a diferentes distancias. Los resultados se muestran en la Figura 29. 950 1000 1050 1100 0 50 100 150 200 Distancia [m] Intensidad [cuenta ADC] 35mW 7mW Figura 29. Rango de localización para el sistema de Spotlight. A partir de la Figura 29, se puede observar que solo se produce una ligera disminución en la intensidad, debido a la absorción y posiblemente a nuestro enfoque imperfecto del haz láser. Un ajuste lineal de los datos experimentales muestra que se pueden lograr distancias de hasta 6500m. Si bien no esperamos que las condiciones atmosféricas, a lo largo de grandes distancias, sean similares a nuestra evaluación de 200m, hay fuertes evidencias de que distancias (es decir, altitud) de 1000-2000m pueden lograrse fácilmente. El ángulo entre el haz láser y la vertical debe minimizarse (menos de 45°), ya que reduce la diferencia entre la sección transversal del haz (tamaño del evento) y la proyección real del haz en el suelo. De manera similar, estábamos interesados en descubrir el tamaño máximo de un evento que puede ser generado por un láser COTS y que sea detectable por el fotosensor existente. Para esto, variamos la divergencia del haz láser a 23 grados y medimos la intensidad de la luz, según lo indicado por el conteo del ADC. Los resultados se muestran en la Figura 30. Se puede observar que para el láser menos potente, el tamaño del evento límite es de 1.5m. Para el láser más potente, el tamaño del evento puede ser de hasta 4m. A través de nuestros extensos resultados de evaluación de rendimiento, hemos demostrado que el sistema Spotlight es una solución factible, altamente precisa y de bajo costo para la localización de redes de sensores inalámbricos. De nuestra experiencia con fuentes de radiación láser, creemos que para despliegues de redes de sensores de tamaño pequeño y mediano, en áreas de menos de 20,000m2, el esquema de Cobertura de Área es una solución viable. Para despliegues de redes de sensores de gran tamaño, la Escaneo de Línea, o un uso incremental de la Cobertura de Área son muy buenas opciones. 0 200 400 600 800 1000 1200 0 50 100 150 200 Tamaño del Evento [cm] Intensidad [cuenta ADC] 35mW 7mW Figura 30. Tamaños de eventos detectables que pueden ser generados por láseres COTS 6. OPTIMIZACIONES/LECCIONES APRENDIDAS 6.1 Sistema de Foco Distribuido El diseño propuesto y la implementación del sistema de Foco se pueden considerar centralizados, debido a la recopilación de datos del sensor y la ejecución de la Función de Localización L(t) por el dispositivo de Foco. Mostramos que este diseño puede transformarse fácilmente en uno distribuido, ofreciendo dos soluciones. Una idea es difundir en la red información sobre el camino de eventos generado por el EDF (similar a una ecuación que describe un camino) y permitir que los nodos sensores ejecuten la Función de Localización. Por ejemplo, en el escenario de Escaneo de Línea, si los puntos de inicio y finalización de los escaneos horizontales y verticales, y los momentos en que fueron alcanzados, se propagan en la red, entonces cualquier sensor en la red puede obtener su ubicación (asumiendo una velocidad de escaneo constante). Una segunda solución es utilizar nodos ancla que conocen sus posiciones. En el caso de Line Scan, si hay tres anclas presentes, después de detectar la presencia de los dos eventos, las anclas inundan la red con sus ubicaciones y tiempos de detección. Utilizando las mismas fórmulas simples que en el esquema anterior, todos los nodos sensores pueden inferir sus posiciones. 6.2 Reducción de la Sobrecarga de Localización Otro requisito impuesto por el diseño del sistema Spotlight es el uso de un protocolo de sincronización de tiempo entre el dispositivo Spotlight y la red de sensores. Relajar este requisito e imponer solo un protocolo de sincronización de tiempo entre los nodos sensores es un objetivo muy deseable. La idea es utilizar el conocimiento que el dispositivo Spotlight tiene sobre la velocidad con la que se realiza el escaneo del campo del sensor. Si la velocidad de escaneo es constante (llamémosla s), entonces la diferencia de tiempo (llamémosla Δt) entre las detecciones de eventos de dos nodos sensores es, de hecho, una medida precisa de la distancia entre ellos: d=s*Δt. Por lo tanto, el sistema Spotlight se puede utilizar para medir con precisión la distancia entre cualquier par de nodos sensores. Una observación importante es que esta técnica de medición de distancia no sufre de las limitaciones de otras: rango pequeño y direccionalidad para el ultrasonido, o irregularidad, atenuación y multipertrayecto para el Indicador de Fuerza de la Señal Recibida (RSSI). Después de que se hayan determinado los rangos entre nodos (ya sea de manera centralizada o distribuida), se pueden utilizar algoritmos de incrustación de grafos para realizar un grafo rígido que describa la topología de la red de sensores. 6.3 Función de Distribución de Eventos Dinámicos E(t) Otra optimización del sistema es para entornos donde la densidad de nodos sensores no es uniforme. Una desventaja de la técnica de Escaneo de Línea, en comparación con la Cobertura de Área, es el tiempo de localización. Una idea es utilizar dos escaneos: uno que utilice un tamaño de evento grande (y por lo tanto, errores de localización más grandes), seguido por un segundo escaneo en el que el tamaño del evento cambie dinámicamente. El primer escaneo se utiliza para identificar las áreas con una mayor densidad de nodos sensores. El segundo escaneo utiliza un evento más grande en áreas donde la densidad de nodos sensores es baja y un evento más pequeño en áreas con una mayor densidad de nodos sensores. Un EDF dinámico también se puede utilizar cuando es muy difícil cumplir con los requisitos de energía para el dispositivo Spotlight (impuestos por el uso del esquema de Cobertura de Área en una zona muy extensa). En este escenario, se puede utilizar un esquema híbrido: el primer escaneo (Point Scan) se realiza rápidamente, con un tamaño de evento muy grande, y tiene como objetivo identificar, aproximadamente, la ubicación de la red de sensores. Los escaneos de cobertura del Área Subsecuente se ejecutarán en porciones más pequeñas de la red, hasta que se localice toda el área de despliegue. 6.4 Sigilo Nuestra implementación del sistema Spotlight utilizó luz visible para crear eventos. El uso del sistema durante el día o en una habitación bien iluminada presenta desafíos debido a la radiación solar o de lámparas fluorescentes, que generan un fuerte ruido de fondo. La alternativa, que utilizamos en nuestras evaluaciones de rendimiento, era utilizar el sistema en una habitación oscura (sistema μSpotlight) o durante la noche (sistema Spotlight). Si bien usar el sistema Spotlight durante la noche es una buena solución para entornos donde la discreción no es importante (por ejemplo, en ciencias ambientales), para otros (por ejemplo, aplicaciones militares), revelar la presencia y ubicación de un campo de sensores podría comprometer seriamente la eficacia del sistema. Figura 31. Espectros de luz fluorescente (arriba), respuesta espectral para células de CdSe (abajo). Una solución a este problema, con la que experimentamos en el sistema µSpotlight, fue utilizar un filtro óptico sobre el sensor de luz 24. La respuesta espectral de un fotosensor de CdSe abarca casi todo el dominio visible [37], con un pico alrededor de los 700 nm (Figura 31-abajo). Como se muestra en la Figura 31-arriba, la luz fluorescente no tiene componentes significativos por encima de los 700 nm. Por lo tanto, un simple filtro rojo (Schott RG-630), que transmite toda la luz con una longitud de onda aproximadamente superior a 630 nm, junto con una Función de Distribución de Eventos que genera eventos con longitudes de onda por encima del mismo umbral, permitiría el uso del sistema cuando está presente una luz fluorescente. Una solución para que el sistema de Spotlight sea sigiloso por la noche, es utilizar una fuente de radiación infrarroja (es decir, láser) que emita en el rango de [750, 1000] nm. Para un uso diurno del sistema Spotlight, el desafío es superar el fuerte fondo de la luz natural. Una solución que estamos considerando es el uso de un filtro óptico de banda estrecha, centrado en la longitud de onda de la radiación láser. La viabilidad y la rentabilidad de esta solución aún deben ser demostradas. 6.5 Red Desplegada en Terreno Desconocido Una generalización adicional es cuando el mapa del terreno donde se desplegó la red de sensores es desconocido. Si bien esto es altamente improbable para muchas aplicaciones civiles de tecnologías de redes de sensores inalámbricos, no es difícil imaginar aplicaciones militares donde la red de sensores se despliega en un terreno hostil y desconocido. Una solución a este problema es un sistema que utiliza dos dispositivos Spotlight, o de manera equivalente, el uso del mismo dispositivo desde dos posiciones distintas, ejecutando, desde cada uno de ellos, un procedimiento completo de localización. En este esquema, la posición del nodo sensor se determina de manera única por la intersección de las dos direcciones de ubicación obtenidas por el sistema. La localización relativa (para cada par de dispositivos Spotlight) requerirá un conocimiento preciso de los 3 parámetros de traslación y 3 parámetros de rotación rígida del cuerpo para la posición y orientación de los Spotlights (como se menciona en la Sección 3). Esta generalización también es aplicable a escenarios donde, debido a variaciones en el terreno, no hay un único punto aéreo con línea de visión directa a todos los nodos sensores, por ejemplo, terreno montañoso. Al ejecutar el procedimiento de localización desde diferentes puntos aéreos, la probabilidad de establecer una línea de visión con todos los nodos aumenta. Para algunos escenarios militares [1] [12], donde predomina el terreno abierto, la existencia de una línea de visión no es un factor limitante. A la luz de esto, el sistema Spotlight no puede ser utilizado en bosques o entornos interiores. 7. CONCLUSIONES Y TRABAJO FUTURO En este artículo presentamos el diseño, implementación y evaluación de un sistema de localización para redes de sensores inalámbricos, llamado Spotlight. Nuestra solución de localización no requiere ningún hardware adicional para los nodos de sensor, aparte de lo que ya existe. Toda la complejidad del sistema está encapsulada en un único dispositivo Spotlight. Nuestro sistema de localización es reutilizable, es decir, los costos pueden ser amortizados a través de varias implementaciones, y su rendimiento no se ve afectado por el número de nodos sensores en la red. Nuestros resultados experimentales, obtenidos de un sistema real desplegado al aire libre, muestran que el error de localización es menor a 20cm. Este error se encuentra actualmente en el estado del arte, incluso para sistemas de localización basados en rango y es un 75% más pequeño que el error obtenido al usar dispositivos GPS o cuando el despliegue manual de nodos sensores es una opción factible [31]. Como trabajo futuro, nos gustaría explorar la auto-calibración y auto-ajuste del sistema Spotlight. La precisión del sistema puede mejorarse aún más si en lugar de reportar un único sello de tiempo, se informa la distribución del evento. Una generalización podría obtenerse reformulando el problema como un problema de estimación angular que proporciona los elementos básicos para técnicas de localización más generales. AGRADECIMIENTOS Este trabajo fue apoyado por la oficina DARPA IXO, en el marco del proyecto NEST (número de subvención F336616-01-C-1905) y por la subvención NSF CCR-0098269. Nos gustaría agradecer a S. Cornwell por permitirnos realizar experimentos en el estadio, a M. Klopf por su ayuda con la óptica, y a los revisores anónimos y a nuestro guía, Koen Langendoen, por sus valiosos comentarios. 9. REFERENCIAS [1] A. Arora, P. Dutta, S. Bapat, V. Kulathumani, H. Zhang, V. Naik, V. Mittal, H. Cao, M. Demirbas, M. Gouda, Y. Choi, T. Herman, S. Kulharni, U. Arumugam, M. Nesterenko, A. Vora, M. Miyashita, Una línea en la arena: una red de sensores inalámbricos para detección, clasificación y seguimiento de objetivos, en Computer Networks 46(5), 2004. [2] P. Bahl, V.N. Padmanabhan, RADAR: Un sistema de localización y seguimiento de usuarios en interiores basado en RF, en Actas de Infocom, 2000 [3] M. Broxton, J. Lifton, J. Paradiso, Localización de una red de sensores a través del procesamiento colaborativo de estímulos globales, en Actas de EWSN, 2005. [4] N. Bulusu, J. Heidemann, D. Estrin, Localización exterior de bajo costo sin GPS para dispositivos muy pequeños, en Revista de Comunicaciones Personales de IEEE, 2000. [5] P. Corke, R. Peterson, D. Rus, Robots en red: Navegación de robots voladores utilizando una red de sensores, en ISSR, 2003. [6] L. Doherty, L. E. Ghaoui, K. Pister, Estimación de posición convexa en redes de sensores inalámbricos, en Actas de Infocom, 2001 [7] P. Dutta, M. Grimmer, A. Arora, S. Bibyk, D. Culler, Diseño de una plataforma de red de sensores inalámbricos para detectar eventos raros, aleatorios y efímeros, en Actas de IPSN, 2005. [8] E. Elnahrawy, X. Li, R. Martin, Los límites de la localización utilizando RSSI, en Actas de SECON, 2004. [9] D. Fox, W. Burgard, S. Thrun, Localización de Markov para robots móviles en entornos dinámicos, en Revista de Investigación en Inteligencia Artificial, 1999. [10] D. Fox, W. Burgard, F. Dellaert, S. Thrun, Localización de Monte Carlo: Estimación eficiente de posición para robots móviles, en Conferencia de Inteligencia Artificial, 2000. [11] D. Ganesan, B. Krishnamachari, A. Woo, D. Culler, D. Estrin, S. Wicker, Comportamiento complejo a escala: un estudio experimental de redes de sensores inalámbricos de baja potencia, en Informe Técnico, UCLA-TR 01-0013, 2001. [12] T. He, S. Krishnamurthy, J. A. Stankovic, T. Abdelzaher, L. Luo, R. Stoleru, T. Yan, L. Gu, J. Hui, B. Krogh, Un sistema de vigilancia energéticamente eficiente utilizando redes de sensores inalámbricos, en Actas de Mobisys, 2004. [13] T. He, C. Huang, B. Blum, J. A. Stankovic, T. Abdelzaher, Esquemas de localización sin rango para redes de sensores a gran escala en las Actas de Mobicom, 2003. [14] L. Hu, D. Evans, Localización para redes de sensores móviles, en las Actas de Mobicom, 2004. [15] Y. Kwon, K. Mechitov, S. Sundresh, W. Kim, G. Agha, Localización resiliente para redes de sensores en entornos exteriores, Informe Técnico de UIUC, 2004. 25 [16] K. Langendoen, N. Reijers, Localización distribuida en redes de sensores inalámbricos, un estudio comparativo, en la revista Computer Networks vol. 43, 2003. [17] K. Lorincz, M. Welsh, MoteTrack: Un enfoque robusto y descentralizado para el seguimiento de ubicación basado en RF, en las Actas de Intl. Taller sobre Localización y Conciencia del Contexto, 2005. [18] M. Maroti, B. Kusy, G. Simon, A. Ledeczi, El Protocolo de Sincronización de Tiempo por Inundación, en Actas de Sensys, 2004. [19] D. Moore, J. Leonard, D. Rus, S. Teller, Localización de Red Distribuida Robusta con Mediciones de Rango Ruidosas en Actas de Sensys, 2004. [20] R. Nagpal, H. Shrobe, J. Bachrach, Organizando un Sistema de Coordenadas Global para Información Local en una Red de Sensores Adhoc, en A.I Memo 1666. MIT A.I. Laboratorio, 1999. [21] D. Niculescu, B. Nath, Posicionamiento basado en DV en redes ad hoc en Sistemas de Telecomunicaciones, vol. 22, 2003. [22] E. Osterweil, T. Schoellhammer, M. Rahimi, M. Wimbrow, T. Stathopoulos, L.Girod, M. Mysore, A.Wu, D. Estrin, El Sistema de Sensado Extensible, póster CENS-UCLA, 2004. [23] B.W. Parkinson, J. Spilker, Sistema de Posicionamiento Global: teoría y aplicaciones, en Progreso en Aeronáutica y Astronáutica, vol. 163, 1996. [24] P.N. Pathirana, N. Bulusu, A. Savkin, S. Jha, Localización de nodos utilizando robots móviles en redes de sensores tolerantes a retrasos, en Transacciones sobre Computación Móvil, 2004. [25] N. Priyantha, A. Chakaborty, H. Balakrishnan, El sistema de soporte de localización Cricket, en Actas de MobiCom, 2000. [26] N. Priyantha, H. Balakrishnan, E. Demaine, S. Teller, Generación de topología asistida por móviles para auto-localización en redes de sensores, en Actas de Infocom, 2005. [27] A. Savvides, C. Han, M. Srivastava, Localización dinámica de alta precisión en redes ad hoc de sensores, en Actas de MobiCom, 2001. [28] Y. Shang, W. Ruml, Mejora de la localización basada en MDS, en Actas de Infocom, 2004. [29] M. Sichitiu, V. Ramadurai, Localización de redes de sensores inalámbricos con un faro móvil, en Actas de MASS, 2004. [30] G. Simon, M. Maroti, A. Ledeczi, G. Balogh, B. Kusy, A. Nadas, G. Pap, J. Sallai, Sistema de contrasniper basado en redes de sensores, en Actas de Sensys, 2004. [31] R. Stoleru, T. He, J.A. Stankovic, Walking GPS: Una solución práctica para la localización en redes de sensores inalámbricos desplegadas manualmente, en Actas de EmNetS, 2004. [32] R. Stoleru, J.A. Stankovic, Cuadrícula de Probabilidad: Un Esquema de Estimación de Ubicación para Redes de Sensores Inalámbricos, en Actas de SECON, 2004. [33] R. Szewczyk, A. Mainwaring, J. Polastre, J. Anderson, D. Culler, Un Análisis de una Aplicación de Monitoreo de Hábitats a Gran Escala, en Actas de Sensys, 2004. [34] K. Whitehouse, A. Woo, C. Karlof, F. Jiang, D. Culler, Los efectos del ruido de alcance en la localización multi-salto: un estudio empírico, en Actas de IPSN, 2005. [35] K. Whitehouse, D. Culler, Calibración como Estimación de Parámetros en Redes de Sensores, en Actas de WSNA, 2002. [36] P. Zhang, C. Sadler, S. A. Lyon, M. Martonosi, Experiencias de Diseño de Hardware en ZebraNet, en Actas de Sensys, 2004. [37] Selco Products Co. Construcción y Características de Celdas CdS, hoja de datos del producto, 2004 26