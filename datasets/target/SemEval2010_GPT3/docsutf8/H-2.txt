Expansión de consultas personalizada para la web de Paul - Alexandru Chirita Centro de Investigación L3S∗ Appelstr. La ambigüedad inherente de las consultas de palabras clave cortas exige métodos mejorados para la recuperación web. En este artículo proponemos mejorar dichas consultas web expandiéndolas con términos recopilados de los repositorios de información personal de cada usuario, personalizando así implícitamente los resultados de la búsqueda. Introducimos cinco técnicas amplias para generar palabras clave de consulta adicionales mediante el análisis de datos de usuario en niveles de granularidad creciente, que van desde el análisis a nivel de términos y compuestos hasta estadísticas de co-ocurrencia global, así como el uso de tesauros externos. Nuestro extenso análisis empírico bajo cuatro escenarios diferentes muestra que algunos de estos enfoques funcionan muy bien, especialmente en consultas ambiguas, produciendo un aumento muy fuerte en la calidad de las clasificaciones de salida. Posteriormente, llevamos este marco de búsqueda personalizado un paso más allá y proponemos hacer que el proceso de expansión sea adaptable a varias características de cada consulta. Un conjunto separado de experimentos indica que los algoritmos adaptativos logran una mejora adicional estadísticamente significativa sobre el mejor enfoque estático de expansión. Categorías y Descriptores de Asignaturas H.3.3 [Almacenamiento y Recuperación de Información]: Búsqueda y Recuperación de Información; H.3.5 [Almacenamiento y Recuperación de Información]: Servicios de Información en Línea - Servicios basados en la web Términos Generales Algoritmos, Experimentación, Medición 1. La creciente popularidad de los motores de búsqueda ha determinado que la simple búsqueda de palabras clave se convierta en la única interfaz de usuario ampliamente aceptada para buscar información en la Web. Sin embargo, las consultas de palabras clave son inherentemente ambiguas. El libro de consulta Canon, por ejemplo, abarca varias áreas de interés: religión, fotografía, literatura y música. Claramente, uno preferiría que los resultados de búsqueda estén alineados con el tema o temas de interés de los usuarios, en lugar de mostrar una selección de URL populares de cada categoría. Estudios han demostrado que más del 80% de los usuarios preferirían recibir resultados de búsqueda personalizados [33] en lugar de los genéricos que se ofrecen actualmente. La expansión de la consulta ayuda al usuario a formular una mejor consulta, al agregar palabras clave adicionales a la solicitud de búsqueda inicial para abarcar sus intereses, así como para enfocar la salida de la búsqueda web de manera adecuada. Se ha demostrado que funciona muy bien con conjuntos de datos grandes, especialmente con consultas de entrada cortas (ver, por ejemplo, [19, 3]). ¡Este es exactamente el escenario de búsqueda en la web! En este artículo proponemos mejorar la reformulación de consultas web mediante la explotación del Repositorio de Información Personal (PIR) de los usuarios, es decir, la colección personal de documentos de texto, correos electrónicos, páginas web en caché, etc. Varios beneficios surgen al trasladar la personalización de la búsqueda web al nivel del Escritorio (tenga en cuenta que con Escritorio nos referimos a PIR, y utilizamos ambos términos de manera intercambiable). Primero está, por supuesto, la calidad de personalización: el Escritorio local es un rico repositorio de información, describiendo con precisión la mayoría, si no todos, los intereses del usuario. Segundo, dado que toda la información del perfil se almacena y se utiliza localmente, en la máquina personal, otro beneficio muy importante es la privacidad. Los motores de búsqueda no deberían poder conocer los intereses de una persona, es decir, no deberían poder relacionar a una persona específica con las consultas que emitió, o peor aún, con las URL de salida en las que hizo clic dentro de la interfaz de búsqueda (consultar a Volokh [35] para una discusión sobre problemas de privacidad relacionados con la búsqueda web personalizada). Nuestros algoritmos amplían las consultas web con palabras clave extraídas de los PIR de los usuarios, personalizando así de forma implícita los resultados de la búsqueda. Después de una discusión de trabajos previos en la Sección 2, primero investigamos el análisis del contexto de consulta local de escritorio en la Sección 3.1.1. Proponemos varias técnicas basadas en palabras clave, expresiones y resúmenes para determinar términos de expansión a partir de esos documentos personales que mejor coincidan con la consulta web. En la Sección 3.1.2 trasladamos nuestro análisis a la colección global de Escritorio e investigamos expansiones basadas en métricas de co-ocurrencia y tesauros externos. Los experimentos presentados en la Sección 3.2 muestran que muchos de estos enfoques funcionan muy bien, especialmente en consultas ambiguas, produciendo mejoras en NDCG [15] de hasta un 51.28%. En la Sección 4 llevamos este marco algorítmico un paso más allá y proponemos hacer que el proceso de expansión sea adaptable al nivel de claridad de la consulta. Esto produce una mejora adicional del 8.47% sobre el mejor algoritmo previamente identificado. Concluimos y discutimos trabajos futuros en la Sección 5.1. Los motores de búsqueda pueden mapear consultas al menos a direcciones IP, por ejemplo, utilizando cookies y analizando los registros de consultas. Sin embargo, al mover el perfil de usuario al nivel del Escritorio, nos aseguramos de que dicha información no esté explícitamente asociada a un usuario en particular y se almacene en el lado del motor de búsqueda. 2. TRABAJO PREVIO Este artículo reúne dos áreas de IR: Personalización de la búsqueda y Expansión automática de consultas. Existe una gran cantidad de algoritmos para ambos dominios. Sin embargo, no se ha hecho mucho específicamente dirigido a combinarlos. En esta sección presentamos un análisis separado, primero introduciendo algunos enfoques para personalizar la búsqueda, ya que esto representa el principal objetivo de nuestra investigación, y luego discutiendo varias técnicas de expansión de consultas y su relación con nuestros algoritmos. 2.1 Búsqueda Personalizada La búsqueda personalizada comprende dos componentes principales: (1) Perfiles de usuario y (2) El algoritmo de búsqueda real. Esta sección divide el trasfondo relevante según el enfoque de cada artículo en uno de estos elementos. Enfoques centrados en el Perfil del Usuario. Sugiyama et al. [32] analizaron el comportamiento de navegación por internet y generaron perfiles de usuario como características (términos) de las páginas visitadas. Al emitir una nueva consulta, los resultados de búsqueda se clasificaron según la similitud entre cada URL y el perfil del usuario. Qiu y Cho [26] utilizaron Aprendizaje Automático en el historial de clics pasado del usuario para determinar vectores de preferencia de temas y luego aplicar PageRank Sensible al Tema [13]. La creación de perfiles de usuario basada en el historial de navegación tiene la ventaja de ser bastante fácil de obtener y procesar. Probablemente por eso también es utilizado por varios motores de búsqueda industriales (por ejemplo, Yahoo!). MiWeb2. Sin embargo, definitivamente no es suficiente para obtener una comprensión completa de los intereses de los usuarios. Además, requiere almacenar toda la información personal en el servidor, lo cual plantea importantes preocupaciones de privacidad. Solo dos enfoques adicionales mejoraron la búsqueda web utilizando datos de escritorio, sin embargo, ambos utilizaron ideas centrales diferentes: (1) Teevan et al. [34] modificaron los pesos de los términos de consulta del esquema de ponderación BM25 para incorporar los intereses de los usuarios capturados por sus índices de escritorio; (2) En Chirita et al. [6], nos enfocamos en volver a clasificar la salida de la búsqueda web de acuerdo con la distancia del coseno entre cada URL y un conjunto de términos de escritorio que describen los intereses de los usuarios. Además, ninguno de ellos investigó la aplicación adaptativa de la personalización. Enfoques centrados en el Algoritmo de Personalización. Incorporar de manera efectiva el aspecto de personalización directamente en PageRank [25] (es decir, sesgándolo hacia un conjunto objetivo de páginas) ha recibido mucha atención recientemente. Haveliwala [13] calculó un PageRank orientado a temas, en el que inicialmente se calcularon fuera de línea 16 vectores de PageRank sesgados en cada uno de los temas principales del Directorio Abierto, y luego se combinaron en tiempo de ejecución en función de la similitud entre la consulta del usuario y cada uno de los 16 temas. Más recientemente, Nie et al. [24] modificaron la idea distribuyendo el PageRank de una página entre los temas que contiene para generar clasificaciones orientadas a temas. Jeh y Widom propusieron un algoritmo que evita los recursos masivos necesarios para almacenar un Vector de PageRank Personalizado (PPV) por usuario al precalcular PPVs solo para un pequeño conjunto de páginas y luego aplicar una combinación lineal. Dado que el cálculo de los valores predictivos positivos para conjuntos más grandes de páginas seguía siendo bastante costoso, se han investigado varias soluciones, siendo las más importantes las de Fogaras y Racz [12], y Sarlos et al. [30], estos últimos utilizando redondeo y esbozo de conteo mínimo para obtener rápidamente aproximaciones lo suficientemente precisas de las puntuaciones personalizadas. 2.2 Expansión Automática de Consultas La expansión automática de consultas tiene como objetivo derivar una mejor formulación de la consulta del usuario para mejorar la recuperación. Se basa en explotar diversas características sociales o de colección específicas para generar términos adicionales, que se añaden al original en http://myWeb2.search.yahoo.com antes de identificar los documentos coincidentes devueltos como resultado. En esta sección revisamos algunos de los trabajos representativos de expansión de consultas agrupados según la fuente utilizada para generar términos adicionales: (1) Retroalimentación de relevancia, (2) Estadísticas de co-ocurrencia basadas en la colección y (3) Información de tesauro. Algunos enfoques adicionales también se abordan al final de la sección. Técnicas de retroalimentación de relevancia. La idea principal de la Retroalimentación Relevante (RF) es que se puede extraer información útil de los documentos relevantes devueltos para la consulta inicial. Los primeros enfoques fueron manuales [28] en el sentido de que el usuario era quien elegía los resultados relevantes, y luego se aplicaron varios métodos para extraer nuevos términos relacionados con la consulta y los documentos seleccionados. Efthimiadis [11] presentó una revisión exhaustiva de la literatura y propuso varios métodos simples para extraer palabras clave nuevas basadas en la frecuencia de términos, la frecuencia de documentos, etc. Utilizamos algunas de estas como inspiración para nuestras técnicas específicas de escritorio. Chang y Hsu [5] pidieron a los usuarios que eligieran grupos relevantes en lugar de documentos, reduciendo así la cantidad de interacción necesaria. RF también se ha demostrado que se automatiza de manera efectiva al considerar los documentos mejor clasificados como relevantes [37] (esto se conoce como Pseudo RF). Lam y Jones [21] utilizaron la sumarización para extraer frases informativas de los documentos mejor clasificados, y las añadieron a la consulta del usuario. Carpineto et al. [4] maximizaron la divergencia entre el modelo de lenguaje definido por los documentos recuperados en la parte superior y el definido por toda la colección. Finalmente, Yu et al. [38] seleccionaron los términos de expansión de segmentos basados en la visión de páginas web para hacer frente a los múltiples temas que residen en ellas. Técnicas basadas en co-ocurrencia. Los términos que co-ocurren con alta frecuencia con las palabras clave emitidas han demostrado aumentar la precisión cuando se agregan a la consulta [17]. Se han desarrollado muchas medidas estadísticas para evaluar de la mejor manera los niveles de relación entre términos, ya sea analizando documentos completos [27], relaciones de afinidad léxica [3] (es decir, pares de palabras estrechamente relacionadas que contienen exactamente uno de los términos de la consulta inicial), etc. También hemos investigado tres enfoques de este tipo para identificar palabras clave relevantes de la consulta en el rico, aunque bastante complejo Repositorio de Información Personal. Técnicas basadas en tesauros. Un método ampliamente explorado es expandir la consulta del usuario con nuevos términos, cuyo significado esté estrechamente relacionado con las palabras clave de entrada. Tales relaciones suelen extraerse de tesauros a gran escala, como WordNet [23], en los que se encuentran predefinidos diversos conjuntos de sinónimos, hiperónimos, etc. Al igual que con los métodos de co-ocurrencia, los experimentos iniciales con este enfoque fueron controvertidos, reportando tanto mejoras como reducciones en la calidad de la producción [36]. Recientemente, a medida que las colecciones experimentales crecieron en tamaño y los algoritmos empleados se volvieron más complejos, se han obtenido mejores resultados [31, 18, 22]. También utilizamos términos de expansión basados en WordNet. Sin embargo, basamos este proceso en analizar la relación a nivel de escritorio entre la consulta original y las nuevas palabras clave propuestas. Otras técnicas. Hay muchos otros intentos de extraer términos de expansión. Aunque son ortogonales a nuestro enfoque, dos trabajos son muy relevantes para el entorno web: Cui et al. [8] generaron correlaciones de palabras utilizando la probabilidad de que los términos de búsqueda aparezcan en cada documento, calculada a partir de los registros del motor de búsqueda. Kraft y Zien [19] demostraron que el texto de anclaje es muy similar a las consultas de los usuarios, y por lo tanto lo explotaron para adquirir palabras clave adicionales. 3. AMPLIACIÓN DE CONSULTA USANDO DATOS DE ESCRITORIO Los datos de escritorio representan un repositorio muy rico de información de perfilado. Sin embargo, esta información se presenta de una manera muy desestructurada, abarcando documentos que son altamente diversos en formato, contenido e incluso características de idioma. En esta sección abordamos este problema proponiendo varios algoritmos de análisis léxico que aprovechan el PIR de los usuarios para extraer términos de expansión de palabras clave en diversas granularidades, que van desde la frecuencia de términos dentro de los documentos de escritorio hasta la utilización de estadísticas de co-ocurrencia global sobre el repositorio de información personal. Luego, en la segunda parte de la sección analizamos empíricamente el rendimiento de cada enfoque. 3.1 Algoritmos Esta sección presenta los cinco enfoques genéricos para analizar los datos de escritorio de los usuarios con el fin de proporcionar términos de expansión para la búsqueda web. En los algoritmos propuestos aumentamos gradualmente la cantidad de información personal utilizada. Por lo tanto, en la primera parte investigamos tres técnicas de análisis local enfocadas únicamente en aquellos documentos de escritorio que mejor coinciden con la consulta de los usuarios. Añadimos a la consulta web los términos más relevantes, compuestos y resúmenes de oraciones de estos documentos. En la segunda parte de la sección nos dirigimos hacia un análisis global de escritorio, proponiendo investigar las co-ocurrencias de términos, así como los tesauros, en el proceso de expansión. 3.1.1 Expansión con Análisis de Escritorio Local El Análisis de Escritorio Local está relacionado con mejorar la Retroalimentación de Relevancia Pseudo para generar palabras clave de expansión de consulta a partir de los mejores resultados de PIR para la consulta web de los usuarios, en lugar de los resultados de búsqueda web mejor clasificados. Distinguimos tres niveles de granularidad para este proceso e investigamos cada uno de ellos por separado. Frecuencia de término y de documento. Como medidas más simples posibles, TF y DF tienen la ventaja de ser muy rápidas de calcular. Experimentos previos con conjuntos de datos pequeños han demostrado que producen resultados muy buenos [11]. Asociamos de forma independiente una puntuación a cada término, basada en cada una de las dos estadísticas. La versión basada en TF se obtiene multiplicando la frecuencia real de un término con una puntuación de posición descendente a medida que el término aparece más cerca del final del documento. Esto es necesario especialmente para documentos más largos, ya que los términos más informativos tienden a aparecer al principio de los mismos [10]. La fórmula completa de extracción de palabras clave basada en TF es la siguiente: TermScore = 1 2 + 1 2 · nrWords − pos nrWords ! · log(1 + TF) (1) donde nrWords es el número total de términos en el documento y pos es la posición de la primera aparición del término; TF representa la frecuencia de cada término en el documento de escritorio que coincide con la consulta web de los usuarios. La identificación de términos de expansión adecuados es aún más sencilla al usar DF: Dado el conjunto de documentos de escritorio relevantes de Top-K, genere sus fragmentos enfocados en la solicitud de búsqueda original. Esta orientación de consulta es necesaria, ya que las puntuaciones de DF se calculan a nivel de todo el PIR y de lo contrario producirían sugerencias demasiado ruidosas. Una vez que se ha identificado el conjunto de términos candidatos, la selección continúa ordenándolos según las puntuaciones de DF con las que están asociados. Las disputas se resuelven utilizando los puntajes de TF correspondientes. Ten en cuenta que un enfoque híbrido TFxIDF no es necesariamente eficiente, ya que un término de escritorio puede tener un alto DF en el escritorio, mientras que es bastante raro en la web. Por ejemplo, el término PageRank sería bastante frecuente en el escritorio de un científico de RI, logrando así una puntuación baja con TFxIDF. Sin embargo, como es bastante raro en la web, sería una buena resolución de la consulta hacia el tema correcto. Compuestos léxicos. Anick y Tipirneni [2] definieron la hipótesis de dispersión léxica, según la cual la dispersión léxica de una expresión (es decir, el número de compuestos diferentes en los que aparece dentro de un documento o grupo de documentos) se puede utilizar para identificar automáticamente conceptos clave en el conjunto de documentos de entrada. Aunque existen varias expresiones compuestas posibles, se ha demostrado que los enfoques simples basados en el análisis de sustantivos son casi tan buenos como los algoritmos altamente complejos de identificación de patrones de partes del discurso [1]. Por lo tanto, inspeccionamos los documentos de escritorio coincidentes en busca de todos sus compuestos léxicos de la siguiente forma: { ¿adjetivo? sustantivo+ } Todos estos compuestos podrían generarse fácilmente sin conexión, en el momento de indexación, para todos los documentos en el repositorio local. Además, una vez identificados, pueden ser clasificados aún más dependiendo de su dispersión dentro de cada documento para facilitar la recuperación rápida de los compuestos más frecuentes en tiempo de ejecución. Selección de oraciones. Esta técnica se basa en la sumarización de documentos orientada a oraciones: primero, se identifica el conjunto de documentos de escritorio relevantes; luego, se genera un resumen que contiene sus oraciones más importantes como resultado. La selección de oraciones es el enfoque de análisis local más completo, ya que produce las expansiones más detalladas (es decir, oraciones). Su desventaja es que, a diferencia de los dos primeros algoritmos, su salida no se puede almacenar de manera eficiente y, en consecuencia, no se puede calcular sin conexión. Generamos resúmenes basados en oraciones clasificando las oraciones del documento según su puntuación de relevancia, de la siguiente manera [21]: Puntuación de la Oración = SW2 TW + PS + TQ2 NQ El primer término es la proporción entre la cantidad cuadrada de palabras significativas dentro de la oración y el número total de palabras en ella. Una palabra es significativa en un documento si su frecuencia es superior a un umbral de la siguiente manera: TF > ms = V ` X 7 − 0.1 ∗ (25 − NS) , si NS < 25 7 , si NS ∈ [25, 40] 7 + 0.1 ∗ (NS − 40) , si NS > 40, donde NS es el número total de oraciones en el documento (ver [21] para más detalles). El segundo término es un puntaje de posición establecido en (Promedio(NS) − ÍndiceDeOración)/Promedio2(NS) para las primeras diez oraciones, y en 0 en caso contrario, donde Promedio(NS) es el número promedio de oraciones en todos los elementos de escritorio. De esta manera, los documentos cortos como los correos electrónicos no se ven afectados, lo cual es correcto, ya que generalmente no contienen un resumen al principio. Sin embargo, dado que los documentos más largos suelen incluir frases descriptivas generales al principio [10], es más probable que estas frases sean relevantes. El término final sesga el resumen hacia la consulta. Es la proporción entre el cuadrado del número de términos de búsqueda presentes en la oración y el número total de términos de la búsqueda. Se basa en la creencia de que cuantos más términos de consulta contenga una oración, es más probable que esa oración transmita información altamente relacionada con la consulta. 3.1.2 Ampliación con Análisis Global de Escritorio En contraste con el enfoque presentado anteriormente, el análisis global se basa en información de todo el Escritorio personal para inferir los nuevos términos de consulta relevantes. En esta sección proponemos dos técnicas, a saber, estadísticas de co-ocurrencia de términos y filtrado de la salida de un tesauro externo. Estadísticas de co-ocurrencia de términos. Para cada término, podemos calcular fácilmente fuera de línea aquellos términos que co-ocurren con él con mayor frecuencia en una colección dada (es decir, PIR en nuestro caso), y luego aprovechar esta información en tiempo de ejecución para inferir palabras clave altamente correlacionadas con la consulta del usuario. Nuestro algoritmo de expansión de consulta basado en co-ocurrencia genérica es el siguiente: Algoritmo 3.1.2.1. Búsqueda de similitud de palabras clave basada en la co-ocurrencia. Cómputo fuera de línea: 1: Filtrar palabras clave potenciales k con DF ∈ [10, . . . , 20% · N] 2: Para cada palabra clave ki 3: Para cada palabra clave kj 4: Calcular SCki,kj, el coeficiente de similitud de (ki, kj) Cómputo en línea: 1: Sea S el conjunto de palabras clave, potencialmente similares a una expresión de entrada E. 2: Para cada palabra clave k de E: 3: S ← S ∪ TSC(k), donde TSC(k) contiene los términos Top-K más similares a k 4: Para cada término t de S: 5a: Sea Score(t) ← Q k∈E(0.01 + SCt,k) 5b: Sea Score(t) ← #DesktopHits(E|t) 6: Seleccionar los términos Top-K de S con las puntuaciones más altas. La computación fuera de línea necesita una fase inicial de recorte (paso 1) con fines de optimización. Además, también restringimos el algoritmo para calcular niveles de co-ocurrencia solo entre sustantivos, ya que contienen de lejos la mayor cantidad de información conceptual, y este enfoque reduce considerablemente el tamaño de la matriz de co-ocurrencia. Durante la fase de tiempo de ejecución, una vez identificados los términos más correlacionados con cada palabra clave de consulta en particular, es necesaria una operación adicional, a saber, calcular la correlación de cada término de salida con toda la consulta. Dos enfoques son posibles: (1) utilizando un producto de la correlación entre el término y todas las palabras clave en la expresión original (paso 5a), o (2) simplemente contando el número de documentos en los que el término propuesto co-ocurre con la consulta completa del usuario (paso 5b). Consideramos las siguientes fórmulas para los Coeficientes de Similitud [17]: • Similitud Coseno, definida como: CS = DFx,y pDFx · DFy (2) • Información Mutua, definida como: MI = log N · DFx,y DFx · DFy (3) • Razón de Verosimilitud, definida en los párrafos siguientes. DFx es la Frecuencia del Documento del término x, y DFx,y es el número de documentos que contienen tanto x como y. Para aumentar aún más la calidad de las puntuaciones generadas, limitamos este último indicador a las coocurrencias dentro de una ventana de W términos. Establecemos W para que sea igual a la cantidad máxima de palabras clave de expansión deseadas. El Ratio de Verosimilitud de Dunnings λ [9] es una métrica basada en la co-ocurrencia similar a χ2. Comienza intentando rechazar la hipótesis nula, según la cual los dos términos A y B aparecerían en el texto de forma independiente entre sí. Esto significa que P(A B) = P(A¬B) = P(A), donde P(A¬B) es la probabilidad de que el término A no esté seguido por el término B. Por lo tanto, la prueba de independencia de A y B se puede realizar observando si la distribución de A dado que B está presente es la misma que la distribución de A dado que B no está presente. Por supuesto, en realidad sabemos que estos términos no son independientes en el texto, y solo utilizamos las métricas estadísticas para resaltar los términos que aparecen con frecuencia juntos. Comparamos los dos procesos binomiales utilizando las razones de verosimilitud de sus hipótesis asociadas. Primero, definamos la razón de verosimilitud para una hipótesis: λ = maxω∈Ω0 H(ω; k) maxω∈Ω H(ω; k) (4) donde ω es un punto en el espacio de parámetros Ω, Ω0 es la hipótesis particular que se está probando, y k es un punto en el espacio de observaciones K. Si asumimos que dos distribuciones binomiales tienen el mismo parámetro subyacente, es decir, {(p1, p2) | p1 = p2}, podemos escribir: λ = maxp H(p, p; k1, k2, n1, n2) maxp1,p2 H(p1, p2; k1, k2, n1, n2) (5) donde H(p1, p2; k1, k2, n1, n2) = pk1 1 · (1 − p1)(n1−k1) ·  n1 k1 ¡ · pk2 2 · (1 − p2)(n2−k2) ·  n2 k2 ¡. Dado que las máximas se obtienen con p1 = k1 n1 , p2 = k2 n2 , y p = k1+k2 n1+n2 , tenemos: λ = maxp L(p, k1, n1)L(p, k2, n2) maxp1,p2 L(p1, k1, n1)L(p2, k2, n2) (6) donde L(p, k, n) = pk · (1 − p)n−k. Tomando el logaritmo de la verosimilitud, obtenemos: −2 · log λ = 2 · [log L(p1, k1, n1) + log L(p2, k2, n2) − log L(p, k1, n1) − log L(p, k2, n2)] donde log L(p, k, n) = k · log p + (n − k) · log(1 − p). Finalmente, si escribimos O11 = P(A B), O12 = P(¬A B), O21 = P(A ¬B) y O22 = P(¬A¬B), entonces la probabilidad de co-ocurrencia de los términos A y B se convierte en: −2 · log λ = 2 · [O11 · log p1 + O12 · log (1 − p1) + O21 · log p2 + O22 · log (1 − p2) − (O11 + O21) · log p − (O12 + O22) · log (1 − p)] donde p1 = k1 n1 = O11 O11+O12 , p2 = k2 n2 = O21 O21+O22 , y p = k1+k2 n1+n2 Expansión basada en tesauro. Los tesauros a gran escala encapsulan el conocimiento global sobre las relaciones entre términos. Por lo tanto, primero identificamos el conjunto de términos estrechamente relacionados con cada palabra clave de la consulta, y luego calculamos el nivel de co-ocurrencia en el escritorio de cada uno de estos posibles términos de expansión con toda la solicitud de búsqueda inicial. Al final, se conservan aquellas sugerencias con las frecuencias más altas. El algoritmo es el siguiente: Algoritmo 3.1.2.2. Expansión de consulta basada en tesauro filtrado. 1: Para cada palabra clave k de una consulta de entrada Q: 2: Seleccionar los siguientes conjuntos de términos relacionados utilizando WordNet: 2a: Sin: Todos los sinónimos 2b: Sub: Todos los subconceptos que residen un nivel por debajo de k 2c: Super: Todos los superconceptos que residen un nivel por encima de k 3: Para cada conjunto Si de los conjuntos mencionados anteriormente: 4: Para cada término t de Si: 5: Buscar en el PIR con (Q|t), es decir, la consulta original, expandida con t 6: Dejar que H sea el número de coincidencias de la búsqueda anterior (es decir, el nivel de co-ocurrencia de t con Q) 7: Devolver los términos Top-K ordenados por sus valores de H. Observamos tres tipos de relaciones de términos (pasos 2a-2c): (1) sinónimos, (2) subconceptos, es decir, hipónimos (es decir, subclases) y merónimos (es decir, subpartes), y (3) superconceptos, es decir, hiperónimos (es decir, superclases) y holónimos (es decir, superpartes). Dado que representan tipos de asociación bastante diferentes, los investigamos por separado. Limitamos el conjunto de expansión de salida (paso 7) para contener solo términos que aparecen al menos T veces en el escritorio, con el fin de evitar sugerencias ruidosas, donde T = min(N DocsPerTopic, MinDocs). Establecimos DocsPerTopic = 2, 500, y MinDocs = 5, este último abordando el caso de PIRs pequeños. 3.2 Experimentos 3.2.1 Configuración Experimental Evaluamos nuestros algoritmos con 18 sujetos (estudiantes de doctorado y posdoctorado en diferentes áreas de informática y educación). Primero, instalaron nuestro motor de búsqueda basado en Lucene y, claramente, si ya se había instalado una aplicación de búsqueda de escritorio, entonces este sobrecosto no estaría presente. Indexaron todo su contenido almacenado localmente: archivos dentro de rutas seleccionadas por el usuario, correos electrónicos y caché web. Sin pérdida de generalidad, enfocamos los experimentos en máquinas de un solo usuario. Luego, eligieron 4 consultas relacionadas con sus actividades diarias, de la siguiente manera: • Una consulta muy frecuente en AltaVista, extraída de las consultas más emitidas al motor de búsqueda dentro de un registro de 7.2 millones de entradas de octubre de 2001. Para conectar una consulta de este tipo con los intereses de cada usuario, agregamos una fase de preprocesamiento fuera de línea: Generamos las solicitudes de búsqueda más frecuentes y luego seleccionamos aleatoriamente una consulta con al menos 10 resultados en cada escritorio de los temas. Para garantizar aún más un escenario de la vida real, se permitió a los usuarios rechazar la consulta propuesta y pedir una nueva, si la consideraban totalmente fuera de sus áreas de interés. • Una consulta de registro seleccionada al azar, filtrada utilizando el mismo procedimiento que se mencionó anteriormente. • Una consulta específica seleccionada por ellos mismos, que pensaban que tenía un solo significado. • Una consulta ambigua seleccionada por ellos mismos, que pensaban que tenía al menos tres significados. Las longitudes promedio de las consultas fueron de 2.0 y 2.3 términos para las consultas de registro, así como de 2.9 y 1.8 para las seleccionadas por los usuarios. Aunque nuestros algoritmos están principalmente diseñados para mejorar la búsqueda al utilizar palabras clave ambiguas en las consultas, decidimos investigar su rendimiento en una amplia gama de tipos de consultas, para ver cómo se desempeñan en todas las situaciones. Las consultas de registro evalúan solicitudes de la vida real, en contraste con las auto-seleccionadas, que se centran más en la identificación de los rendimientos superiores e inferiores. Ten en cuenta que los anteriores estaban algo más alejados del interés de cada sujeto, por lo que también eran más difíciles de personalizar. Para obtener una idea de la relación entre cada tipo de consulta y los intereses de los usuarios, pedimos a cada persona que calificara la consulta en sí misma con una puntuación del 1 al 5, con las siguientes interpretaciones: (1) nunca lo ha escuchado, (2) no lo conoce, pero ha oído hablar de ello, (3) lo conoce parcialmente, (4) lo conoce bien, (5) gran interés. Las calificaciones obtenidas fueron 3.11 para las consultas principales, 3.72 para las seleccionadas al azar, 4.45 para las específicas seleccionadas por el usuario y 4.39 para las ambiguas seleccionadas por el usuario. Para cada consulta, recopilamos las 5 URL principales generadas por 20 versiones de los algoritmos presentados en la Sección 3.1. Estos resultados fueron luego mezclados en un conjunto que generalmente contiene entre 70 y 90 URL. Por lo tanto, cada sujeto tuvo que evaluar alrededor de 325 documentos para las cuatro consultas, sin conocer ni el algoritmo ni la clasificación de cada URL evaluada. En total, se emitieron 72 consultas y se evaluaron más de 6,000 URL durante el experimento. Para cada una de estas URL, los probadores tenían que dar una calificación que iba de 0 a 2, dividiendo los resultados relevantes en dos categorías, (1) relevante y (2) altamente relevante. Finalmente, la calidad de cada clasificación fue evaluada utilizando la versión normalizada de la Ganancia Acumulada Descontada (DCG) [15]. DCG es una medida rica, ya que otorga más peso a los documentos altamente clasificados, al mismo tiempo que incorpora diferentes niveles de relevancia al asignarles diferentes valores de ganancia: DCG(i) = G(1) , si i = 1 DCG(i − 1) + G(i)/log(i) , en otro caso. Utilizamos G(i) = 1 para los resultados relevantes, y G(i) = 2 para los altamente relevantes. Dado que las consultas con más documentos de salida relevantes tendrán un DCG más alto, también normalizamos su valor a una puntuación entre 0 (el peor DCG posible dadas las calificaciones) y 1 (el mejor DCG posible dadas las calificaciones) para facilitar el promedio de las consultas. Todos los resultados fueron probados para determinar su significancia estadística utilizando pruebas T. Nota que todas las partes de nivel de escritorio de nuestros algoritmos fueron realizadas con Lucene utilizando sus funciones predefinidas de búsqueda y clasificación. Aspectos específicos del algoritmo. El parámetro principal de nuestros algoritmos es el número de palabras clave de expansión generadas. Para este experimento lo configuramos a 4 términos para todas las técnicas, dejando un análisis en este nivel para una investigación posterior. Para optimizar la velocidad de cálculo en tiempo de ejecución, decidimos limitar el número de palabras clave de salida por documento de escritorio al número de palabras clave de expansión deseadas (es decir, cuatro). Para todos los algoritmos también investigamos limitaciones más grandes. Esto nos permitió observar que el método de Compuestos Léxicos funcionaría mejor si solo se seleccionara como máximo un compuesto por documento. Por lo tanto, decidimos experimentar con este nuevo enfoque también. Para todas las demás técnicas, considerar menos de cuatro términos por documento no pareció producir consistentemente ninguna ganancia cualitativa adicional. Etiquetamos los algoritmos que evaluamos de la siguiente manera: 0. Google: La salida real de la consulta de Google, tal como la devuelve la API de Google; 1. TF, DF: Frecuencia del término y del documento; 2. LC, LC[O]: Compuestos léxicos regulares y optimizados (considerando solo un compuesto principal por documento); 3. SS: Selección de oraciones; 4. TC[CS], TC[MI], TC[LR]: Estadísticas de co-ocurrencia de términos utilizando respectivamente la Similitud de Coseno, la Información Mutua y la Razón de Verosimilitud como coeficientes de similitud; 5. WN[SYN], WN[SUB], WN[SUP]: Expansión basada en WordNet con sinónimos, subconceptos y superconceptos, respectivamente. Excepto por la expansión basada en tesauros, en todos los casos también investigamos el rendimiento de nuestros algoritmos al aprovechar solo la caché del navegador web para representar la información personal de los usuarios. Esto se debe al hecho de que otros documentos personales, como por ejemplo correos electrónicos, se sabe que tienen un lenguaje algo diferente al que se encuentra en la World Wide Web [34]. Sin embargo, dado que este enfoque tuvo un rendimiento notablemente inferior al utilizar todos los datos del escritorio, decidimos omitirlo del análisis posterior. 3.2.2 Resultados de las consultas de registro. Evaluamos todas las variantes de nuestros algoritmos utilizando NDCG. Para consultas de registro, se logró el mejor rendimiento con TF, LC[O] y TC[LR]. Las mejoras que trajeron fueron de hasta un 5.2% para las consultas principales (p = 0.14) y un 13.8% para las consultas seleccionadas al azar (p = 0.01, estadísticamente significativo), ambas obtenidas con LC[O]. Un resumen de todos los resultados se muestra en la Tabla 1. Tanto TF como LC[O] arrojaron resultados muy buenos, lo que indica que enfoques simples basados en palabras clave y expresiones podrían ser suficientes para la tarea de expansión de consultas basada en el escritorio. LC[O] fue mucho mejor que LC, mejorando su calidad hasta en un 25.8% en el caso de consultas de registro seleccionadas al azar, mejora que también fue significativa con p = 0.04. Por lo tanto, una selección de compuestos que abarque varios documentos de escritorio es más informativa sobre los intereses de los usuarios que el enfoque general, en el que no hay restricción en el número de compuestos producidos a partir de cada artículo personal. Los enfoques más complejos orientados a escritorio, es decir, la selección de oraciones y todos los algoritmos basados en la co-ocurrencia de términos, mostraron un rendimiento bastante promedio, sin mejoras visibles, excepto para TC[LR]. Además, la expansión basada en el tesauro generalmente producía muy pocas sugerencias, posiblemente debido a las numerosas consultas técnicas utilizadas por nuestros sujetos. Observamos, sin embargo, que expandir con subconceptos es muy beneficioso para términos de la vida cotidiana (por ejemplo, automóvil), mientras que el uso de superconceptos es valioso para compuestos que tienen al menos un término con baja tecnicidad (por ejemplo, agrupamiento de documentos). Como se esperaba, la expansión basada en sinónimos tuvo un rendimiento generalmente bueno, aunque en algunos casos muy Algorithm NDCG Signific. NDCG significa "Normalized Discounted Cumulative Gain". Tabla 1: Ganancia acumulada descontada normalizada en los primeros 5 resultados al buscar "top" (izquierda) y "aleatorio" (derecha) en consultas de registro. Algoritmo NDCG Signific. NDCG significa "Normalized Discounted Cumulative Gain". Claro vs. Google Ambiguo vs. Google Google 0.71 - 0.39TF 0.66 - 0.52 p 0.01 DF 0.37 - 0.31LC 0.65 - 0.54 p 0.01 LC[O] 0.69 - 0.59 p 0.01 SS 0.56 - 0.52 p 0.01 TC[CS] 0.60 - 0.50 p = 0.01 TC[MI] 0.60 - 0.47 p = 0.02 TC[LR] 0.56 - 0.47 p = 0.03 WN[SYN] 0.70 - 0.36WN[SUB] 0.46 - 0.32WN[SUP] 0.51 - 0.29Tabla 2: Ganancia acumulada descontada normalizada en los primeros 5 resultados al buscar consultas claras (izquierda) y ambiguas (derecha) seleccionadas por el usuario. En casos técnicos, proporcionó sugerencias bastante generales. Finalmente, notamos que Google está muy optimizado para algunas consultas frecuentes principales. Sin embargo, incluso dentro de este escenario más difícil, algunos de nuestros algoritmos de personalización produjeron mejoras estadísticamente significativas sobre la búsqueda regular (es decir, TF y LC[O]). Consultas auto-seleccionadas. Los valores de NDCG obtenidos con consultas auto-seleccionadas se muestran en la Tabla 2. Si bien nuestros algoritmos no mejoraron Google para las tareas de búsqueda claras, sí produjeron mejoras significativas de hasta un 52.9% (que, por supuesto, también fueron altamente significativas con p 0.01) cuando se utilizaron con consultas ambiguas. De hecho, casi todos nuestros algoritmos resultaron en mejoras estadísticamente significativas sobre Google para este tipo de consulta. En general, las diferencias relativas entre nuestros algoritmos fueron similares a las observadas para las consultas basadas en registros. Como en el análisis anterior, las métricas simples de Frecuencia de Términos y Compuestos Léxicos basadas en el escritorio tuvieron el mejor rendimiento. Sin embargo, también se obtuvo un resultado muy bueno para la selección de oraciones basada en escritorio y todas las métricas de co-ocurrencia de términos. No hubo diferencias visibles entre el comportamiento de los tres enfoques diferentes para el cálculo de la coocurrencia. Finalmente, para el caso de consultas claras, notamos que menos de 4 términos de expansión podrían ser menos ruidosos y, por lo tanto, útiles para lograr más mejoras. Así que seguimos esta idea con los algoritmos adaptativos presentados en la siguiente sección. 4. INTRODUCCIÓN A LA ADAPTABILIDAD En la sección anterior hemos investigado el comportamiento de cada técnica al agregar un número fijo de palabras clave a la consulta del usuario. Sin embargo, un algoritmo óptimo de expansión de consultas personalizadas debería adaptarse automáticamente a varios aspectos de cada consulta, así como a las particularidades de la persona que lo utiliza. En esta sección discutimos los factores que influyen en el comportamiento de nuestros algoritmos de expansión, los cuales podrían ser utilizados como entrada para el proceso de adaptabilidad. Luego, en la segunda parte presentamos algunos experimentos iniciales con uno de ellos, a saber, la claridad de la consulta. 4.1 Factores de Adaptabilidad Varios indicadores podrían ayudar al algoritmo a ajustar automáticamente el número de términos de expansión. Comenzamos discutiendo la adaptación analizando el nivel de claridad de la consulta. Luego, presentamos brevemente un enfoque para modelar el proceso de formulación de consultas genéricas con el fin de adaptar automáticamente el algoritmo de búsqueda, y discutimos algunos otros posibles factores que podrían ser útiles para esta tarea. Claridad de la consulta. El interés por analizar la dificultad de las consultas ha aumentado solo recientemente, y no hay muchos artículos que aborden este tema. Sin embargo, desde hace mucho tiempo se sabe que la desambiguación de consultas tiene un alto potencial para mejorar la efectividad de recuperación en búsquedas de baja recuperación con consultas muy cortas [20], que es exactamente nuestro escenario objetivo. Además, el éxito de los sistemas de IR claramente varía según los diferentes temas. Por lo tanto, proponemos utilizar un número estimado que exprese el nivel calculado de claridad de la consulta para ajustar automáticamente la cantidad de personalización alimentada en el algoritmo. Las siguientes métricas están disponibles: • La Longitud de la Consulta se expresa simplemente por el número de palabras en la consulta del usuario. La solución es bastante ineficiente, según lo informado por He y Ounis [14]. • El Alcance de la Consulta se relaciona con el IDF de toda la consulta, como en: C1 = log( #DocumentosEnColección #Resultados(Consulta) ) (7) Esta métrica funciona bien cuando se utiliza con colecciones de documentos que cubren un solo tema, pero mal en otros casos [7, 14]. • La Claridad de la Consulta [7] parece ser la mejor, así como la técnica más aplicada hasta ahora. Mide la divergencia entre el modelo de lenguaje asociado a la consulta del usuario y el modelo de lenguaje asociado a la colección. En una versión simplificada (es decir, sin suavizar los términos que no están presentes en la consulta), se puede expresar de la siguiente manera: C2 =  w∈Consulta Pml(w|Consulta) · log Pml(w|Consulta) Pcoll(w) (8) donde Pml(w|Consulta) es la probabilidad de la palabra w dentro de la consulta enviada, y Pcoll(w) es la probabilidad de w dentro de toda la colección de documentos. Otras soluciones existen, pero creemos que son demasiado costosas computacionalmente para la gran cantidad de datos que necesitan ser procesados dentro de las aplicaciones web. Por lo tanto, decidimos investigar solo C1 y C2. Primero, analizamos su rendimiento en un gran conjunto de consultas y dividimos sus predicciones de claridad en tres categorías: • Pequeño alcance / Consulta clara: C1 ∈ [0, 12], C2 ∈ [4, ∞). • Mediano alcance / Consulta semi-ambigua: C1 ∈ [12, 17), C2 ∈ [2.5, 4). • Gran alcance / Consulta ambigua: C1 ∈ [17, ∞), C2 ∈ [0, 2.5]. Para limitar la cantidad de experimentos, analizamos solo los resultados producidos al emplear C1 para el PIR y C2 para la Web. Como base algorítmica utilizamos LC[O], es decir, compuestos léxicos optimizados, que claramente fue el método ganador en el análisis anterior. Como la investigación manual mostró que se ajustaba ligeramente a los términos de expansión para consultas claras, utilizamos un sustituto para este caso particular. Dos candidatos fueron considerados: (1) TF, es decir, el segundo mejor enfoque, y (2) WN[SYN], ya que observamos que sus primeros y segundos términos de expansión eran frecuentemente muy buenos. Alcance de escritorio Claridad web N.º de términos Algoritmo Grande Ambiguo 4 LC[O] Grande Semi-ambiguo 3 LC[O] Grande Claro 2 LC[O] Mediano Ambiguo 3 LC[O] Mediano Semi-ambiguo 2 LC[O] Mediano Claro 1 TF / WN[SYN] Pequeño Ambiguo 2 TF / WN[SYN] Pequeño Semi-ambiguo 1 TF / WN[SYN] Pequeño Claro 0Tabla 3: Expansión de consulta personalizada adaptativa. Dado los algoritmos y medidas de claridad, implementamos el procedimiento de adaptabilidad ajustando la cantidad de términos de expansión añadidos a la consulta original, como función de su ambigüedad en la Web, así como dentro de los PIR de los usuarios. Ten en cuenta que el nivel de ambigüedad está relacionado con la cantidad de documentos que cubren una determinada consulta. Por lo tanto, en cierta medida, tiene diferentes significados en la web y dentro de los PIRs. Si una consulta considerada ambigua en una gran colección como la Web muy probablemente tenga de hecho un gran número de significados, esto puede no ser el caso para el Escritorio. Tomemos como ejemplo la consulta PageRank. Si el usuario es un experto en análisis de enlaces, muchos de sus documentos podrían coincidir con este término, y por lo tanto, la consulta se clasificaría como ambigua. Sin embargo, al analizarlo en la web, esta es definitivamente una consulta clara. En consecuencia, empleamos más términos adicionales cuando la consulta era más ambigua en la Web, pero también en el escritorio. Dicho de otra manera, las consultas consideradas claras en el escritorio no estaban bien cubiertas en el PIR de los usuarios y, por lo tanto, tenían menos palabras clave añadidas a ellas. El número de términos de expansión que utilizamos para cada combinación de niveles de alcance y claridad se muestra en la Tabla 3. Proceso de formulación de consultas. La expansión interactiva de consultas tiene un alto potencial para mejorar la búsqueda [29]. Creemos que modelar su proceso subyacente sería muy útil para producir algoritmos de búsqueda web adaptativos cualitativos. Por ejemplo, cuando el usuario está agregando un nuevo término a su consulta previamente emitida, básicamente está reformulando su solicitud original. Por lo tanto, es más probable que los términos recién agregados transmitan información sobre sus objetivos de búsqueda. Para un motor de búsqueda general y no personalizado, esto podría corresponder a darle más peso a estas nuevas palabras clave. Dentro de nuestro escenario personalizado, las expansiones generadas también pueden estar sesgadas hacia estos términos. Sin embargo, se necesitan más investigaciones para resolver los desafíos planteados por este enfoque. Otras características. La idea de adaptar el proceso de recuperación a varios aspectos de la consulta, del propio usuario e incluso del algoritmo empleado ha recibido poca atención en la literatura. Solo se han investigado algunos enfoques, generalmente de forma indirecta. Existen estudios sobre los comportamientos de búsqueda en diferentes momentos del día, o sobre los temas abarcados por las consultas de distintas clases de usuarios, etc. Sin embargo, generalmente no discuten cómo estas características pueden ser realmente incorporadas en el proceso de búsqueda en sí mismo y casi nunca han sido relacionadas con la tarea de personalización web. 4.2 Experimentos Utilizamos exactamente la misma configuración experimental que en nuestro análisis anterior, con dos consultas basadas en registros y dos seleccionadas por los usuarios (todas diferentes a las anteriores, para asegurarnos de que no haya sesgo en los nuevos enfoques), evaluadas con NDCG sobre los resultados de los cinco primeros obtenidos por cada algoritmo. Los algoritmos de expansión de consultas personalizadas adaptativas recientemente propuestos se denominan A[LCO/TF] para el enfoque que utiliza TF con las consultas claras de escritorio, y como A[LCO/WN] cuando en lugar de TF se utilizó WN[SYN]. Los resultados generales fueron al menos similares, o mejores que los de Google para todo tipo de consultas de registro (ver Tabla 4). Para las consultas más frecuentes, Algoritmo NDCG Signific. NDCG significa "Normalized Discounted Cumulative Gain". Tabla 4: Ganancia acumulada descontada normalizada en los primeros 5 resultados al utilizar nuestros algoritmos de búsqueda personalizada adaptativa en consultas de registro principales (izquierda) y aleatorias (derecha) en Google. Algoritmo NDCG Signific. NDCG significa "Normalized Discounted Cumulative Gain". Tabla 5: Ganancia acumulada descontada normalizada en los primeros 5 resultados al utilizar nuestros algoritmos de búsqueda personalizados adaptativos en consultas claras (izquierda) y ambiguas (derecha) seleccionadas por el usuario. Ambos algoritmos adaptativos, A[LCO/TF] y A[LCO/WN], mejoran en un 10.8% y 7.9% respectivamente, siendo ambas diferencias también estadísticamente significativas con p ≤ 0.01. También logran una mejora de hasta un 6.62% sobre el algoritmo estático de mejor rendimiento, LC[O] (p = 0.07). Para consultas seleccionadas al azar, aunque A[LCO/TF] arroja resultados significativamente mejores que Google (p = 0.04), ambos enfoques adaptativos quedan rezagados frente a los algoritmos estáticos. La razón principal parece ser la selección imperfecta del número de términos de expansión, en función de la claridad de la consulta. Por lo tanto, se necesitan más experimentos para determinar el número óptimo de palabras clave de expansión generadas, en función del nivel de ambigüedad de la consulta. El análisis de las consultas auto-seleccionadas muestra que la adaptabilidad puede llevar a mejoras aún mayores en la personalización de la búsqueda en la web (ver Tabla 5). Para consultas ambiguas, las puntuaciones otorgadas a la búsqueda en Google se mejoran en un 40.6% a través de A[LCO/TF] y en un 35.2% a través de A[LCO/WN], ambos altamente significativos con p 0.01. La adaptabilidad también aporta una mejora adicional del 8.9% sobre la personalización estática de LC[O] (p = 0.05). Incluso para consultas claras, los algoritmos flexibles recién propuestos tienen un rendimiento ligeramente mejor, mejorando en un 0.4% y 1.0% respectivamente. Todos los resultados se representan gráficamente en la Figura 1. Observamos que A[LCO/TF] es el mejor algoritmo en general, funcionando mejor que Google para todo tipo de consultas, ya sea extraídas del registro del motor de búsqueda o seleccionadas por el usuario. Los experimentos presentados en esta sección confirman claramente que la adaptabilidad es un paso necesario a seguir en la personalización de la búsqueda en la web. 5. CONCLUSIONES Y TRABAJOS FUTUROS En este artículo propusimos ampliar las consultas de búsqueda en la web mediante la explotación del Repositorio de Información Personal de los usuarios para extraer automáticamente palabras clave adicionales relacionadas tanto con la consulta en sí como con los intereses de los usuarios, personalizando la salida de la búsqueda. En este contexto, el artículo incluye las siguientes contribuciones: • Propusimos cinco técnicas para determinar términos de expansión a partir de documentos personales. Cada uno de ellos produce palabras clave de consulta adicionales mediante el análisis de los escritorios de los usuarios en niveles de granularidad creciente, que van desde el análisis a nivel de términos y expresiones hasta estadísticas de co-ocurrencia global y tesauros externos. Figura 1: Ganancia relativa de NDCG (en %) para cada algoritmo en general, así como separada por categoría de consulta. • Realizamos un análisis empírico exhaustivo de varias variantes de nuestros enfoques, en cuatro escenarios diferentes. Mostramos que algunos de estos enfoques funcionan muy bien, produciendo mejoras en NDCG de hasta un 51.28%. • Llevamos este marco de búsqueda personalizada un paso más allá y propusimos hacer que el proceso de expansión sea adaptable a las características de cada consulta, poniendo un fuerte énfasis en su nivel de claridad. • En un conjunto separado de experimentos, demostramos que nuestros algoritmos adaptativos proporcionan una mejora adicional del 8.47% sobre el enfoque mejor identificado previamente. Actualmente estamos realizando investigaciones sobre la dependencia entre diversas características de la consulta y el número óptimo de términos de expansión. También estamos analizando otros tipos de enfoques para identificar sugerencias de expansión de consultas, como aplicar Análisis Semántico Latente en los datos de la computadora. Finalmente, estamos diseñando un conjunto de combinaciones más complejas de estas métricas para proporcionar una adaptabilidad mejorada a nuestros algoritmos. AGRADECIMIENTOS Agradecemos a Ricardo Baeza-Yates, Vassilis Plachouras, Carlos Castillo y Vanessa Murdock de Yahoo! por las interesantes discusiones sobre la configuración experimental y los algoritmos que presentamos. Estamos agradecidos a Fabrizio Silvestri del CNR y a Ronny Lempel de IBM por proporcionarnos el registro de consultas de AltaVista. Finalmente, agradecemos a nuestros colegas de L3S por participar en los experimentos que realizamos, así como a la Comisión Europea por el apoyo financiero (proyecto Nepomuk, 6º Programa Marco, contrato IST n.º 027705). 7. REFERENCIAS [1] J. Allan y H. Raghavan. Utilizando patrones de partes del discurso para reducir la ambigüedad de la consulta. En Actas de la 25ª Conferencia Internacional. Conferencia ACM SIGIR sobre investigación y desarrollo en recuperación de información, 2002. [2] P. G. Anick y S. Tipirneni. El asistente de búsqueda de paráfrasis: Retroalimentación terminológica para la búsqueda iterativa de información. En Actas del 22º Congreso Internacional. Conferencia ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información, 1999. [3] D. Carmel, E. Farchi, Y. Petruschka y A. Soffer. Refinamiento automático de consultas utilizando afinidades léxicas con ganancia de información máxima. En Actas de la 25ª Conferencia Internacional. ACM SIGIR Conf. sobre investigación y desarrollo en recuperación de información, páginas 283-290, 2002. [4] C. Carpineto, R. de Mori, G. Romano y B. Bigi. Un enfoque de teoría de la información para la expansión automática de consultas. ACM TOIS, 19(1):1-27, 2001. [5] C.-H. Chang y C.-C. Hsu. Integrando la expansión de consultas y la retroalimentación de relevancia conceptual para la recuperación personalizada de información web. En Actas de la 7ª Conferencia Internacional. Conf. en la World Wide Web, 1998. [6] P. A. Chirita, C. Firan y W. Nejdl. Resumiendo el contexto local para personalizar la búsqueda web global. En Actas de la 15ª Conferencia Internacional. CIKM Conf. sobre Gestión de Información y Conocimiento, 2006. [7] S. Cronen-Townsend, Y. Zhou y W. B. Croft. Prediciendo el rendimiento de la consulta. En Actas de la 25ª Conferencia Internacional. Conferencia ACM SIGIR sobre investigación y desarrollo en recuperación de información, 2002. [8] H. Cui, J.-R. Wen, J.-Y. Nie, and W.-Y. -> Nie, y W.-Y. This is not a complete sentence. Please provide the full sentence you would like me to translate to Spanish. Expansión de consulta probabilística utilizando registros de consulta. En Actas de la 11ª Conferencia Internacional. Conf. en la World Wide Web, 2002. [9] T. Dunning. Métodos precisos para la estadística de sorpresa y coincidencia. Lingüística Computacional, 19:61-74, 1993. [10] H. P. Edmundson. Nuevos métodos en extracción automática. Revista de la ACM, 16(2):264-285, 1969. [11] E. N. Efthimiadis. Una nueva vara de medir para la evaluación de algoritmos de clasificación para la expansión interactiva de consultas. Procesamiento y Gestión de la Información, 31(4):605-620, 1995. [12] D. Fogaras y B. Racz. Búsqueda de similitud basada en enlaces escalables. En Actas de la 14ª Conferencia Internacional. Conferencia de la World Wide Web, 2005. [13] T. Haveliwala. PageRank sensible al tema. En Actas de la 11ª Conferencia Internacional. Conferencia de la World Wide Web, Honolulu, Hawái, mayo de 2002. [14] B. Él y yo. Ounis. Inferir el rendimiento de la consulta utilizando predictores previos a la recuperación. En Actas de la 11ª Conferencia Internacional. Conferencia SPIRE sobre Procesamiento de Cadenas y Recuperación de Información, 2004. [15] K. Järvelin y J. Keklinen. Métodos de evaluación para recuperar documentos altamente relevantes. En Actas de la 23ª Conferencia Internacional. Conferencia ACM SIGIR sobre investigación y desarrollo en recuperación de información, 2000. [16] G. Jeh y J. Widom. Escalando la búsqueda web personalizada. En Actas de la 12ª Conferencia Internacional. Conferencia de la World Wide Web, 2003. [17] M.-C. Kim y K.-S. Choi. Una comparación de medidas de similitud basadas en colocación en la expansión de consultas. I'm sorry, but the sentence "Inf." is not a complete sentence and cannot be translated without context. Please provide more information or another sentence for translation. Proc. y Mgmt., 35(1):19-30, 1999. [18] S.-B. Kim, H.-C. Seo y H.-C. Rim. Recuperación de información utilizando sentidos de palabras: enfoque de etiquetado del sentido raíz. En Actas de la 27ª Conferencia Internacional. Conferencia ACM SIGIR sobre investigación y desarrollo en recuperación de información, 2004. [19] R. Kraft y J. Zien. Extracción de texto ancla para el refinamiento de consultas. En Actas de la 13ª Conferencia Internacional. Conf. en la World Wide Web, 2004. [20] R. Krovetz y W. B. Croft. Ambigüedad léxica y recuperación de información. ACM Trans. I'm sorry, but the sentence "Inf." is not a complete sentence. Could you please provide more context or a full sentence for me to translate to Spanish? Syst., 10(2), 1992. [21] A. M. Lam-Adesina y G. J. F. Jones. Aplicando técnicas de resumen para la selección de términos en la retroalimentación de relevancia. En Actas del 24º Congreso Internacional. Conferencia ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información, 2001. [22] S. Liu, F. Liu, C. Yu y W. Meng. Un enfoque efectivo para la recuperación de documentos mediante el uso de WordNet y el reconocimiento de frases. En Actas de la 27ª Conferencia Internacional. Conferencia ACM SIGIR sobre investigación y desarrollo en recuperación de información, 2004. [23] G. Miller. Wordnet: Una base de datos léxica electrónica. Comunicaciones de la ACM, 38(11):39-41, 1995. [24] L. Nie, B. Davison y X. Qi. Análisis de enlaces temáticos para búsqueda web. En Actas de la 29ª Conferencia Internacional. Conferencia ACM SIGIR sobre Investigación y Desarrollo en Información. Retr., 2006. [25] L. Page, S. Brin, R. Motwani y T. Winograd. El ranking de citas PageRank: Trayendo orden al web. Informe técnico, Universidad de Stanford, 1998. [26] F. Qiu y J. Cho. Identificación automática de intereses del usuario para búsqueda personalizada. En Actas de la 15ª Conferencia Internacional. WWW Conf., 2006. [27] Y. Qiu y H.-P. Frei. Expansión de consulta basada en conceptos. En Actas del 16º Congreso Internacional. Conf. ACM SIGIR sobre Investigación y Desarrollo en Información. Retr., 1993. [28] J. Rocchio.
Traducción: Retr., 1993. [28] J. Rocchio. Retroalimentación de relevancia en la recuperación de información. El Sistema de Recuperación Inteligente: Experimentos en Procesamiento Automático de Documentos, páginas 313-323, 1971. [29] I. Ruthven. Reexaminando la efectividad potencial de la expansión interactiva de consultas. En Actas de la 26ª Conferencia Internacional. ACM SIGIR Conf., 2003. [30] T. Sarlos, A. 

Conferencia ACM SIGIR, 2003. [30] T. Sarlos, A. A. Benczur, K. Csalogany, D. Fogaras y B. Racz. Aleatorizar o no aleatorizar: Resúmenes óptimos de espacio para análisis de hipervínculos. En Actas de la 15ª Conferencia Internacional. WWW Conf., 2006. [31] C. Shah y W. B. Croft. Evaluando técnicas de recuperación de alta precisión. En Actas de la 27ª Conferencia Internacional. ACM SIGIR Conf. sobre Investigación y desarrollo en recuperación de información, páginas 2-9, 2004. [32] K. Sugiyama, K. Hatano y M. Yoshikawa. Búsqueda web adaptativa basada en el perfil del usuario construido sin ningún esfuerzo por parte de los usuarios. En Actas de la 13ª Conferencia Internacional. Conferencia de la World Wide Web, 2004. [33] D. Sullivan. Cuanto más mayor eres, más deseas una búsqueda personalizada, 2004. http://searchenginewatch.com/searchday/article.php/3385131. [34] J. Teevan, S. Dumais, y E. Horvitz. Personalización de la búsqueda a través del análisis automatizado de intereses y actividades. En Actas de la 28ª Conferencia Internacional. Conferencia ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información, 2005. [35] E. Volokh. Personalización y privacidad. This seems to be an incomplete sentence. Could you please provide more context or clarify the text you would like me to translate to Spanish? ACM, 43(8), 2000. [36] E. M. Voorhees. 

ACM, 43(8), 2000. [36] E. M. Voorhees. Expansión de consulta utilizando relaciones léxico-semánticas. En Actas de la 17ª Conferencia Internacional. Conf. ACM SIGIR sobre Investigación y Desarrollo en Información. Retr., 1994. [37] J. Xu y W. B. Croft. Expansión de consulta utilizando análisis local y global de documentos. En Actas de la 19ª Conferencia Internacional. Conferencia ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información, 1996. [38] S. Yu, D. Cai, J.-R. Wen y W.-Y. I'm sorry, but "Ma." is not a complete sentence. Could you please provide more context or a complete sentence for me to translate into Spanish? Mejorando la retroalimentación de pseudo relevancia en la recuperación de información web utilizando la segmentación de páginas web. En Actas de la 12ª Conferencia Internacional. Conferencia sobre la World Wide Web, 2003.