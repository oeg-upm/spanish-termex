Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. 

Cambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. 

MIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07)