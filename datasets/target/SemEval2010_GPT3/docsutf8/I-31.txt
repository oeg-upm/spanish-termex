Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma "A lo sumo" dice que hay como máximo un objeto en la mesa a la vez, y "Al menos" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.
La editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. 

Morgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. 

Morgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence "Artif." is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. 

Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.
Addison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573