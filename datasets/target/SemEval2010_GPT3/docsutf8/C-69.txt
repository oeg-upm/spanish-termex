pTHINC: Una arquitectura de cliente ligero para la web inalámbrica móvil Joeng Kim, Ricardo A. Baratto y Jason Nieh Departamento de Ciencias de la Computación Universidad de Columbia, Nueva York, NY, EE. UU. {jk2438, ricardo, nieh}@cs.columbia.edu RESUMEN Aunque las aplicaciones web están ganando popularidad en las PDAs inalámbricas móviles, los navegadores web en estos sistemas pueden ser bastante lentos y a menudo carecen de funcionalidad adecuada para acceder a muchos sitios web. Hemos desarrollado pTHINC, una solución de cliente ligero PDA que aprovecha servidores más potentes para ejecutar navegadores web de función completa y otra lógica de aplicación, y luego envía actualizaciones simples de pantalla a la PDA para su visualización. pTHINC utiliza escalado de pantalla en el lado del servidor para proporcionar una visualización de alta fidelidad y movilidad fluida en una amplia gama de clientes y tamaños de pantalla diferentes, incluidos los modos de visualización en vertical y horizontal. pTHINC también aprovecha los botones de control existentes en la PDA para mejorar la usabilidad del sistema y maximizar la resolución de pantalla disponible para la visualización de aplicaciones. Hemos implementado pTHINC en Windows Mobile y evaluado su rendimiento en dispositivos móviles inalámbricos. Nuestros resultados comparados con los navegadores web PDA locales y otros enfoques de cliente ligero demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero PDA que soporta de manera efectiva aplicaciones de ayuda del navegador cruciales como la reproducción de video. Categorías y Descriptores de Asunto: C.2.4 Comunicación de Computadoras-Redes: Sistemas Distribuidos - cliente/servidor Términos Generales: Diseño, Experimentación, Rendimiento 1. La creciente ubicuidad de las redes inalámbricas y la disminución del costo del hardware están impulsando una proliferación de dispositivos móviles inalámbricos portátiles, tanto como asistentes digitales personales (PDA) inalámbricos independientes y dispositivos populares integrados de PDA/teléfono celular. Estos dispositivos están permitiendo nuevas formas de computación y comunicación móvil. Los proveedores de servicios están aprovechando estos dispositivos para ofrecer acceso web omnipresente, y los usuarios de la web móvil a menudo ya utilizan estos dispositivos para acceder a información habilitada para la web, como noticias, correo electrónico, guías de viaje localizadas y mapas. Es probable que en unos pocos años, la mayoría de los dispositivos que accedan a la web sean móviles. Los usuarios suelen acceder al contenido web ejecutando un navegador web y aplicaciones auxiliares asociadas localmente en la PDA. Aunque existen navegadores web nativos para PDAs, ofrecen un rendimiento deficiente y tienen un conjunto de funciones mucho más pequeño y una funcionalidad más limitada que sus contrapartes de computadoras de escritorio [10]. Como resultado, los navegadores web de PDA a menudo no pueden mostrar el contenido web de sitios web que utilizan tecnologías web más avanzadas para ofrecer una experiencia web más rica. Este problema fundamental surge por dos razones. Primero, debido a que las PDAs tienen un entorno de hardware/software completamente diferente de las computadoras de escritorio tradicionales, las aplicaciones web necesitan ser reescritas y personalizadas para las PDAs si es posible, duplicando los costos de desarrollo. Debido a que el mercado de aplicaciones de escritorio es más grande y maduro, la mayoría del esfuerzo de desarrollo generalmente se destina a las aplicaciones de escritorio, lo que resulta en una mayor funcionalidad y rendimiento que sus contrapartes de PDA. En segundo lugar, las PDAs tienen un entorno con recursos más limitados que las computadoras de escritorio tradicionales para ofrecer un factor de forma más pequeño y una vida útil de la batería más larga. Los navegadores web de escritorio son aplicaciones grandes y complejas que no pueden ejecutarse en una PDA. En cambio, los desarrolladores se ven obligados a reducir significativamente estas navegadores web para ofrecer un navegador web PDA utilizable, lo que limita la funcionalidad del navegador PDA. La computación de cliente ligero proporciona un enfoque alternativo para habilitar el acceso web ubicuo desde dispositivos móviles. Un sistema informático de cliente ligero consiste en un servidor y un cliente que se comunican a través de una red utilizando un protocolo de visualización remota. El protocolo permite que las pantallas gráficas se virtualicen y se sirvan a través de una red a un dispositivo cliente, mientras que la lógica de la aplicación se ejecuta en el servidor. Usando el protocolo de visualización remota, el cliente transmite la entrada del usuario al servidor, y el servidor devuelve actualizaciones de pantalla de las aplicaciones del servidor al cliente. Utilizando un modelo de cliente ligero para dispositivos móviles de mano, las PDAs pueden convertirse en clientes simples sin estado que aprovechan las capacidades del servidor remoto para ejecutar navegadores web y otras aplicaciones auxiliares. El modelo de cliente ligero proporciona varios beneficios importantes para la web inalámbrica móvil. Primero, las aplicaciones web estándar de escritorio pueden utilizarse para entregar contenido web a PDAs sin necesidad de reescribir o adaptar las aplicaciones para ejecutarse en una PDA, lo que reduce los costos de desarrollo y aprovecha las inversiones existentes en software. Segundo, las aplicaciones web complejas pueden ejecutarse en servidores potentes en lugar de ejecutarse en versiones simplificadas en PDAs con recursos más limitados, lo que proporciona una mayor funcionalidad y un mejor rendimiento [10]. Tercero, las aplicaciones web pueden aprovechar servidores con redes más rápidas y mejor conectividad, lo que mejora aún más el rendimiento de la aplicación. En cuarto lugar, las PDAs pueden ser dispositivos aún más simples ya que no necesitan realizar una lógica de aplicación compleja, lo que potencialmente reduce el consumo de energía y extiende la vida útil de la batería. Finalmente, los clientes ligeros PDA pueden ser dispositivos prácticamente sin estado que no necesitan ser respaldados o restaurados, requieren casi ningún mantenimiento o actualizaciones, y no almacenan datos sensibles que puedan perderse o ser robados. Este modelo proporciona una vía viable para que las organizaciones médicas cumplan con las regulaciones de HIPAA mientras incorporan dispositivos móviles en sus operaciones diarias. A pesar de estas posibles ventajas, los clientes ligeros no han podido ofrecer la gama completa de estos beneficios al entregar aplicaciones web a dispositivos móviles portátiles. Los thin clients existentes no fueron diseñados para PDAs y no tienen en cuenta problemas importantes de usabilidad en el contexto de dispositivos de factor de forma pequeño, lo que resulta en dificultades para navegar por el contenido web mostrado. Además, los clientes ligeros existentes son ineficaces para proporcionar movilidad fluida en la mezcla heterogénea de tamaños de pantalla y resoluciones de dispositivos. Si bien los clientes ligeros existentes ya pueden ofrecer un rendimiento más rápido que los navegadores web nativos de PDA al entregar contenido web HTML, no admiten de manera efectiva aplicaciones web auxiliares más intensivas en visualización, como videos multimedia, que cada vez son una parte integral del contenido web disponible. Para aprovechar todo el potencial de la informática de cliente ligero en la provisión de la web inalámbrica móvil en PDAs, hemos desarrollado pTHINC (PDA THin-client InterNet Computing). pTHINC se basa en nuestro trabajo previo en THINC [1] para proporcionar una arquitectura de cliente ligero para dispositivos móviles de mano. pTHINC virtualiza y redimensiona la pantalla en el servidor para entregar de manera eficiente actualizaciones de pantalla de alta fidelidad a una amplia gama de clientes diferentes, tamaños de pantalla y orientaciones de pantalla, incluidos los modos de visualización en vertical y horizontal. Esto permite a pTHINC proporcionar la misma sesión web persistente en diferentes dispositivos de cliente. Por ejemplo, pTHINC puede proporcionar la misma sesión de navegación web adecuadamente escalada para su visualización en una computadora de escritorio y una PDA, de modo que las mismas cookies, marcadores y otros metadatos estén disponibles continuamente en ambas máquinas simultáneamente. El enfoque de visualización virtual de pTHINC aprovecha la información semántica disponible en los comandos de visualización y el hardware de video del cliente para proporcionar mecanismos de visualización remota más eficientes que son cruciales para admitir aplicaciones web más intensivas en visualización. Dada la limitada resolución de pantalla en las PDA, pTHINC maximiza el uso del espacio de pantalla para la visualización remota al trasladar la funcionalidad de control de la pantalla a los botones de control de PDA fácilmente disponibles, mejorando la usabilidad del sistema. Hemos implementado pTHINC en Windows Mobile y demostrado que funciona de manera transparente con las aplicaciones existentes, sistemas de ventanas y sistemas operativos, y no requiere modificar, recompilar o volver a enlazar el software existente. Hemos evaluado cuantitativamente pTHINC frente a navegadores web PDA locales y otros enfoques de cliente ligero en dispositivos Pocket PC. Nuestros resultados experimentales demuestran que pTHINC ofrece un rendimiento superior en la navegación web y es el único cliente ligero de PDA que soporta de manera efectiva aplicaciones esenciales de ayuda para el navegador, como la reproducción de video. Este documento presenta el diseño e implementación de pTHINC. La sección 2 describe el modelo de uso general y las características de usabilidad de pTHINC. La sección 3 presenta el diseño y la arquitectura del sistema de pTHINC. La sección 4 presenta resultados experimentales que miden el rendimiento de pTHINC en aplicaciones web y lo comparan con navegadores nativos de PDA y otros sistemas de cliente ligero de PDA populares. La sección 5 discute el trabajo relacionado. Finalmente, presentamos algunas observaciones finales. El MODELO DE USO DE pTHINC pTHINC es un sistema de cliente ligero que consiste en una aplicación de visualización de cliente simple que se ejecuta en la PDA y un servidor que se ejecuta en una PC estándar. El servidor aprovecha PCs más potentes para ejecutar navegadores web y otra lógica de aplicaciones. El cliente recibe la entrada del usuario desde el lápiz óptico y el teclado virtual de la PDA y los envía al servidor para pasarlos a las aplicaciones. Las actualizaciones de la pantalla son luego enviadas desde el servidor al cliente para mostrar al usuario. Cuando se inicia el cliente PDA pTHINC, se presenta al usuario una interfaz gráfica simple donde se pueden proporcionar información como la dirección y el puerto del servidor, la información de autenticación del usuario y la configuración de la sesión. pTHINC primero intenta conectarse al servidor y realizar el saludo necesario. Una vez que este proceso haya sido completado, pTHINC presenta al usuario la visualización más reciente de su sesión. Si la sesión no existe, se crea una nueva sesión. Las sesiones existentes pueden continuar sin problemas sin cambios en la configuración de la sesión o del servidor. A diferencia de otros sistemas de cliente ligero, pTHINC proporciona a un usuario un modelo de sesión web persistente en el que un usuario puede iniciar una sesión ejecutando un navegador web y aplicaciones asociadas en el servidor, luego desconectarse de esa sesión y volver a conectarse en cualquier momento. Cuando un usuario se reconecta a la sesión, todas las aplicaciones siguen funcionando desde donde el usuario las dejó, de modo que el usuario puede seguir trabajando como si nunca se hubiera desconectado. La capacidad de desconectarse y reconectarse a una sesión en cualquier momento es un beneficio importante para los usuarios de PDA inalámbricas móviles que pueden tener conectividad de red intermitente. El modelo de sesión web persistente de pTHINCs permite a un usuario reconectarse a una sesión web desde dispositivos distintos al que se inició originalmente la sesión web. Esto proporciona a los usuarios una movilidad fluida entre diferentes dispositivos. Si un usuario pierde su PDA, puede fácilmente usar otra PDA para acceder a su sesión web. Además, pTHINC permite a los usuarios utilizar dispositivos que no son PDA para acceder a sesiones web también. Un usuario puede acceder a la misma sesión web persistente en una PC de escritorio como en una PDA, lo que le permite al usuario utilizar la misma sesión web desde cualquier computadora. El modelo de sesión web persistente de pTHINCs aborda un problema clave encontrado por los usuarios de la web móvil, la falta de un entorno web común en diferentes computadoras. Los navegadores web a menudo almacenan información importante como marcadores, cookies e historial, lo que les permite funcionar de una manera mucho más útil. El problema que ocurre cuando un usuario se mueve entre computadoras es que estos datos, específicos de una instalación de un navegador web, no pueden moverse con el usuario. Además, los navegadores web a menudo necesitan aplicaciones auxiliares para procesar diferentes contenidos multimedia, y esas aplicaciones pueden no estar disponibles de manera consistente en todas las computadoras. pTHINC aborda este problema al permitir que un usuario utilice de forma remota el mismo entorno de navegador web y aplicaciones auxiliares desde cualquier computadora. Como resultado, pTHINC puede proporcionar un entorno de navegación web común y consistente para usuarios móviles en diferentes dispositivos sin requerirles intentar sincronizar repetidamente diferentes entornos de navegación web en múltiples máquinas. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC debe proporcionar mecanismos para admitir diferentes tamaños de pantalla y resoluciones. Con este fin, pTHINC proporciona una función de zoom que permite a un usuario acercar y alejar una pantalla y permite que la pantalla de una sesión web 144 Figura 1: teclas de acceso rápido de pTHINC se redimensione para adaptarse a la pantalla del dispositivo que se está utilizando. Por ejemplo, si el servidor está ejecutando una sesión web a 1024×768 pero el cliente es una PDA con una resolución de pantalla de 640×480, pTHINC redimensionará la pantalla del escritorio para que se ajuste a la pantalla más pequeña de la PDA. pTHINC proporciona al usuario de la PDA la opción de aumentar el tamaño de la pantalla haciendo zoom en diferentes partes de la pantalla. Los usuarios suelen estar familiarizados con el diseño general de los sitios web que visitan con frecuencia, y pueden aprovechar esta función de redimensionamiento para navegar mejor por las páginas web. Por ejemplo, un usuario puede alejarse de la pantalla para ver todo el contenido de la página y navegar por los hipervínculos, luego acercarse a una región de interés para obtener una mejor vista. Para permitir que un usuario acceda a la misma sesión web en diferentes dispositivos, pTHINC también debe proporcionar mecanismos para admitir diferentes orientaciones de pantalla. En un entorno de escritorio, los usuarios suelen estar acostumbrados a tener las pantallas presentadas en modo horizontal, donde el ancho de la pantalla es mayor que su altura. Sin embargo, en un entorno de PDA, la elección no siempre es obvia. Algunos usuarios pueden preferir tener la pantalla en modo retrato, ya que es más fácil sostener el dispositivo en sus manos, mientras que otros pueden preferir el modo paisaje para minimizar la cantidad de desplazamiento lateral necesario para ver una página web. Para adaptarse a las preferencias de los usuarios de PDA, pTHINC proporciona una función de orientación que le permite rotar la pantalla de forma fluida entre el modo horizontal y vertical. El modo de paisaje es particularmente útil para los usuarios de pTHINC que acceden con frecuencia a sus sesiones web tanto en dispositivos de escritorio como en PDA, proporcionando a esos usuarios el mismo ajuste de paisaje familiar en diferentes dispositivos. Dado que el espacio de pantalla es un recurso relativamente escaso en las PDAs, pTHINC se ejecuta en modo de pantalla completa para maximizar el área de pantalla disponible para mostrar la sesión web. Para poder utilizar toda la pantalla en la PDA y aún así permitir al usuario controlar e interactuar con ella, pTHINC reutiliza los botones de acceso directo típicos que se encuentran en las PDAs para realizar todas las funciones de control disponibles para el usuario. Los botones utilizados por pTHINC no requieren ningún cambio en el entorno del sistema operativo; simplemente son interceptados por la aplicación cliente de pTHINC cuando se presionan. La Figura 1 muestra cómo pTHINC utiliza los botones de acceso directo para proporcionar una navegación sencilla y mejorar la experiencia del usuario en general. Estos botones no son específicos del dispositivo, y el diseño mostrado es común en dispositivos PocketPC ampliamente utilizados. pTHINC proporciona seis accesos directos para apoyar su modelo de uso: • Rotar pantalla: El botón de grabación en el borde izquierdo se utiliza para rotar la pantalla entre modo retrato y modo paisaje cada vez que se presiona el botón. • Alejar: El botón más a la izquierda en la parte inferior delantera se utiliza para alejar la visualización de la sesión web proporcionando una vista general de la sesión web. • Acercar: El segundo botón más a la izquierda en la parte inferior delantera se utiliza para acercar la visualización de la sesión web para ver más claramente el contenido de interés. • Desplazamiento direccional: El botón central en la parte inferior delantera se utiliza para desplazarse alrededor de la visualización utilizando un solo botón de control de una manera que ya es familiar para los usuarios de PDA. Esta función es particularmente útil cuando el usuario ha ampliado una región de la pantalla de tal manera que solo una parte de la pantalla es visible en la pantalla. • Mostrar/Ocultar Teclado: El segundo botón más a la derecha en la parte inferior frontal se utiliza para mostrar un teclado virtual dibujado en la pantalla para dispositivos que no tienen teclado físico. El teclado virtual utiliza mecanismos estándar del sistema operativo de PDA, proporcionando portabilidad entre diferentes entornos de PDA. • Cerrar sesión: El botón más a la derecha en la parte inferior frontal se utiliza para desconectarse de la sesión de pTHINC. pTHINC utiliza la pantalla táctil de la PDA, el lápiz óptico y mecanismos estándar de interfaz de usuario para proporcionar una metáfora de punto y clic de la interfaz de usuario similar a la proporcionada por el ratón en un entorno de computación de escritorio tradicional. pTHINC no utiliza un cursor ya que los entornos de PDA no lo proporcionan. En cambio, un usuario puede usar el lápiz táctil para tocar diferentes secciones de la pantalla táctil y señalar el enfoque de entrada. Un toque único en la pantalla táctil genera un evento de clic de ratón correspondiente. Un doble toque en la pantalla táctil genera un evento de doble clic del ratón correspondiente. pTHINC proporciona emulación de ratón de dos botones al usar el lápiz óptico para presionar la pantalla durante un segundo y generar un clic derecho del ratón. Todas estas acciones son idénticas a la forma en que los usuarios ya interactúan con las aplicaciones de PDA en el entorno común de PocketPC. En la navegación web, los usuarios pueden hacer clic en hipervínculos y enfocarse en cuadros de entrada simplemente tocando el área de interés deseada en la pantalla. A diferencia de los navegadores web PDA locales y otras aplicaciones PDA, pTHINC aprovecha metáforas de interfaz de usuario de escritorio más potentes para permitir a los usuarios manipular múltiples ventanas de aplicación abiertas en lugar de estar limitados a una sola ventana de aplicación en un momento dado. Esto proporciona una mayor flexibilidad de navegación más allá de lo que está actualmente disponible en los dispositivos PDA. Similar a un entorno de escritorio, las ventanas del navegador y otras ventanas de aplicaciones pueden ser movidas al presionar y arrastrar el lápiz óptico de manera similar a un ratón. 3. La arquitectura del sistema pTHINC se basa en la arquitectura de visualización remota THINC para proporcionar un sistema de cliente ligero para PDAs. pTHINC virtualiza la visualización en el servidor aprovechando la capa de abstracción del dispositivo de video, que se encuentra por debajo del servidor de ventanas y por encima del framebuffer. Este es un nivel de dispositivo bien definido y de bajo nivel que depende del dispositivo y expone el hardware de video al sistema de visualización. pTHINC logra esto a través de un controlador de pantalla virtual simple que intercepta comandos de dibujo, los empaqueta y los envía a través de la red. Mientras que otros enfoques de cliente ligero interceptan comandos de visualización en otras capas del subsistema de visualización, el enfoque de virtualización de pantalla de pTHINC proporciona algunos beneficios clave para admitir eficientemente a los clientes de PDA. Por ejemplo, interceptar comandos de visualización en una capa superior entre aplicaciones y el sistema de ventanas, como se hace en X [17], requiere replicar y ejecutar una gran cantidad de funcionalidades en la PDA que tradicionalmente son proporcionadas por el sistema de ventanas de escritorio. Dada la magnitud y complejidad de los sistemas de ventanas tradicionales, intentar replicar esta funcionalidad en el entorno restringido de una PDA habría resultado ser una tarea desafiante, y quizás inviable. Además, las aplicaciones y el sistema de ventanas a menudo requieren una sincronización precisa en su funcionamiento, y imponer una red inalámbrica entre ellos al ejecutar las aplicaciones en el servidor y el sistema de ventanas en el cliente degradaría significativamente el rendimiento. Por otro lado, interceptar en una capa inferior extrayendo píxeles del framebuffer a medida que se renderizan proporciona una solución simple que requiere muy poca funcionalidad en el cliente de PDA, pero también puede resultar en un rendimiento degradado. La razón es que para cuando el servidor de visualización remota intenta enviar actualizaciones de pantalla, ha perdido toda la información semántica que podría haberle ayudado a codificar de manera eficiente, y debe recurrir a utilizar un mecanismo de codificación genérico y costoso en el servidor, así como un mecanismo de decodificación potencialmente costoso en el cliente de PDA limitado. A diferencia de los enfoques de intercepción de alto y bajo nivel, el enfoque de pTHINCs de interceptar en el controlador del dispositivo proporciona un equilibrio efectivo entre la simplicidad del cliente y del servidor, y la capacidad de codificar y decodificar de manera eficiente las actualizaciones de pantalla. Al utilizar un enfoque de visualización virtual de bajo nivel, pTHINC puede codificar de manera eficiente los comandos de visualización de la aplicación utilizando solo un pequeño conjunto de comandos de bajo nivel. En un entorno de PDA, este conjunto de comandos proporciona un componente crucial para mantener la simplicidad del cliente en el entorno de PDA con recursos limitados. Los comandos de visualización se muestran en la Tabla 1 y funcionan de la siguiente manera. COPY instruye al cliente a copiar una región de la pantalla desde su framebuffer local a otra ubicación. Este comando mejora la experiencia del usuario al acelerar el desplazamiento y el movimiento de ventanas opacas sin necesidad de reenviar datos de pantalla desde el servidor. SFILL, PFILL y BITMAP son comandos que pintan una región de tamaño fijo en la pantalla. Son útiles para acelerar la visualización de fondos de ventanas sólidas, patrones de escritorio, fondos de páginas web, dibujo de texto y ciertas operaciones en programas de manipulación de gráficos. SFILL llena una región considerable en la pantalla con un solo color. PFILL replica una baldosa sobre una región de la pantalla. BITMAP realiza un relleno utilizando un mapa de bits de unos y ceros como un estipulado para aplicar un color de primer plano y de fondo. Finalmente, RAW se utiliza para transmitir datos de píxeles no codificados que se mostrarán textualmente en una región de la pantalla. Este comando se invoca como último recurso si el servidor no puede emplear ningún otro comando, y es el único comando que puede ser comprimido para mitigar su impacto en el ancho de banda de la red. pTHINC entrega sus comandos utilizando un mecanismo de actualización de servidor-push no bloqueante, donde tan pronto como se generan actualizaciones de pantalla en el servidor, se envían al cliente. Los clientes no están obligados a solicitar explícitamente actualizaciones de pantalla, minimizando así el impacto que la típica variabilidad de la latencia de la red inalámbrica puede tener en la capacidad de respuesta del sistema. Teniendo en cuenta que los recursos Descripción de Comando COPY Copiar un área de búfer de fotogramas en coordenadas especificadas SFILL Rellenar un área con un valor de color de píxel dado PFILL Azulejar un área con un patrón de píxeles dado BITMAP Rellenar una región usando un patrón de bits RAW Mostrar datos de píxeles en bruto en una ubicación dada Tabla 1: Comandos de visualización del protocolo pTHINC. Las PDAs y las redes inalámbricas limitadas pueden no ser capaces de mantenerse al día con un servidor rápido que genera una gran cantidad de actualizaciones, pTHINC es capaz de fusionar, recortar y descartar actualizaciones automáticamente si se produce pérdida o congestión de red, o si el cliente no puede mantenerse al día con la velocidad de las actualizaciones. Este tipo de comportamiento resulta crucial en un entorno de navegación web, donde por ejemplo, una página puede ser redibujada varias veces mientras se renderiza al vuelo por el navegador. En este caso, la PDA solo recibirá y mostrará el resultado final, que claramente es todo lo que al usuario le interesa ver. pTHINC prioriza la entrega de actualizaciones a la PDA utilizando un programador de actualizaciones preemptivo de Tamaño Restante Más Corto Primero (SRSF). SRSF es análogo a la programación de Tiempo de Procesamiento Restante más Corto, la cual se sabe que es óptima para minimizar el tiempo medio de respuesta en un sistema interactivo. En un entorno de navegación web, los trabajos cortos están asociados con el texto y los componentes básicos de diseño de página, como el fondo de las páginas, que son contenido web crítico para el usuario. Por otro lado, los trabajos grandes suelen ser elementos de embellecimiento de menor prioridad, o, incluso peor, banners y anuncios de página web, los cuales tienen un valor cuestionable para el usuario mientras navega por la página. Usando SRSF, pTHINC puede maximizar la utilización del ancho de banda relativamente escaso disponible en la conexión inalámbrica entre la PDA y el servidor. 3.1 Gestión de la Pantalla Para permitir a los usuarios acceder con la misma facilidad a su navegador web y aplicaciones auxiliares desde una computadora de escritorio en casa como desde una PDA mientras están en movimiento, pTHINC proporciona un mecanismo de redimensionamiento para hacer zoom dentro y fuera de la pantalla de una sesión web. El redimensionamiento de pTHINC es completamente compatible con el servidor, no con el cliente. El servidor vuelve a muestrear las actualizaciones para que se ajusten al área de visualización de las PDAs antes de ser transmitidas por la red. pTHINC utiliza el algoritmo de remuestreo de Fants para redimensionar las actualizaciones de píxeles. Esto proporciona actualizaciones suaves y visualmente agradables con un antialiasing adecuado y solo requiere modestos recursos computacionales. El enfoque de redimensionamiento de pTHINCs tiene varias ventajas. Primero, permite al PDA aprovechar la vastamente superior potencia computacional del servidor para utilizar algoritmos de re-muestreo de alta calidad y producir actualizaciones de mayor calidad para que el PDA las muestre. Segundo, cambiar el tamaño de la pantalla no se traduce en requisitos adicionales de recursos para la PDA, ya que no necesita realizar ningún trabajo adicional. Finalmente, se logra una mejor utilización de la red inalámbrica ya que al reescalar las actualizaciones se reducen sus requisitos de ancho de banda. Para permitir a los usuarios orientar sus pantallas en una PDA y así proporcionar una experiencia visual que se ajuste mejor a las preferencias del usuario y al diseño de páginas web o aplicaciones, pTHINC proporciona un mecanismo de rotación de pantalla para alternar entre los modos de visualización horizontal y vertical. La rotación de pantalla de pTHINC es completamente compatible con el cliente, no con el servidor. pTHINC no recalcula explícitamente la geometría de las actualizaciones de pantalla para realizar la rotación, lo cual sería computacionalmente costoso. En cambio, pTHINC simplemente cambia la forma en que los datos se copian en el framebuffer para cambiar entre los modos de visualización. Cuando está en modo retrato, los datos se copian a lo largo de las filas del framebuffer de izquierda a derecha. Cuando se encuentra en modo horizontal, los datos se copian a lo largo de las columnas del framebuffer de arriba hacia abajo. Estas técnicas muy rápidas y simples reemplazan un conjunto de operaciones de copia por otro y no imponen ningún sobrecosto de rendimiento. pTHINC proporciona su propio mecanismo de rotación para soportar una amplia gama de dispositivos sin imponer requisitos adicionales de funciones en la PDA. Aunque algunos dispositivos PDA más nuevos ofrecen soporte nativo para diferentes orientaciones, este mecanismo no es dinámico y requiere que el usuario rote toda la interfaz de usuario de la PDA antes de iniciar el cliente pTHINC. Windows Mobile proporciona mecanismos de API nativos para que las aplicaciones de PDA puedan rotar su interfaz de usuario sobre la marcha, pero estos mecanismos ofrecen un rendimiento deficiente y una calidad de visualización baja, ya que la rotación se realiza de manera ingenua y no es completamente precisa. 3.2 Reproducción de video El video se ha convertido gradualmente en una parte integral de la World Wide Web, y su presencia solo seguirá aumentando. Los sitios web de hoy en día no solo utilizan gráficos animados y flash para presentar el contenido web de manera atractiva, sino que también utilizan video en streaming para enriquecer la interfaz web. Los usuarios pueden ver noticias pregrabadas y en vivo en CNN, ver los momentos más destacados deportivos en ESPN e incluso buscar a través de una gran colección de videos en Google Video. Para permitir que las aplicaciones proporcionen una reproducción de video eficiente, se han creado interfaces en los sistemas de visualización que permiten a los controladores de dispositivos de video exponer sus capacidades de hardware a las aplicaciones. pTHINC aprovecha estas interfaces y su enfoque de controlador de dispositivo virtual para proporcionar un puente virtual entre el cliente remoto y su hardware y las aplicaciones, y admitir de manera transparente la reproducción de video. Sobre esta arquitectura, pTHINC utiliza el espacio de color YUV para codificar el contenido de video, lo cual proporciona una serie de beneficios. Primero, se ha vuelto cada vez más común que el hardware de video de las PDA admita nativamente YUV y pueda realizar la conversión del espacio de color y el escalado automáticamente. Como resultado, pTHINC puede proporcionar reproducción de video a pantalla completa sin afectar el rendimiento. Segundo, el uso de YUV permite una representación más eficiente de los datos RGB sin pérdida de calidad, aprovechando la capacidad de los ojos humanos para distinguir mejor las diferencias en brillo que en color. En particular, pTHINC utiliza el formato YV12, que permite codificar datos de color RGB completo utilizando solo 12 bits por píxel. Tercero, los datos YUV se producen como uno de los últimos pasos del proceso de decodificación de la mayoría de los códecs de video, lo que permite a pTHINC proporcionar la reproducción de video de una manera independiente del formato. Finalmente, aunque el hardware de video de las PDAs no pueda acelerar la reproducción, el proceso de conversión de espacio de color es lo suficientemente simple como para no imponer requisitos poco razonables en la PDA. Un ejemplo más concreto de cómo pTHINC aprovecha el hardware de video PDA para admitir la reproducción de video se puede ver en nuestra implementación de prototipo en la popular PDA Dell Axim X51v, que está equipada con el acelerador multimedia Intel 2700G. En este caso, pTHINC crea un búfer fuera de pantalla en la memoria de video y escribe y lee desde esta región de memoria datos en formato YV12. Cuando llega un nuevo fotograma de video, los datos de video se copian desde el búfer a una superficie superpuesta en la memoria de video, que es independiente de la superficie normal utilizada para el dibujo tradicional. A medida que los datos YV12 se colocan en la superposición, el acelerador de Intel realiza automáticamente la conversión de espacio de color y el escalado. Al utilizar la superficie de superposición, pTHINC no necesita volver a dibujar la pantalla una vez que la reproducción de video ha terminado, ya que la superficie superpuesta no se ve afectada. Además, las regiones de superposición específicas pueden ser manipuladas aprovechando el hardware de video, por ejemplo, para realizar interpolación lineal de hardware y suavizar el fotograma para mostrarlo a pantalla completa, y para realizar rotación automática cuando el cliente se ejecuta en modo horizontal. 4. RESULTADOS EXPERIMENTALES Hemos implementado un prototipo de pTHINC que ejecuta el cliente en dispositivos Pocket PC basados en Windows Mobile ampliamente utilizados y el servidor en sistemas operativos tanto Windows como Linux. Para demostrar su eficacia en el soporte de aplicaciones web inalámbricas móviles, hemos medido su rendimiento en aplicaciones web. Presentamos resultados experimentales sobre diferentes dispositivos PDA para dos aplicaciones web populares, navegar por páginas web y reproducir contenido de video desde la web. Comparamos pTHINC con aplicaciones web nativas que se ejecutan localmente en la PDA para demostrar la mejora que pTHINC puede proporcionar sobre el enfoque tradicional de cliente pesado. También comparamos pTHINC con tres de los clientes ligeros más utilizados que pueden ejecutarse en PDAs, Citrix Meta-FrameXP [2], Microsoft Remote Desktop [3] y VNC (Virtual Network Computing) [16]. Seguimos la práctica común y nos referimos a Citrix MetaFrameXP y Microsoft Remote Desktop por sus respectivos protocolos de visualización remota, ICA (Independent Computing Architecture) y RDP (Remote Desktop Protocol). 4.1 Plataforma de Pruebas Experimental Realizamos nuestros experimentos web utilizando dos PDA Pocket PC inalámbricas diferentes en un entorno de prueba de red Wi-Fi aislado, como se muestra en la Figura 2. El banco de pruebas consistía en dos dispositivos cliente PDA, un monitor de paquetes, un servidor de cliente ligero y un servidor web. Excepto por las PDAs, todas las demás máquinas eran servidores IBM Netfinity 4500R con procesadores duales Intel PIII de 933 MHz y 512 MB de RAM, y estaban conectadas en una red FastEthernet de 100 Mbps conmutada. El servidor web utilizado fue Apache 1.3.27, el emulador de red fue NISTNet 2.0.12 y el monitor de paquetes fue Ethereal 0.10.9. Los clientes de PDA se conectaron al banco de pruebas a través de un punto de acceso inalámbrico Lucent Orinoco AP-2000 802.11b. Todos los experimentos utilizando la red inalámbrica se llevaron a cabo a una distancia de diez pies del punto de acceso, por lo que consideramos que la cantidad de pérdida de paquetes era insignificante en nuestros experimentos. Se utilizaron dos PDA Pocket PC para proporcionar resultados en modelos antiguos y menos potentes, así como en modelos más nuevos de mayor rendimiento. El modelo anterior era un Dell Axim X5 con 147 Cliente 1024×768 640×480 Profundidad Cambio de tamaño Clip RDP no sí 8 bits no sí VNC sí sí 16 bits no no ICA sí sí 16 bits sí no pTHINC sí sí 24 bits sí no Tabla 2: Configuración del banco de pruebas de cliente ligero con un CPU Intel XScale PXA255 de 400 MHz y 64 MB de RAM ejecutando Windows Mobile 2003 y una tarjeta Dell TrueMobile 1180 de 2.4 GHz CompactFlash para redes inalámbricas. El modelo más nuevo era un Dell Axim X51v con un procesador Intel XScale XPA270 de 624 MHz y 64 MB de RAM ejecutando Windows Mobile 5.0 y con red inalámbrica 802.11b integrada. El X51v tiene un acelerador multimedia Intel 2700G con 16MB de memoria de video. Ambas PDAs son capaces de mostrar colores de 16 bits pero tienen diferentes tamaños de pantalla y resoluciones de visualización. El X5 tiene una pantalla diagonal de 3.5 pulgadas con una resolución de 240×320. El X51v tiene una pantalla diagonal de 3.7 pulgadas con una resolución de 480×640. Los cuatro clientes ligeros que utilizamos admiten diferentes niveles de calidad de visualización, como se resume en la Tabla 2. El cliente de RDP solo admite una resolución de pantalla fija de 640×480 en el servidor con una profundidad de color de 8 bits, mientras que otras plataformas ofrecen niveles más altos de calidad de visualización. Para proporcionar una comparación justa en todas las plataformas, realizamos nuestros experimentos con sesiones de cliente ligero configuradas para dos posibles resoluciones, 1024×768 y 640×480. Tanto ICA como VNC se configuraron para usar la resolución nativa de PDA con una profundidad de color de 16 bits. El prototipo actual de pTHINC utiliza color de 24 bits directamente y el cliente reduce la resolución de las actualizaciones al nivel de color de 16 bits disponible en la PDA. RDP se configuró utilizando solo una profundidad de color de 8 bits ya que no admite ninguna profundidad de color mejor. Dado que tanto pTHINC como ICA ofrecen la capacidad de ver la pantalla redimensionada para ajustarse a la pantalla, medimos ambos clientes con y sin la pantalla redimensionada para ajustarse a la pantalla del PDA. Cada cliente ligero fue probado utilizando el modo de paisaje en lugar del modo retrato cuando estaba disponible. Todos los sistemas que se ejecutan en el X51v podrían funcionar en modo horizontal porque el hardware proporciona una función de modo horizontal. Sin embargo, el X5 no proporciona esta funcionalidad. Solo pTHINC admite directamente el modo paisaje, por lo que era el único sistema que podía ejecutarse en modo paisaje tanto en el X5 como en el X51v. Para proporcionar una comparación justa, también estandarizamos en hardware y sistemas operativos comunes siempre que sea posible. Todos los sistemas utilizaron el servidor Netfinity como servidor de cliente ligero. Para los dos sistemas diseñados para servidores Windows, ICA y RDP, ejecutamos Windows Server 2003 en el servidor. Para los otros sistemas que admiten servidores basados en X, ejecutamos la distribución Debian Linux Inestable con el kernel Linux 2.6.10 en el servidor. Utilizamos las últimas versiones de servidores de cliente ligero disponibles en cada plataforma en el momento de nuestros experimentos, a saber, Citrix MetaFrame XP Server para Windows Feature Release 3, Microsoft Remote Desktop integrado en Windows XP y Windows 2003 utilizando RDP 5.2, y VNC 4.0.4.2. Para los benchmarks de aplicaciones, utilizamos dos benchmarks de aplicaciones web para nuestros experimentos basados en dos escenarios de aplicación comunes, navegación por páginas web y reproducción de contenido de video desde la web. Dado que muchos sistemas de cliente ligero, incluidos dos de los probados, son cerrados y propietarios, medimos su rendimiento de manera no invasiva capturando el tráfico de red con un monitor de paquetes y utilizando una variante de benchmarking en cámara lenta [13] previamente desarrollada para medir el rendimiento de clientes ligeros en entornos de PDA [10]. Esta metodología de medición tiene en cuenta tanto el desacoplamiento de la visualización que puede ocurrir entre el cliente y el servidor en sistemas de cliente ligero, como el tiempo de procesamiento del cliente, que puede ser significativo en el caso de las PDAs. Para medir el rendimiento de la navegación web, utilizamos un benchmark de navegación web basado en la Prueba de Carga de Páginas de Texto Web del conjunto de benchmarks Ziff-Davis i-Bench [7]. El punto de referencia consiste en la carga controlada de 55 páginas desde el servidor web mediante JavaScript. Las páginas contienen tanto texto como gráficos, con páginas de diferentes tamaños. Los gráficos son imágenes incrustadas en formatos GIF y JPEG. El benchmark original i-Bench fue modificado para pruebas de rendimiento en cámara lenta al introducir retrasos de varios segundos entre las páginas utilizando JavaScript. Luego se realizaron dos pruebas, una en la que se agregaron retrasos entre cada página, y otra en la que las páginas se cargaron continuamente sin esperar a que se mostraran en el cliente. En la primera prueba, los retrasos se ajustaron lo suficiente en cada caso para garantizar que cada página pudiera ser recibida y mostrada en el cliente por completo sin solapamiento temporal en la transferencia de los datos pertenecientes a dos páginas consecutivas. Utilizamos el monitor de paquetes para registrar el tráfico de paquetes para cada ejecución de la prueba de referencia, luego utilizamos las marcas de tiempo del primer y último paquete en la traza para obtener nuestras medidas de latencia [10]. El monitor de paquetes también registró la cantidad de datos transmitidos entre el cliente y el servidor. La proporción entre el tráfico de datos en las dos pruebas produce un factor de escala. Este factor de escala muestra la pérdida de datos entre el servidor y el cliente debido a la incapacidad del cliente para procesar los datos lo suficientemente rápido. El producto del factor de escala con la medición de latencia produce la verdadera latencia teniendo en cuenta el tiempo de procesamiento del cliente. Para ejecutar la prueba de navegación web, utilizamos Mozilla Firefox 1.0.4 en el servidor de cliente ligero para los clientes ligeros, y Windows Internet Explorer (IE) Mobile para 2003 y Mobile para 5.0 para los navegadores nativos en las PDAs X5 y X51v, respectivamente. En todos los casos, el navegador web utilizado se ajustó para ocupar toda la región de visualización disponible. Para medir el rendimiento de reproducción de video, utilizamos un banco de pruebas de video que consistía en reproducir un clip de video MPEG-1 de 34.75 segundos que contenía una mezcla de noticias y programación de entretenimiento a resolución de pantalla completa. El videoclip tiene un tamaño de 5.11 MB y consta de 834 cuadros de píxeles de 352x240 con una velocidad de cuadro ideal de 24 cuadros por segundo. Medimos el rendimiento del video utilizando pruebas de referencia en cámara lenta al monitorear el tráfico de paquetes resultante a dos velocidades de reproducción, 1 cuadro por segundo (fps) y 24 fps, y comparando los resultados para determinar los retrasos en la reproducción y las caídas de cuadros que ocurren a 24 fps para medir la calidad general del video [13]. Por ejemplo, el 100% de calidad significa que todos los fotogramas del video se reprodujeron a velocidad en tiempo real. Por otro lado, una calidad del 50% podría significar que se eliminó la mitad de los datos del video, o que el clip tardó el doble en reproducirse a pesar de que se mostró toda la información del video. Para ejecutar la prueba de rendimiento de video, utilizamos Windows Media Player 9 para servidores de clientes ligeros basados en Windows, MPlayer 1.0 pre 6 para servidores de clientes ligeros basados en X, y Windows Media Player 9 Mobile y 10 Mobile para los reproductores de video nativos que se ejecutan localmente en las PDAs X5 y X51v, respectivamente. En todos los casos, el reproductor de video utilizado se dimensionó para llenar toda la región de visualización disponible. Las Figuras 3 y 4 muestran los resultados de ejecutar la prueba de navegación por la web. Para cada plataforma, mostramos resultados de hasta cuatro configuraciones diferentes, dos en el X5 y dos en el X51v, dependiendo de si cada configuración era compatible. Sin embargo, no todas las plataformas podrían admitir todas las configuraciones. El navegador local solo se ejecuta a la resolución de pantalla de la PDA, 480×680 o menos para el X51v y el X5. RDP solo funciona a 640×480. Ninguna plataforma podía soportar una resolución de pantalla de 1024×768. ICA solo funcionaba en el X5 y no podía ejecutarse en el X51v porque no era compatible con Windows Mobile 5. La Figura 3 muestra la latencia promedio por página web para cada plataforma. pTHINC proporciona la latencia promedio más baja en la navegación web en ambas PDAs. En el X5, pTHINC funciona hasta 70 veces mejor que otros sistemas de cliente ligero y 8 veces mejor que el navegador local. En el X51v, pTHINC funciona hasta 80 veces mejor que otros sistemas de cliente ligero y 7 veces mejor que el navegador nativo. De hecho, todos los clientes ligeros excepto VNC superan al navegador local de PDA, demostrando los beneficios de rendimiento del enfoque de cliente ligero. Los estudios de usabilidad han demostrado que las páginas web deben tardar menos de un segundo en descargarse para que el usuario experimente una navegación web ininterrumpida [14]. Las mediciones muestran que solo los clientes delgados ofrecen latencias de página web de menos de un segundo. Por el contrario, el navegador local requiere más de 3 segundos en promedio por página web. El navegador local funciona peor ya que necesita ejecutar un navegador web más limitado para procesar el HTML, JavaScript y realizar todo el renderizado utilizando las capacidades limitadas de la PDA. Los clientes ligeros pueden aprovecharse de hardware de servidor más rápido y un navegador web altamente optimizado para procesar el contenido web mucho más rápido. La Figura 3 muestra que RDP es la plataforma más rápida después de pTHINC. Sin embargo, RDP solo puede ejecutarse a una resolución fija de 640×480 y una profundidad de color de 8 bits. Además, RDP también recorta la pantalla al tamaño de la pantalla de la PDA para no tener que enviar actualizaciones que no son visibles en la pantalla de la PDA. Esto proporciona un beneficio de rendimiento siempre y cuando el resto del contenido web no se visualice, pero degrada el rendimiento cuando un usuario desplaza la pantalla para ver otro contenido web. RDP logra su rendimiento con una calidad de visualización significativamente inferior en comparación con otros clientes ligeros y con recortes adicionales en la visualización que no son utilizados por otros sistemas. Como resultado, el rendimiento de RDP por sí solo no proporciona una comparación completa con las otras plataformas. Por el contrario, pTHINC ofrece el mejor rendimiento al mismo tiempo que proporciona una calidad de visualización igual o mejor que los otros sistemas. Dado que VNC e ICA ofrecen una calidad de visualización similar a pTHINC, estos sistemas proporcionan una comparación más justa de diferentes enfoques de cliente ligero. ICA funciona peor en parte porque utiliza primitivas de visualización de nivel superior que requieren costos adicionales de procesamiento por parte del cliente. VNC funciona peor en parte porque pierde datos de visualización debido a su mecanismo de entrega de cliente-pull y debido a los costos de procesamiento del cliente en descomprimir primitivas de píxeles crudos. En ambos casos, su rendimiento se vio limitado en parte porque sus clientes de PDA no podían mantenerse al ritmo al que se mostraban las páginas web. La Figura 3 también muestra las medidas para aquellos clientes ligeros que admiten redimensionar la pantalla para ajustarse a la pantalla de la PDA, a saber, ICA y pTHINC. El redimensionamiento requiere un procesamiento adicional, lo que resulta en latencias promedio más lentas de las páginas web. Las mediciones muestran que el retraso adicional incurrido por ICA al cambiar el tamaño es mucho más sustancial que para pTHINC. ICA realiza redimensionamiento en el cliente PDA más lento. Por el contrario, pTHINC aprovecha el servidor más potente para redimensionar, reduciendo la diferencia de rendimiento entre redimensionar y no redimensionar. A diferencia de ICA, pTHINC es capaz de proporcionar latencias de descarga de páginas web en menos de un segundo en ambos casos. La Figura 4 muestra los datos transferidos en KB por página al ejecutar la versión de cámara lenta de las pruebas. Todas las plataformas tienen requisitos modestos de transferencia de datos de aproximadamente 100 KB por página o menos. Esto está bien dentro de la capacidad de ancho de banda de las redes Wi-Fi. Las mediciones muestran que el navegador local no transfiere la menor cantidad de datos. Esto es sorprendente ya que HTML suele considerarse una representación muy compacta del contenido. En cambio, RDP es la plataforma más eficiente en ancho de banda, en gran parte debido a que utiliza solo una profundidad de color de 8 bits y recorte de pantalla para no transferir la página web completa al cliente. En general, pTHINC tiene los mayores requisitos de datos, ligeramente más que VNC. Esto se debe en gran medida a la falta de soporte nativo de los prototipos actuales de pTHINC para datos de color de 16 bits en el protocolo de comunicación. Sin embargo, este resultado también destaca el rendimiento de pTHINCs, ya que es más rápido que todos los demás sistemas incluso al transferir más datos. Además, dado que los modelos más recientes de PDA admiten colores completos de 24 bits, estos resultados indican que pTHINC seguirá proporcionando un buen rendimiento en la navegación web. Dado que la usabilidad y la calidad de la pantalla son tan importantes como el rendimiento, las Figuras 5 a 8 comparan capturas de pantalla de los diferentes clientes ligeros al mostrar una página web, en este caso del popular sitio de noticias de la BBC. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo paisaje. Figura 5: Captura de pantalla del navegador: RDP 640x480. Figura 6: Captura de pantalla del navegador: VNC 1024x768. Figura 7: Captura de pantalla del navegador: ICA redimensionado 1024x768. Figura 8: Captura de pantalla del navegador: pTHINC redimensionado 1024x768 utilizando la configuración de resolución de pantalla máxima para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Si bien las capturas de pantalla carecen de la fidelidad visual de la pantalla real del dispositivo, se pueden hacer varias observaciones. La Figura 5 muestra que RDP no admite el modo de pantalla completa y desperdicia mucho espacio en pantalla para controles y elementos de la interfaz de usuario, lo que obliga al usuario a desplazarse para acceder a todo el contenido de la sesión de navegación web. La Figura 6 muestra que VNC aprovecha mejor el espacio de la pantalla y ofrece una mejor calidad de visualización, pero aún obliga al usuario a desplazarse para ver la página web debido a la falta de soporte para redimensionar. La Figura 7 muestra la capacidad de ICA para mostrar la página web completa dada su soporte de redimensionamiento, pero su falta de capacidad en modo paisaje y su algoritmo de redimensionamiento deficiente comprometen significativamente la calidad de visualización. Por el contrario, la Figura 8 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de pantalla completa de alta calidad del ancho completo de la página web. pTHINC maximiza toda la región de visualización moviendo todos los controles a los botones de la PDA. Además, pTHINC aprovecha la potencia computacional del servidor para utilizar un algoritmo de redimensionamiento de alta calidad y ajustar la pantalla al tamaño de la PDA sin un sobrecoste significativo. Las figuras 9 y 10 muestran los resultados de ejecutar la prueba de reproducción de video. Para cada plataforma excepto ICA, mostramos resultados para una configuración X5 y X51v. ICA no pudo ejecutarse en el X51v como se mencionó anteriormente. Las mediciones se realizaron utilizando configuraciones que reflejaban el entorno desde el cual un usuario tendría que acceder a una sesión web tanto desde una computadora de escritorio como desde una PDA. Por lo tanto, se utilizó una resolución de pantalla del servidor de 1024×768 siempre que fuera posible y el video se mostró a pantalla completa. La resolución de pantalla de RDP se limitaba a 640×480, como se mencionó anteriormente. Dado que ver toda la pantalla del video es la única opción realmente utilizable, redimensionamos la pantalla para que se ajustara a la pantalla de la PDA en aquellas plataformas que admitían esta función, a saber, ICA y pTHINC. La Figura 9 muestra la calidad de video para cada plataforma. pTHINC es el único cliente ligero capaz de proporcionar una calidad de reproducción de video perfecta, similar al reproductor de video nativo de PDA. Todos los demás clientes ligeros ofrecen una calidad de video muy pobre. Con la excepción de RDP en el X51v que proporcionó una calidad de video inaceptable del 35%, ninguno de los otros sistemas pudo siquiera alcanzar el 10% de calidad de video. VNC e ICA tienen la peor calidad al 8% en el dispositivo X5. El soporte de video nativo de pTHINCs permite un rendimiento de video superior, mientras que otros clientes ligeros sufren de su incapacidad para distinguir el video de las actualizaciones normales de la pantalla. Intentan aplicar algoritmos de compresión ineficaces y costosos en los datos de video y no pueden mantenerse al día con la corriente de actualizaciones generadas, lo que resulta en cuadros omitidos o largos tiempos de reproducción. VNC se ve aún más afectado por su modelo de actualización de cliente-pull porque los fotogramas de video se generan más rápido que la velocidad a la que el cliente puede procesar y enviar solicitudes al servidor para obtener la siguiente actualización de pantalla. La Figura 10 muestra los datos totales transferidos durante la reproducción de video a pantalla completa para cada sistema. El reproductor nativo es la plataforma más eficiente en ancho de banda, enviando menos de 6 MB de datos, lo que corresponde a aproximadamente 1.2 Mbps de ancho de banda. La calidad de video al 100% de pTHINCs requiere alrededor de 25 MB de datos, lo que corresponde a un uso de ancho de banda de menos de 6 Mbps. Mientras que los otros clientes ligeros envían menos datos que THINC, lo hacen porque están eliminando datos de video, lo que resulta en una calidad de video degradada. Las figuras 11 a 14 comparan capturas de pantalla de los distintos clientes ligeros al mostrar el videoclip. Excepto por ICA, todas las capturas de pantalla fueron tomadas en el X51v en modo horizontal utilizando la configuración de resolución máxima de pantalla para cada plataforma dada en la Tabla 2. La captura de pantalla de ICA se tomó en el X5 ya que ICA no se ejecuta en el X51v. Las figuras 11 y 12 muestran que RDP y VNC no pueden mostrar el cuadro completo del video en la pantalla de la PDA. RDP desperdicia espacio en pantalla para los elementos de la interfaz de usuario y VNC solo muestra la esquina superior del marco de video en la pantalla. La Figura 13 muestra que el ICA proporciona redimensionamiento para mostrar todo el fotograma del video, pero no redimensiona proporcionalmente los datos del video, lo que resulta en artefactos de visualización extraños. Por el contrario, la Figura 14 muestra pTHINC utilizando el redimensionamiento para proporcionar una visualización de alta calidad a pantalla completa de todo el fotograma del video. pTHINC ofrece una visualización de video visualmente más atractiva que RDP, VNC o ICA. 5. TRABAJOS RELACIONADOS Varios estudios han examinado el rendimiento de la navegación web en la computación de cliente ligero [13, 19, 10]. La capacidad de los clientes ligeros para mejorar el rendimiento de la navegación web en PDAs inalámbricas fue demostrada cuantitativamente por primera vez en un estudio previo realizado por uno de los autores [10]. Este estudio demostró que los clientes ligeros pueden ofrecer tanto un rendimiento de navegación web más rápido como una mayor funcionalidad de navegación web. El estudio consideró una amplia gama de contenido web, incluido el contenido de sistemas de información médica. Nuestro trabajo se basa en este estudio previo y considera temas importantes como la usabilidad de los clientes ligeros existentes en entornos de PDA, los compromisos entre la usabilidad y el rendimiento de los clientes ligeros, el rendimiento en diferentes dispositivos de PDA y el rendimiento de los clientes ligeros en aplicaciones web comunes como el video. Se han desarrollado muchos clientes ligeros y algunos tienen clientes de PDA, incluyendo Remote Desktop de Microsoft [3], Citrix MetraFrame XP [2], Virtual Network Computing [16, 12], GoToMyPC [5] y Tarantella [18]. Estos sistemas fueron diseñados inicialmente para computadoras de escritorio y adaptados posteriormente para asistentes digitales personales (PDA). A diferencia de pTHINC, no abordan los problemas clave de arquitectura del sistema y usabilidad importantes para las PDAs. Esto limita la calidad de visualización, el rendimiento del sistema, el espacio de pantalla disponible y la usabilidad general en PDAs. pTHINC se basa en trabajos anteriores de dos de los autores sobre THINC [1], ampliando la arquitectura del servidor e introduciendo una interfaz de cliente y un modelo de uso para admitir eficientemente dispositivos PDA en aplicaciones web móviles. Otros enfoques para mejorar el rendimiento de la navegación web inalámbrica móvil se han centrado en el uso de proxies de transcodificación y almacenamiento en caché en conjunto con el modelo de cliente pesado [11, 9, 4, 8]. Trabajan mediante el envío de funcionalidades a proxies externos y utilizando aplicaciones de navegación especializadas en el dispositivo PDA que se comunican con el proxy. Nuestro enfoque de cliente ligero difiere fundamentalmente de estos enfoques de cliente pesado al trasladar toda la lógica del navegador web al servidor, aprovechando las inversiones existentes en navegadores web de escritorio y aplicaciones auxiliares para funcionar de manera integrada con los sistemas de producción sin necesidad de configuraciones adicionales de proxy o modificaciones en el navegador web. Con la aparición de la navegación web en dispositivos con pantallas pequeñas, los sitios web han sido rediseñados utilizando mecanismos como WAP y se han desarrollado navegadores web nativos especializados para adaptarse a las necesidades de estos dispositivos. Recientemente, Opera ha desarrollado el navegador web Opera Mini [15], que utiliza un enfoque similar al modelo de cliente ligero para proporcionar acceso a través de una serie de dispositivos móviles que normalmente no podrían ejecutar un navegador web. En lugar de requerir que el dispositivo procese las páginas web, utiliza un servidor remoto para preprocesar la página antes de enviarla al teléfono. CONCLUSIONES Hemos introducido pTHINC, una arquitectura de cliente ligero para PDAs inalámbricas. pTHINC proporciona mecanismos arquitectónicos y de usabilidad clave como el redimensionamiento de pantalla en el lado del servidor, rotación de pantalla en el lado del cliente utilizando técnicas simples de copia, soporte de video YUV, y maximización del espacio de pantalla para actualizaciones de visualización y aprovechamiento de los botones de control existentes en las PDAs para elementos de la interfaz de usuario. pTHINC soporta de manera transparente navegadores de escritorio tradicionales y sus aplicaciones auxiliares en dispositivos PDA y computadoras de escritorio, brindando a los usuarios móviles acceso ubicuo a un entorno web consistente, personalizado y completo en dispositivos heterogéneos. Hemos implementado pTHINC y medido su rendimiento en aplicaciones web en comparación con los sistemas de cliente ligero existentes y las aplicaciones web nativas. Nuestros resultados en múltiples dispositivos móviles inalámbricos demuestran que pTHINC ofrece un rendimiento de navegación web hasta 80 veces mejor que los sistemas de cliente ligero existentes, y 8 veces mejor que un navegador PDA nativo. Además, pTHINC es el único cliente ligero de PDA 151 Figura 11: Captura de pantalla de video: RDP 640x480 Figura 12: Captura de pantalla de video: VNC 1024x768 Figura 13: Captura de pantalla de video: ICA redimensionado 1024x768 Figura 14: Captura de pantalla de video: pTHINC redimensionado 1024x768 que proporciona de manera transparente la reproducción de video a pantalla completa y a velocidad de cuadro completa, haciendo que los sitios web con contenido multimedia sean accesibles para los usuarios de la web móvil. 7. AGRADECIMIENTOS Este trabajo fue apoyado en parte por las subvenciones NSF ITR CCR0219943 y CNS-0426623, y un premio IBM SUR. 8. REFERENCIAS [1] R. Baratto, L. Kim y J. Nieh. THINC: Una arquitectura de visualización virtual para la computación de cliente ligero. En Actas del 20º Simposio de Principios de Sistemas Operativos de la ACM (SOSP), octubre de 2005. [2] Citrix Metaframe. http://www.citrix.com. [3] B. C. Cumberland, G. Carius y A. Muir. Microsoft Windows NT Server 4.0, Terminal Server Edition: Referencia Técnica. Microsoft Press, Redmond, WA, 1999. [4] A.
Microsoft Press, Redmond, WA, 1999. [4] A. Fox, I. Goldberg, S. D. Gribble y D. C. Lee. Experiencia con Top Gun Wingman: un navegador web gráfico basado en proxy para el 3Com PalmPilot. En Actas de Middleware 98, Lake District, Inglaterra, septiembre de 1998, 1998. [5] GoToMyPC. http://www.gotomypc.com/. [6] Ley de Portabilidad y Responsabilidad del Seguro de Salud. http://www.hhs.gov/ocr/hipaa/. [7] i-Bench versión 1.5. http://etestinglabs.com/benchmarks/i-bench/i-bench.asp. [8] A. Joshi. Sobre agentes de proxy, movilidad y acceso web. Redes y aplicaciones móviles, 5(4):233-241, 2000. [9] J. Kangasharju, Y. G. Kwon y A. Ortega. Diseño e Implementación de un Proxy de Caché Blando. Redes de Computadoras y Sistemas ISDN, 30(22-23):2113-2121, 1998. [10] A. Lai, J. Nieh, B. Bohra, V. Nandikonda, A. P. Surana y S. Varshneya. Mejorando la navegación web en PDAs inalámbricas utilizando computación de cliente ligero. En Actas de la 13ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2004. [11] A. Maheshwari, A. Sharma, K. Ramamritham y P. Shenoy. TranSquid: Proxy de transcodificación y almacenamiento en caché para entornos de comercio electrónico heterogéneos. En Actas del 12º Taller IEEE sobre Problemas de Investigación en Ingeniería de Datos (RIDE 02), febrero de 2002. [12] Visor VNC .NET para PocketPC. http://dotnetvnc.sourceforge.net/. [13] J. Nieh, S. J. Yang y N. Novik. Midiendo el rendimiento de clientes ligeros utilizando pruebas de referencia en cámara lenta. ACM Trans. Sistemas de Computación, 21(1):87-115, Feb. 2003. [14] J. Nielsen. Diseño de Usabilidad en la Web. New Riders Publishing, Indianápolis, IN, 2000. [15] Navegador Opera Mini. http://www.opera.com/products/mobile/operamini/. [16] T. Richardson, Q. Stafford-Fraser, K. R. Wood y A. Hopper. Computación de Red Virtual. IEEE Internet Computing, 2(1), enero/febrero de 1998. [17] R. W. Scheifler y J. Gettys. El Sistema de Ventanas X. ACM Trans. Gr., 5(2):79-106, Abr. 1986. [18] Sun Secure Global Desktop. http://www.sun.com/software/products/sgd/. [19] S. J. Yang, J. Nieh, S. Krishnappa, A. Mohla y M. Sajjadpour. Rendimiento de la navegación web en computación inalámbrica de cliente ligero. En Actas de la 12ª Conferencia Internacional de la World Wide Web (WWW), mayo de 2003. 152