Estudiamos varios aspectos computacionales de la resolución de juegos utilizando la dominancia y la dominancia iterada. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permite también demostrar que determinar si existe un camino que conduce a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente de la ruta (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, se puede realizar en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos juegos bayesianos. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún puede hacerse en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Categorías y Descriptores de Asignaturas F.2 [Teoría de la Computación]: Análisis de Algoritmos y Complejidad de Problemas; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN En sistemas multiagentes con agentes auto-interesados, la acción óptima para un agente puede depender de las acciones tomadas por otros agentes. En tales contextos, los agentes necesitan herramientas de teoría de juegos para decidir racionalmente sobre una acción. La teoría de juegos ofrece varios modelos formales de escenarios estratégicos, el más conocido de los cuales es un juego en forma normal (o matriz), que especifica una utilidad (pago) para cada agente en cada combinación de estrategias que los agentes eligen, así como conceptos de solución que, dados un juego, especifican qué resultados son razonables (bajo varias suposiciones de racionalidad y conocimiento común). Probablemente el concepto de solución más conocido (y ciertamente el más estudiado) es el equilibrio de Nash. Un equilibrio de Nash especifica una estrategia para cada jugador, de tal manera que ningún jugador tiene un incentivo para desviarse (unilateralmente) de la estrategia prescrita. Recientemente, numerosos artículos han estudiado el cálculo de equilibrios de Nash en diferentes contextos [9, 4, 12, 3, 13, 14], y la complejidad de construir un equilibrio de Nash en juegos en forma normal ha sido etiquetada como uno de los dos problemas abiertos más importantes en el límite de P hoy en día [20]. El problema de calcular soluciones de acuerdo con los conceptos de solución quizás más elementales de dominancia y dominancia iterada ha recibido mucha menos atención. (Después de un breve artículo temprano sobre un caso sencillo [11], el principal estudio computacional de estos conceptos ha tenido lugar en realidad en un artículo de la comunidad de teoría de juegos [7].) Una estrategia domina estrictamente a otra estrategia si tiene un rendimiento estrictamente mejor contra todos los vectores de estrategias del oponente, y la domina débilmente si tiene al menos el mismo rendimiento contra todos los vectores de estrategias del oponente, y estrictamente mejor contra al menos uno. La idea es que las estrategias dominadas pueden ser eliminadas de consideración. En la dominancia iterada, la eliminación avanza en rondas y se vuelve más fácil a medida que se eliminan más estrategias: en cualquier ronda dada, la estrategia dominante ya no necesita desempeñarse mejor que o igual que la estrategia dominada contra las estrategias oponentes que fueron eliminadas en rondas anteriores. Calcular soluciones según la dominancia (iterada) es importante por al menos las siguientes razones: 1) puede ser computacionalmente más fácil que calcular (por ejemplo) un equilibrio de Nash (y por lo tanto puede ser útil como paso de preprocesamiento en el cálculo de un equilibrio de Nash), y 2) la dominancia (iterada) requiere una suposición de racionalidad más débil en los jugadores que (por ejemplo) el equilibrio de Nash, y por lo tanto las soluciones derivadas según ella son más propensas a ocurrir. En este artículo, estudiamos algunas preguntas computacionales fundamentales relacionadas con la dominancia y la dominancia iterada, incluyendo qué tan difícil es verificar si una estrategia dada puede ser eliminada por cada una de las variantes de estos conceptos. El resto del documento está organizado de la siguiente manera. En la Sección 2, revisamos brevemente las definiciones y propiedades básicas de los juegos en forma normal, la dominancia estricta y débil, y la dominancia estricta y débil iterada. En las secciones restantes, estudiamos los aspectos computacionales de la dominancia y la dominancia iterada. En la Sección 3, estudiamos la dominancia de un solo disparo (no iterada). En la Sección 4, estudiamos la dominancia iterada. En la Sección 5, estudiamos la dominancia y la dominancia iterada cuando la estrategia dominante solo puede asignar probabilidad a unas pocas estrategias puras. Finalmente, en la Sección 6, estudiamos la dominancia y la dominancia iterada en juegos bayesianos. 2. DEFINICIONES Y PROPIEDADES BÁSICAS En esta sección, revisamos brevemente los juegos en forma normal, así como la dominancia y la dominancia iterada (tanto estricta como débil). Un juego de forma normal de n jugadores se define de la siguiente manera. Definición 1. Un juego en forma normal está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de estrategias puras Σi y una función de utilidad ui : Σ1 × Σ2 × . . . × Σn → R (donde ui(σ1, σ2, . . . , σn) denota la utilidad del jugador i cuando cada jugador j juega la acción σj). Las dos principales nociones de dominancia se definen de la siguiente manera. Definición 2. La estrategia σi del jugador se dice que está estrictamente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i de los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). La estrategia σi del jugador se dice que está débilmente dominada por la estrategia σi del jugador si, para cualquier vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) ≥ ui(σi, σ−i), y para al menos un vector de estrategias σ−i para los otros jugadores, ui(σi, σ−i) > ui(σi, σ−i). En esta definición, a veces se permite que la estrategia dominante σi sea una estrategia mixta, es decir, una distribución de probabilidad sobre estrategias puras. En este caso, las utilidades están en dominancia en conjunto. Por ejemplo, a veces se utilizan comprobaciones de dominancia simple como una subrutina en la búsqueda de equilibrios de Nash [21]. Las definiciones son las utilidades esperadas. Hay otras nociones de dominancia, como la dominancia muy débil (en la que no se requiere ninguna desigualdad estricta, por lo que dos estrategias pueden dominarse mutuamente), pero no las estudiaremos aquí. Cuando estamos analizando las relaciones de dominancia para el jugador i, los otros jugadores (−i) pueden ser considerados como un solo jugador. Por lo tanto, en el resto del documento, cuando estudiamos la dominancia de un solo paso (no iterada), nos centraremos sin pérdida de generalidad en juegos de dos jugadores. En juegos de dos jugadores, generalmente nos referiremos a los jugadores como r (fila) y c (columna) en lugar de 1 y 2. En la dominancia iterada, las estrategias dominadas son eliminadas del juego y ya no tienen ningún efecto en las relaciones de dominancia futuras. La dominancia iterada puede eliminar más estrategias que la dominancia, de la siguiente manera. σr puede originalmente no dominar a σr porque este último tiene un mejor desempeño contra σc; pero luego, una vez que σc es eliminado porque es dominado por σc, σr domina a σr, y este último puede ser eliminado. Por ejemplo, en el siguiente juego, se puede eliminar primero a R, después de lo cual D queda dominado. Tanto la dominancia estricta como la dominancia débil pueden ser utilizadas en la definición de la dominancia iterada. Observamos que el proceso de dominancia iterada nunca se ve favorecido al eliminar una estrategia mixta dominada, por la siguiente razón. Si σi le da al jugador i una utilidad mayor que σi contra la estrategia mixta σj para el jugador j = i (y estrategias σ−{i,j} para los otros jugadores), entonces para al menos una estrategia pura σj en la que σj coloque probabilidad positiva, σi debe desempeñarse mejor que σi contra σj (y estrategias σ−{i,j} para los otros jugadores). Por lo tanto, eliminar la estrategia mixta σj no introduce nuevas dominancias. Discusiones más detalladas y ejemplos se pueden encontrar en textos estándar sobre microeconomía o teoría de juegos [17, 5]. Ahora estamos listos para pasar al núcleo de este documento. 3. En esta sección, estudiamos la noción de dominancia de un solo turno (no iterada). Como primera observación, verificar si una estrategia dada está estrictamente (débilmente) dominada por alguna estrategia pura es sencillo, al comprobar, para cada estrategia pura de ese jugador, si la última estrategia tiene un rendimiento estrictamente mejor contra todas las estrategias de los oponentes (al menos igual de bien contra todas las estrategias de los oponentes, y estrictamente 2 La estrategia dominada σi, por supuesto, también puede ser mixta, pero esto no tiene implicaciones técnicas para el documento: cuando estudiamos la dominancia de un solo disparo, preguntamos si una estrategia dada está dominada, y no importa si la estrategia dada es pura o mixta; cuando estudiamos la dominancia iterada, no tiene sentido eliminar las estrategias mixtas, como veremos en breve. 3 Este jugador puede tener un espacio de estrategias muy grande (una estrategia pura para cada vector de estrategias puras de los jugadores que están siendo reemplazados). Sin embargo, esto no resultará en un aumento en el tamaño de nuestra representación, ya que la representación original ya tenía que especificar las utilidades para cada uno de estos vectores. Observamos que una restricción a juegos de dos jugadores no sería sin pérdida de generalidad para la dominancia iterada. Esto se debe a que para la dominancia iterada, necesitamos analizar las estrategias dominadas de cada jugador individual, por lo que no podemos fusionar a ningún jugador. A continuación, mostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta se puede hacer en tiempo polinómico resolviendo un único programa lineal. (Programas lineales similares se han presentado anteriormente [18]; presentamos el resultado aquí por completitud, y porque construiremos sobre los programas lineales dados a continuación en el Teorema 6.) Proposición 1. Dadas las utilidades de los jugadores de fila, un subconjunto Dr de las estrategias puras de los jugadores de fila Σr, y una estrategia distinguida σ∗ r para el jugador de fila, podemos verificar en tiempo polinómico en el tamaño del juego (resolviendo un único programa lineal de tamaño polinómico) si existe alguna estrategia mixta σr, que coloque probabilidad positiva solo en estrategias en Dr y domine a σ∗ r, tanto en dominancia estricta como débil. Prueba. Sea pdr la probabilidad que σr asigna a dr ∈ Dr. Resolveremos un único programa lineal en cada uno de nuestros algoritmos; los programas lineales pueden resolverse en tiempo polinómico [10]. Para la dominancia estricta, la pregunta es si se puede establecer el pdr de manera que para cada estrategia pura del jugador de la columna σc ∈ Σc, dr∈Dr pdr ur(dr, σc) > ur(σ∗ r , σc). Debido a que la desigualdad debe ser estricta, no podemos resolver esto directamente mediante programación lineal. Procedemos de la siguiente manera. Dado que el juego es finito, podemos asumir sin pérdida de generalidad que todas las utilidades son positivas (si no lo son, simplemente añade una constante a todas las utilidades). Resolver el siguiente programa lineal: minimizar dr∈Dr pdr tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc). Si σ∗ r es estrictamente dominada por alguna estrategia mixta, este programa lineal tiene una solución con un valor objetivo < 1. (La estrategia dominante es una solución factible con un valor objetivo exactamente igual a 1. Dado que ninguna restricción es vinculante para esta solución, podemos reducir ligeramente una de las probabilidades sin afectar la viabilidad, obteniendo así una solución con un valor objetivo < 1. Además, si este programa lineal tiene una solución con un valor objetivo < 1, existe una estrategia mixta que domina estrictamente a σ∗ r, la cual se puede obtener tomando la solución del PL y agregando la probabilidad restante a cualquier estrategia (debido a que todas las utilidades son positivas, esto sumará al lado izquierdo de cualquier desigualdad, por lo que todas las desigualdades se volverán estrictas). Para la dominancia débil, podemos resolver el siguiente programa lineal: maximizar σc∈Σc (( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc)) tal que para cualquier σc ∈ Σc, dr∈Dr pdr ur(dr, σc) ≥ ur(σ∗ r , σc); dr∈Dr pdr = 1. Si σ∗ r está débilmente dominado por alguna estrategia mixta, entonces esa estrategia mixta es una solución factible para este programa con un valor objetivo > 0, porque para al menos una estrategia σc ∈ Σc tenemos ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0. Por otro lado, si este programa tiene una solución con un valor objetivo > 0, entonces para al menos una estrategia σc ∈ Σc debemos tener ( dr∈Dr pdr ur(dr, σc)) − ur(σ∗ r , σc) > 0, y por lo tanto la solución de los programas lineales es una estrategia mixta débilmente dominante. 4. DOMINANCIA ITERADA Ahora pasamos a la dominancia iterada. Es bien sabido que la dominancia estricta iterada es independiente del camino [6, 19], es decir, si eliminamos las estrategias dominadas hasta que ya no queden más estrategias dominadas, al final las estrategias restantes para cada jugador serán las mismas, independientemente del orden en que se eliminen las estrategias. Por lo tanto, para determinar si una estrategia dada puede ser eliminada por dominancia estricta iterada, todo lo que se necesita hacer es eliminar repetidamente las estrategias que son estrictamente dominadas, hasta que no queden más estrategias dominadas. Dado que podemos verificar en tiempo polinómico si alguna estrategia dada está dominada (ya sea que se permita o no la dominancia por estrategias mixtas, como se describe en la Sección 3), todo este procedimiento toma solo tiempo polinómico. En el caso de la dominancia iterada por estrategias puras con dos jugadores, Knuth et al. [11] mejoran ligeramente (aceleran) la implementación directa de este procedimiento al llevar un registro, para cada par ordenado de estrategias de un jugador, del número de estrategias del oponente que impiden que la primera estrategia domine a la segunda. Por lo tanto, el tiempo de ejecución para un juego m × n se reduce de O((m + n)4 ) a O((m + n)3 ). (En realidad, solo estudian dominancia muy débil (para la cual no se requieren desigualdades estrictas), pero el enfoque se puede extender fácilmente). Por el contrario, se sabe que la dominancia débil iterada es dependiente del camino. Por ejemplo, en el siguiente juego, utilizando la dominancia débil iterada podemos eliminar primero M y luego D, o primero R y luego U. L M R U 1, 1 0, 0 1, 0 D 1, 1 1, 0 0, 0 Por lo tanto, si bien el procedimiento de eliminar estrategias débilmente dominadas hasta que no queden más estrategias débilmente dominadas puede ciertamente ejecutarse en tiempo polinómico, qué estrategias sobreviven al final depende del orden en el que eliminamos las estrategias dominadas. Investigaremos dos preguntas para la dominancia débil iterada: si una estrategia dada es eliminada en algún camino, y si hay un camino hacia una solución única (una única estrategia pura por jugador). Mostraremos que ambos de estos problemas son computacionalmente difíciles. Definición 3. Dada un juego en forma normal y una estrategia distinguida σ∗ , la ELIMINACIÓN DE ESTRATEGIAS POR DOMINANCIA DÉBIL (IWD-STRATEGY-ELIMINATION) pregunta si existe algún camino de dominancia débil iterada que elimine σ∗ . Dada un juego en forma normal, IWDUNIQUE-SOLUTION pregunta si existe algún camino de dominancia débil iterada que conduzca a una solución única (una estrategia restante por jugador). El siguiente lema muestra un caso especial de juegos en forma normal en el que permitir la dominancia débil a través de estrategias mixtas (además de la dominancia débil a través de estrategias puras) hace 6. Sin embargo, existe una restricción de dominancia débil llamada dominancia débil agradable que es independiente de la ruta [15, 16]. Para obtener una visión general de los resultados de independencia de la ruta, consulte Apt [1]. 90 no ayuda. Demostraremos los resultados de dificultad en este contexto, de modo que se mantengan independientemente de si se permite o no la dominancia por estrategias mixtas. Lema 1. Supongamos que todas las utilidades en un juego están en {0, 1}. Entonces, toda estrategia pura que es débilmente dominada por una estrategia mixta también es débilmente dominada por una estrategia pura. Prueba. Se supone que la estrategia pura σ es débilmente dominada por la estrategia mixta σ∗. Si σ obtiene una utilidad de 1 contra alguna estrategia o vector de estrategias del oponente (si hay más de 2 jugadores), entonces todas las estrategias puras en las que σ∗ asigna una probabilidad positiva también deben obtener una utilidad de 1 contra esa estrategia del oponente (de lo contrario, la utilidad esperada sería menor que 1). Además, al menos una de las estrategias puras en las que σ∗ coloca probabilidad positiva debe obtener una utilidad de 1 contra una estrategia del oponente que σ obtiene 0 (de lo contrario, la desigualdad nunca sería estricta). Se deduce que esta estrategia pura domina débilmente a σ. Ahora estamos listos para demostrar los resultados principales de esta sección. Teorema 1. IWD-STRATEGY-ELIMINATION es NPcompleto, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar fácilmente si esta es una secuencia válida de eliminaciones (incluso cuando se permite la dominancia por estrategias mixtas, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) a la siguiente instancia de ELIMINACIÓN DE ESTRATEGIA IWD. (En esta instancia, especificaremos que ciertas estrategias son ineliminables. Una estrategia σr puede hacerse ineliminable, incluso cuando 0 y 1 son las únicas utilidades permitidas, al agregar otra estrategia σr y otra estrategia del oponente σc, de modo que: 1. σr y σr son las únicas estrategias que le dan al jugador de la fila una utilidad de 1 contra σc. 2. σr y σr siempre le dan al jugador de la fila la misma utilidad. 3. σc es la única estrategia que le da al jugador de la columna una utilidad de 1 contra σr, pero de lo contrario σc siempre le da al jugador de la columna una utilidad de 0. Esto hace imposible eliminar cualquiera de estas tres estrategias. No especificaremos explícitamente las estrategias adicionales para hacer la prueba más legible. En esta demostración, designaremos las estrategias del jugador de fila como s, y las estrategias del jugador de columna como t, para mejorar la legibilidad. Que se dé el conjunto de estrategias puras de los jugadores de fila como sigue. Para cada variable v ∈ V, el jugador de la fila tiene estrategias correspondientes s1 +v, s2 +v, s1 −v, s2 −v. Además, el jugador de la fila tiene las siguientes 2 estrategias: s1 0 y s2 0, donde s2 0 = σ∗ r (es decir, es la estrategia que buscamos eliminar). Finalmente, para cada cláusula c ∈ C, el jugador de la fila tiene estrategias correspondientes s1 c (ineliminables) y s2 c. Dado el conjunto de estrategias puras de los jugadores de la columna de la siguiente manera. Para cada variable v ∈ V, el jugador de la columna tiene una estrategia correspondiente tv. Para cada cláusula c ∈ C, el jugador de la columna tiene una estrategia correspondiente tc, y además, para cada literal l ∈ L que ocurre en c, una estrategia tc,l. Para cada variable v ∈ V, el jugador de la columna tiene estrategias correspondientes t+v, t−v (ambas no eliminables). Finalmente, el jugador de la columna tiene tres estrategias adicionales: t1 0 (ineliminable), t2 0 y t1. La función de utilidad para el jugador de la fila se da de la siguiente manera: • ur(s1 +v, tv) = 0 para todo v ∈ V ; • ur(s2 +v, tv) = 1 para todo v ∈ V ; • ur(s1 −v, tv) = 1 para todo v ∈ V ; • ur(s2 −v, tv) = 0 para todo v ∈ V ; • ur(s1 +v, t1) = 1 para todo v ∈ V ; • ur(s2 +v, t1) = 0 para todo v ∈ V ; • ur(s1 −v, t1) = 0 para todo v ∈ V ; • ur(s2 −v, t1) = 1 para todo v ∈ V ; • ur(sb +v, t+v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sb −v, t−v) = 1 para todo v ∈ V y b ∈ {1, 2}; • ur(sl, t) = 0 de lo contrario para todo l ∈ L y t ∈ S2; • ur(s1 0, tc) = 0 para todo c ∈ C; • ur(s2 0, tc) = 1 para todo c ∈ C; • ur(sb 0, t1 0) = 1 para todo b ∈ {1, 2}; • ur(s1 0, t2 0) = 1; • ur(s2 0, t2 0) = 0; • ur(sb 0, t) = 0 de lo contrario para todo b ∈ {1, 2} y t ∈ S2; • ur(sb c, t) = 0 de lo contrario para todo c ∈ C y b ∈ {1, 2}; y la utilidad del jugador de la fila es 0 en todos los demás casos. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(s, tv) = 0 para todo v ∈ V y s ∈ S1; • uc(s, t1) = 0 para todo s ∈ S1; • uc(s2 l , tc) = 1 para todo c ∈ C y l ∈ L donde l ∈ c (literal l ocurre en la cláusula c); • uc(s2 l2 , tc,l1 ) = 1 para todo c ∈ C y l1, l2 ∈ L, l1 = l2 donde l2 ∈ c; • uc(s1 c, tc) = 1 para todo c ∈ C; • uc(s2 c, tc) = 0 para todo c ∈ C; • uc(sb c, tc,l) = 1 para todo c ∈ C, l ∈ L, y b ∈ {1, 2}; • uc(s2, tc) = uc(s2, tc,l) = 0 en otro caso para todo c ∈ C y l ∈ L; y la utilidad del jugador de la columna es 0 en todos los demás casos. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad: es decir, una asignación de valores de verdad a las variables en V tal que todas las cláusulas se satisfacen. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación, elimine tv (lo que da como resultado una utilidad de 0 para el jugador de la columna en todas partes). 2. Entonces, para cada variable v que se establezca como verdadera en la asignación, elimine s2 +v usando s1 +v (lo cual es posible porque tv ha sido eliminado, y porque t1 no ha sido eliminado (aún)). 3. Ahora elimina t1 (lo cual da como resultado una utilidad de 0 para el jugador de la columna). 4. A continuación, para cada variable v que se establezca como falso en la asignación, elimine s2 −v usando s1 −v (lo cual es posible porque t1 ha sido eliminado, y porque tv no ha sido eliminado (aún)). 5. Para cada cláusula c que tenga la variable correspondiente a uno de sus literales positivos l = +v establecido como verdadero en la asignación, elimine tc utilizando tc,l (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 6. Para cada cláusula c en la que la variable correspondiente a uno de sus literales negativos l = −v se establece en falso en la asignación, elimine tc utilizando tc,l 91 (lo cual es posible porque s2 l ha sido eliminado, y s2 c no ha sido eliminado (aún)). 7. Debido a que la tarea cumplió con la fórmula, todos los tc han sido eliminados ahora. Por lo tanto, podemos eliminar s2 0 = σ∗ r usando s1 0. Se deduce que hay una solución para la instancia IWD-STRATEGY-ELIMINATION. Ahora supongamos que hay una solución para la instancia IWD-STRATEGYELIMINATION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Primero observamos que solo s1 0 puede eliminar s2 0 = σ∗ r, porque es la única otra estrategia que le da al jugador de la fila una utilidad de 1 contra t1 0, y t1 0 es ineliminable. Sin embargo, dado que s2 0 tiene un mejor rendimiento que s1 0 contra las estrategias de tc, se deduce que todas las estrategias de tc deben ser eliminadas. Para cada c ∈ C, la estrategia tc solo puede ser eliminada por una de las estrategias tc,l (con el mismo c), ya que estas son las únicas otras estrategias que le dan al jugador de la columna una utilidad de 1 contra s1 c, y s1 c es ineliminable. Pero, para que algún tc,l elimine tc, primero se debe eliminar s2 l. Solo s1 l puede eliminar s2 l, porque es la única otra estrategia que le otorga al jugador de la fila una utilidad de 1 contra tl, y tl es ineliminable. A continuación mostramos que para cada v ∈ V solo se puede eliminar uno de s2 +v, s2 −v. Esto se debe a que para que s1 +v elimine s2 +v, tv debe haber sido eliminado y t1, no (por lo tanto, tv debe ser eliminado antes que t1); pero para que s1 -v elimine s2 -v, t1 debe haber sido eliminado y tv, no (por lo tanto, t1 debe ser eliminado antes que tv). Por lo tanto, establezca v en verdadero si s2 + v es eliminado, y en falso de lo contrario. Debido a lo anterior, para cada cláusula c, uno de los s2 con l ∈ c debe ser eliminado, por lo que se deduce que esta es una asignación satisfactoria para la instancia de satisfactibilidad. Usando el Teorema 1, ahora es (relativamente) fácil demostrar que IWD-UNIQUE-SOLUTION también es NP-completo bajo las mismas restricciones. Teorema 2. IWD-UNIQUE-SOLUTION es NP-completo, incluso con 2 jugadores, y con 0 y 1 siendo las únicas utilidades que ocurren en la matriz, ya sea que se permita o no la dominancia por estrategias mixtas. Prueba. Nuevamente, el problema está en NP porque podemos elegir de manera no determinista la secuencia de eliminaciones y verificar si es correcta. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de IWD-STRATEGY-ELIMINATION a la siguiente instancia de IWD-UNIQUE-SOLUTION. Que todas las estrategias de cada jugador de la instancia original formen parte de la nueva instancia, y que las utilidades resultantes de los jugadores al jugar un par de estas estrategias sean las mismas. Añadimos tres estrategias adicionales σ1 r , σ2 r , σ3 r para el jugador de fila, y tres estrategias adicionales σ1 c , σ2 c , σ3 c para el jugador de columna. Que las utilidades adicionales sean las siguientes: • ur(σr, σj c) = 1 para todo σr /∈ {σ1 r , σ2 r , σ3 r } y j ∈ {2, 3}; • ur(σi r, σc) = 1 para todo i ∈ {1, 2, 3} y σc /∈ {σ2 c , σ3 c }; • ur(σi r, σ2 c ) = 1 para todo i ∈ {2, 3}; • ur(σ1 r , σ3 c ) = 1; • y la utilidad de los jugadores de fila es 0 en todos los demás casos que involucren una nueva estrategia. • uc(σ3 r , σc) = 1 para todo σc /∈ {σ1 c , σ2 c , σ3 c }; • uc(σ∗ r , σj c) = 1 para todo j ∈ {2, 3} (σ∗ r es la estrategia a ser eliminada en la instancia original); • uc(σi r, σ1 c ) = 1 para todo i ∈ {1, 2}; • ur(σ1 r , σ2 c ) = 1; • ur(σ2 r , σ3 c ) = 1; • y la utilidad de los jugadores de columna es 0 en todos los demás casos que involucren una nueva estrategia. Procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia original de IWDSTRATEGY-ELIMINATION. Luego, realiza la misma secuencia de eliminaciones para eliminar σ∗ r en la nueva instancia IWD-UNIQUE-SOLUTION. (Esto es posible porque en cualquier etapa, cualquier dominancia débil para el jugador de fila en la instancia original sigue siendo una dominancia débil en la nueva instancia, ya que las utilidades de las dos estrategias para el jugador de fila son las mismas cuando el jugador de columna juega una de las nuevas estrategias; y lo mismo ocurre para el jugador de columna). Una vez que σ∗ r sea eliminado, permita que σ1 c elimine a σ2 c. (Se desempeña mejor contra σ2 r.) Entonces, dejemos que σ1 r elimine todas las demás estrategias restantes para el jugador de la fila. (Siempre tiene un mejor desempeño contra σ1 c o σ3 c.) Finalmente, σ1 c es la mejor respuesta única contra σ1 r entre las estrategias restantes de los jugadores de columna, así que permitamos que elimine todas las demás estrategias restantes para el jugador de columna. Por lo tanto, existe una solución para la instancia IWD-UNIQUE-SOLUTION. Ahora supongamos que existe una solución para la instancia IWD-UNIQUESOLUTION. Por el Lema 1, podemos asumir que todas las dominancias son por estrategias puras. Mostraremos que ninguna de las nuevas estrategias (σ1 r , σ2 r , σ3 r , σ1 c , σ2 c , σ3 c ) puede eliminar a otra estrategia, ni ser eliminada antes de que σ∗ r sea eliminada. Por lo tanto, debe haber una secuencia de eliminaciones que termine con la eliminación de σ∗ r, la cual no involucre ninguna de las nuevas estrategias y, por lo tanto, sea una secuencia válida de eliminaciones en el juego original (porque todas las estrategias originales tienen el mismo rendimiento contra cada nueva estrategia). Ahora demostramos que esto es cierto agotando todas las posibilidades para la primera eliminación antes de que se elimine σ∗ r que implica una nueva estrategia. Ninguno de los σi r puede ser eliminado por un σr /∈ {σ1 r , σ2 r , σ3 r}, porque los σi r tienen un mejor desempeño contra σ1 c. σ1 r no puede eliminar ninguna otra estrategia, porque siempre tiene un desempeño inferior contra σ2 c. σ2 r y σ3 r son equivalentes desde la perspectiva de los jugadores de fila (y por lo tanto no pueden eliminarse entre sí), y no pueden eliminar ninguna otra estrategia porque siempre tienen un desempeño inferior contra σ3 c. Ninguno de los σj c puede ser eliminado por un σc /∈ {σ1 c , σ2 c , σ3 c}, porque los σj c siempre tienen un mejor desempeño contra σ1 r o σ2 r. σ1 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ∗ r o σ3 r. σ2 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ2 r o σ3 r. σ3 c no puede eliminar ninguna otra estrategia, porque siempre tiene un peor desempeño contra σ1 r o σ3 r. Por lo tanto, existe una solución para la instancia IWDSTRATEGY-ELIMINATION. Una versión ligeramente más débil de la parte del Teorema 2 que concierne la dominancia solo por estrategias puras es el resultado principal de Gilboa et al. [7]. (Además de no demostrar el resultado para la dominancia por estrategias mixtas, el resultado original era más débil porque requería utilidades {0, 1, 2, 3, 4, 5, 6, 7, 8} en lugar de solo {0, 1} (y debido a esto, nuestro Lema 1 no se puede aplicar para obtener el resultado para estrategias mixtas).) 5. DOMINANCIA (ITERADA) USANDO ESTRATEGIAS MIXTAS CON SOPORTES PEQUEÑOS Al demostrar que una estrategia es dominada por una estrategia mixta, hay varias razones para preferir exhibir una estrategia dominante que coloque probabilidad positiva en la menor cantidad posible de estrategias puras. Primero, esto reducirá el número de bits necesarios para especificar la estrategia dominante (y así la prueba de dominancia se puede comunicar más rápido): si la estrategia mixta dominante coloca probabilidad positiva en solo k estrategias, entonces se puede especificar usando k números reales para las probabilidades, más k log m (donde m es el número de estrategias para el jugador en consideración) bits para indicar qué estrategias se utilizan. Segundo, la prueba de dominancia será más clara: para una estrategia mixta dominante, es típicamente (siempre en el caso de dominancia estricta) posible distribuir parte de la probabilidad en cualquier estrategia pura no utilizada y aún así tener una estrategia dominante, pero esto oscurece cuáles estrategias puras son las clave para hacer que la estrategia mixta sea dominante. Tercero, debido a que el argumento para eliminar la estrategia dominada es más simple y fácil de entender, es más probable que sea aceptado. En cuarto lugar, el nivel de neutralidad al riesgo requerido para que el argumento funcione se reduce, al menos en el caso extremo donde se puede exhibir la dominancia de una única estrategia pura (no se requiere neutralidad al riesgo aquí). Esto motiva el siguiente problema. Definición 4 (CONJUNTO DOMINANTE MÍNIMO). Se nos dan las utilidades de los jugadores de fila de un juego en forma normal, una estrategia distinguida σ∗ para el jugador de fila, una especificación de si la dominancia debe ser estricta o débil, y un número k. Se nos pregunta si existe una estrategia mixta σ para el jugador de fila que coloque probabilidad positiva en como máximo k estrategias puras, y domine a σ∗ en el sentido requerido. Lamentablemente, este problema es NP-completo. Teorema 3. El problema del CONJUNTO DOMINANTE MÍNIMO es NP-completo, tanto para dominancia estricta como para dominancia débil. Prueba. El problema está en NP porque podemos elegir de manera no determinista un conjunto de a lo sumo k estrategias para dar probabilidad positiva, y decidir si podemos dominar a σ∗ con estas k estrategias como se describe en la Proposición 1. Para demostrar la NP-dificultad, reducimos una instancia arbitraria de COBERTURA-DE-CONJUNTOS (dado un conjunto S, subconjuntos S1, S2, . . . , Sr, y un número t, ¿puede S ser cubierto por a lo sumo t de los subconjuntos?) a la siguiente instancia de CONJUNTO-DOMINANTE-MÍNIMO. Para cada elemento s ∈ S, hay una estrategia pura σs para el jugador de la columna. Para cada subconjunto Si, hay una estrategia pura σSi para el jugador de la fila. Finalmente, está la distinguida estrategia pura σ∗ para el jugador de la fila. Las utilidades de los jugadores de la fila son las siguientes: ur(σSi , σs) = t + 1 si s ∈ Si; ur(σSi , σs) = 0 si s /∈ Si; ur(σ∗ , σs) = 1 para todo s ∈ S. Finalmente, dejamos que k = t. Ahora procedemos a demostrar que las dos instancias son equivalentes. Primero supongamos que existe una solución para la instancia de COBERTURA-CONJUNTO. Sin pérdida de generalidad, podemos asumir que hay exactamente k subconjuntos en la cobertura. Entonces, para cada Si que esté en la cobertura, dejemos que la estrategia dominante σ coloque exactamente 1 k de probabilidad en la estrategia pura correspondiente σSi. Ahora, si dejamos que n(s) sea el número de subconjuntos en la cobertura que contienen a s (observamos que n(s) ≥ 1), entonces para cada estrategia σs del jugador de la columna, la utilidad esperada de los jugadores de la fila al jugar σ cuando el jugador de la columna está jugando σs es u(σ, σs) = n(s) k (k + 1) ≥ k+1 k > 1 = u(σ∗ , σs). Entonces, σ domina estrictamente (y por lo tanto también débilmente) a σ∗, y existe una solución para la instancia del conjunto de dominación mínimo. Ahora supongamos que existe una solución para la instancia de CONJUNTO-DOMINANTE-MÍNIMO. Considera las estrategias puras (a lo sumo k) de la forma σSi en las que la estrategia mixta dominante σ asigna probabilidad positiva, y deja que T sea la colección de los subconjuntos correspondientes Si. Sostenemos que T es una cubierta. Supongamos que hay algún s ∈ S que no está en ninguno de los subconjuntos en T. Entonces, si el jugador de la columna juega σs, el jugador de la fila (cuando juega σ) siempre recibirá una utilidad de 0, en contraposición a la utilidad de 1 que el jugador de la fila recibiría al jugar σ∗, contradiciendo el hecho de que σ domina a σ∗ (ya sea esta dominancia débil o estricta). Se deduce que existe una solución para la instancia de COBERTURA-DE-CONJUNTOS. Por otro lado, si requerimos que la estrategia dominante solo coloque probabilidad positiva en un número muy pequeño de estrategias puras, entonces una vez más resulta fácil verificar si una estrategia está dominada. Específicamente, para determinar si la estrategia σ∗ del jugador está dominada por una estrategia que coloca probabilidad positiva solo en k estrategias puras, simplemente podemos verificar, para cada subconjunto de k de las estrategias puras del jugador, si hay una estrategia que coloca probabilidad positiva solo en esas k estrategias y domina a σ∗, utilizando la Proposición 1. Esto solo requiere O(|Σi|k) comprobaciones. Por lo tanto, si k es una constante, esto constituye un algoritmo de tiempo polinómico. Una pregunta natural que surge a continuación es si la dominancia estricta iterada sigue siendo computacionalmente fácil cuando se requiere que las estrategias dominantes coloquen una probabilidad positiva en como máximo k estrategias puras, donde k es una constante pequeña. (Ya hemos demostrado en la Sección 4 que la dominancia débil iterada es difícil incluso cuando k = 1, es decir, solo se permite la dominancia por estrategias puras). Por supuesto, si la dominancia estricta iterada fuera independiente del camino bajo esta restricción, la facilidad computacional seguiría como lo hizo en la Sección 4. Sin embargo, resulta que esto no es así. Observación 1. Si restringimos las estrategias dominantes para asignar probabilidad positiva a lo sumo a dos estrategias puras, la dominancia estricta iterada se vuelve dependiente del camino. Prueba. Considera el siguiente juego: 7, 1 0, 0 0, 0 0, 0 7, 1 0, 0 3, 0 3, 0 0, 0 0, 0 0, 0 3, 1 1, 0 1, 0 1, 0 Sea (i, j) el resultado en el que el jugador de la fila juega en la fila i y el jugador de la columna juega en la columna j. Dado que (1, 1), (2, 2) y (4, 3) son todos equilibrios de Nash, ninguna de las estrategias puras de los jugadores de columna será eliminada, al igual que las filas 1, 2 y 4. Ahora observamos que la aleatorización uniforme entre las filas 1 y 2 domina a la fila 3, y la aleatorización uniforme entre las filas 3 y 4 domina a la fila 5. Sin embargo, si eliminamos la fila 3 primero, se vuelve imposible dominar la fila 5 sin aleatorizar al menos 3 estrategias puras. De hecho, la dominancia estricta iterada resulta ser difícil incluso cuando k = 3. Teorema 4. Si restringimos las estrategias dominantes para colocar una probabilidad positiva en como máximo tres estrategias puras, se vuelve NP-completo decidir si una estrategia dada puede ser eliminada usando dominancia estricta iterada. 93 Prueba. El problema está en NP porque, dado una secuencia de estrategias a ser eliminadas, podemos verificar en tiempo polinómico si esta es una secuencia válida de eliminaciones (para cualquier estrategia a ser eliminada, podemos verificar, para cada subconjunto de tres otras estrategias, si hay una estrategia que coloca probabilidad positiva solo en estas tres estrategias que domina a la estrategia a ser eliminada, utilizando la Proposición 1). Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto no vacío de cláusulas C sobre un conjunto no vacío de variables V, con literales correspondientes L = {+v : v ∈ V} ∪ {−v : v ∈ V}) al siguiente juego de dos jugadores. Para cada variable v ∈ V, el jugador de la fila tiene estrategias s+v, s−v, s1 v, s2 v, s3 v, s4 v, y el jugador de la columna tiene estrategias t1 v, t2 v, t3 v, t4 v. Para cada cláusula c ∈ C, el jugador de la fila tiene una estrategia sc, y el jugador de la columna tiene una estrategia tc, así como, para cada literal l que ocurre en c, una estrategia adicional tl c. El jugador de la fila tiene dos estrategias adicionales s1 y s2. (s2 es la estrategia que estamos buscando eliminar). Finalmente, el jugador de la columna tiene una estrategia adicional t1. La función de utilidad para el jugador de la fila se da de la siguiente manera (donde ε es algún número suficientemente pequeño): • ur(s+v, tj v) = 4 si j ∈ {1, 2}, para todo v ∈ V; • ur(s+v, tj v) = 1 si j ∈ {3, 4}, para todo v ∈ V; • ur(s−v, tj v) = 1 si j ∈ {1, 2}, para todo v ∈ V; • ur(s−v, tj v) = 4 si j ∈ {3, 4}, para todo v ∈ V; • ur(s+v, t) = ur(s−v, t) = 0 para todo v ∈ V y t /∈ {t1 v, t2 v, t3 v, t4 v}; • ur(si v, ti v) = 13 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • ur(si v, t) = para todo v ∈ V, i ∈ {1, 2, 3, 4}, y t = ti v; • ur(sc, tc) = 2 para todo c ∈ C; • ur(sc, t) = 0 para todo c ∈ C y t = tc; • ur(s1, t1) = 1 + ε; • ur(s1, t) = para todo t = t1; • ur(s2, t1) = 1; • ur(s2, tc) = 1 para todo c ∈ C; • ur(s2, t) = 0 para todo t /∈ {t1} ∪ {tc : c ∈ C}. La función de utilidad para el jugador de la columna se da de la siguiente manera: • uc(si v, ti v) = 1 para todo v ∈ V e i ∈ {1, 2, 3, 4}; • uc(s, ti v) = 0 para todo v ∈ V, i ∈ {1, 2, 3, 4}, y s = si v; • uc(sc, tc) = 1 para todo c ∈ C; • uc(sl, tc) = 1 para todo c ∈ C y l ∈ L que ocurre en c; • uc(s, tc) = 0 para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c}; • uc(sc, tl c) = 1 + para todo c ∈ C; • uc(sl, tl c) = 1 + para todo c ∈ C y l = l que ocurre en c; • uc(s, tl c) = para todo c ∈ C y s /∈ {sc} ∪ {sl : l ∈ c, l = l}; • uc(s2, t1) = 1; • uc(s, t1) = 0 para todo s = s2. Ahora demostramos que las dos instancias son equivalentes. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, considera la siguiente secuencia de eliminaciones en nuestro juego: 1. Para cada variable v que se establezca como verdadera en la asignación satisfactoria, elimine s+v con la estrategia mixta σr que coloca probabilidad 1/3 en s−v, probabilidad 1/3 en s1 v y probabilidad 1/3 en s2 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 14/3 > 4; contra t3 v o t4 v, es 4/3 > 1; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. De manera similar, para cada variable v que se establezca como falso en la asignación satisfactoria, elimine s−v con la estrategia mixta σr que coloca probabilidad 1/3 en s+v, probabilidad 1/3 en s3 v, y probabilidad 1/3 en s4 v. (La utilidad esperada de jugar σr contra t1 v o t2 v es 4/3 > 1; contra t3 v o t4 v, es 14/3 > 4; y contra cualquier otra cosa es 2/3 > 0. Por lo tanto, la dominancia es válida. Para cada c ∈ C, elimine tc con cualquier tl c para el cual l se haya establecido como verdadero en la asignación satisfactoria. (Esta es una dominancia válida porque tl c funciona mejor que tc contra cualquier estrategia que no sea sl, y eliminamos sl en el paso 1 o en el paso 2.) 4. Finalmente, elimina s2 con s1. (Esta es una dominancia válida porque s1 tiene un mejor rendimiento que s2 contra cualquier estrategia que no esté en {tc : c ∈ C}, la cual eliminamos en el paso 3.) Por lo tanto, hay un camino de eliminación que elimina s2. Ahora, supongamos que hay un camino de eliminación que elimina s2. La estrategia que eventualmente domina a s2 debe colocar la mayor parte de su probabilidad en s1, ya que s1 es la única otra estrategia que se desempeña bien contra t1, la cual no puede ser eliminada antes que s2. Sin embargo, s1 tiene un rendimiento significativamente peor que s2 contra cualquier estrategia tc con c ∈ C, por lo que se deduce que todas estas estrategias deben ser eliminadas primero. Cada estrategia tc solo puede ser eliminada por una estrategia que coloque la mayor parte de su peso en las estrategias correspondientes tl c con l ∈ c, ya que son las únicas otras estrategias que funcionan bien contra sc, las cuales no pueden ser eliminadas antes de tc. Sin embargo, cada estrategia tl c funciona significativamente peor que tc contra sl, por lo que se deduce que para cada cláusula c, para uno de los literales l que aparecen en ella, sl debe ser eliminado primero. Ahora, las estrategias de la forma tj v nunca serán eliminadas porque son las únicas mejores respuestas a las estrategias correspondientes sj v (que, a su vez, son las mejores respuestas a las tj v correspondientes). Como resultado, si la estrategia s+v (respectivamente, s−v) es eliminada, entonces su estrategia opuesta s−v (respectivamente, s+v) ya no puede ser eliminada, por la siguiente razón. No hay otra estrategia pura restante que obtenga una utilidad significativa contra más de una de las estrategias t1 v, t2 v, t3 v, t4 v, pero s−v (respectivamente, s+v) obtiene una utilidad significativa contra las 4, y por lo tanto no puede ser dominada por una estrategia mixta que coloque una probabilidad positiva en como máximo 3 estrategias. Se deduce que para cada v ∈ V, a lo sumo una de las estrategias s+v, s−v es eliminada, de tal manera que para cada cláusula c, para uno de los literales l que aparece en ella, sl debe ser eliminada. Pero luego, establecer todas las literales l de manera que sl sea eliminado a verdadero constituye una solución a la instancia de satisfactibilidad. En la siguiente sección, regresamos al escenario donde no hay restricción en el número de estrategias puras en las que una estrategia mixta dominante puede colocar probabilidad positiva. 6. DOMINANCIA (ITERADA) EN JUEGOS BAYESIANOS Hasta ahora, nos hemos enfocado en juegos de forma normal que están representados de manera plana (es decir, cada entrada de la matriz se da explícitamente). Sin embargo, para muchos juegos, la representación plana es demasiado grande para escribirse explícitamente, y en su lugar, se necesita utilizar alguna representación que aproveche la estructura del juego. Los juegos bayesianos, además de ser de interés por sí mismos, pueden considerarse como una representación estructurada útil de los juegos en forma normal, y los estudiaremos en esta sección. En un juego bayesiano, cada jugador recibe primero información de preferencia de manera privada (el tipo de jugador) de una distribución, la cual determina la utilidad que ese jugador recibe por cada resultado del juego (es decir, el vector de acciones jugadas en el juego). Después de recibir este tipo, el jugador realiza una acción basada en él. Definición 7. Un juego bayesiano está dado por un conjunto de jugadores {1, 2, . . . , n}; y, para cada jugador i, un conjunto (finito) de acciones Ai, un espacio de tipos (finito) Θi con una distribución de probabilidad πi sobre él, y una función de utilidad ui : Θi × A1 × A2 × . . . × An → R (donde ui(θi, a1, a2, . . . , an) denota la utilidad del jugador i cuando su tipo es θi y cada jugador j juega la acción aj). Una estrategia pura en un juego bayesiano es una asignación de tipos a acciones, σi: Θi → Ai, donde σi(θi) denota la acción que el jugador i elige para el tipo θi. Cualquier vector de estrategias puras en un juego bayesiano define una utilidad (esperada) para cada jugador, y por lo tanto podemos traducir un juego bayesiano en un juego en forma normal. En este juego en forma normal, las nociones de dominancia y dominancia iterada se definen como antes. Sin embargo, la representación en forma normal del juego es exponencialmente más grande que la representación bayesiana, ya que cada jugador i tiene |Ai||Θi| estrategias puras distintas. Por lo tanto, cualquier algoritmo para juegos bayesianos que dependa de expandir el juego a su forma normal requerirá tiempo exponencial. Específicamente, nuestros resultados de facilidad para juegos en forma normal no se transfieren directamente a esta configuración. De hecho, resulta que verificar si una estrategia está dominada por una estrategia pura es difícil en juegos bayesianos. Teorema 5. En un juego bayesiano, es NP-completo decidir si una estrategia pura dada σr : Θr → Ar está dominada por alguna otra estrategia pura (tanto para la dominancia estricta como débil), incluso cuando la distribución de los jugadores de fila sobre los tipos es uniforme. Prueba. El problema está en NP porque es fácil verificar si una estrategia dominante candidata es realmente una estrategia dominante. Para demostrar que el problema es NP-duro, reducimos una instancia arbitraria de satisfactibilidad (dada por un conjunto de cláusulas C utilizando variables de V) al siguiente juego bayesiano. Que el conjunto de acciones de los jugadores de la fila sea Ar = {t, f, 0} y que el conjunto de acciones de los jugadores de la columna sea Ac = {ac : c ∈ C}. Que el conjunto de tipos de jugadores de fila sea Θr = {θv : v ∈ V}, con una distribución πr que es uniforme. Que la función de utilidad de los jugadores de la fila sea la siguiente: • ur(θv, 0, ac) = 0 para todo v ∈ V y c ∈ C; • ur(θv, b, ac) = |V | para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b satisface c; • ur(θv, b, ac) = −1 para todo v ∈ V, c ∈ C y b ∈ {t, f} tal que establecer v como b no satisface c. En general, un jugador también puede recibir una señal sobre las preferencias de los otros jugadores, pero aquí no nos ocuparemos de eso. Que la estrategia pura que se va a dominar sea aquella que juega 0 para cada tipo. Mostramos que la estrategia está dominada por una estrategia pura si y solo si hay una solución a la instancia de satisfactibilidad. Primero, supongamos que hay una solución para la instancia de satisfactibilidad. Entonces, sea σd r dado por: σd r (θv) = t si v se establece como verdadero en la solución de la instancia de satisfactibilidad, y σd r (θv) = f en caso contrario. Entonces, en contra de cualquier acción ac realizada por el jugador de la columna, existe al menos un tipo θv tal que o bien +v ∈ c y σd r (θv) = t, o bien −v ∈ c y σd r (θv) = f. Por lo tanto, la utilidad esperada de los jugadores de la fila contra la acción ac es al menos |V| |V| − |V|−1 |V| = 1 |V| > 0. Entonces, σd r es una estrategia dominante. Ahora, supongamos que existe una estrategia pura dominante σd r. Esta estrategia dominante debe jugar t o f al menos para un tipo. Por lo tanto, en contra de cualquier ac por el jugador de la columna, debe haber al menos algún tipo θv para el cual ur(θv, σd r (θv), ac) > 0. Es decir, debe haber al menos una variable v tal que al establecer v en σd r (θv) satisfaga c. Pero entonces, al establecer cada v en σd r (θv) deben satisfacerse todas las cláusulas. Entonces, existe una asignación satisfactoria. Sin embargo, resulta que podemos modificar los programas lineales de la Proposición 1 para obtener un algoritmo de tiempo polinómico para verificar si una estrategia está dominada por una estrategia mixta en juegos bayesianos. Teorema 6. En un juego bayesiano, se puede decidir en tiempo polinómico si una estrategia dada (posiblemente mixta) σr está dominada por alguna otra estrategia mixta, utilizando programación lineal (tanto para dominancia estricta como débil). Prueba. Podemos modificar los programas lineales presentados en la Proposición 1 de la siguiente manera. Para la dominancia estricta, asumiendo nuevamente sin pérdida de generalidad que todas las utilidades en el juego son positivas, utilice el siguiente programa lineal (en el cual pσr r (θr, ar) es la probabilidad de que σr, la estrategia a ser dominada, coloque en ar para el tipo θr): minimizar θr∈Θr ar∈Ar pr(ar) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) ≤ 1. Suponiendo que π(θr) > 0 para todo θr ∈ Θr, este programa devolverá un valor objetivo menor que |Θr| si y solo si σr está estrictamente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Para la dominancia débil, utiliza el siguiente programa lineal: maximizar ac∈Ac ( θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar)− θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar)) tal que para cualquier ac ∈ Ac, θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pr(θr, ar) ≥ θr∈Θr ar∈Ar π(θr)ur(θr, ar, ac)pσr r (θr, ar); para cualquier θr ∈ Θr, ar∈Ar pr(θr, ar) = 1. Este programa devolverá un valor objetivo mayor que 0 si y solo si σr está débilmente dominado, mediante un razonamiento similar al realizado en la Proposición 1. Ahora pasamos al dominio iterado en juegos bayesianos. Ingenuamente, uno podría argumentar que la dominancia iterada en juegos bayesianos de 95 siempre requiere un número exponencial de pasos cuando se puede eliminar una fracción significativa de las estrategias puras de los juegos, ya que hay un número exponencial de estrategias puras. Sin embargo, este no es un argumento muy sólido porque muchas veces podemos eliminar exponencialmente muchas estrategias puras en un solo paso. Por ejemplo, si para algún tipo θr ∈ Θr tenemos, para todo ac ∈ Ac, que u(θr, a1 r, ac) > u(θr, a2 r, ac), entonces cualquier estrategia pura para el jugador de la fila que juega la acción a2 r para el tipo θr está dominada (por la estrategia que juega la acción a1 r para el tipo θr en su lugar) - y hay exponencialmente muchas (|Ar||Θr|−1) tales estrategias. Por lo tanto, es concebible que solo necesitemos un número polinomial de eliminaciones de colecciones de estrategias de un jugador. Sin embargo, el siguiente teorema muestra que este no es el caso, al dar un ejemplo donde se requiere un número exponencial de iteraciones (es decir, alternancias entre los jugadores en la eliminación de estrategias). (Enfatizamos que este no es un resultado sobre complejidad computacional). Teorema 7. Incluso en juegos bayesianos simétricos de 3 jugadores, la dominancia iterada por estrategias puras puede requerir un número exponencial de iteraciones (tanto para la dominancia estricta como débil), incluso con solo tres acciones por jugador. Prueba. Que cada jugador i ∈ {1, 2, 3} tenga n + 1 tipos θ1 i , θ2 i , . . . , θn+1 i. Que cada jugador i tenga 3 acciones ai, bi, ci, y que la función de utilidad de cada jugador esté definida de la siguiente manera. (En lo siguiente, i + 1 e i + 2 son abreviaturas de i + 1 (mod 3) e i + 2 (mod 3) cuando se utilizan como índices de jugador. Además, −∞ puede ser reemplazado por un número suficientemente negativo. Finalmente, δ y deberían elegirse muy pequeños (incluso en comparación con 2−(n+1)), y deberían ser más del doble de grandes que δ.) • ui(θ1 i ; ai, ci+1, ci+2) = −1; • ui(θ1 i ; ai, si+1, si+2) = 0 para si+1 = ci+1 o si+2 = ci+2; • ui(θ1 i ; bi, si+1, si+2) = − para si+1 = ai+1 y si+2 = ai+2; • ui(θ1 i ; bi, si+1, si+2) = −∞ para si+1 = ai+1 o si+2 = ai+2; • ui(θ1 i ; ci, si+1, si+2) = −∞ para todos los si+1, si+2; • ui(θj i ; ai, si+1, si+2) = −∞ para todos los si+1, si+2 cuando j > 1; • ui(θj i ; bi, si+1, si+2) = − para todos los si+1, si+2 cuando j > 1; • ui(θj i ; ci, si+1, ci+2) = δ − − 1/2 para todos los si+1 cuando j > 1; • ui(θj i ; ci, si+1, si+2) = δ− para todos los si+1 y si+2 = ci+2 cuando j > 1. Que la distribución sobre los tipos de cada jugador esté dada por p(θj i ) = 2−j (con la excepción de que p(θ2 i ) = 2−2 +2−(n+1) ). Estaremos interesados en eliminar estrategias de la siguiente forma: jugar bi para el tipo θ1 i, y jugar bi o ci de lo contrario. Dado que la función de utilidad es la misma para cualquier tipo θj i con j > 1, estas estrategias están efectivamente definidas por la probabilidad total que asignan a ci,8, que es t2 i (2−2 + 2−(n+1) ) + n+1 j=3 tj i 2−j donde tj i = 1 si el jugador i 8. Observa que las estrategias siguen siendo estrategias puras; la probabilidad asignada a una acción por una estrategia aquí es simplemente la suma de las probabilidades de los tipos para los cuales la estrategia elige esa acción. juega ci para el tipo θj i, y 0 en caso contrario. Esta probabilidad es diferente para cualquier par de estrategias diferentes de la forma dada, y tenemos exponencialmente muchas estrategias diferentes de la forma dada. Para cualquier probabilidad q que pueda expresarse como t2(2−2 + 2−(n+1) ) + n+1 j=3 tj2−j (con todos los tj ∈ {0, 1}), dejemos que σi(q) denote la estrategia (única) de la forma dada para el jugador i que coloca una probabilidad total de q en ci. Cualquier estrategia que juegue ci para el tipo θ1 i o ai para algún tipo θj i con j > 1 puede ser eliminada inmediatamente. Mostraremos que, después de eso, debemos eliminar primero las estrategias σi(q) con q alto, trabajando lentamente hacia abajo hasta aquellas con q más bajo. Reclamo 1: Si σi+1(q) y σi+2(q) aún no han sido eliminados, y q < q, entonces σi(q) aún no puede ser eliminado. Prueba: Primero, demostramos que ninguna estrategia σi(q) puede eliminar a σi(q). Contra σi+1(q), σi+2(q), la utilidad de jugar σi(p) es − + p · δ − p · q /2. Por lo tanto, cuando q = 0, es mejor establecer p lo más alto posible (y observamos que σi+1(0) y σi+2(0) no han sido eliminados), pero cuando q > 0, es mejor establecer p lo más bajo posible porque δ < q /2. Por lo tanto, ya sea que q > q o q < q, σi(q) siempre será estrictamente mejor que σi(q) contra algunas estrategias restantes de los oponentes. Por lo tanto, ninguna estrategia σi(q) puede eliminar a σi(q). Las únicas otras estrategias puras que podrían dominar a σi(q) son estrategias que juegan ai para el tipo θ1 i, y bi o ci para todos los demás tipos. Tomemos tal estrategia y supongamos que juega c con probabilidad p. Contra σi+1(q), σi+2(q) (que aún no han sido eliminadas), la utilidad de jugar esta estrategia es −(q)2 /2 − /2 + p · δ − p · q /2. Por otro lado, jugar σi(q) da como resultado − + q · δ − q · q /2. Dado que q > q, tenemos −(q )2 /2 < −q · q /2, y dado que δ y son pequeños, se deduce que σi(q) recibe una utilidad mayor. Por lo tanto, ninguna estrategia domina a σi(q), lo que demuestra la afirmación. Afirmación 2: Si para todo q > q, σi+1(q) y σi+2(q) han sido eliminados, entonces σi(q) puede ser eliminado. Prueba: Considera la estrategia para el jugador i que juega ai para el tipo θ1 i, y bi para todos los demás tipos (llamemos a esta estrategia σi); afirmamos que σi domina a σi(q). Primero, si alguno de los otros jugadores k juega ak para θ1 k, entonces σi se desempeña mejor que σi(q) (que recibe −∞ en algunos casos). Dado que las estrategias para el jugador k que juega ck para el tipo θ1 k, o ak para algún tipo θj k con j > 1, ya han sido eliminadas, todo lo que queda por comprobar es que σi sea mejor que σi(q) siempre que los otros dos jugadores jueguen estrategias de la siguiente forma: jugar bk para el tipo θ1 k, y jugar uno de bk o ck en caso contrario. Observamos que entre estas estrategias, no queda ninguna que coloque una probabilidad mayor que q en ck. Si dejamos que qk denote la probabilidad con la que el jugador k juega ck, la utilidad esperada de jugar σi es −qi+1 · qi+2/2 − /2. Por otro lado, la utilidad de jugar σi(q) es − + q · δ − q · qi+2/2. Dado que qi+1 ≤ q, la diferencia entre estas dos expresiones es al menos /2 − δ, la cual es positiva. Se deduce que σi domina a σi(q). A partir de la Reclamación 2, se deduce que todas las estrategias de la forma σi(q) serán eliminadas eventualmente. Sin embargo, la Reclamación 1 muestra que no podemos avanzar y eliminar múltiples estrategias de este tipo para un jugador, a menos que al menos otro jugador mantenga simultáneamente las estrategias eliminadas: cada vez que se elimina un σi(q) tal que σi+1(q) y σi+2(q) aún no han sido eliminados, necesitamos eliminar una de las dos últimas estrategias antes de que se pueda eliminar cualquier σi(q) con q > q, es decir, necesitamos alternar entre jugadores. Dado que hay exponencialmente muchas estrategias de la forma σi(q), se sigue que la eliminación iterada requerirá exponencialmente muchas iteraciones para completarse. Por lo tanto, un algoritmo eficiente para la dominancia iterada (estricta o débil) por estrategias puras en juegos bayesianos, si existe, debe ser capaz de realizar (al menos parte de) muchas iteraciones en un solo paso del algoritmo (porque si cada paso solo realizara una sola iteración, necesitaríamos exponencialmente muchos pasos). Interesantemente, Knuth et al. [11] argumentan que la dominancia iterada parece ser un problema inherentemente secuencial (a la luz de su resultado de que la dominancia muy débil iterada es P-completa, es decir, aparentemente no paralelizable de manera eficiente), lo que sugiere que la agregación de muchas iteraciones puede ser difícil. 7. CONCLUSIONES Aunque el concepto de equilibrio de Nash se estudia cada vez más intensamente en nuestra comunidad, el concepto quizás más elemental de dominancia (iterada) ha recibido mucha menos atención. En este artículo estudiamos varios aspectos computacionales de este concepto. Primero estudiamos tanto la dominancia estricta como la débil (no iterada), y demostramos que verificar si una estrategia dada es dominada por alguna estrategia mixta puede hacerse en tiempo polinómico utilizando la resolución de un único programa lineal. Luego pasamos a la dominancia iterada. Mostramos que determinar si existe algún camino que elimine una estrategia dada es NP-completo con dominancia débil iterada. Esto nos permitió también demostrar que determinar si existe un camino que conduzca a una solución única es NP-completo. Ambos resultados se mantienen tanto con como sin dominancia de estrategias mixtas. (Una versión más débil del segundo resultado (solo sin dominancia de estrategias mixtas) ya se conocía [7].) La dominancia estricta iterada, por otro lado, es independiente del camino (tanto con como sin dominancia por estrategias mixtas) y, por lo tanto, puede realizarse en tiempo polinómico. Luego estudiamos qué sucede cuando la estrategia dominante puede asignar una probabilidad positiva solo a unas pocas estrategias puras. Primero, demostramos que encontrar la estrategia dominante con el tamaño de soporte mínimo es NP-completo (tanto para dominancia estricta como débil). Luego, demostramos que la dominancia estricta iterada se vuelve dependiente del camino cuando hay un límite en el tamaño del soporte de las estrategias dominantes, y que decidir si una estrategia dada puede ser eliminada por dominancia estricta iterada bajo esta restricción es NP-completo (incluso cuando el límite en el tamaño del soporte es 3). Finalmente, estudiamos la dominancia y la dominancia iterada en juegos bayesianos, como un ejemplo de un lenguaje de representación conciso para juegos en forma normal que es interesante por sí mismo. Mostramos que, a diferencia de los juegos en forma normal, decidir si una estrategia pura dada está dominada por otra estrategia pura en un juego bayesiano es NP-completo (tanto con dominancia estricta como débil); sin embargo, decidir si una estrategia está dominada por alguna estrategia mixta aún se puede hacer en tiempo polinómico con la resolución de un único programa lineal (tanto con dominancia estricta como débil). Finalmente, demostramos que la dominancia iterada utilizando estrategias puras puede requerir un número exponencial de iteraciones en un juego bayesiano (tanto con dominancia estricta como débil). Hay varias vías para investigaciones futuras. Primero, está la pregunta abierta de si es posible completar la dominancia iterada en juegos bayesianos en tiempo polinómico (aunque demostramos que a veces se requiere un número exponencial de alternancias entre los jugadores para eliminar estrategias). Segundo, podemos estudiar los aspectos computacionales del dominio (iterado) en representaciones concisas de juegos de forma normal que no sean juegos bayesianos, por ejemplo, en juegos gráficos o juegos de grafo de efecto local/acción. (Ya se ha estudiado cómo realizar eficientemente el dominio muy débil iterado en juegos estocásticos parcialmente observables). Finalmente, podemos preguntarnos si algunos de los algoritmos que describimos (como el de dominancia estricta iterada con estrategias mixtas) pueden ser optimizados para ser más rápidos. 8. REFERENCIAS [1] Krzysztof R. Apt. Pruebas uniformes de independencia del orden para varios procedimientos de eliminación de estrategias. Contribuciones a la Economía Teórica, 4(1), 2004. [2] Nivan A. R. Bhat y Kevin Leyton-Brown. Calculando equilibrios de Nash de juegos de gráficos de acción. En UAI, 2004. [3] Ben Blum, Christian R. Shelton y Daphne Koller. Un método de continuación para equilibrios de Nash en juegos estructurados. En IJCAI, 2003. [4] Vincent Conitzer y Tuomas Sandholm. Resultados de complejidad sobre equilibrios de Nash. En IJCAI, páginas 765-771, 2003. [5] Drew Fudenberg y Jean Tirole. Teoría de juegos. MIT Press, 1991. [6] Itzhak Gilboa, Ehud Kalai, y Eitan Zemel. En el orden de eliminar estrategias dominadas. Cartas de Investigación Operativa, 9:85-89, 1990. [7] Itzhak Gilboa, Ehud Kalai y Eitan Zemel. La complejidad de eliminar estrategias dominadas. Matemáticas de la Investigación de Operaciones, 18:553-565, 1993. [8] Eric A. Hansen, Daniel S. Bernstein y Shlomo Zilberstein. Programación dinámica para juegos estocásticos parcialmente observables. En AAAI, páginas 709-715, 2004. [9] Michael Kearns, Michael Littman y Satinder Singh. Modelos gráficos para teoría de juegos. En UAI, 2001. [10] Leonid Khachiyan. Un algoritmo polinómico en programación lineal. Matemática soviética. Doklady, 20:191-194, 1979. [11] Donald E. Knuth, Christos H. Papadimitriou y John N Tsitsiklis. Una nota sobre la eliminación de estrategias en juegos bimatrix. Cartas de Investigación Operativa, 7(3):103-107, 1988. [12] Kevin Leyton-Brown y Moshe Tennenholtz. Juegos de efecto local. En IJCAI, 2003. [13] Richard Lipton, Evangelos Markakis y Aranyak Mehta. Jugando juegos grandes utilizando estrategias simples. En ACM-EC, páginas 36-41, 2003. [14] Michael Littman y Peter Stone. Un algoritmo de equilibrio de Nash de tiempo polinómico para juegos repetidos. En ACM-EC, páginas 48-54, 2003. [15] Leslie M. Marx y Jeroen M. Swinkels. Independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 18:219-245, 1997. [16] Leslie M. Marx y Jeroen M. Swinkels. Corrección, independencia del orden para la dominancia débil iterada. Juegos y Comportamiento Económico, 31:324-329, 2000. [17] Andreu Mas-Colell, Michael Whinston y Jerry R. Green. Teoría microeconómica. Oxford University Press, 1995. [18] Roger Myerson.
Editorial de la Universidad de Oxford, 1995. [18] Roger Myerson. Teoría de juegos: Análisis de conflictos. Harvard University Press, Cambridge, 1991. [19] Martin J Osborne y Ariel Rubinstein. Un curso de Teoría de Juegos. MIT Press, 1994. [20] Christos Papadimitriou. 

MIT Press, 1994. [20] Christos Papadimitriou. Algoritmos, juegos e Internet. En STOC, páginas 749-753, 2001. [21] Ryan Porter, Eugene Nudelman y Yoav Shoham. Métodos de búsqueda simples para encontrar un equilibrio de Nash. En AAAI, páginas 664-669, 2004. 97