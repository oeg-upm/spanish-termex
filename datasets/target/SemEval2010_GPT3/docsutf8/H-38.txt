DiffusionRank: Una posible penicilina para el spam en la web Haixuan Yang, Irwin King y Michael R. Lyu Dept. Del Departamento de Ciencias de la Computación e Ingeniería de la Universidad China de Hong Kong en Shatin, NT, Hong Kong {hxyang,king,lyu}@cse.cuhk.edu.hk RESUMEN Aunque el algoritmo PageRank ha demostrado ser muy efectivo para clasificar páginas web, los puntajes de clasificación de las páginas web pueden ser manipulados. Para abordar el problema de manipulación y arrojar una nueva perspectiva sobre la estructura web, proponemos un algoritmo de clasificación llamado DiffusionRank. DiffusionRank está motivado por el fenómeno de la difusión de calor, que puede estar conectado con la clasificación web porque las actividades que fluyen en la web pueden ser imaginadas como flujo de calor, el enlace de una página a otra puede ser tratado como el conducto de un aire acondicionado, y el flujo de calor puede representar la estructura del grafo web subyacente. Teóricamente demostramos que DiffusionRank puede servir como una generalización de PageRank cuando el coeficiente de difusión de calor γ tiende a infinito. En tal caso, 1/γ = 0, DiffusionRank (PageRank) tiene una baja capacidad de anti-manipulación. Cuando γ = 0, DiffusionRank obtiene la mayor capacidad de anti-manipulación, pero en ese caso, la estructura web es completamente ignorada. Por consiguiente, γ es un factor interesante que puede controlar el equilibrio entre la capacidad de preservar la Web original y la capacidad de reducir el efecto de la manipulación. Se encuentra empíricamente que, cuando γ = 1, DiffusionRank tiene un efecto similar al de la penicilina en la manipulación de enlaces. Además, DiffusionRank se puede emplear para encontrar relaciones de grupo a grupo en la Web, dividir el grafo de la Web en varias partes y encontrar comunidades de enlaces. Los resultados experimentales muestran que el algoritmo DiffusionRank logra las ventajas mencionadas anteriormente como se esperaba. Categorías y Descriptores de Asignaturas: H.3.3 [Sistemas de Información]: Búsqueda y Recuperación de Información; G2.2 [Matemáticas Discretas]: Teoría de Grafos Términos Generales: Algoritmos. 1. INTRODUCCIÓN Si bien el algoritmo PageRank [13] ha demostrado ser muy efectivo para clasificar páginas web, los resultados inexactos de PageRank se producen debido a manipulaciones de páginas web por parte de personas con intereses comerciales. El problema de manipulación también se conoce como spam web, que se refiere a páginas con hipervínculos en la World Wide Web que son creadas con la intención de engañar a los motores de búsqueda [7]. Se informa que aproximadamente el 70% de todas las páginas en el dominio .biz y alrededor del 35% de las páginas en el dominio .us pertenecen a la categoría de spam [12]. La razón del aumento de spam en la web se explica en [12]: algunos operadores de sitios web intentan influir en la posición de sus páginas dentro de los resultados de búsqueda debido a la gran cantidad de tráfico web que proviene de búsquedas y al alto valor monetario potencial de este tráfico. Desde el punto de vista de los operadores del sitio web que desean aumentar el valor de clasificación de una página en particular para los motores de búsqueda, el Keyword Stuffing y el Link Stuffing se están utilizando ampliamente. Desde el punto de vista de los administradores de motores de búsqueda, el spam en la web es muy perjudicial para las evaluaciones de los usuarios y, por lo tanto, su preferencia al elegir motores de búsqueda, ya que la gente cree que un buen motor de búsqueda no debería devolver resultados irrelevantes o de baja calidad. Se están empleando dos métodos para combatir el problema del spam en la Web. Los métodos de aprendizaje automático se emplean para manejar el relleno de palabras clave. Para aplicar con éxito métodos de aprendizaje automático, necesitamos extraer algunas características textuales útiles de las páginas web, para etiquetar parte de las páginas web como spam o no spam, y luego aplicar técnicas de aprendizaje supervisado para etiquetar otras páginas. Por ejemplo, ver [5, 12]. Los métodos de análisis de enlaces también se emplean para abordar el problema de relleno de enlaces. Un ejemplo es el TrustRank [7], un método basado en enlaces, en el cual se utiliza la estructura de enlaces para que las páginas de confianza etiquetadas por humanos puedan propagar sus puntuaciones de confianza a través de sus enlaces. Este documento se centra en el método basado en enlaces. El resto de los materiales están organizados de la siguiente manera. En la siguiente sección, presentamos una breve revisión de la literatura sobre diversas técnicas de clasificación relacionadas. Establecemos el Modelo de Difusión de Calor (HDM) en varios casos en la Sección 3, y proponemos DiffusionRank en la Sección 4. En la Sección 5, describimos los conjuntos de datos en los que trabajamos y los resultados experimentales. Finalmente, sacamos conclusiones en la Sección 6.2. REVISIÓN DE LA LITERATURA La importancia de una página web se determina ya sea por el contenido textual de las páginas o por la estructura de hipervínculos o ambos. Como en trabajos anteriores [7, 13], nos enfocamos en métodos de clasificación determinados únicamente por la estructura de hipervínculos del grafo web. Todos los algoritmos de clasificación mencionados están basados en un grafo. Para nuestra conveniencia, primero damos algunas notaciones. Denote un grafo estático por G = (V, E), donde V = {v1, v2, . . . , vn}, E = {(vi, vj) | hay una arista de vi a vj}. Los símbolos ii y di denotan respectivamente el grado de entrada y el grado de salida de la página i. 2.1 PageRank La importancia de una página web es un asunto inherentemente subjetivo, que depende de los intereses, conocimientos y actitudes de los lectores [13]. Sin embargo, la importancia promedio de todos los lectores puede considerarse como un asunto objetivo. PageRank intenta encontrar una importancia promedio basada en la estructura de enlaces web, la cual se considera que contiene una gran cantidad de datos estadísticos. La Web está modelada por un grafo dirigido G en los algoritmos de PageRank, y la clasificación o importancia xi para la página vi ∈ V se define de forma recursiva en términos de las páginas que apuntan a ella: xi = (j,i)∈E aijxj, donde se asume que aij es 1/dj si hay un enlace de j a i, y 0 en caso contrario. O en términos de matrices, x = Ax. Cuando se introduce el concepto de salto aleatorio, la forma matricial se cambia a x = [(1 − α)g1T + αA]x, donde α es la probabilidad de seguir el enlace real de una página, (1 − α) es la probabilidad de realizar un salto aleatorio, y g es un vector estocástico, es decir, 1T g = 1. Normalmente, α = 0.85 y g = 1 n 1 es uno de los ajustes estándar, donde 1 es el vector de todos unos [6, 13]. 2.2 TrustRank TrustRank [7] está compuesto por dos partes. La primera parte es el algoritmo de selección de semillas, en el que se propuso el PageRank inverso para ayudar a un experto a determinar un buen nodo. La segunda parte consiste en utilizar el PageRank sesgado, en el cual la distribución estocástica g se comparte entre todas las páginas de confianza encontradas en la primera parte. Además, la entrada inicial de x también se establece como g. La justificación para el PageRank inverso y los experimentos sólidos respaldan su ventaja en la lucha contra el spam en la Web. Aunque hay muchas variaciones de PageRank, por ejemplo, una familia de algoritmos de clasificación basados en enlaces en [2], TrustRank es especialmente elegido para comparaciones por tres razones: (1) está diseñado para combatir el spam; (2) sus parámetros fijos facilitan la comparación; y (3) tiene una fuerte relación teórica con PageRank y DiffusionRank. 2.3 Clasificación en variedades En [17], se propuso la idea de clasificar en las variedades de datos. Los puntos de datos representados como vectores en el espacio euclidiano se consideran extraídos de una variedad. A partir de los puntos de datos en tal variedad, se crea un grafo ponderado no dirigido, luego la matriz de pesos se obtiene mediante el suavizado del núcleo gaussiano. Si bien el algoritmo de clasificación de múltiples resultados logra un resultado impresionante en la clasificación de imágenes, el vector sesgado g y el parámetro k en el PageRank personalizado general en [17] son desconocidos en el entorno del grafo web; por lo tanto, no lo incluimos en las comparaciones. 2.4 Difusión de calor La difusión de calor es un fenómeno físico. En un medio, el calor siempre fluye desde la posición con alta temperatura hacia la posición con baja temperatura. El núcleo de calor se utiliza para describir la cantidad de calor que un punto recibe de otro punto. Recientemente, la idea del núcleo de calor en una variedad se ha utilizado en aplicaciones como la reducción de dimensiones [3] y la clasificación [9, 10, 14]. En este trabajo, se considera que los datos de entrada se encuentran en una estructura especial. Todos los temas anteriores están relacionados con nuestro trabajo. Los lectores pueden encontrar que nuestro modelo es una generalización de PageRank para resistir la manipulación web, que heredamos la primera parte de TrustRank, que tomamos prestado el concepto de ranking en la variedad para introducir nuestro modelo, y que la difusión de calor es un esquema principal en este artículo. 3. MODELO DE DIFUSIÓN DE CALOR La difusión de calor nos proporciona otra perspectiva sobre cómo podemos ver la Web y también una forma de calcular los valores de clasificación. En este documento, se considera que las páginas web provienen de una variedad desconocida, y la estructura de enlaces forma un grafo dirigido, que se considera una aproximación a la variedad desconocida. El núcleo de calor establecido en el grafo web se considera como la representación de la relación entre las páginas web. La distribución de temperatura después de un período de tiempo fijo, inducida por una distribución inicial de temperatura especial, se considera como los puntajes de rango en las páginas web. Antes de establecer los modelos propuestos, primero mostramos nuestras motivaciones. 3.1 Motivaciones Hay dos puntos para explicar que PageRank es susceptible al spam web. • Demasiado democrático. Existe una creencia detrás de PageRank: todas las páginas nacen iguales. Esto se puede ver a partir de la capacidad de voto igual de una página: la suma de cada columna es igual a uno. La igual capacidad de voto de todas las páginas brinda la oportunidad a un operador de un sitio web de aumentar una página manipulada creando un gran número de nuevas páginas que apunten a esta página, ya que todas las páginas recién creadas pueden obtener un derecho de voto igual. • Independiente de la entrada. Para cualquier entrada inicial no nula dada, la iteración convergerá a la misma distribución estable correspondiente al valor propio máximo 1 de la matriz de transición. Esta propiedad independiente de la entrada hace imposible establecer una entrada inicial especial (valores más grandes para páginas de confianza y menos valores, incluso valores negativos, para páginas de spam) para evitar el spam web. La característica de PageRank independiente de la entrada se puede explicar de la siguiente manera. P = [(1 − α)g1T + αA] es una matriz estocástica positiva si g se establece como un vector estocástico positivo (la distribución uniforme es una de esas configuraciones), y por lo tanto, el mayor valor propio es 1 y no hay otro valor propio cuyo valor absoluto sea igual a 1, lo cual está garantizado por el Teorema de Perron [11]. Sea y el autovector correspondiente a 1, entonces tenemos Py = y. Sea {xk} la secuencia generada a partir de las iteraciones xk+1 = Pxk, y x0 es la entrada inicial. Si {xk} converge a x, entonces xk+1 = Pxk implica que x debe satisfacer Px = x. Dado que el único valor propio máximo es 1, tenemos x = cy donde c es una constante, y si tanto x como y están normalizados por sus sumas, entonces c = 1. Las discusiones anteriores muestran que PageRank es independiente de la entrada inicial x0. En nuestra opinión, g y α son parámetros objetivos determinados por los comportamientos y preferencias de los usuarios. A, α y g son la verdadera estructura web. Mientras que A es obtenido por un rastreador y la configuración α = 0.85 es aceptada por las personas, creemos que g debería ser determinado por una investigación del comportamiento del usuario, algo así como [1]. Sin ningún conocimiento previo, g tiene que ser establecido como g = 1 n 1. El modelo TrustRank no sigue la verdadera estructura web al establecer un g sesgado, pero los efectos de combatir el spam se logran en [7]; PageRank, por el contrario, lo hace de ciertas maneras. Esperamos un algoritmo de clasificación que tenga un efecto de anti-manipulación como TrustRank, al mismo tiempo que respeta la verdadera estructura web como PageRank. Observamos que el modelo de difusión de calor es una forma natural de evitar la característica sobre-democrática e independiente de la entrada de PageRank. Dado que el calor siempre fluye de una posición con temperaturas más altas a una con temperaturas más bajas, los puntos no son iguales, ya que algunos puntos nacen con altas temperaturas mientras que otros nacen con bajas temperaturas. Por otro lado, diferentes distribuciones de temperatura inicial darán lugar a diferentes distribuciones de temperatura después de un período de tiempo fijo. Basándonos en estas consideraciones, proponemos el novedoso DiffusionRank. Este algoritmo de clasificación también está motivado por el punto de vista de la estructura de la Web. Vemos todas las páginas web como puntos extraídos de una estructura geométrica altamente compleja, como un manifold en un espacio de alta dimensión. En una variedad, el calor puede fluir de un punto a otro a través de la estructura geométrica subyacente en un período de tiempo dado. Diferentes estructuras geométricas determinan diferentes comportamientos de difusión de calor, y a su vez, el comportamiento de difusión puede reflejar la estructura geométrica. Más específicamente, en la variedad, el calor fluye de un punto a otro punto, y en un período de tiempo dado, si un punto x recibe una gran cantidad de calor de otro punto y, podemos decir que x e y están bien conectados, y por lo tanto x e y tienen una alta similitud en el sentido de una alta conexión mutua. Observamos que en un punto con masa unitaria, la temperatura y el calor de este punto son equivalentes, y estos dos términos son intercambiables en este documento. En lo siguiente, primero mostramos el HDM en una variedad, que es el origen del HDM, pero no puede ser empleado directamente en la World Wide Web, por lo que se considera como el caso ideal. Para conectar el caso ideal y el caso práctico, luego establecemos HDM en un gráfico como un caso intermedio. Para modelar el problema del mundo real, además construimos HDM en un grafo aleatorio como un caso práctico. Finalmente demostramos el DiffusionRank que se deriva del HDM en un grafo aleatorio. 3.2 Flujo de Calor en una Variedad Conocida Si la variedad subyacente es conocida, el flujo de calor a lo largo de una variedad geométrica con condiciones iniciales puede describirse mediante la siguiente ecuación diferencial de segundo orden: ∂f(x,t) ∂t − ∆f(x, t) = 0, donde f(x, t) es el calor en la ubicación x en el tiempo t, y ∆f es el operador Laplace-Beltrami en una función f. El núcleo de difusión de calor Kt(x, y) es una solución especial a la ecuación de calor con una condición inicial especial: una fuente de calor unitaria en la posición y cuando no hay calor en otras posiciones. Basándose en esto, el núcleo de calor Kt(x, y) describe la distribución de calor en el tiempo t difundiendo desde la fuente de calor inicial unitaria en la posición y, y por lo tanto describe la conectividad (que se considera como una especie de similitud) entre x e y. Sin embargo, es muy difícil representar la World Wide Web como una geometría regular con una dimensión conocida; incluso si se conoce la subyacente, es muy difícil encontrar el núcleo de calor Kt(x, y), lo que implica resolver la ecuación de calor con la función delta como condición inicial. Esto nos motiva a investigar el flujo de calor en un gráfico. El grafo se considera como una aproximación al subyacente conjunto de puntos, por lo que el flujo de calor en el grafo se considera como una aproximación al flujo de calor en el conjunto de puntos. 3.3 En un grafo no dirigido En un grafo no dirigido G, el borde (vi, vj) se considera como una tubería que conecta los nodos vi y vj. El valor fi(t) describe el calor en el nodo vi en el tiempo t, comenzando desde una distribución inicial de calor dada por fi(0) en el tiempo cero. f(t) (f(0)) denota el vector que consiste en fi(t) (fi(0)). Construimos nuestro modelo de la siguiente manera. Supongamos que, en el tiempo t, cada nodo i recibe una cantidad de calor M(i, j, t, ∆t) de su vecino j durante un período de ∆t. El calor M(i, j, t, ∆t) debe ser proporcional al período de tiempo ∆t y a la diferencia de calor fj(t) − fi(t). Además, el calor fluye desde el nodo j hasta el nodo i a través del tubo que conecta los nodos i y j. Basándonos en esta consideración, asumimos que M(i, j, t, ∆t) = γ(fj(t) − fi(t))∆t. Como resultado, la diferencia de calor en el nodo i entre el tiempo t + ∆t y el tiempo t será igual a la suma del calor que recibe de todos sus vecinos. Esto se formula como fi(t + ∆t) − fi(t) = j:(j,i)∈E γ(fj(t) − fi(t))∆t, (2), donde E es el conjunto de aristas. Para encontrar una solución en forma cerrada a la ecuación (2), la expresamos en forma de matriz: (f(t + ∆t) − f(t))/∆t = γHf(t), donde d(v) denota el grado del nodo v. En el límite ∆t → 0, se convierte en d dt f(t) = γHf(t). Al resolverlo, obtenemos f(t) = eγtH f(0), especialmente tenemos f(1) = eγH f(0), Hij =    −d(vj), j = i, 1, (vj, vi) ∈ E, 0, en otro caso, donde eγH está definido como eγH = I+γH+ γ2 2! H2 + γ3 3! En un grafo dirigido, el modelo de difusión de calor anterior debe ser modificado para adaptarse a la situación en la que los enlaces entre las páginas web son dirigidos. En una página web, cuando el creador de la página crea un enlace (a, b) a otra página b, en realidad está forzando el flujo de energía, por ejemplo, las actividades de clic de las personas, hacia esa página, y por lo tanto se impone una energía adicional en el enlace. Como resultado, el calor fluye en una dirección unidireccional, solo de a hacia b, no de b hacia a. Basándonos en dicha consideración, modificamos el modelo de difusión de calor en un grafo no dirigido de la siguiente manera. En un grafo dirigido G, el tubo (vi, vj) es forzado por energía añadida de tal manera que el calor fluye solo de vi a vj. Supongamos que, en el tiempo t, cada nodo vi recibe una cantidad de calor RH = RH(i, j, t, ∆t) de vj durante un período de ∆t. Tenemos tres suposiciones: (1) RH debería ser proporcional al período de tiempo ∆t; (2) RH debería ser proporcional al calor en el nodo vj; y (3) RH es cero si no hay enlace de vj a vi. Como resultado, vi recibirá j:(vj ,vi)∈E σjfj(t)∆t cantidad de calor de todos sus vecinos que apuntan hacia él. Por otro lado, el nodo vi difunde una cantidad DH(i, t, ∆t) de calor a sus nodos subsecuentes. Suponemos que: (1) El calor DH(i, t, ∆t) debe ser proporcional al período de tiempo ∆t. (2) El calor DH(i, t, ∆t) debe ser proporcional al calor en el nodo vi. (3) Cada nodo tiene la misma capacidad de difundir calor. Esto se ajusta a la intuición de que un usuario de la Web solo tiene una opción para encontrar la siguiente página que desea navegar. (4) El calor DH(i, t, ∆t) debe distribuirse uniformemente a sus nodos subsecuentes. La situación real es más compleja de lo que asumimos, pero tenemos que hacer esta suposición simple para que nuestro modelo sea conciso. Como resultado, el nodo vi difundirá una cantidad de calor γfi(t)∆t/di a cualquiera de sus nodos subsiguientes, y cada uno de sus nodos subsiguientes debería recibir una cantidad de calor γfi(t)∆t/di. Por lo tanto σj = γ/dj. En resumen, la diferencia de calor en el nodo vi entre el tiempo t+∆t y el tiempo t será igual a la suma del calor que recibe, menos lo que difunde. Esto se formula como fi(t + ∆t) − fi(t) = −γfi(t)∆t + j:(vj ,vi)∈E γ/djfj(t)∆t. De manera similar, obtenemos f(1) = eγH f(0), Hij =    −1, j = i, 1/dj, (vj, vi) ∈ E, 0, en otro caso. Para aplicaciones del mundo real, debemos considerar aristas aleatorias en un grafo dirigido. Esto se puede ver desde dos puntos de vista. La primera es que en la Ec. (1), el grafo Web está modelado en realidad como un grafo aleatorio, hay una arista desde el nodo vi al nodo vj con una probabilidad de (1 − α)gj (ver el ítem (1 − α)g1T), y que el grafo Web es predicho por un grafo aleatorio [15, 16]. La segunda es que la estructura de la Web es un grafo aleatorio en esencia si consideramos la similitud de contenido entre dos páginas, aunque esto no se hace en este artículo. Por estas razones, el modelo se volvería más flexible si lo extendemos a grafos aleatorios. La definición de un grafo aleatorio se proporciona a continuación. Definición 1. Un grafo aleatorio RG = (V, P = (pij)) se define como un grafo con un conjunto de vértices V en el que las aristas se eligen de forma independiente, y para 1 ≤ i, j ≤ |V| la probabilidad de que (vi, vj) sea una arista es exactamente pij. La definición original de grafos aleatorios en [4], se modifica ligeramente para considerar la situación de grafos dirigidos. Ten en cuenta que todo grafo estático puede considerarse como un grafo aleatorio especial en el sentido de que pij solo puede ser 0 o 1. En un grafo aleatorio RG = (V, P), donde P = (pij) es la probabilidad de que exista la arista (vi, vj). En un grafo aleatorio como este, la diferencia de calor esperada en el nodo i entre el tiempo t + ∆t y el tiempo t será igual a la suma del calor esperado que recibe de todos sus antecesores, menos el calor esperado que difunde. Dado que la probabilidad del enlace (vj, vi) es pji, el flujo de calor esperado de nodo j a nodo i debe multiplicarse por pji, y así tenemos que fi(t + ∆t) − fi(t) = −γ fi(t) ∆t + j:(vj ,vi)∈E γpjifj(t)∆t/RD+ (vj), donde RD+ (vi) es el grado de salida esperado del nodo vi, definido como k pik. De manera similar, tenemos f(1) = eγR f(0), Rij =    −1, j = i; pji/RD+ (vj), j = i. (5) Cuando el grafo es grande, un cálculo directo de eγR lleva mucho tiempo, por lo que adoptamos su aproximación discreta: f(1) = (I + γ N R)N f(0). (6) La matriz (I+ γ N R)N en la Ecuación (6) y la matriz eγR en la Ecuación (5) se llaman Núcleo de Difusión Discreta y Núcleo de Difusión Continua respectivamente. Basado en los Modelos de Difusión de Calor y sus soluciones, DiffusionRank puede establecerse en grafos no dirigidos, grafos dirigidos y grafos aleatorios. En la siguiente sección, nos enfocamos principalmente en DiffusionRank en el entorno de grafos aleatorios. 4. Para un grafo aleatorio, la matriz (I + γ N R)N o eγR puede medir la relación de similitud entre nodos. Si fi(0)= 1, fj(0) = 0 si j = i, entonces el vector f(0) representa el calor unitario en el nodo vi mientras que todos los demás nodos tienen calor cero. Para tal f(0) en un grafo aleatorio, podemos encontrar la distribución de calor en el tiempo 1 utilizando la Ecuación (5) o la Ecuación (6). La distribución del calor es exactamente la i-ésima fila de la matriz de (I + γ N R)N o eγR. Entonces, el elemento h_ij de la i-ésima fila y la j-ésima columna en la matriz (I + γ∆tR)N o eγR significa la cantidad de calor que vi puede recibir de vj desde el tiempo 0 hasta 1. Así, el valor hij se puede utilizar para medir la similitud de vj a vi. Para un grafo estático, de manera similar la matriz (I + γ N H)N o eγH puede medir la relación de similitud entre nodos. La intuición detrás es que la cantidad h(i, j) de calor que una página vi recibe de una unidad de calor en una página vj en un tiempo unitario incorpora la extensión de las conexiones de enlace de la página vj a la página vi. Hablando en términos generales, cuando hay más caminos sin cruzar de vj a vi, vi recibirá más calor de vj; cuando la longitud del camino de vj a vi es más corta, vi recibirá más calor de vj; y cuando la tubería que conecta vj y vi es ancha, el calor fluirá rápidamente. El calor final que recibe vi dependerá de las diferentes rutas desde vj hasta vi, su longitud y el ancho de las tuberías. Algoritmo 1 Función DiffusionRank Entrada: La matriz de transición A; la matriz de transición inversa U; el factor de decaimiento αI para el inverso de PageRank; el factor de decaimiento αB para PageRank; el número de iteraciones MI para el inverso de PageRank; el número de páginas de confianza L; el coeficiente de conductividad térmica γ. Salida: vector de puntuación DiffusionRank h. 1: s = 1 2: para i = 1 A MI hacer 3: s = αI · U · s + (1 − αI ) · 1 n · 1 4: fin para 5: Ordenar s en orden decreciente: π = Rank({1, . . . , n}, s) 6: d = 0, Count = 0, i = 0 7: mientras Count ≤ L hacer 8: si π(i) se evalúa como una página de confianza entonces 9: d(π(i)) = 1, Count + + 10: fin si 11: i + + 12: fin mientras 13: d = d/|d| 14: h = d 15: Encontrar el número de iteración MB según λ 16: para i = 1 A MB hacer 17: h = (1 − γ MB )h + γ MB (αB · A · h + (1 − αB) · 1 n · 1) 18: fin para 19: RETORNAR h 4.1 Algoritmo Para la tarea de clasificación, adoptamos el núcleo de calor en un grafo aleatorio. Formalmente, el DiffusionRank se describe en el Algoritmo 1, en el cual, el elemento Uij en la matriz de transición inversa U se define como 1/Ij si hay un enlace de i a j, y 0 en caso contrario. Este procedimiento de selección de páginas de confianza mediante PageRank inverso está completamente tomado de TrustRank [7], excepto por un número fijo de tamaño del conjunto de páginas de confianza. Aunque el PageRank inverso no es perfecto en su capacidad para determinar la máxima cobertura, resulta atractivo debido a su tiempo de ejecución polinómico y a su intuición razonable: de hecho, invertimos el enlace original cuando intentamos construir el conjunto inicial a partir de aquellas páginas que apuntan a muchas páginas que a su vez apuntan a muchas páginas y así sucesivamente. En el algoritmo, el grafo aleatorio subyacente se establece como P = αB · A + (1 − αB) · 1 n · 1n×n, el cual es inducido por el grafo web. Como resultado, R = −I + P. De hecho, la configuración más general para DiffusionRank es P = αB ·A+(1−αB)· 1 n ·g·1T. Por lo tanto, DiffusionRank es una generalización de TrustRank cuando γ tiende a infinito y cuando g se establece de la misma manera que TrustRank. Sin embargo, la segunda parte de TrustRank no es adoptada por nosotros. En nuestro modelo, g debería ser la verdadera teletransportación determinada por los hábitos de navegación de los usuarios, la distribución de popularidad en todas las páginas web, y así sucesivamente; P debería ser el verdadero modelo de la naturaleza aleatoria de la World Wide Web. Establecer g según las páginas de confianza no será coherente con la idea básica de la difusión de calor en un grafo aleatorio. Simplemente establecemos g = 1 solo porque no podemos encontrarlo sin ningún conocimiento previo. Observación. En una interpretación de redes sociales, DiffusionRank primero reconoce a un grupo de personas de confianza, que pueden no tener un alto rango, pero conocen a muchas otras personas. Las personas inicialmente confiables tienen el poder de decidir quién puede ser más confiable, pero no pueden decidir los resultados finales de la votación, por lo que no son dictadores. 4.2 Ventajas A continuación mostramos las cuatro ventajas de DiffusionRank. 4.2.1 Dos formas cerradas En primer lugar, sus soluciones tienen dos formas, ambas de forma cerrada. Uno toma la forma discreta, y tiene la ventaja de un cálculo rápido, mientras que el otro toma la forma continua, y tiene la ventaja de ser fácilmente analizado en aspectos teóricos. La ventaja teórica se ha demostrado en la prueba del teorema en la siguiente sección. (a) Relaciones de grupo a grupo (b) Un grafo no dirigido Figura 1: Dos grafos 4.2.2 Relaciones de grupo a grupo En segundo lugar, puede emplearse de forma natural para detectar la relación de grupo a grupo. Por ejemplo, que G2 y G1 representen dos grupos, que contienen páginas (j1, j2, . . . , js) e (i1, i2, . . . , it), respectivamente. Entonces u,v hiu,jv es la cantidad total de calor que G1 recibe de G2, donde hiu,jv es el elemento de la fila iu-ésima y columna jv-ésima del núcleo de calor. Más específicamente, primero necesitamos establecer f(0) para una aplicación como la siguiente. En f(0) = (f1(0), f2(0), . . . , fn(0))^T, si i ∈ {j1, j2, . . . , js}, entonces fi(0) = 1, y 0 en caso contrario. Luego empleamos la Ecuación (5) para calcular f(1) = (f1(1), f2(1), . . . , fn(1))T, finalmente sumamos aquellos fj(1) donde j ∈ {i1, i2, . . . , it}. La Fig. 1 (a) muestra los resultados generados por el DiffusionRank. Consideramos cinco grupos-cinco departamentos en nuestra Facultad de Ingeniería: CSE, MAE, EE, IE y SE. γ se establece en 1, los números en la Fig. 1 (a) son la cantidad de calor que se difunde entre ellos. Estos resultados están normalizados por el número total de cada grupo, y los bordes se ignoran si los valores son menores a 0.000001. Por lo tanto, se detectan las relaciones de grupo a grupo, por ejemplo, podemos ver que el lazo más fuerte en general es de EE a IE. Si bien es una aplicación natural para DiffusionRank debido a la fácil interpretación por la cantidad de calor de un grupo a otro grupo, es difícil aplicar otras técnicas de clasificación a dicha aplicación porque carecen de un significado físico. 4.2.3 Corte de gráficos. En tercer lugar, se puede utilizar para dividir el grafo web en varias partes. Un ejemplo rápido se muestra a continuación. El gráfico en la Fig. 1 (b) es un grafo no dirigido, por lo que empleamos la Ec. (3). Si sabemos que el nodo 1 pertenece a una comunidad y que el nodo 12 pertenece a otra comunidad, entonces podemos colocar una fuente de calor positiva de una unidad en el nodo 1 y una fuente de calor negativa de una unidad en el nodo 12. Después del tiempo 1, si establecemos γ = 0.5, la distribución de calor es [0.25, 0.16, 0.17, 0.16, 0.15, 0.09, 0.01, -0.04, -0.18, -0.21, -0.21, -0.34], y si establecemos γ = 1, será [0.17, 0.16, 0.17, 0.16, 0.16, 0.12, 0.02, -0.07, -0.18, -0.22, -0.24, -0.24]. En ambos escenarios, podemos dividir fácilmente el gráfico en dos partes: {1, 2, 3, 4, 5, 6, 7} con temperaturas positivas y {8, 9, 10, 11, 12} con temperaturas negativas. Para grafos dirigidos y grafos aleatorios, de manera similar podemos cortarlos empleando la solución de calor correspondiente. 4.2.4 Anti-manipulación Cuarto, se puede utilizar para combatir la manipulación. Si G2 contiene páginas web de confianza (j1, j2, . . . , js), entonces para cada página i, v hi,jv es el calor que recibe la página i de G2, y puede ser calculado mediante la aproximación discreta de la Ecuación (4) en el caso de un grafo estático o la Ecuación (6) en el caso de un grafo aleatorio, en el cual f(0) se establece como una distribución de calor inicial especial para que las páginas web de confianza tengan calor unitario mientras que todas las demás tengan calor cero. Al hacerlo, la página web manipulada obtendrá una clasificación más baja a menos que tenga enlaces fuertes de páginas web confiables de forma directa o indirecta. La situación es bastante diferente para PageRank porque PageRank es independiente del input, como hemos demostrado en la Sección 3.1. Basándonos en el hecho de que la conexión de una página de confianza a una página mala debe ser débil, sin cruzar caminos, con una distancia más larga y un tubo más estrecho, podemos decir que DiffusionRank puede resistir el spam web si podemos seleccionar páginas de confianza. Es afortunado que el método de selección de páginas de confianza en [7], la primera parte de TrustRank, pueda ayudarnos a cumplir esta tarea. Para una aplicación de DiffusionRank, la complejidad computacional para el Núcleo de Difusión Discreta es la misma que la de PageRank en casos de un grafo estático y un grafo aleatorio. Esto se puede ver en la Ecuación (6), para la cual necesitamos N iteraciones y en cada iteración necesitamos una operación de multiplicación entre una matriz y un vector, mientras que en la Ecuación (1) también necesitamos una operación de multiplicación entre una matriz y un vector en cada iteración. 4.3 El Significado Físico de γ γ juega un papel importante en el efecto de anti-manipulación de DiffusionRank. γ es la conductividad térmica, es decir, el coeficiente de difusión del calor. Si tiene un valor alto, el calor se difundirá muy rápidamente. Por el contrario, si es pequeño, el calor se difundirá lentamente. En el caso extremo, si es infinitamente grande, entonces el calor se difundirá de un nodo a otros nodos inmediatamente, y este es exactamente el caso correspondiente a PageRank. A continuación, lo interpretaremos matemáticamente. Teorema 1. Cuando γ tiende a infinito y f(0) no es el vector cero, eγR f(0) es proporcional a la distribución estable producida por PageRank. Que g = 1 n 1. Según el Teorema de Perron [11], hemos demostrado que 1 es el mayor autovalor de P = [(1 − α)g1T + αA], y que no hay otro autovalor cuyo valor absoluto sea igual a 1. Sea x la distribución estable, por lo tanto Px = x. x es el vector propio correspondiente al valor propio 1. Suponiendo que los otros n − 1 autovalores de P son |λ2| < 1, . . . , |λn| < 1, podemos encontrar una matriz invertible S = ( x S1 ) tal que S−1 PS =      1 ∗ ∗ ∗ 0 λ2 ∗ ∗ 0 0 ... ∗ 0 0 0 λn      . (7) Dado que eγR = eγ(−I+P) = S−1      1 ∗ ∗ ∗ 0 eγ(λ2−1) ∗ ∗ 0 0 ... ∗ 0 0 0 eγ(λn−1)      S, (8) todos los autovalores de la matriz eγR son 1, eγ(λ2−1) , . . . , eγ(λn−1) . Cuando γ → ∞, se convierten en 1, 0, . . . , 0, lo que significa que 1 es el único autovalor distinto de cero de eγR cuando γ → ∞. Podemos ver que cuando γ → ∞, eγR eγR f(0) = eγR f(0), y por lo tanto eγR f(0) es un autovector de eγR cuando γ → ∞. Por otro lado, eγR x = (I+γR+γ2 2! R2 + γ3 3! R3 +. . . )x = Ix+γRx+γ2 2!  
R3 +. . . )x = Ix+γRx+γ2 2! R2 x+ γ3 3! R3 x + . . . = x ya que Rx = (−I + P)x = −x + x = 0, y por lo tanto x es el autovector de eγR para cualquier γ. Por lo tanto, tanto x como eγR f(0) son los autovectores correspondientes al único autovalor 1 de eγR cuando γ → ∞, y en consecuencia x = ceγR f(0). Por este teorema, vemos que DiffusionRank es una generalización de PageRank. Cuando γ = 0, el valor de clasificación es más robusto a la manipulación ya que no se difunde calor y el sistema es inmutable, pero la estructura web es completamente ignorada ya que eγR f(0) = e0R f(0) = If(0) = f(0); cuando γ = ∞, DiffusionRank se convierte en PageRank, y puede ser manipulado fácilmente. Esperamos una configuración adecuada de γ que pueda equilibrar ambos. Para esto, no tenemos un resultado teórico, pero en la práctica encontramos que γ = 1 funciona bien en la Sección 5. A continuación discutimos cómo determinar el número de iteraciones si empleamos el núcleo de calor discreto. 4.4 El número de iteraciones Aunque disfrutamos de la ventaja de la forma concisa del núcleo de calor exponencial, es mejor para nosotros calcular DiffusionRank empleando la Ecuación (6) de manera iterativa. Entonces surge el problema de determinar N, el número de iteraciones: Para un umbral dado, encontrar N tal que ||((I + γ N R)N − eγR )f(0)|| < para cualquier f(0) cuya suma sea uno. Dado que es difícil resolver este problema, proponemos una heurística motivada por las siguientes observaciones. Cuando R = −I+P, por la Ecuación (7), tenemos (I+ γ N R)N = (I+ γ N (−I+ P))N = S−1      1 ∗ ∗ ∗ 0 (1 + γ(λ2−1) N )N ∗ ∗ 0 0 ... ∗ 0 0 0 (1 + γ(λn−1) N )N      S. (9) Al comparar la Ecuación (8) y la Ecuación (9), observamos que los autovalores de (I + γ N R)N − eγR son (1 + γ(λn−1) N )N − eγ(λn−1) . Proponemos un método heurístico para determinar N de manera que la diferencia entre los valores propios sea menor que un umbral solo para λs positivos. También observamos que si γ = 1, λ < 1, entonces |(1+ γ(λ−1) N )N − eγ(λ−1) | < 0.005 si N ≥ 100, y |(1+ γ(λ−1) N )N −eγ(λ−1) | < 0.01 si N ≥ 30. Así que podemos establecer N = 30, o N = 100, u otros según los diferentes requisitos de precisión. En este documento, utilizamos el ajuste relativamente preciso N = 100 para hacer que los valores propios reales en (I + γ N R)N − eγR sean menores que 0.005. EXPERIMENTOS En esta sección, mostramos los datos experimentales, la metodología, el entorno y los resultados. 5.1 Preparación de datos Nuestros datos de entrada consisten en un grafo de juguete, un grafo del mundo real de tamaño mediano y un grafo del mundo real de gran tamaño. El gráfico del juguete se muestra en la Fig. 2 (a). El gráfico a continuación muestra que el nodo 1 está siendo manipulado al agregar nuevos nodos A, B, C, ... de manera que todos apunten al nodo 1, y el nodo 1 apunte a todos ellos. Los datos de dos grafos web reales fueron obtenidos del dominio en nuestro instituto en octubre de 2004. El número total de páginas encontradas es de 18,542 en el gráfico de tamaño mediano, y 607,170 en el gráfico de tamaño grande respectivamente. El grafo de tamaño mediano es un subgrafo del grafo de tamaño grande, y fueron obtenidos por el mismo rastreador: uno fue registrado por el rastreador en su tiempo anterior, y el otro se obtuvo cuando el rastreador se detuvo. 5.2 Metodología Los algoritmos que ejecutamos incluyen PageRank, TrustRank y DiffusionRank. Todos los valores de rango se multiplican por el número de nodos para que la suma de los valores de rango sea igual al número de nodos. Con esta normalización, podemos comparar los resultados en gráficos con diferentes tamaños, ya que el valor de rango promedio es uno para cualquier gráfico después de dicha normalización. Necesitaremos la diferencia de valor y la diferencia de orden de pares como medidas de comparación. Sus definiciones se enumeran de la siguiente manera. Diferencia de valor. La diferencia de valor entre A = {Ai}n i=1 y B = {Bi}n i=1 se mide como n i=1 |Ai − Bi|. Diferencia de orden en pares. La diferencia de orden entre A y B se mide como el número de diferencias de orden significativas entre A y B. El par (A[i], A[j]) y (B[i], B[j]) se considera como una diferencia de orden significativa si ocurre uno de los siguientes casos: ambos A[i] > [ <]A[j]+0.1 y B[i] ≤ [ ≥]A[j]; ambos A[i] ≤ [ ≥]A[j] y B[i] > [ < ]A[j] + 0.1. Un valor Gamma Diferencia Conjunto de confianza={1} Conjunto de confianza={2} Conjunto de confianza={3} Conjunto de confianza={4} Conjunto de confianza={5} Conjunto de confianza={6} (a) (b) Figura 2: (a) El grafo de juguete que consta de seis nodos, y el nodo 1 está siendo manipulado agregando nuevos nodos A, B, C, . . . (b) La tendencia de aproximación a PageRank por DiffusionRank 5.3 Configuración Experimental Los experimentos en el grafo de tamaño mediano y los grafos de gran tamaño se llevan a cabo en la estación de trabajo, cuyo modelo de hardware es Nix Dual Intel Xeon 2.2GHz con 1GB de RAM y un Kernel de Linux 2.4.18-27smp (RedHat7.3). Al calcular DiffusionRank, empleamos la Ecuación (6) y la aproximación discreta de la Ecuación (4) para dichos grafos. Las tareas relacionadas se implementan utilizando el lenguaje C. Mientras estamos en el grafo de juguete, empleamos el núcleo de difusión continua en la Ecuación (4) y la Ecuación (5), e implementamos tareas relacionadas utilizando Matlab. Para los nodos que tienen un grado de salida de cero (nodos colgantes), empleamos el método en el algoritmo de PageRank modificado [8], en el cual se considera que los nodos colgantes tienen enlaces aleatorios uniformemente distribuidos a cada nodo. Establecemos α = αI = αB = 0.85 en todos los algoritmos. También establecemos que g sea la distribución uniforme tanto en PageRank como en DiffusionRank. Para DiffusionRank, establecemos γ = 1. Según las discusiones en la Sección 4.3 y la Sección 4.4, establecimos el número de iteraciones en MB = 100 en DiffusionRank, y por consideraciones de precisión, el número de iteraciones en todos los algoritmos se establece en 100. 5.4 Aproximación de PageRank Mostramos que cuando γ tiende a infinito, las diferencias de valor entre DiffusionRank y PageRank tienden a cero. La Fig. 2 (b) muestra la propiedad de aproximación de DiffusionRank, como se demuestra en el Teorema 1, en el grafo de juguete. El eje horizontal de la Fig. 2 (b) marca el valor de γ, y el eje vertical corresponde a la diferencia de valor entre DiffusionRank y PageRank. Se consideran todos los conjuntos de confianza posibles con L = 1. Para L > 1, los resultados deben ser la combinación lineal de algunas de estas curvas debido a la linealidad de las soluciones a las ecuaciones de calor. En otros gráficos, las situaciones son similares. 5.5 Resultados de Anti-manipulación En esta sección, mostramos cómo cambian los valores de rango a medida que aumenta la intensidad de la manipulación. Medimos la intensidad de la manipulación por la cantidad de puntos recién añadidos que apuntan al punto manipulado. Los ejes horizontales de la Fig. 3 representan los números de puntos recién añadidos, y los ejes verticales muestran los valores de rango correspondientes de los nodos manipulados. Para ser claros, consideramos las seis situaciones. Cada nodo en la Fig. 2 (a) es manipulado respectivamente, y su 0 50 100 0 10 20 30 40 50 Rango del Nodo Manipulado−1 Rango de Difusión−Confianza 4 PageRank Rango de Confianza−Confianza 4 0 50 100 0 10 20 30 40 50 Rango del Nodo Manipulado−2 Rango de Difusión−Confianza 4 PageRank Rango de Confianza−Confianza 4 0 50 100 0 10 20 30 40 50 Rango del Nodo Manipulado−3 Rango de Difusión−Confianza 4 PageRank Rango de Confianza−Confianza 4 0 50 100 0 10 20 30 40 50 Número de Nuevos Nodos Agregados Rango del Nodo Manipulado−4 Rango de Difusión−Confianza 3 PageRank Rango de Confianza−Confianza 3 0 50 100 0 10 20 30 40 50 Número de Nuevos Nodos Agregados Rango del Nodo Manipulado−5 Rango de Difusión−Confianza 4 PageRank Rango de Confianza−Confianza 4 0 50 100 0 10 20 30 40 50 Número de Nuevos Nodos Agregados Rango del Nodo Manipulado−6 Rango de Difusión−Confianza 4 PageRank Rango de Confianza−Confianza Figura 3: Los valores de rango de los nodos manipulados en el grafo de juguete 200040006000800010000 0 1000 2000 3000 4000 5000 6000 7000 8000 Número de Nuevos Puntos Agregados Rango del Nodo Manipulado PageRank Rango de Difusión−uniforme Rango de Difusión0 Rango de Difusión1 Rango de Difusión2 Rango de Difusión3 Rango de Confianza0 Rango de Confianza1 Rango de Confianza2 Rango de Confianza3 2000 4000 6000 8000 10000 0 20 40 60 80 100 120 140 160 180 Número de Nuevos Puntos Agregados Rango del Nodo Manipulado PageRank Rango de Difusión Rango de Confianza Rango de Difusión−uniforme (a) (b) Figura 4: (a) Los valores de rango de los nodos manipulados en el grafo de tamaño mediano; (b) Los valores de rango de los nodos manipulados en el grafo de gran tamaño, los valores correspondientes para PageRank, TrustRank (TR), DiffusionRank (DR) se muestran en una de las seis sub-figuras en la Fig. 3. Los ejes verticales muestran qué nodo está siendo manipulado. En cada subfigura, los conjuntos de confianza se calculan a continuación. Dado que el inverso del PageRank produce los resultados [1.26, 0.85, 1.31, 1.36, 0.51, 0.71]. Sea L = 1. Si el nodo manipulado no es 4, entonces el conjunto de confianza es {4}, de lo contrario {3}. Observamos que en todos los casos, los valores de rango del nodo manipulado para DiffusionRank crecen más lentamente a medida que aumenta el número de nodos recién agregados. En el gráfico de tamaño mediano y en el gráfico de tamaño grande, esta conclusión también es cierta, ver Figura 4. Se debe tener en cuenta que, en la Fig. 4 (a), elegimos cuatro conjuntos de confianza (L = 1), en los cuales probamos DiffusionRank y TrustRank, los resultados se indican como DiffusionRanki y TrustRanki (i = 0, 1, 2, 3 denota los cuatro conjuntos de confianza); en la Fig. 4 (b), elegimos un conjunto de confianza (L = 1). Además, en tanto la Fig. 4 (a) como la Fig. 4 (b), mostramos los resultados para DiffusionRank cuando no tenemos un conjunto de páginas de confianza, y confiamos en todas las páginas antes de que algunas de ellas sean manipuladas. También probamos la diferencia de orden entre el orden de clasificación A antes de que la página sea manipulada y el orden de clasificación PA después de que la página sea manipulada. Debido a que después de la manipulación, el número de páginas cambia, solo comparamos la parte común de A y PA. Este experimento se utiliza para probar la estabilidad de todos estos algoritmos. Cuanto menor sea la diferencia de orden, más estable será el algoritmo, en el sentido de que solo una parte menor de las relaciones de orden se verá afectada por la manipulación. La figura 5 (a) muestra que los valores de diferencia de orden cambian cuando agregamos nuevos nodos que apuntan al nodo manipulado. Ofrecemos varios ajustes de γ. Observamos que cuando γ = 1, la menor diferencia de orden se logra con DiffusionRank. Es interesante señalar que a medida que γ aumenta, la diferencia de orden aumentará primero; después de alcanzar un valor máximo, disminuirá y finalmente tiende a los resultados de PageRank. Mostramos esta tendencia en la Fig. 5 (b), en la cual elegimos tres configuraciones diferentes: el número de nodos manipulados es de 2,000, 5,000 y 10,000 respectivamente. A partir de estas cifras, podemos ver que cuando γ < 2, los valores son menores que los de PageRank, y que cuando γ > 20, la diferencia entre PageRank y DiffusionRank es muy pequeña. Después de estas investigaciones, encontramos que en todos los gráficos que probamos, DiffusionRank (cuando γ = 1) es el más robusto a la manipulación tanto en la diferencia de valor como en la diferencia de orden. El algoritmo de selección de conjunto de confianza propuesto en [7] es efectivo tanto para TrustRank como para DiffusionRank. 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 0 0.5 1 1.5 2 2.5 3 x 10 5 Número de nuevos puntos añadidos Diferencia de orden par a par PageRank DiffusionRank−Gamma=1 DiffusionRank−Gamma=2 DiffusionRank−Gamma=3 DiffusionRank−Gamma=4 DiffusionRank−Gamma=5 DiffusionRank−Gamma=15 TrustRank 0 5 10 15 20 0 0.5 1 1.5 2 2.5 x 10 5 Gamma Diferencia de orden par a par DiffusionRank: cuando se añaden 2000 nodos DiffusionRank: cuando se añaden 5000 nodos DiffusionRank: cuando se añaden 10000 nodos PageRank (a) (b) Figura 5: (a) Diferencia de orden par a par en el grafo de tamaño mediano, cuanto menor sea, más estable será el algoritmo; (b) La tendencia de variación de γ. CONCLUSIONES Concluimos que DiffusionRank es una generalización de PageRank, lo cual es interesante ya que el coeficiente de difusión de calor γ puede equilibrar la medida en que queremos modelar el grafo web original y la medida en que queremos reducir el efecto de las manipulaciones de enlaces. Los resultados experimentales muestran que realmente podemos lograr un equilibrio estableciendo γ = 1, aunque la mejor configuración que incluye γi variable aún está en investigación. Esta característica anti-manipulación permite que DiffusionRank sea un candidato como una penicilina para el spam en la web. Además, DiffusionRank se puede emplear para encontrar relaciones grupo-grupo y para dividir el grafo web en pequeñas comunidades. Todos estos beneficios se pueden lograr con la misma complejidad computacional que PageRank. Para la aplicación especial de anti-manipulación, DiffusionRank tiene el mejor rendimiento tanto en efectos de reducción como en su estabilidad entre los tres algoritmos. 7. AGRADECIMIENTOS Agradecemos a Patrick Lau, Zhenjiang Lin y Zenglin Xu por su ayuda. Este trabajo está completamente respaldado por dos subvenciones del Consejo de Subvenciones para la Investigación de la Región Administrativa Especial de Hong Kong, China (Proyecto No. CUHK4205/04E y Número de Proyecto. CUHK4235/04E). 8. 

CUHK4235/04E). 8. REFERENCIAS [1] E. Agichtein, E. Brill y S. T. Dumais. Mejorando la clasificación de búsqueda web al incorporar información sobre el comportamiento del usuario. En E. N. Efthimiadis, S. T. Dumais, D. Hawking y K. J¨arvelin, editores, Actas de la 29ª Conferencia Internacional Anual de la ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información (SIGIR), páginas 19-26, 2006. [2] R. A. Baeza-Yates, P. Boldi y C. Castillo. Generalizando PageRank: funciones de amortiguación para algoritmos de clasificación basados en enlaces. En E. N. Efthimiadis, S. T. Dumais, D. Hawking y K. J¨arvelin, editores, Actas de la 29ª Conferencia Internacional Anual de la ACM SIGIR sobre Investigación y Desarrollo en Recuperación de Información (SIGIR), páginas 308-315, 2006. [3] M. Belkin y P. Niyogi. Eigenmapas de Laplaciano para reducción de dimensionalidad y representación de datos. Computación Neural, 15(6):1373-1396, Jun 2003. [4] B. Bollobás. Gráficos aleatorios. Academic Press Inc. (Londres), 1985. [5] C. Burges, T. Shaked, E. Renshaw, A. Lazier, M. Deeds, N. Hamilton y G. Hullender. Aprendiendo a clasificar utilizando descenso de gradiente. En Actas de la 22ª conferencia internacional sobre aprendizaje automático (ICML), páginas 89-96, 2005. [6] N. Eiron, K. S. McCurley y J. A. Tomlin. Clasificación de la frontera web. En Actas de la 13ª Conferencia Mundial de la Web (WWW), páginas 309-318, 2004. [7] Z. Gy¨ongyi, H. Garcia-Molina y J. Pedersen. Combatiendo el spam web con trustrank. En M. A. Nascimento, M. T. ¨Ozsu, D. Kossmann, R. J. Miller, J. A. Blakeley y K. B. Schiefer, editores, Actas de la Trigésima Conferencia Internacional sobre Bases de Datos Muy Grandes (VLDB), páginas 576-587, 2004. [8] S. D. Kamvar, T. H. Haveliwala, C. D. Manning y G. H. Golub. Explotando la estructura de bloques de la web para calcular el pagerank. Informe técnico, Universidad de Stanford, 2003. [9] R. I. Kondor y J. D. Lafferty. Núcleos de difusión en grafos y otros espacios de entrada discretos. En C. Sammut y A. G. Hoffmann, editores, Actas de la Decimonovena Conferencia Internacional sobre Aprendizaje Automático (ICML), páginas 315-322, 2002. [10] J. Lafferty y G. Lebanon. Núcleos de difusión en variedades estadísticas. Revista de Investigación en Aprendizaje Automático, 6:129-163, Ene 2005. [11] C. R. MacCluer. Las numerosas pruebas y aplicaciones del teorema de Perron. SIAM Review, 42(3):487-498, 2000. [12] A. Ntoulas, M. Najork, M. Manasse y D. Fetterly. Detectando páginas web de spam a través del análisis de contenido. En Actas de la 15ª conferencia internacional sobre la World Wide Web (WWW), páginas 83-92, 2006. [13] L. Page, S. Brin, R. Motwani y T. Winograd. El ranking de citas de pagerank: Trayendo orden a la web. Informe técnico SIDL-WP-1999-0120 (versión del 11/11/1999), Proyecto de Tecnologías de la Biblioteca Digital de Stanford, 1999. [14] H. Yang, I. Rey y M. R. Lyu. NHDC y PHDC: Clasificadores de difusión de calor no propagativa y propagativa. En Actas de la 12ª Conferencia Internacional sobre Procesamiento de Información Neural (ICONIP), páginas 394-399, 2005. [15] H. Yang, I. Rey y M. R. Lyu. Clasificación predictiva: un enfoque novedoso de clasificación de páginas al estimar la estructura web. En Actas de la 14ª conferencia internacional sobre la World Wide Web (WWW) - Pistas de interés especial y pósters, páginas 944-945, 2005. [16] H. Yang, I. Rey y M. R. Lyu. Clasificación predictiva de grafos aleatorios en la web. En Actas del Congreso Mundial de Inteligencia Computacional (WCCI) de IEEE, páginas 3491-3498, 2006. [17] D. Zhou, J. Weston, A. Gretton, O. Bousquet y B. Schölkopf. Clasificación en variedades de datos. En S. Thrun, L. Saul y B. Schölkopf, editores, Avances en Sistemas de Procesamiento de Información Neural 16 (NIPS 2003), 2004.