Presentamos el primer diseño para un intercambio combinatorio iterativo (ICE). El intercambio incorpora un lenguaje de oferta basado en árboles que es conciso y expresivo para los CE. Los postores especifican límites inferiores y superiores en su valor para diferentes intercambios. Estos límites permiten descubrir precios y obtener preferencias útiles en las primeras rondas, y permiten finalizar con un intercambio eficiente a pesar de contar con información parcial sobre las valoraciones de los postores. Toda la computación en el intercambio está cuidadosamente optimizada para aprovechar la estructura de los árboles de oferta y evitar la enumeración de intercambios. Una interpretación proxy de una regla de actividad de preferencia revelada garantiza progreso a lo largo de las rondas. Se utiliza un esquema de pago basado en VCG que ha demostrado mitigar oportunidades de negociación y comportamiento estratégico para determinar los pagos finales. El intercambio está completamente implementado y en una fase de validación. Categorías y Descriptores de Asignaturas: I.2.11 [Inteligencia Artificial]: Inteligencia Artificial Distribuida; J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento - Economía Términos Generales: Algoritmos, Economía, Teoría. 1. INTRODUCCIÓN Los intercambios combinatorios combinan y generalizan dos mecanismos diferentes: subastas dobles y subastas combinatorias. En una subasta doble (DA), múltiples compradores y vendedores intercambian unidades de un bien idéntico [20]. En una subasta combinatoria (CA), un único vendedor tiene a la venta varios artículos heterogéneos [11]. Los compradores pueden tener complementariedades o sustituciones entre bienes, y se les proporciona un lenguaje de oferta expresivo. Un objetivo común en ambos diseños de mercado es determinar la asignación eficiente, que es la asignación que maximiza el valor total. Un intercambio combinatorio (CE) [24] es una subasta doble combinatoria que reúne a múltiples compradores y vendedores para comerciar múltiples bienes heterogéneos. Por ejemplo, en un intercambio por espectro inalámbrico, un postor puede declarar que está dispuesto a pagar $1 millón por un intercambio donde obtiene licencias para Nueva York, Boston y Filadelfia, y pierde su licencia para Washington DC. Por lo tanto, a diferencia de un DA, un CE permite que todos los participantes expresen valoraciones complejas a través de ofertas expresivas. A diferencia de una SA, una SE permite la propiedad fragmentada, con múltiples compradores y vendedores y agentes que compran y venden. Los CEs han recibido atención reciente tanto en el contexto de la asignación de espectro inalámbrico [18] como para la asignación de franjas horarias de despegue y aterrizaje en aeropuertos [3]. En ambos de estos dominios hay titulares con derechos de propiedad, y es importante facilitar una compleja reasignación de recursos de múltiples vías. Otro posible campo de aplicación para los EC es la asignación de recursos en sistemas distribuidos compartidos, como PlanetLab [13]. La instanciación de nuestro diseño de propósito general a dominios específicos es un paso siguiente convincente en nuestra investigación. Este documento presenta el primer diseño para un intercambio combinatorio iterativo (ICE). La génesis de este proyecto fue una clase, CS 286r Temas en la Interfaz entre Economía e Informática, impartida en la Universidad de Harvard en la primavera de 2004. Toda la clase estuvo dedicada al diseño y prototipado de un CE iterativo. El problema de diseño de ICE es multifacético y bastante difícil. La principal innovación en nuestro diseño es un lenguaje de oferta basado en árboles expresivo pero conciso (que generaliza lenguajes conocidos como XOR/OR [23]), y el acoplamiento estrecho de este lenguaje con algoritmos eficientes para retroalimentación de precios para guiar las ofertas, determinación de ganadores para determinar intercambios, y reglas de actividad de preferencia revelada para garantizar el progreso a lo largo de las rondas. El intercambio es iterativo: los postores expresan valoraciones superiores e inferiores sobre las operaciones al anotar su árbol de ofertas, y luego ajustan estos límites en respuesta a la retroalimentación de precios en cada ronda. La regla de pago umbral, introducida por Parkes et al. [24], se utiliza para determinar los pagos finales. El intercambio tiene una serie de interesantes propiedades teóricas. Por ejemplo, cuando existen precios lineales establecemos la solidez y la completitud: para los postores directos que ajustan sus límites para cumplir con las reglas de actividad manteniendo su verdadero valor dentro de los límites, el intercambio finalizará con la asignación eficiente. Además, la Regla del Agente de la Verdad 1 http://www.eecs.harvard.edu/∼parkes/cs286r/ice.html 249 WD ACC FAIR BALClosing RuleVickreyThreshold DONE ! HECHO 2,2 +A +10 +B +10 COMPRADOR 2,2 -A -5 -B -5 VENDEDOR 2,2 +A +15 +8 +B +15 +8 COMPRADOR 2,2 -A -2 -6 -B -2 -6 VENDEDOR COMPRADOR, comprar AB VENDEDOR, vender AB 12 < PA+PB < 16 PA+PB=14 PA=PB=7 PCOMPRADOR = 16 - (4-0) = 12 PVENDEDOR = -12 - (4-0) = -16 PCOMPRADOR = 14 PVENDEDOR = -14 Pesimista Optimista = 1 Figura 1: Flujo de Control del Sistema ICE la asignación eficiente a menudo puede determinarse sin que los postores revelen, o incluso sepan, su valor exacto para todas las operaciones. Esto es esencial en dominios complejos donde el problema de valoración puede ser muy desafiante para un participante [28]. Si bien no podemos afirmar que la subasta directa sea un equilibrio del intercambio (y de hecho, no deberíamos esperarlo según el teorema de imposibilidad de Myerson-Satterthwaite [22]), la regla de pago del Umbral minimiza el incentivo ex post para manipular en comparación con todas las reglas de pago equilibradas en presupuesto. El intercambio está implementado en Java y actualmente se encuentra en validación. Al describir el intercambio, primero proporcionaremos una visión general de los componentes principales e introduciremos varios ejemplos prácticos. Luego, introducimos los componentes básicos para una variación simple de una sola vez en la que los postores declaran sus valores exactos para intercambios en una sola ronda. Luego describimos el intercambio iterativo completo, con valores superiores e inferiores, retroalimentación de precios, reglas de actividad y condiciones de terminación. Presentamos algunas propiedades teóricas del intercambio, y concluimos con una discusión para motivar nuestras decisiones de diseño principales, y sugerir algunos pasos a seguir. 2. UNA VISIÓN GENERAL DEL DISEÑO DE ICE El diseño tiene cuatro componentes principales, los cuales presentaremos en orden a lo largo del resto del documento: • Lenguaje de oferta basado en árboles expresivo y conciso. El lenguaje describe valores para intercambios, como mi valor para vender AB y comprar C es de $100, o mi valor para vender ABC es de -$50, con valores negativos indicando que un oferente debe recibir un pago para que el intercambio sea aceptable. El lenguaje permite a los postores expresar límites superiores e inferiores en el valor, los cuales pueden ser ajustados en cada ronda. • Determinación del ganador. La determinación del ganador (WD) se formula como un programa entero mixto (MIP), con la estructura de los árboles de oferta capturada explícitamente en la formulación. Comparar la solución en los valores superiores e inferiores permite tomar una decisión sobre la terminación, con el progreso en rondas intermedias impulsado por una valoración intermedia y los valores inferiores adoptados al finalizar. • Pagos. Los pagos se calculan utilizando la regla de pago del umbral [24], con las valoraciones intermedias adoptadas en las primeras rondas y valores más bajos adoptados al finalizar. • Retroalimentación de precios. Se calcula un precio aproximado para cada artículo en el intercambio en cada ronda, en función de las valoraciones intermedias y el intercambio provisional. Los precios se optimizan para aproximar los precios de equilibrio competitivo, y luego se optimizan aún más para aproximar mejor los pagos del umbral actual con los lazos restantes rotos para favorecer los precios equilibrados entre diferentes artículos. Al calcular los precios, adoptamos los métodos de generación de restricciones para explotar la estructura del lenguaje de oferta y evitar enumerar todos los intercambios factibles. El subproblema para generar nuevas restricciones es una variación del problema WD. • Regla de actividad. Una regla de actividad de preferencia revelada [1] garantiza progreso a lo largo de las rondas. Para permanecer activo, un oferente debe ajustar los límites para que haya suficiente información para definir un intercambio que maximice el excedente a los precios actuales. Otra variación del problema de WD se formula, tanto para verificar que se cumple la regla de actividad como para proporcionar retroalimentación a un postor para explicar cómo cumplir la regla. Se proporciona un esquema del flujo de control del sistema ICE en la Figura 1. Volveremos a este ejemplo más adelante en el documento. Por ahora, simplemente observa en este ejemplo de dos agentes que los agentes establecen límites inferiores y superiores que son verificados en la regla de actividad, y luego pasados a la determinación del ganador (WD), y luego a través de tres etapas de fijación de precios (precisión, equidad, equilibrio). Al pasar la regla de cierre (en la que se verifican los parámetros αeff y αthresh para la convergencia del comercio y los pagos), el intercambio pasa a una última y definitiva ronda. Al final de esta ronda, el intercambio y los pagos finalmente se determinan, basados en las valoraciones más bajas. 2.1 Trabajo Relacionado En la literatura se conocen muchos CAs de un solo lado con precios ascendentes [10, 25, 29]. También se han propuesto enfoques de elicitación directa para los AC unilaterales en los que los agentes responden a preguntas explícitas sobre sus valoraciones [8, 14, 19]. Un número de CAs ascendentes están diseñados para trabajar con precios simples en artículos [12, 17]. Los métodos de generación de precios que utilizamos en ICE generalizan los métodos de estos artículos anteriores. Parkes et al. [24] estudiaron intercambios combinatorios de oferta sellada e introdujeron la regla de pago umbral. Posteriormente, Krych [16] demostró experimentalmente que la regla del Umbral promueve asignaciones eficientes. No tenemos conocimiento de ningún estudio previo sobre CEs iterativos. Las estrategias dominantes DAs son conocidas por la demanda unitaria [20] y también por agentes de mente única [2]. No se conocen mecanismos de estrategia dominante para el problema general de la CE. ICE es un diseño de subasta híbrido, ya que combina precios simples de artículos para impulsar las ofertas en las primeras rondas con WD combinatorio y pagos, una característica que comparte con el diseño de reloj-proxy de Ausubel et al. [1] para subastas unilaterales. Adoptamos una variación de la regla de actividad de preferencia revelada en las subastas de proxy de reloj. El lenguaje de subasta comparte algunos elementos estructurales con el lenguaje LGB de Boutilier y Hoos [7], pero tiene semántica muy diferente. Rothkopf et al. [27] también describen un lenguaje de oferta basado en árboles restringido. En LGB, la semántica es la de la lógica proposicional, con los mismos elementos en una asignación capaces de satisfacer un árbol en múltiples lugares. Aunque esto puede hacer que LGB sea especialmente conciso en algunos contextos, la semántica que proponemos parece proporcionar una utilidad local, de modo que el valor de un componente en un árbol pueda ser comprendido de forma independiente al resto del árbol. La idea de capturar la estructura de nuestro lenguaje de oferta de manera explícita dentro de una formulación de programación entera mixta sigue los desarrollos en Boutilier [6]. 3. PRELIMINARES En nuestro modelo, consideramos un conjunto de bienes, indexados {1, . . . , m} y un conjunto de postores, indexados {1, . . . , n}. La asignación inicial de bienes se denota como x0 = (x0 1, . . . , x0 n), donde x0 i = (x0 i1, . . . , x0 im) y x0 ij ≥ 0 para el bien j indicando el número de unidades del bien j que posee el postor i. Un intercambio λ = (λ1, . . . , λn) denota el cambio en la asignación, con λi = (λi1, . . . , λim) donde λij ∈ es el cambio en el número de unidades del ítem j para el postor i. Entonces, la asignación final es x1 = x0 + λ. Cada postor tiene un valor vi(λi) ∈ ¡ para una transacción λi. Este valor puede ser positivo o negativo, y representa el cambio en el valor entre la asignación final x0 i +λi y la asignación inicial x0 i. La utilidad es cuasi-lineal, con ui(λi, p) = vi(λi)−p para el intercambio λi y el pago p ∈ ¡. El precio p puede ser negativo, lo que indica que el postor recibe un pago por la transacción. Utilizamos el término "pago" de manera intercambiable con "utilidad". Nuestro objetivo en el diseño de ICE es implementar el comercio eficiente. El intercambio eficiente, λ∗, maximiza el aumento total de valor entre los postores. Definición 1 (Comercio eficiente). El intercambio eficiente λ∗ resuelve max (λ1,...,λn) ¢ i vi(λi) s.t. λij + x0 ij ≥ 0, ∀i, ∀j (1) ¢ i λij ≤ 0, ∀j (2) λij ∈   (3) Las restricciones (1) aseguran que ningún agente venda más artículos de los que tiene en su asignación inicial. Las restricciones (2) permiten la disposición gratuita y permiten que los intercambios factibles vendan más artículos de los que se compran (pero no al revés). Posteriormente, adoptamos Feas(x0) para denotar el conjunto de intercambios factibles, dados estos límites y una asignación inicial x0 = (x0 1, . . . , x0 n). 3.1 Ejemplos Prácticos En esta sección, proporcionamos tres ejemplos simples de instancias que utilizaremos para ilustrar varios componentes del intercambio. Todos los tres ejemplos tienen solo un vendedor, pero esto es puramente ilustrativo. Ejemplo 1. Un vendedor y un comprador, dos bienes {A, B}, con el vendedor teniendo una asignación inicial de AB. Cambios en los valores de los intercambios: vendedor comprador Y (−A, −B) Y (+A, +B) -10 +20 El Y indica que tanto el comprador como el vendedor solo están interesados en intercambiar ambos bienes como un paquete. Aquí, el intercambio eficiente (que maximiza el valor) es para el vendedor vender AB al comprador, denotado como λ∗ = ([−1, −1], [+1, +1]). Ejemplo 2. Un vendedor y cuatro compradores, cuatro bienes {A, B, C, D}, con el vendedor teniendo una asignación inicial de ABCD. Cambios en los valores de las transacciones: vendedor comprador1 comprador 2 comprador 3 comprador 4 OR(−A, −B, AND(+A, XOR(+A, AND(+C, XOR(+C, −C, −D) +B) +B) +D) +D) 0 +6 +4 +3 +2 El OR indica que el vendedor está dispuesto a vender cualquier cantidad de bienes. El XOR indica que los compradores 2 y 4 están dispuestos a comprar como máximo uno de los dos bienes en los que están interesados. El comercio eficiente es que el paquete AB vaya al comprador 1 y el paquete CD al comprador 3, denotado λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, 0, 0], [0, 0, +1, +1], [0, 0, 0, 0]). 2,2 +A +10 +B +10 COMPRADOR 2,2 -A -5 -B -5 VENDEDOR Ejemplo 1: Ejemplo 3: 2,2 +C +D COMPRADOR 2 2,2 +A +B COMPRADOR 1 +11 +84,4 -B VENDEDOR -A -C -D Ejemplo 2: 1,1 +A +B COMPRADOR 2 2,2 +A +B COMPRADOR 1 +6 +40,4 -B VENDEDOR -C -D-A 1,1 +C +D COMPRADOR 4 2,2 +C +D +3 +2 COMPRADOR 3 -18 Figura 2: Ejemplo de Árboles de Ofertas. Ejemplo 3. Un vendedor y dos compradores, cuatro bienes {A, B, C, D}, con el vendedor teniendo una asignación inicial de ABCD. Cambios en los valores de los intercambios: vendedor comprador1 comprador 2 Y (−A, −B, −C, −D) Y (+A, +B) Y (+C, +D) -18 +11 +8 El intercambio eficiente es que el paquete AB vaya al comprador 1 y el paquete CD vaya al comprador 2, denotado por λ∗ = ([−1, −1, −1, −1], [+1, +1, 0, 0], [0, 0, +1, +1]). 4. Un DISEÑO DE INTERCAMBIO DE UNA SOLA VEZ La descripción de ICE se divide en dos secciones: una sola vez (oferta sellada) e iterativa. En esta sección abstraemos el aspecto iterativo e introducimos una especialización del lenguaje basado en árboles que admite solo valores exactos en los nodos. 4.1 Lenguaje de Ofertas Basado en Árboles El lenguaje de ofertas está diseñado para ser expresivo y conciso, completamente simétrico con respecto a compradores y vendedores, y para extenderse y capturar ofertas de compradores y vendedores mixtos, que van desde intercambios simples hasta operaciones comerciales altamente complejas. Las ofertas se expresan como árboles de ofertas anotados, y definen el valor de un oferente para todos los intercambios posibles. El lenguaje define cambios en los valores de las transacciones, con hojas anotadas con los artículos intercambiados y nodos anotados con cambios en los valores (ya sea positivos o negativos). La característica principal es que tiene un operador lógico de intervalo general en los nodos internos, y que define una semántica cuidadosa para propagar valores dentro del árbol. Ilustramos el lenguaje en cada uno de los Ejemplos 1-3 en la Figura 2. El lenguaje tiene una estructura de árbol, con operaciones en elementos definidos en las hojas y valores anotados en nodos y hojas. Los nodos tienen valores de cero donde no se indica ningún valor. Los nodos internos también están etiquetados con rangos de intervalo-escoge (IC). Dada una transacción, la semántica del lenguaje define qué nodos en el árbol pueden ser satisfechos o activados. Primero, si un niño está encendido, entonces su padre también debe estar encendido. Segundo, si un nodo padre está encendido, entonces el número de hijos que están encendidos debe estar dentro del rango de IC en el nodo padre. Finalmente, las hojas en las que el postor está comprando artículos solo pueden estar activas si los artículos se proporcionan en el intercambio. Por ejemplo, en el Ejemplo 2 podemos considerar el comercio eficiente, y observar que en este comercio todos los nodos en los árboles de los compradores 1 y 3 (y también el vendedor), pero ninguno de los nodos en los árboles de los compradores 2 y 4, pueden estar encendidos. Por otro lado, en 251 el intercambio en el que A va al comprador 2 y D al comprador 4, entonces los nodos raíz y hojas apropiados pueden estar encendidos para los compradores 2 y 4, pero ningún nodo puede estar encendido para los compradores 1 y 3. Dado un intercambio, a menudo hay varias formas de elegir el conjunto de nodos satisfechos. La semántica del lenguaje requiere que se activen los nodos que maximicen el valor sumado entre los nodos satisfechos. Considera el árbol de oferta Ti del ofertante i. Esto define nodos β ∈ Ti, de los cuales algunos son hojas, Leaf (i) ⊆ Ti. Deje que Child(β) ⊆ Ti denote los hijos de un nodo β (que no es en sí mismo una hoja). Todos los nodos excepto las hojas están etiquetados con el operador de intervalo-escoger [IC x i (β), ICy i (β)]. Cada nodo también está etiquetado con un valor, viβ ∈ ¡. Cada hoja β está etiquetada con un intercambio, qiβ ∈ m (es decir, las hojas pueden definir un intercambio agrupado en más de un tipo de artículo). Dado un intercambio λi al postor i, los operadores de elección de intervalos y los intercambios en las hojas definen qué nodos pueden ser satisfechos. A menudo habrá una elección. Las corbatas se rompen para maximizar el valor. Que satiβ ∈ {0, 1} denote si el nodo β está satisfecho. La solución sati es válida dado el árbol Ti y el intercambio λi, escrita sati ∈ válido(Ti, λi), si y solo si: ¢ β∈Hoja (i) qiβj · satiβ ≤ λij , ∀i, ∀j (4) ICx i (β)satiβ ≤ ¢ β ∈Hijo(β) satiβ ≤ ICy i (β)satiβ, ∀β /∈ Hoja (i) (5) En otras palabras, un conjunto de hojas solo puede considerarse satisfecho dado el intercambio λi si el aumento total en cantidad sumado en todas esas hojas está cubierto por el intercambio, para todos los bienes (Eq. 4). Esto funciona tanto para vendedores como para compradores: para los vendedores, un intercambio es negativo y esto requiere que el número total de artículos indicados como vendidos en el árbol sea al menos igual al número total vendido según lo definido en el intercambio. También necesitamos la propagación ascendente: cada vez que un nodo que no sea la raíz esté satisfecho, su padre también debe estar satisfecho (por β ∈Child(β) satiβ ≤ ICy i (β)satiβ en la Ecuación 5). Finalmente, necesitamos la propagación hacia abajo: cada vez que un nodo interno se satisface, entonces el número apropiado de hijos también debe estar satisfecho (Ec. 5). El valor total del comercio λi, dado el árbol de ofertas Ti, se define como: vi(Ti, λi) = máximo sat∈valid(Ti,λi) ¢ β∈T vβ · satβ (6) El lenguaje basado en árboles generaliza los lenguajes existentes. Por ejemplo: IC(2, 2) en un nodo con 2 hijos es equivalente a un operador AND; IC(1, 3) en un nodo con 3 hijos es equivalente a un operador OR; e IC(1, 1) en un nodo con 2 hijos es equivalente a un operador XOR. De manera similar, los lenguajes de oferta XOR/OR pueden ser expresados directamente como un árbol de oferta en nuestro lenguaje. La determinación del ganador Este apartado define el problema de determinación del ganador, el cual está formulado como un MIP y resuelto en nuestra implementación con un solucionador comercial. El solucionador utiliza búsqueda de ramificación y acotamiento con generación de cortes dinámicos y heurísticas de ramificación para resolver MIPs grandes en tiempos de ejecución económicamente factibles. El lenguaje OR* es el lenguaje OR con elementos ficticios para proporcionar estructura adicional. OR* se sabe que es expresivo y conciso. Sin embargo, no se sabe si OR* domina a XOR/OR en cuanto a concisión [23]. En la definición de la representación MIP, tenemos cuidado de evitar una enumeración basada en XOR de todos los paquetes. Una variación del problema de WD se reutiliza muchas veces dentro del intercambio, por ejemplo, para la generación de columnas en la fijación de precios y para verificar la preferencia revelada. Dado el conjunto de árboles de ofertas T = (T1, . . . , Tn) y la asignación inicial x0, la formulación mixta entera para WD es: WD(T, x0): max λ, sat ¢ i ¢ β ∈ Ti viβ · satiβ sujeto a (1), (2), satiβ ∈ {0, 1}, λij ∈ sati ∈ válido(Ti, λi), ∀i. Algunos bienes pueden quedar sin asignar porque se permite la disposición libre dentro de las reglas de liquidación de la determinación del ganador. Estos artículos pueden ser asignados de nuevo a los agentes que vendieron los artículos, es decir, para los cuales λij < 0. 4.3 Cálculo de Pagos Umbral La regla de pago umbral se basa en los pagos en el mecanismo de Vickrey-Clarke-Groves (VCG) [15], que en sí mismo es veraz y eficiente pero no satisface el equilibrio presupuestario. El equilibrio presupuestario requiere que los pagos totales al intercambio sean iguales a los pagos totales realizados por el intercambio. En VCG, el pago pagado por el agente i es pvcg,i = ˆv(λ∗ i ) − (V ∗ − V−i) (7) donde λ∗ es el intercambio eficiente, V ∗ es el valor reportado de este intercambio, y V−i es el valor reportado del intercambio eficiente que se implementaría sin el postor i. Llamamos a ∆vcg,i = V ∗ − V−i el descuento VCG. Por ejemplo, en el Ejemplo 1 pvcg,vendedor = −10 − (+10 − 0) = −20 y pvcg,comprador = +20 − (+10 − 0) = 10, y el intercambio se llevaría a cabo con un déficit presupuestario de −20 + 10 = −10. La regla de pago del umbral [24] determina pagos equilibrados presupuestarios para minimizar el error máximo entre todos los agentes respecto al resultado VCG. Definición 2. El esquema de pago de umbral implementa el intercambio eficiente λ∗ dado los ofertas, y establece los pagos pthresh,i = ˆvi(λ∗ i ) − ∆i, donde ∆ = (∆1, . . . , ∆n) se establece para minimizar maxi(∆vcg,i − ∆i) sujeto a ∆i ≤ ∆vcg,i e   i ∆i ≤ V ∗ (esto garantiza el equilibrio presupuestario). Ejemplo 4. En el Ejemplo 2, los descuentos de VCG son (9, 2, 0, 1, 0) para el vendedor y cuatro compradores respectivamente, los pagos de VCG son (−9, 4, 0, 2, 0) y el intercambio se realiza con un déficit de -3. En Threshold, los descuentos son (8, 1, 0, 0, 0) y los pagos son (−8, 5, 0, 3, 0). Esto minimiza el error en el peor de los casos para los descuentos VCG en todos los esquemas de pago equilibrados en presupuesto. Los pagos de umbral están diseñados para minimizar el incentivo máximo ex post para manipular. Krych [16] confirmó que Threshold promueve la eficiencia asignativa en el equilibrio de Bayes-Nash restringido y aproximado. 5. El diseño ICE Estamos listos para presentar el diseño de intercambio combinatorio iterativo (ICE). Se introducen varios componentes nuevos, en relación con el diseño para el intercambio único. En lugar de proporcionar valoraciones precisas, los postores pueden proporcionar valoraciones inferiores y superiores y revisar esta información de oferta en cada ronda. El intercambio proporciona retroalimentación basada en precios 252 para guiar a los postores en este proceso, y finaliza con un intercambio eficiente (o aproximadamente eficiente) con respecto a las valoraciones reportadas. En cada ronda t ∈ {0, 1, . . .} se utilizan los límites inferiores y superiores actuales, vt y vt, para definir un perfil de valoración provisional vα (la α-valoración), junto con un intercambio provisional λt y precios provisionales pt = (pt 1, . . . , pt m) en los artículos. La α-valoración es una combinación lineal de las valoraciones superiores e inferiores actuales, con αEFF ∈ [0, 1] elegido endógenamente en función de la cercanía del intercambio optimista (en v) y el intercambio pesimista (en v). Los precios pt se utilizan para informar una regla de actividad y avanzar hacia un comercio eficiente. 5.1 Valoraciones superiores e inferiores El lenguaje de la oferta se amplía para permitir que un oferente i informe un valor inferior y superior (viβ, viβ) en cada nodo. Estos ocupan el lugar del valor exacto viβ definido en la Sección 4.1. Basándonos en estas etiquetas, podemos definir las funciones de valoración vi(Ti, λi) y vi(Ti, λi), utilizando exactamente la misma semántica que en la Ecuación (6). Decimos que un árbol de ofertas está bien formado si viβ ≤ viβ para todos los nodos. El siguiente lema es útil: Lema 1. Dado un árbol bien formado, T, entonces vi(Ti, λi) ≤ vi(Ti, λi) para todos los intercambios. Prueba. Supongamos que existe algún λi para el cual vi(Ti, λi) > vi(Ti, λi). Entonces, maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ > maxsat∈valid(Ti,λi)   β∈Ti viβ · satβ. Sin embargo, esto es una contradicción porque el intercambio λ que define vi(Ti, λi) sigue siendo factible con límites superiores vi, y viβ ≥ viβ para todos los nodos β en un árbol bien formado. 5.2 Retroalimentación de precios En cada ronda, se determinan los precios de equilibrio competitivo aproximados (CE), pt = (pt 1, . . . , pt m). Dado estos precios provisionales, el precio en el intercambio λi para el postor i es pt (λi) = j≤m pt j · λij. Definición 3 (precios de la CE). Los precios p∗ son precios de equilibrio competitivo si el intercambio eficiente λ∗ está respaldado a precios p∗, de modo que para cada postor: λ∗ i ∈ arg max λ∈Feas(x0) {vi(λi) − p∗ (λi)} (8) Los precios de CE no siempre existirán y a menudo necesitaremos calcular precios aproximados [5]. Extendemos las ideas de Rassenti et al. [26], Kwasnica et al. [17] y Dunford et al. [12], y seleccionamos precios aproximados de la siguiente manera: I: Precisión. Primero, calculamos los precios que minimizan el error máximo en las restricciones de mejor respuesta de todos los postores. II: Equidad. Segundo, rompemos los empates para preferir precios que minimicen la desviación máxima de los pagos umbral entre todos los postores. III: Equilibrio. En tercer lugar, rompemos los empates para preferir precios que minimicen el precio máximo entre todos los artículos. En conjunto, estos pasos están diseñados para promover la informatividad de los precios en impulsar el progreso a lo largo de las rondas. Al calcular los precios, explicamos cómo calcular precios aproximados (o de otra manera) para lenguajes de oferta estructurados, sin enumerar todos los intercambios posibles. Para esto, adoptamos la generación de restricciones para manejar de manera eficiente un número exponencial de restricciones. Cada paso se describe detalladamente a continuación. Yo: Precisión. Adoptamos una definición de precisión de precio que generaliza las nociones adoptadas en trabajos anteriores para lenguajes de oferta no estructurados. Que λt denote el comercio provisional actual y suponga que la valoración provisional es vα. Para calcular precios de CE precisos, consideramos: min p,δ δ (9) s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ (10) δ ≥ 0,pj ≥ 0, ∀j. Este programa lineal (LP) está diseñado para encontrar precios que minimicen el error en el peor de los casos entre todos los agentes. De la definición de los precios de equilibrio competitivo (CE), se sigue que los precios de equilibrio competitivo tendrían δ = 0 como solución a (9), momento en el cual el intercambio λt i estaría en el conjunto de mejor respuesta de cada agente (con λt i = ∅, es decir, sin intercambio, para todos los agentes sin excedente para el intercambio a los precios). Ejemplo 5. Podemos ilustrar la formulación (9) en el Ejemplo 2, asumiendo para simplificar que vα = v (es decir, verdad). El comercio eficiente asigna AB al comprador 1 y CD al comprador 3. La precisión buscará los precios p(A), p(B), p(C) y p(D) para minimizar el δ ≥ 0 requerido para satisfacer las restricciones: p(A) + p(B) + p(C) + p(D) ≥ 0 (vendedor) p(A) + p(B) ≤ 6 + δ (comprador 1) p(A) + δ ≥ 4, p(B) + δ ≥ 4 (comprador 2) p(C) + p(D) ≤ 3 (comprador 3) p(C) + δ ≥ 2, p(D) + δ ≥ 2 (comprador 4) Una solución óptima requiere que p(A) = p(B) = 10/3, con δ = 2/3, y que p(C) y p(D) tomen valores como p(C) = p(D) = 3/2. Pero, (9) tiene un número exponencial de restricciones (Ec. 10). En lugar de resolverlo explícitamente, utilizamos la generación de restricciones [4] y generamos dinámicamente un subconjunto suficiente de restricciones. Que \(i\) denote un subconjunto manejable de todos los intercambios factibles posibles para el oferente \(i\). Entonces, una versión relajada de (9) (escrita ACC) se formula sustituyendo (10) con vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ, ∀i, ∀λ ∈   i , (11) donde   i es un conjunto de intercambios que son factibles para el postor i dado las otras ofertas. Fijando los precios p∗, luego resolvemos n subproblemas (uno para cada postor), max λ vα i (λi) − p∗ (λi) [R-WD(i)] s.t. λ ∈ Feas(x0), (12) para verificar si la solución (p∗, δ∗) a ACC es factible en el problema (9). En R-WD(i) el objetivo es determinar un intercambio más preferido para cada postor a estos precios. Que ˆλi denote la solución a R-WD(i). Verificar la condición: vα i (ˆλi) − p∗ (ˆλ) ≤ vα i (λt i) − p∗ (λt i) + δ∗ , (13) y si esta condición se cumple para todos los postores i, entonces la solución (p∗ , δ∗ ) es óptima para el problema (9). De lo contrario, se agrega el intercambio ˆλi a i para todos los postores i para los cuales esta restricción se viola en 253 y volvemos a resolver el LP con el nuevo conjunto de restricciones. II: Equidad. Segundo, rompemos los empates restantes para preferir precios justos: eligiendo precios que minimicen el error en el peor de los casos con respecto a los pagos umbral (es decir, la utilidad para los postores con pagos umbral), pero sin elegir precios que sean menos precisos. Ejemplo 6. Por ejemplo, la precisión en el Ejemplo 1 (representado en la Figura 1) requiere que 12 ≤ pA + pB ≤ 16 (para vα = v). En estas valoraciones, los pagos umbral serían de 2 para tanto el vendedor como el comprador. Esto se puede lograr exactamente en la fijación de precios con pA + pB = 14. El método de desempate de equidad se formula como el siguiente LP: min p,π π [FAIR] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (14) π ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i (15) π ≥ 0,pj ≥ 0, ∀j, donde δ∗ representa el error en la solución óptima, de ACC. El objetivo aquí es el mismo que en la regla de pago del umbral (ver Sección 4.3): minimizar el error máximo entre el pago del postor (en vα) para el intercambio provisional y el pago VCG (en vα). El problema FAIR también se resuelve mediante la generación de restricciones, utilizando R-WD(i) para agregar restricciones adicionales violadas según sea necesario. III: Equilibrio. En tercer lugar, rompemos los empates restantes para preferir precios equilibrados: eligiendo precios que minimicen el precio máximo entre todos los artículos. Volviendo de nuevo al Ejemplo 1, representado en la Figura 1, vemos que la precisión y la equidad requieren que p(A) + p(B) = 14. Finalmente, el conjunto de equilibrio establece que p(A) = p(B) = 7. El equilibrio está justificado cuando, manteniendo todo lo demás igual, los elementos son más propensos a tener valores similares que diferentes. El LP para el equilibrio se formula de la siguiente manera: min p,Y Y [BAL] s.t. vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀i, ∀λ ∈   i (16) π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀i, (17) Y ≥ pj, ∀j (18) Y ≥ 0, pj ≥ 0, ∀j, donde δ∗ representa el error en la solución óptima de ACC y π∗ representa el error en la solución óptima de FAIR. La generación de restricciones también se utiliza para resolver BAL, generando nuevos intercambios para i según sea necesario. El problema R-WD(i) es una especialización del problema WD, en el que el objetivo es maximizar el pago de un único postor, en lugar del valor total entre todos los postores. Se resuelve como un MIP, al reescribir el objetivo en WD(T, x0) como max{viβ · satiβ − j p∗ j · λij} para el agente i. Por lo tanto, la estructura del lenguaje del árbol de ofertas se explota para generar nuevas restricciones, ya que esto se resuelve como un MIP conciso. Los otros postores se mantienen en el MIP (pero no aparecen en el objetivo) y se utilizan para definir el espacio de intercambios factibles. Los métodos de Dunford et al. [12], que utilizan un enfoque de núcleo, también están estrechamente relacionados. El uso del equilibrio fue defendido por Kwasnica et al. [17]. Dunford et al. [12] prefieren suavizar los precios a lo largo de las rondas. Comentario 1: Refinamiento lexicográfico. Para los tres subproblemas también realizamos un refinamiento lexicográfico (con respecto a los postores en ACC y FAIR, y con respecto a los bienes en BAL). Por ejemplo, en ACC minimizamos sucesivamente el error máximo entre todos los postores. Dada una solución inicial, primero identificamos el error en todos los postores para quienes una restricción (11) está vinculante. Para dicho postor i, la restricción se reemplaza por vα i (λ) − p(λ) ≤ vα i (λt i) − p(λt i) + δ∗ i , ∀λ ∈   i , (19) y el error para el postor i ya no aparece explícitamente en el objetivo. ACC se vuelve a resolver y avanza al minimizar aún más el error máximo entre todos los postores que aún no han sido identificados. Esto continúa, fijando a cualquier nuevo postor para quien una de las restricciones (11) sea vinculante, hasta que el error esté optimizado lexicográficamente para todos los postores. El mismo proceso exacto se repite para FAIR y BAL, con los postores fijados y las restricciones (15) reemplazadas por π∗ i ≥ πvcg,i − (vα i (λt i) − p(λt i)), ∀λ ∈   i , (donde π∗ i es el objetivo actual) en FAIR, y los artículos fijados y las restricciones (18) reemplazadas por p∗ j ≥ pj (donde p∗ j representa el objetivo para el precio máximo en ese artículo) en BAL. Comentario 2: Computación. Todos los límites en i se mantienen, y este conjunto crece en todas las etapas y en todas las rondas del intercambio. Por lo tanto, el esfuerzo computacional en la generación de restricciones se reutiliza. En la implementación, nos aseguramos de abordar una serie de problemas que surgen debido a problemas de punto flotante. Preferimos pecar de conservadores al determinar si agregar o no otra restricción al realizar la verificación (13). Esto evita problemas de inviabilidad posteriores. Además, al fijar a los postores con el fin de refinar lexicográficamente, relajamos las restricciones asociadas con un pequeño > 0 en el lado derecho. 5.3 Reglas de Actividad de Preferencia Revelada El papel de las reglas de actividad en la subasta es garantizar tanto la consistencia como el progreso en las rondas [21]. La consistencia en nuestro intercambio requiere que los oferentes ajusten los límites a medida que avanza el intercambio. Las reglas de la actividad garantizan que los postores estén activos durante las primeras rondas y promueven una elicitación útil a lo largo del intercambio. Adoptamos una regla de actividad de preferencia revelada (RP) simple. La idea se basa vagamente en la regla de RP en Ausubel et al. [1], donde se utiliza para los AC unilaterales. La motivación es requerir más que simplemente consistencia: necesitamos que los oferentes proporcionen suficiente información para que el sistema pueda demostrar que una asignación es (aproximadamente) eficiente. Es útil pensar en los postores interactuando con agentes de proxy que actuarán en su nombre al responder a los precios provisionales pt−1 determinados al final de la ronda t − 1. El único conocimiento que tiene un intermediario sobre la valoración de un postor es a través del árbol de ofertas. Supongamos que un intermediario fue consultado por la bolsa y se le preguntó en qué operación estaba más interesado el oferente a los precios provisionales. La regla de RP dice lo siguiente: el proxy debe tener suficiente 7. Por ejemplo, aplicando esto a la precisión en el Ejemplo 2, resolvemos una vez y encontramos que los postores 1 y 2 son vinculantes, con un error δ∗ = 2/3. Fijamos estos y luego minimizamos el error para los postores 3 y 4. Finalmente, esto da p(A) = p(B) = 10/3 y p(C) = p(D) = 5/3, con precisión de 2/3 para los postores 1 y 2 y 1/3 para los postores 3 y 4. Se necesitan 254 información para poder determinar este intercambio que maximiza el excedente al precio actual. Considera los siguientes ejemplos: Ejemplo 7. Un postor tiene XOR(+A, +B) y un valor de +5 en la hoja +A y un rango de valores de [5,10] en la hoja +B. Supongamos que los precios actuales son 3 por cada uno de A y B. La regla de RP se cumple porque el representante sabe que, sin importar cómo se resuelva la incertidumbre restante del valor en +B, el postor siempre preferirá (débilmente) +B a +A. Ejemplo 8. Un postor tiene XOR(+A, +B) y límites de valor [5, 10] en el nodo raíz y un valor de 1 en la hoja +A. Supongamos que los precios actuales son 3 por cada uno de A y B. La regla de RP se cumple porque el postor siempre preferirá +A a +B a precios iguales, sin importar cómo se resuelva finalmente el valor incierto en el nodo raíz. Sobrecargando la notación, sea vi ∈ Ti una valoración que sea consistente con las valoraciones inferiores y superiores en el árbol de oferta Ti. Definición 4. El árbol de oferta Ti satisface RP a precios pt−1 si y solo si existe algún intercambio factible L∗ para el cual, vi(L∗ i ) − pt−1 (L∗ i ) ≥ max λ∈Feas(x0) vi(λi) − pt−1 (λi), ∀vi ∈ Ti. Para determinar esto para el postor i, resolvemos una secuencia de problemas, cada uno de los cuales es una variación del problema WD. Primero, construimos un intercambio candidato de límite inferior, que es un intercambio factible que resuelve: max λ vi(λi) − pt−1 (λi) [RP1(i)] s.t. λ ∈ Feas(x0 ), (21) La solución π∗ l a RP1(i) representa el pago máximo que el postor i puede lograr en todos los intercambios factibles, dado su valoración pesimista. Segundo, rompemos los lazos para encontrar un intercambio con la máxima incertidumbre del valor en todas las posibles soluciones a RP1(i): max λ vi(λi) − vi(λi) [RP2(i)] sujeto a λ ∈ Feas(x0) (22) vi(λi) − pt−1(λi) ≥ π∗ l (23) Adoptamos la solución L∗ i como nuestro candidato para el intercambio que puede satisfacer RP. Para entender la importancia de esta regla de desempate, considera el Ejemplo 7. El proxy puede demostrar que +B pero no +A es una mejor respuesta para todos los vi ∈ Ti, y debería elegir +B como su candidato. Observa que +B es un contraejemplo para +A, pero no al revés. Ahora, construimos una valuación modificada ˜vi, estableciendo ˜viβ = viβ, si β ∈ sat(L∗ i) viβ, de lo contrario. (24) donde sat(L∗ i) es el conjunto de nodos que están satisfechos en el árbol de límite inferior para el comercio L∗ i. Dada esta valuación modificada, encontramos U∗ para resolver: max λ ˜vi(λi) − pt−1 (λi) [RP3(i)] s.t. λ ∈ Feas(x0 ) (25) Sea π∗ u el beneficio de este intercambio óptimo en los valores modificados ˜v. Llamamos al intercambio U∗ i el intercambio testigo. Mostramos en la Proposición 1 que la regla RP se cumple si y solo si π∗ l ≥ π∗ u. La construcción de la valoración modificada como ˜vi reconoce que existe incertidumbre compartida en las operaciones que cumplen los mismos nodos en un árbol de ofertas. El ejemplo 8 ayuda a ilustrar esto. Simplemente usando vi en RP3(i), encontraríamos que L∗ i es comprar A con un pago de π∗ l = 3 pero luego encontraríamos que U∗ i es comprar B con π∗ u = 7 y fallar en RP. Debemos reconocer que, sin importar cómo se resuelva la incertidumbre en el nodo raíz, afectará a +A y +B de la misma manera. Por esta razón, establecimos ˜viβ = viβ = 5 en el nodo raíz, que es exactamente el mismo valor que se adoptó al determinar π∗ l. Entonces, RP3(i) aplicado a U∗ i da como resultado comprar A y se considera que el test de RP ha sido aprobado. Proposición 1. El árbol de oferta Ti satisface RP dado los precios pt−1 si y solo si cualquier intercambio de límite inferior L∗ i que resuelve RP1(i) y RP2(i) satisface: vi(Ti, L∗ i) − pt−1 (L∗ i) ≥ ˜vi(Ti, U∗ i) − pt−1 (U∗ i), (26) donde ˜vi es la valoración modificada en la ecuación (24). Prueba. Para la suficiencia, observe que la diferencia en el pago entre el intercambio L∗ i y otro intercambio λi no se ve afectada por la forma en que se resuelve la incertidumbre en cualquier nodo que esté satisfecho tanto en L∗ i como en λi. Corregir los valores en ˜vi en los nodos satisfechos en L∗ i tiene el efecto de eliminar esta consideración cuando se selecciona un intercambio U∗ i que satisface uno de estos nodos. Por otro lado, fijar los valores en estos nodos no tiene efecto en las operaciones consideradas en RP3(i) que no comparten un nodo con L∗ i. Para la dirección necesaria, primero mostramos que cualquier intercambio que satisfaga RP debe resolver RP1(i). Supongamos lo contrario, que algún λi con un pago mayor que π∗ l cumple con RP. Sin embargo, la valoración vi ∈ Ti junto con L∗ i presenta un contraejemplo a RP (Eq. 20). Ahora, supongamos (por contradicción) que algún λi con ganancia máxima π∗ l pero incertidumbre menor que L∗ i cumple con RP. Procede mediante el análisis de casos. Caso a): solo una solución a RP1(i) tiene un valor incierto y, por lo tanto, λi tiene un valor seguro. Pero, esto no puede satisfacer a RP porque L∗ i con un valor incierto sería un contraejemplo para RP (Eq. 20). Caso b): dos o más soluciones a RP1(i) tienen un valor incierto. Aquí argumentamos primero que uno de estos intercambios debe satisfacer un (débil) superconjunto de todos los nodos con valor incierto que son satisfechos por todos los demás intercambios en este conjunto. Esto es por RP. Sin esto, entonces para cualquier elección de comercio que resuelva RP1(i), hay otro comercio con un conjunto disjunto de nodos inciertos pero satisfechos que proporciona un contraejemplo a RP (Ec. 20). Ahora, considera el caso en el que algún intercambio contiene un superconjunto de todos los nodos inciertos satisfechos de los otros intercambios. Claramente RP2(i) elegirá este intercambio, L∗ i, y λi debe satisfacer un subconjunto de estos nodos (por suposición). Pero ahora vemos que λi no puede cumplir con RP porque L∗ i sería un contraejemplo para RP. El incumplimiento de la regla de actividad debe tener alguna consecuencia. En las reglas actuales, la acción predeterminada que elegimos es establecer los límites superiores en las valoraciones hasta el valor máximo del precio provisional en un nodo8 y el valor del límite inferior en ese nodo.9 Tal postor puede permanecer activo 8 El precio provisional en un nodo se define como el precio total mínimo entre todos los intercambios factibles para los cuales el subárbol enraizado en el árbol está satisfecho. 9 Esto es completamente análogo a cuando un postor en una subasta de reloj ascendente deja de ofertar a un precio: no se le permite ofertar a un precio más alto nuevamente en rondas futuras. 255 dentro del intercambio, pero solo con valoraciones que sean consistentes con estos nuevos límites. 5.4 Retroalimentación del postor En cada ronda, nuestro diseño predeterminado proporciona a cada postor el intercambio provisional y también los precios provisionales actuales. Ver el 7 para una discusión adicional. También brindamos orientación para ayudar a un licitador a cumplir con la regla de RP. Que sat(L∗ i ) y sat(U∗ i ) denoten los nodos que se satisfacen en los intercambios L∗ i y U∗ i, tal como se calcula en RP1-RP3. Lema 2. Cuando RP falla, un postor debe aumentar un límite inferior en al menos un nodo en sat(L∗ i) \ sat(U∗ i) o disminuir un límite superior en al menos un nodo en sat(U∗ i) \ sat(L∗ i) para cumplir con la regla de actividad. Prueba. Cambiar los valores superiores o inferiores en los nodos que no cumplen con ninguno de los intercambios no cambia ni L∗ i ni U∗ i, y no altera el beneficio de estos intercambios. Por lo tanto, la condición de RP seguirá fallando. De igual manera, cambiar los límites en los nodos que se satisfacen en ambos intercambios no tiene efecto en la preferencia revelada. Un cambio en un límite inferior en un nodo compartido afecta tanto a L∗ i como a U∗ i de manera idéntica debido al uso de la valoración modificada para determinar U∗ i. Un cambio en un límite superior en un nodo compartido no tiene efecto en la determinación de L∗ i o U∗ i. Ten en cuenta que cuando sat(U∗ i ) = sat(L∗ i ) entonces la condición (26) siempre se satisface trivialmente, por lo que la orientación en el lema siempre está bien definida cuando RP falla. Este es un mecanismo de retroalimentación elegante porque es adaptable. Una vez que un postor realiza algunos cambios en un subconjunto de estos nodos, el postor puede consultar el intercambio. El intercambio puede responder sí, o puede revisar el conjunto de nodos sat(λ∗ l ) y sat(λ∗ u) según sea necesario. 5.5 Condiciones de Terminación Una vez que cada postor haya comprometido sus nuevas ofertas (y haya cumplido con la regla de RP o haya sufrido la penalización), entonces la ronda t se cierra. En este punto, la tarea es determinar la nueva valoración α, y a su vez la asignación provisional λt y los precios provisionales pt. Una condición de terminación también se verifica, para determinar si se debe pasar el intercambio a una ronda final y definitiva. Para definir la α-valoración, calculamos las siguientes dos cantidades: Pesimista en Pesimista (PP). Determinar un intercambio eficiente, λ∗ l, en valores pesimistas, es decir, resolver maxλ   i vi(λi), y establecer PP=  i vi(λ∗ li). Pessimista a Optimista (PO) Determinar un intercambio eficiente, λ∗ u, en valores optimistas, es decir, resolver maxλ   i vi(λi), y establecer PO=  i vi(λ∗ ui). Primero, hay que tener en cuenta que PP ≥ PO y PP ≥ 0 por definición, para todos los árboles de oferta, aunque PO puede ser negativo (porque el intercambio correcto en v no es actualmente un intercambio útil en v). Reconociendo esto, definir γeff (PP, PO) = 1 + PP − PO PP , (27) cuando PP > 0, y observar que γeff (PP, PO) ≥ 1 cuando esto está definido, y que γeff (PP, PO) comenzará siendo grande y luego tenderá hacia 1 a medida que la asignación optimista converge hacia la asignación pesimista. En cada ronda, definimos αeff ∈ [0, 1] como: αeff = 0 cuando PP es 0, 1/γeff en otro caso (28), lo cual es 0 cuando PP es 0 y luego tiende hacia 1 una vez que PP > 0 en alguna ronda. Esto se utiliza para definir la α-valoración vα i = αeff vi + (1 − αeff )vi, ∀i, (29) que se utiliza para definir la asignación provisional y los precios provisionales. El efecto es definir endógenamente un horario para pasar de valores optimistas a pesimistas a lo largo de las rondas, basado en qué tan cercanos estén los intercambios entre sí. Condición de terminación. Al avanzar a la última y definitiva ronda, y finalmente cerrar, también nos preocupamos por la convergencia de pagos, además de la convergencia hacia un comercio eficiente. Para esto introducimos otro parámetro, αthresh ∈ [0, 1], que tiende de 0 a 1 a medida que los pagos de umbral en las valoraciones inferiores y superiores convergen. Considera el siguiente parámetro: γthresh = 1 + ||pthresh(v) − pthresh(v)||2 (PP/Nactive), (30) el cual está definido para PP > 0, donde pthresh(v) denota los pagos de umbral en el perfil de valoración v, Nactive es el número de postores que están activamente involucrados en el comercio en la transacción de PP, y || · ||2 es la norma L2. Ten en cuenta que γthresh está definido para pagos y no para ganancias. Esto es apropiado porque la precisión del resultado del intercambio es lo que importa: es decir, el comercio y los pagos. Dado esto, definimos αthresh = 0 cuando PP es 0 y 1/γthresh en otro caso (31), lo cual es 0 mientras PP es 0 y luego tiende hacia 1 a medida que se avanza. Definición 5 (terminación). ICE pasa a una ronda final cuando se cumple una de las siguientes condiciones: 1. αeff ≥ CUTOFFeff y αthresh ≥ CUTOFFthresh, 2. no hay intercambio en los valores optimistas, donde CUTOFFeff, CUTOFFthresh ∈ (0, 1] determinan la precisión requerida para la terminación. Al final de la última y definitiva ronda, vα = v se utiliza para definir el intercambio final y los pagos finales del umbral. Ejemplo 9. Considera nuevamente el Ejemplo 1, y considera los límites superiores e inferiores como se muestra en la Figura 1. Primero, si los límites de los vendedores fueron [−20, −4] entonces hay un intercambio optimista pero no hay un intercambio pesimista, y PO = −4 y PP = 0, y αeff = 0. En los límites representados, tanto los intercambios optimistas como pesimistas ocurren y PO = PP = 4 y αeff = 1. Sin embargo, podemos ver que los pagos umbral son (17, −17) en v pero (14, −14) en v. Al evaluar γthresh, tenemos γthresh = 1 + √ 1/2(32+32) (4/2) = 5/2, y αthresh = 2/5. Para CUTOFFthresh < 2/5, el intercambio permanecería abierto. Por otro lado, si el valor que los compradores asignan a +AB estaba entre [18, 24] y el valor que los vendedores asignan a -AB estaba entre [-12, -6], los pagos umbral son (15, -15) en ambos límites superior e inferior, y αthresh = 1. 256 Líneas de Propósito de Componente Agente. El modelo 762 de Soporte Captura el comportamiento estratégico y las decisiones de revelación de información. Proporciona soporte XML para cargar bienes y valoraciones en el mundo 200. El mundo 200 realiza un seguimiento de todos los detalles de agentes, bienes y valoraciones. El Controlador y Comunicación de Intercambio 998 controla el intercambio y coordina el comportamiento remoto de los agentes. El Lenguaje de Subasta 1119 implementa el lenguaje de subasta basado en árboles. El Motor de Reglas de Actividad 203 implementa la regla de preferencia revelada con soporte de rango. El Motor de Reglas de Cierre 137 verifica si se ha alcanzado la condición de terminación de la subasta. El Motor WD 377 proporciona lógica relacionada con WD. El Motor de Precios 460 proporciona lógica relacionada con precios. Los Constructores MIP 346 traducen la lógica utilizada por los motores en nuestra formulación general de optimización. Los Constructores de Precios 256 son utilizados por tres etapas de precios. Los Constructores de Determinación de Ganadores 365 son utilizados por WD, regla de actividad, regla de cierre y generación de restricciones de precios. El código de Soporte del Marco 510 facilita la sustitución modular de los componentes anteriores. Tabla 1: Desglose de Componentes y Código de Intercambio. La INFRAESTRUCTURA DE SISTEMAS ICE consta de aproximadamente 6502 líneas de código Java, divididas en los paquetes funcionales descritos en la Tabla 1.10. El prototipo es modular para que los investigadores puedan reemplazar fácilmente los componentes para experimentación. Además del intercambio central discutido en este documento, hemos desarrollado un componente de agente que permite a un usuario simular el comportamiento y conocimiento de otros jugadores en el sistema, lo que le permite al usuario formular su estrategia antes de jugar realmente. Un usuario especifica un modelo de valoración en una interpretación XML de nuestro lenguaje de oferta, que se revela al intercambio a través de la estrategia de los agentes. Las principales tareas de intercambio son manejadas por motores que dictan la lógica no específica del optimizador. Estos motores impulsan los constructores MIP/LP apropiados. Nos dimos cuenta de que todas nuestras formulaciones de optimización se reducen a dos clases de problemas de optimización. El primero, utilizado para la determinación del ganador, la regla de actividad, la regla de cierre y la generación de restricciones en la fijación de precios, es un MIP que encuentra intercambios que maximizan el valor, manteniendo constantes los precios y los márgenes. El segundo, utilizado por las tres etapas de fijación de precios, es un LP que mantiene constantes las operaciones comerciales, buscando minimizar la holgura, el beneficio o los precios. Aprovechamos la similitud de estos problemas utilizando constructores de LP/MIP comunes que difieren solo en unos pocos ganchos funcionales para proporcionar las variables correctas para la optimización. Hemos generalizado nuestra interfaz de optimización del back-end (actualmente soportamos CPLEX y LPSolve con licencia LGPL) y podemos aprovechar la capacidad de equilibrio de carga y resolución paralela de MIP/LP que esta biblioteca proporciona. DISCUSIÓN El lenguaje de oferta se definió para permitir una simetría perfecta entre compradores y vendedores y proporcionar expresividad en un dominio de intercambio, por ejemplo, para oferentes mixtos interesados en ejecutar operaciones como swaps. Esto resultó especialmente desafiante. El avance se produjo cuando nos enfocamos en los cambios de valor para las operaciones en lugar de proporcionar valores absolutos para las asignaciones. Para simplificar, requerimos la misma estructura de árbol tanto para las valoraciones superiores como inferiores. El tamaño del código se mide en líneas de código fuente físicas (SLOC), generadas utilizando el Contador SLOC de David A. Wheeler. El total de 6502 incluye 184 para instrumentación (no se muestra en la tabla). La interfaz del solucionador JOpt es de otras 1964 líneas, y Castor genera automáticamente alrededor de 5200 líneas de código para la manipulación de archivos XML. Esto permite que el propio lenguaje garantice la consistencia (con el valor superior al menos igual al valor inferior en todas las operaciones) y aplique un estrechamiento monótono de estos límites para todas las operaciones en todas las rondas. También proporciona un método eficiente para verificar la regla de actividad de RP, ya que facilita razonar sobre la incertidumbre compartida entre las operaciones. La decisión de adoptar un enfoque directo y delegado en el cual los licitadores expresan sus valores superiores e inferiores a un agente de confianza que interactúa con la bolsa se tomó temprano en el proceso de diseño. En muchos aspectos, esta es la forma más clara y directa de generalizar el diseño en Parkes et al. [24] y hacerlo iterativo. Además, esto elimina muchas oportunidades para la manipulación estratégica: los postores están restringidos a hacer declaraciones (incrementales) sobre sus valoraciones. Otra ventaja es que hace que la regla de la actividad sea fácil de explicar: los postores siempre pueden cumplir con la regla de la actividad ajustando los límites de manera que su valor real permanezca en el soporte. Quizás lo más importante es que tener información explícita sobre los valores superiores e inferiores permite avanzar en las primeras rondas, incluso cuando no hay un intercambio eficiente a valores pesimistas. La información de los límites superior e inferior también proporciona orientación sobre cuándo terminar. Ten en cuenta que tomado por sí mismo, PP = PO no implica que el intercambio provisional actual sea eficiente con respecto a todos los valores consistentes con la información de valor actual. La diferencia en los valores entre diferentes oficios, agregada entre todos los postores, podría ser similar en los límites inferiores y superiores pero bastante diferente en los valores intermedios (incluyendo la verdad). Sin embargo, conjeturamos que PP = PO demostrará ser un indicador excelente de eficiencia en entornos prácticos donde la forma de las valoraciones superiores e inferiores sí transmita información útil. Esto merece una investigación experimental. Además, el uso del precio y la actividad de RP proporciona garantías adicionales. Adoptamos precios lineales (precios en artículos individuales) en lugar de precios no lineales (con precios en un intercambio que no son iguales a la suma de los precios de los artículos componentes) al principio del proceso de diseño. La concisión de esta representación de precios es muy importante para la viabilidad computacional dentro del intercambio y también para promover la simplicidad y transparencia para los postores. La regla de actividad RP fue adoptada más tarde, y es una buena elección debido a sus excelentes propiedades teóricas cuando se combina con los precios de CE. Lo siguiente se puede establecer fácilmente: dados los precios CE exactos pt−1 para el comercio provisional 12. Esto contrasta con enfoques basados en precios indirectos, como el reloj-proxy [1], en los que los postores deben ser capaces de razonar sobre las restricciones RP implicadas por las ofertas en cada ronda. 257 λt−1 en valoraciones vα, entonces si los valores superiores e inferiores al inicio de la ronda t ya satisfacen la regla RP (y sin necesidad de ningún desempate), el comercio provisional es eficiente para todas las valoraciones consistentes con los árboles de ofertas actuales. Cuando existen precios lineales de CE, esto proporciona una declaración de solidez y completitud: si PP = PO, existen precios lineales de CE, y se cumple la regla de RP, el intercambio provisional es eficiente (solidez); si los precios son precios exactos de CE para el intercambio provisional en vα, pero el intercambio es ineficiente con respecto a algún perfil de valoración consistente con los árboles de oferta actuales, entonces al menos un postor debe fallar en RP con su árbol de oferta actual y se avanzará (completitud). El trabajo futuro debe estudiar la convergencia experimentalmente y extender esta teoría para permitir precios aproximados. Algunos aspectos estratégicos de nuestro diseño de ICE merecen comentario y estudio adicional. Primero, no afirmamos que responder sinceramente a la regla de RP sea un equilibrio ex post. Sin embargo, el intercambio está diseñado para imitar la regla de Umbral en su esquema de pago, que se sabe que tiene propiedades de incentivo útiles. Debemos tener cuidado, sin embargo. Por ejemplo, no sugerimos proporcionar αeff a los licitadores, porque a medida que αeff se acerca a 1, informaría a los licitadores que los valores de las ofertas se vuelven irrelevantes para determinar el intercambio, sino que se utilizan simplemente para determinar los pagos (y los licitadores se volverían cada vez más reacios a aumentar sus valoraciones más bajas). Además, en este trabajo no se ha considerado la posibilidad de colusión entre los licitadores. Este es un tema que merece atención en trabajos futuros. 8. CONCLUSIONES En este trabajo diseñamos y prototipamos un intercambio combinatorio iterativo escalable y altamente expresivo. El diseño incluye muchas características interesantes, como: un nuevo lenguaje de árbol de ofertas para intercambios, un nuevo método para construir precios lineales aproximados a partir de lenguajes expresivos, y un método de elicitación con valoraciones optimistas y pesimistas con un nuevo método para evaluar una regla de actividad de preferencia revelada. El intercambio está completamente implementado en Java y se encuentra en una fase de validación. Los próximos pasos para nuestro trabajo son permitir a los licitadores refinar la estructura del árbol de oferta además de los valores en el árbol. Tenemos la intención de estudiar las propiedades de elicitación del intercambio y hemos creado un conjunto de pruebas de instancias de problemas de intercambio. Además, estamos comenzando a participar en colaboraciones para aplicar el diseño a la programación de franjas horarias de despegue y aterrizaje de aerolíneas y a la asignación de recursos en sistemas computacionales distribuidos de amplia área de red. Agradecimientos Nos gustaría dedicar este artículo a todos los participantes de CS 286r en la Universidad de Harvard en la primavera de 2004. Este trabajo está parcialmente respaldado por la subvención de la NSF IIS-0238147. REFERENCIAS [1] L. Ausubel, P. Cramton y P. Milgrom. La subasta de reloj-proxi: Un diseño práctico de subasta combinatoria. En Cramton et al. [9], capítulo 5. [2] M. Babaioff, N. Nisan y E. Pavlov. Mecanismos para un mercado distribuido espacialmente. En Actas de la 5ta Conferencia de la ACM sobre Comercio Electrónico, páginas 9-20. ACM Press, 2001. Dado el teorema de imposibilidad de Myerson-Satterthwaite [22] y el método mediante el cual determinamos el intercambio, no deberíamos esperar esto. [3] M. Ball, G. Donohue y K. Hoffman. Subastas para la asignación segura, eficiente y equitativa de los recursos del sistema de espacio aéreo. En S. Cramton, Shoham, editor, Subastas Combinatorias. 2004. Próximamente. [4] D. Bertsimas y J. Tsitsiklis. Introducción a la Optimización Lineal. Athena Scientific, 1997. [5] S. Bikhchandani y J. M. Ostroy. El modelo de asignación de paquetes. Revista de Teoría Económica, 107(2):377-406, 2002. [6] C. Boutilier. Una formulación POMDP de problemas de obtención de preferencias. En Proc. 18ª Conferencia Nacional de Inteligencia Artificial (AAAI-02), 2002. [7] C. Boutilier y H. Hoos. Subastando idiomas para subastas combinatorias. En Proc. 17ª Conferencia Internacional Conjunta sobre Inteligencia Artificial (IJCAI-01), 2001. [8] W. Conen y T. Sandholm. Elicitación de preferencias en subastas combinatorias. En Proc. 3ra Conf. ACM sobre Comercio Electrónico (EC-01), páginas 256-259. ACM Press, Nueva York, 2001. [9] P. Cramton, Y. Shoham y R. Steinberg, editores. Subastas combinatorias. MIT Press, 2004. [10] S. de Vries, J. Schummer y R. V. Vohra. En subastas ascendentes de Vickrey para objetos heterogéneos. Informe técnico, MEDS, Escuela Kellogg, Universidad Northwestern, 2003. [11] S. de Vries y R. V. Vohra. Subastas combinatorias: Un estudio. Revista Informs sobre Computación, 15(3):284-309, 2003. [12] M. Dunford, K. Hoffman, D. Menon, R. Sultana y T. Wilson. Probando algoritmos de precios lineales para su uso en subastas combinatorias ascendentes. Informe técnico, SEOR, Universidad George Mason, 2003. [13] Y. Fu, J. Chase, B. Chun, S. Schwab, y A. Vahdat. Sharp: una arquitectura para el emparejamiento seguro de recursos. En Actas del decimonoveno simposio de principios de sistemas operativos de ACM, páginas 133-148. ACM Press, 2003. [14] B. Hudson y T. Sandholm. Efectividad de tipos de consultas y políticas para la obtención de preferencias en subastas combinatorias. En Proc. 3rd Int. Articulación. Conferencia sobre Agentes Autónomos y Sistemas Multiagente, páginas 386-393, 2004. [15] V. Krishna. Teoría de subastas. Academic Press, 2002. [16] D. Krych. 

Editorial Académica, 2002. [16] D. Krych. Cálculo y análisis de equilibrios de Nash de reglas de pago basadas en Vickrey para intercambios combinatorios, Harvard College, abril de 2003. [17] A. M. Kwasnica, J. O. Ledyard, D. Porter y C. DeMartini. Un nuevo y mejorado diseño para subastas iterativas de múltiples objetos. Ciencias de la Gestión, 2004. Aparecer. [18] E. Kwerel y J. Williams. Una propuesta para una transición rápida a la asignación de espectro por mercado. Informe técnico, Oficina de Planes y Políticas de la FCC, noviembre de 2002. [19] S. M. Lahaie y D. C. Parkes. Aplicando algoritmos de aprendizaje a la obtención de preferencias. En Proc. ACM Conf. on Electronic Commerce, páginas 180-188, 2004. [20] R. P. McAfee. Una subasta doble con estrategia dominante. Revista de Teoría Económica, 56:434-450, 1992. [21] P. Milgrom. Poniendo en práctica la teoría de subastas: La subasta ascendente simultánea. J.Pol. Econ., 108:245-272, 2000. [22] R. B. Myerson y M. A. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [23] N. Nisan. Subasta y asignación en subastas combinatorias. En Proc. 2ª ACM Conf. sobre Comercio Electrónico (EC-00), páginas 1-12, 2000. [24] D. C. Parkes, J. R. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. En Proc. 17ª Conferencia Internacional Conjunta de Inteligencia Artificial (IJCAI-01), páginas 1161-1168, 2001. [25] D. C. Parkes y L. H. Ungar. Subastas combinatorias iterativas: Teoría y práctica. En Proc. 17ª Conferencia Nacional de Inteligencia Artificial (AAAI-00), páginas 74-81, julio de 2000. [26] S. J. Rassenti, V. L. Smith y R. L. Bulfin. Un mecanismo combinatorio para la asignación de franjas horarias en aeropuertos. Revista Bell de Economía, 13:402-417, 1982. [27] M. H. Rothkopf, A. Pekeˇc y R. M. Harstad. Subastas combinatorias computacionalmente manejables. Ciencia de la Gestión, 44(8):1131-1147, 1998. [28] T. Sandholm y C. Boutilier. Elicitación de preferencias en subastas combinatorias. En Cramton et al. [9], capítulo 10. [29] P. R. Wurman y M. P. Wellman. AkBA: Una subasta combinatoria progresiva y de precio anónimo. En la Segunda Conferencia ACM sobre Comercio Electrónico, páginas 21-29, 2000. 258