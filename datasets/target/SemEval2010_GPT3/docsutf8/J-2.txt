Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección "solo si", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. 

STOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. 

AAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.
Econometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. 

EC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, "La Economía de los Mercados Ausentes, la Información y los Juegos", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.
Prensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. 

IJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39