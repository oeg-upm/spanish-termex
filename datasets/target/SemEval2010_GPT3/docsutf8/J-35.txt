Eficiencia y equilibrios de Nash en un sistema de vales para redes P2P. Eric J. Friedman, Escuela de Investigación de Operaciones e Ingeniería Industrial, Universidad de Cornell, ejf27@cornell.edu. Joseph Y. Halpern, Departamento de Ciencias de la Computación. Universidad Cornell halpern@cs.cornell.edu Ian Kash Departamento de Ciencias de la Computación. La Universidad de Cornell kash@cs.cornell.edu RESUMEN Se analiza un modelo de prestación de servicios en una red P2P. Se demuestra que al agregar un sistema de script, se puede obtener un mecanismo que admita un equilibrio de Nash razonable que reduzca el comportamiento de aprovechamiento gratuito. El efecto de variar la cantidad total de dinero (vales) en el sistema sobre la eficiencia (es decir, el bienestar social) se analiza, y se muestra que al mantener la proporción adecuada entre la cantidad total de dinero y el número de agentes, se maximiza la eficiencia. El trabajo tiene implicaciones para muchos sistemas en línea, no solo redes P2P sino también una amplia variedad de foros en línea para los cuales los sistemas de script son populares, pero faltan análisis formales. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos; I.2.11 [Inteligencia Artificial]: Inteligencia Artificial Distribuida-Sistemas Multiagente; J.4 [Ciencias Sociales y del Comportamiento]: Economía; K.4.4 [Computadoras y Sociedad]: Comercio Electrónico Términos Generales Economía, Teoría 1. INTRODUCCIÓN Una característica común de muchos sistemas distribuidos en línea es que los individuos proporcionan servicios entre sí. Las redes peer-to-peer (P2P) (como Kazaa [25] o BitTorrent [3]) han demostrado ser populares como mecanismos para compartir archivos, y aplicaciones como la computación distribuida y el almacenamiento de archivos están en el horizonte; sistemas como Seti@home [24] proporcionan asistencia computacional; sistemas como Slashdot [21] ofrecen contenido, evaluaciones y foros de consejos en los que las personas responden las preguntas de los demás. El hecho de que las personas se presten servicios entre sí generalmente aumenta el bienestar social: el individuo que utiliza los recursos del sistema obtiene un beneficio mayor que el costo para la persona que lo proporciona. Sin embargo, el costo de brindar el servicio aún puede ser significativo. Por ejemplo, los usuarios de Kazaa y BitTorrent pueden ser cobrados por el uso de ancho de banda; además, en algunos sistemas de intercambio de archivos, existe la posibilidad de ser demandado, lo cual puede ser visto como parte del costo. Por lo tanto, en muchos sistemas existe un fuerte incentivo para convertirse en un "pasajero gratis" y beneficiarse del sistema sin contribuir a él. Este no es simplemente un problema teórico; estudios de la red Gnutella [22] han demostrado que casi el 70 por ciento de los usuarios no comparten archivos y casi el 50 por ciento de las respuestas provienen del 1 por ciento superior de los anfitriones que comparten [1]. Tener relativamente pocos usuarios que proporcionen la mayor parte del servicio crea un punto de centralización; la desaparición de un pequeño porcentaje de usuarios puede afectar enormemente la funcionalidad del sistema. Además, las tendencias actuales parecen estar llevando a la eliminación de los usuarios altruistas en los que estos sistemas confían. Estos usuarios intensivos son algunos de los clientes más costosos que tienen los proveedores de servicios de Internet. Por lo tanto, a medida que la cantidad de tráfico ha aumentado, los proveedores de servicios de Internet han comenzado a buscar formas de reducir este tráfico. Algunas universidades han comenzado a cobrar a los estudiantes por el uso excesivo de ancho de banda; otras revocan el acceso a la red por ello [5]. Un número de empresas también se han formado cuyo servicio es detectar el uso excesivo de ancho de banda [19]. Estas tendencias hacen que desarrollar un sistema que fomente una distribución más equitativa del trabajo sea crucial para la viabilidad continua de las redes P2P y otros sistemas en línea distribuidos. Se ha invertido una cantidad significativa de investigación en el diseño de sistemas de reputación para dar tratamiento preferencial a los usuarios que comparten archivos. Algunas de las redes P2P actualmente en uso han implementado versiones de estas técnicas. Sin embargo, estos enfoques tienden a caer en una de dos categorías: o son similares al trueque o se basan en la reputación. Por "tipo trueque", nos referimos a que cada agente basa sus decisiones únicamente en la información que ha obtenido de sus propias interacciones. Quizás el ejemplo más conocido de un sistema similar al trueque es BitTorrent, donde los clientes que descargan un archivo intentan encontrar a otros clientes con partes que les faltan para poder intercambiarlas, creando así una cantidad de trabajo aproximadamente igual. Dado que el trueque está restringido a usuarios actualmente interesados en un solo archivo, esto funciona bien para archivos populares, pero tiende a tener problemas para mantener la disponibilidad de los menos populares. Un ejemplo de un sistema similar al trueque construido sobre un sistema de intercambio de archivos más tradicional es el sistema de créditos utilizado por eMule 140 [8]. Cada usuario realiza un seguimiento de su historial de interacciones con otros usuarios y da prioridad a aquellos de los que ha descargado previamente. Sin embargo, en un sistema grande, la probabilidad de que un par de usuarios elegidos al azar hayan interactuado antes es bastante baja, por lo que este historial de interacciones no será de gran ayuda. Anagnostakis y Greenwald [2] presentan una versión más sofisticada de este enfoque, pero aún parece sufrir de problemas similares. Se han realizado varios intentos de proporcionar sistemas de reputación generales (por ejemplo, [12, 13, 17, 27]). La idea básica es agregar la experiencia de cada usuario en un número global para cada individuo que represente de manera intuitiva la visión del sistema sobre la reputación de ese individuo. Sin embargo, estos intentos tienden a sufrir problemas prácticos porque implícitamente consideran a los usuarios como buenos o malos, asumen que los buenos usuarios actuarán de acuerdo con el protocolo especificado, y que hay relativamente pocos usuarios malos. Desafortunadamente, si existen formas fáciles de manipular el sistema, una vez que esta información se vuelva ampliamente disponible, es probable que los usuarios racionales la utilicen. No podemos depender solo de unos pocos usuarios siendo malos (en el sentido de no seguir el protocolo prescrito). Por ejemplo, Kazaa utiliza una medida de la proporción entre el número de cargas y el número de descargas para identificar usuarios buenos y malos. Sin embargo, para evitar penalizar a los nuevos usuarios, les dieron a los nuevos usuarios una calificación promedio. Los usuarios descubrieron que podían aprovechar esta calificación relativamente buena para viajar gratis por un tiempo y, una vez que comenzaba a empeorar, podían eliminar su información almacenada y regresar efectivamente como un nuevo usuario, evitando así el sistema (ver [2] para una discusión y [11] para un análisis formal de este lavado de imagen). Por lo tanto, el sistema de reputación de Kazaas es ineficaz. Este es un caso simple de una vulnerabilidad más general de tales sistemas a los ataques de sybil [6], donde un solo usuario mantiene múltiples identidades y las utiliza de manera coordinada para obtener un mejor servicio del que obtendría de otra manera. Trabajos recientes han demostrado que la mayoría de los sistemas de reputación comunes son vulnerables (en el peor de los casos) a tales ataques [4]; sin embargo, el grado de esta vulnerabilidad aún no está claro. El análisis de las vulnerabilidades prácticas y la existencia de sistemas inmunes a tales ataques sigue siendo un área de investigación activa (por ejemplo, [4, 28, 14]). Los sistemas económicos simples basados en un vale o dinero parecen evitar muchos de estos problemas, son fáciles de implementar y son bastante populares (ver, por ejemplo, [13, 15, 26]). Sin embargo, tienen un conjunto diferente de problemas. Quizás los más comunes implican determinar la cantidad de dinero en el sistema. Hablando en términos generales, si hay muy poco dinero en el sistema en relación con el número de agentes, entonces relativamente pocos usuarios pueden permitirse hacer solicitudes. Por otro lado, si hay demasiado dinero, entonces los usuarios no sentirán la necesidad de responder a una solicitud; ya tienen suficiente dinero. Un problema relacionado implica manejar a los recién llegados. Si a los recién llegados se les da una cantidad positiva de dinero, entonces el sistema está abierto a ataques de Sybil. Quizás no sorprendentemente, los sistemas de moneda fiduciaria terminan teniendo que lidiar con problemas económicos estándar como la inflación, las burbujas y las crisis [26]. En este artículo, proporcionamos un modelo formal en el cual analizar sistemas de escritura. Describimos un sistema de guion simple y mostramos que, bajo suposiciones razonables, para cada cantidad fija de dinero existe un equilibrio de Nash no trivial que implica estrategias de umbral, donde un agente acepta una solicitud si tiene menos de $k para algún umbral k. Un aspecto interesante de nuestro análisis es que, en equilibrio, la distribución de usuarios con cada cantidad de dinero es la distribución que maximiza la entropía (sujeta a la restricción de la oferta de dinero). Esto nos permite calcular la oferta monetaria que maximiza la eficiencia (bienestar social), dado el número de agentes. También conduce a una solución para el problema de tratar con los recién llegados: simplemente asumimos que los nuevos usuarios llegan sin dinero, y ajustamos el precio del servicio (lo cual es equivalente a ajustar la oferta de dinero) para mantener la proporción que maximiza la eficiencia. Si bien asumir que los nuevos usuarios no tienen dinero no funcionará en todos los contextos, creemos que este enfoque será ampliamente aplicable. En sistemas donde el objetivo es realizar trabajo, los nuevos usuarios pueden adquirir dinero realizando trabajo. También debería funcionar en el sistema Kazaalike donde un usuario puede ingresar con algunos recursos (por ejemplo, una colección privada de MP3). El resto del documento está organizado de la siguiente manera. En la Sección 2, presentamos nuestro modelo formal y observamos que se puede utilizar para comprender el efecto de los altruistas. En la Sección 3, examinamos qué sucede en el juego bajo un juego no estratégico, si todos los agentes utilizan la misma estrategia de umbral. Mostramos que, en este caso, el sistema converge rápidamente a una situación donde la distribución del dinero está caracterizada por la entropía máxima. Usando este análisis, mostramos en la Sección 4 que, bajo suposiciones mínimas, hay un equilibrio de Nash no trivial en el juego donde todos los agentes utilizan alguna estrategia de umbral. Además, mostramos en la Sección 5 que el análisis conduce a una comprensión de cómo elegir la cantidad de dinero en el sistema (o, de manera equivalente, el costo para cumplir una solicitud) para maximizar la eficiencia, y también muestra cómo manejar a los nuevos usuarios. En la Sección 6, discutimos en qué medida nuestro enfoque puede manejar sybils y colusión. Concluimos en la Sección 7.2. EL MODELO Para empezar, formalizamos la prestación de servicios en una red P2P como un juego no cooperativo. A diferencia de gran parte de la modelización en esta área, nuestro modelo modelará las interacciones asimétricas en un sistema de intercambio de archivos en el que el emparejamiento de jugadores (aquellos que solicitan un archivo con aquellos que tienen ese archivo en particular) es una parte clave del sistema. Esto contrasta con gran parte de trabajos anteriores que utilizan emparejamiento aleatorio en un dilema del prisionero. Tales modelos fueron estudiados en la literatura económica [18, 7] y aplicados por primera vez a reputaciones en línea en [11]; una aplicación a P2P se encuentra en [9]. Este modelo de emparejamiento aleatorio no logra capturar algunos aspectos relevantes de varios entornos importantes. Cuando se realiza una solicitud, generalmente hay muchas personas en la red que potencialmente pueden satisfacerla (especialmente en una red P2P grande), pero no todas pueden hacerlo. Por ejemplo, algunas personas pueden no tener el tiempo o los recursos para satisfacer la solicitud. El proceso de emparejamiento aleatorio ignora el hecho de que algunas personas pueden no ser capaces de satisfacer la solicitud. Presumiblemente, si la persona emparejada con el solicitante no pudiera satisfacer el emparejamiento, tendría que desertar. Además, no captura el hecho de que la decisión de si voluntariarse para satisfacer la solicitud debe tomarse antes del proceso de emparejamiento, no después. Es decir, el proceso de emparejamiento no captura el hecho de que si alguien no está dispuesto a satisfacer la solicitud, sin duda habrá otros que puedan hacerlo. Aunque nos referimos a nuestra unidad de moneda como el dólar, estos no son dólares reales ni los consideramos convertibles en dólares. Finalmente, las acciones y recompensas en el juego del dilema del prisionero no corresponden claramente a las decisiones reales que se pueden tomar. Por ejemplo, no está claro qué significa la deserción por parte del solicitante. En nuestro modelo intentamos abordar todos estos problemas. Supongamos que hay n agentes. En cada ronda, se elige de forma aleatoria y uniforme a un agente para hacer una solicitud. Cada otro agente puede satisfacer esta solicitud con una probabilidad β > 0 en todo momento, independientemente del comportamiento previo. El término β tiene la intención de capturar la probabilidad de que un agente esté ocupado o no tenga los recursos para cumplir con la solicitud. Suponer que β es independiente del tiempo no captura la intuición de que no poder cumplir una solicitud en el tiempo t puede estar correlacionado con no poder cumplirla en el tiempo t+1. Creemos que, en sistemas grandes, deberíamos poder eliminar la suposición de independencia, pero dejamos esto para trabajos futuros. En cualquier caso, aquellos agentes que sean capaces de satisfacer la solicitud deben elegir si desean o no ofrecerse como voluntarios para satisfacerla. Si al menos un agente se ofrece como voluntario, el solicitante recibe un beneficio de 1 utilidad (el trabajo se realiza) y uno de los voluntarios es elegido al azar para cumplir con la solicitud. El agente que cumple con la solicitud paga un costo de α < 1. Como es habitual en la literatura, asumimos que los agentes descuentan los beneficios futuros por un factor de δ por unidad de tiempo. Esto captura la intuición de que un util hoy vale más que un util mañana, y nos permite calcular la utilidad total derivada por un agente en un juego infinito. Por último, asumimos que con más jugadores las solicitudes llegan con más frecuencia. Por lo tanto, asumimos que el tiempo entre rondas es 1/n. Esto captura el hecho de que los sistemas que queremos modelar realmente están procesando muchas solicitudes en paralelo, por lo que esperaríamos que el número de solicitudes concurrentes sea proporcional al número de usuarios. Sea G(n, δ, α, β) este juego con n agentes, un factor de descuento de δ, un costo para satisfacer solicitudes de α y una probabilidad de poder satisfacer solicitudes de β. Cuando los dos últimos parámetros no son relevantes, a veces escribimos G(n, δ). Utilizamos la siguiente notación a lo largo del documento: • pt denota al agente elegido en la ronda t. • Bt i ∈ {0, 1} denota si el agente i puede satisfacer la solicitud en la ronda t. Bt i = 1 con probabilidad β > 0 y Bt i es independiente de Bt i para todo t = t. • V t i ∈ {0, 1} denota la decisión del agente i sobre si voluntariarse en la ronda t; 1 indica voluntariado. V t i está determinado por la estrategia del agente. • vt ∈ {j | V t j Bt j = 1} denota al agente elegido para satisfacer la solicitud. Este agente es elegido de manera uniforme al azar entre aquellos que están dispuestos (V t j = 1) y capaces (Bt j = 1) de satisfacer la solicitud. • ut i denota la utilidad del agente en la ronda t. Un agente estándar es aquel cuya utilidad se determina como se discutió en la introducción; es decir, el agente recibe 2. Para n grande, nuestro modelo converge a uno en el que los jugadores realizan solicitudes en tiempo real, y el tiempo entre las solicitudes de un jugador está distribuido de manera exponencial con media 1. Además, el tiempo entre las solicitudes atendidas por un único jugador también sigue una distribución exponencial. Una utilidad de 1 para una solicitud cumplida y una utilidad de -α por cumplir una solicitud. Por lo tanto, si i es un agente estándar, entonces ut i = 8 < : 1 si i = pt y P j=i V t j Bt j > 0 −α si i = vt 0 de lo contrario. • Ui = P∞ t=0 δt/n ut i denota la utilidad total para el agente i. Es el total descontado de la utilidad del agente en cada ronda. Ten en cuenta que el factor de descuento efectivo es δ1/n ya que un aumento en n conlleva a una reducción del tiempo entre rondas. Ahora que tenemos un modelo de cómo hacer y satisfacer solicitudes, lo utilizamos para analizar el comportamiento de no contribuir. Considera a un altruista como alguien que siempre cumple peticiones. El agente podría comportarse de manera altruista de manera racional si la función de utilidad del agente tiene la siguiente forma, para algún α > 0: ut i = 8 < : 1 si i = pt y P j=i V t j Bt j > 0 α si i = vt 0 en otro caso. Por lo tanto, en lugar de sufrir una pérdida de utilidad al satisfacer una solicitud, un agente obtiene utilidad positiva al satisfacerla. Una función de utilidad de este tipo es una representación razonable del placer que algunas personas obtienen al sentir que son quienes proporcionan la música que todos están tocando. Para agentes altruistas como estos, jugar la estrategia que establece V t i = 1 para todo t es dominante. Si bien tener una función de utilidad no estándar podría ser una razón por la cual un agente racional podría usar esta estrategia, ciertamente hay otras razones. Por ejemplo, un usuario inexperto de software de intercambio de archivos con una buena conexión bien podría seguir esta estrategia. Todo lo que importa para la siguiente discusión es que hay algunos agentes que utilizan esta estrategia, sea por la razón que sea. Como hemos observado, parece que existen usuarios de este tipo en algunos sistemas grandes. Supongamos que nuestro sistema tiene altruistas. Intuitivamente, si a es moderadamente grande, lograrán satisfacer la mayoría de las solicitudes en el sistema incluso si otros agentes no trabajan. Por lo tanto, hay poco incentivo para que cualquier otro agente se ofrezca como voluntario, porque ya está obteniendo pleno beneficio al participar en el sistema. Basándose en esta intuición, es un cálculo relativamente sencillo determinar un valor de a que depende solo de α, β y δ, pero no del número n de jugadores en el sistema, de modo que la estrategia dominante para todos los agentes estándar i sea nunca ofrecerse voluntariamente para satisfacer ninguna solicitud (es decir, V t i = 0 para todo t). Proposición 2.1. Existe un a que depende solo de α, β y δ tal que, en G(n, δ, α, β) con al menos a altruistas, no ofrecerse como voluntario en cada ronda es una estrategia dominante para todos los agentes estándar. Prueba. Considera la estrategia para un jugador estándar j en presencia de altruistas. Incluso sin dinero, el jugador j logrará que se satisfaga una solicitud con probabilidad 1 − (1 − β)a solo a través de las acciones de estos altruistas. Por lo tanto, incluso si j es elegido para hacer una solicitud en cada ronda, la utilidad adicional esperada máxima que puede esperar obtener al tener dinero es P∞ k=1(1 − β)a δk = (1 − β)a /(1 − δ). Si (1 − β)a /(1 − δ) > α o, equivalentemente, si a > log1−β(α(1 − δ)), nunca ofrecerse como voluntario es una estrategia dominante. Considera los siguientes valores razonables para nuestros parámetros: β = .01 (para que cada jugador pueda satisfacer el 1% de las solicitudes), α = .1 (un costo bajo pero no despreciable), δ = .9999/día 142 (lo que corresponde a un factor de descuento anual de aproximadamente 0.95), y un promedio de 1 solicitud por día por jugador. Entonces solo necesitamos un > 1145. Si bien este es un número grande, es pequeño en comparación con el tamaño de una red P2P grande. Los sistemas actuales tienen un grupo de usuarios que se comportan como nuestros altruistas. Esto significa que los intentos de agregar un sistema de reputación encima de un sistema P2P existente para influir en los usuarios a cooperar no tendrán efecto en usuarios racionales. Para tener una distribución justa del trabajo, estos sistemas deben ser rediseñados fundamentalmente para eliminar el grupo de usuarios altruistas. En cierto sentido, esto no es un problema en absoluto. En un sistema con altruistas, los altruistas presumiblemente están felices, al igual que los agentes estándar, quienes ven casi todas sus solicitudes satisfechas sin tener que hacer ningún trabajo. De hecho, las redes P2P actuales funcionan bastante bien en términos de distribuir contenido a las personas. Sin embargo, como mencionamos en la introducción, hay razones para creer que estos altruistas podrían no estar presentes para siempre. Por lo tanto, vale la pena analizar qué se puede hacer para que estos sistemas funcionen en su ausencia. Para el resto de este documento asumimos que todos los agentes son estándar y tratan de maximizar la utilidad esperada. Estamos interesados en equilibrios basados en un sistema de vales. Cada vez que un agente tiene una solicitud satisfecha, debe pagarle a la persona que la satisfizo una cierta cantidad. Por ahora, asumimos que el pago es fijo; para simplificar, tomamos la cantidad como $1. Denotamos por M la cantidad total de dinero en el sistema. Suponemos que M > 0 (de lo contrario, nadie podrá cobrar nunca). En principio, los agentes son libres de adoptar una amplia variedad de estrategias. Pueden tomar decisiones basadas en los nombres de otros agentes o utilizar una estrategia que depende en gran medida de la historia, y combinar libremente estas estrategias. Para ayudar en nuestro análisis, nos gustaría poder restringir nuestra atención a una clase más simple de estrategias. La clase de estrategias en la que estamos interesados es fácil de motivar. La razón intuitiva para querer ganar dinero es para atender la posibilidad de que un agente se quede sin antes de tener la oportunidad de ganar más. Por otro lado, un agente racional con mucho dinero no querría trabajar, porque para cuando haya logrado gastar todo su dinero, la utilidad tendrá menos valor que el costo actual de trabajar. El equilibrio natural entre estos dos es una estrategia de umbral. Que Sk sea la estrategia en la que un agente se ofrece como voluntario siempre que tenga menos de k dólares y no lo haga de otra manera. Ten en cuenta que S0 es la estrategia en la que el agente nunca se ofrece como voluntario. Si bien todos los que juegan S0 conforman un equilibrio de Nash (nadie puede mejorar al ofrecerse como voluntario si nadie más está dispuesto a hacerlo), es un equilibrio poco interesante. Como mostraremos en la Sección 4, es suficiente restringir nuestra atención a esta clase de estrategias. Usamos Kt i para denotar la cantidad de dinero que el agente i tiene en el tiempo t. Claramente Kt+1 i = Kt i a menos que el agente i tenga una solicitud satisfecha, en cuyo caso Kt+1 i = Kt+1 i − 1 o el agente i cumple una solicitud, en cuyo caso Kt+1 i = Kt+1 i + 1. Formalmente, Kt+1 i = 8 < : Kt i − 1 si i = pt , P j=i V t j Bt j > 0, y Kt i > 0 Kt i + 1 si i = vt y Kt pt > 0 Kt i en otro caso. La estrategia de umbral Sk es la estrategia tal que V t i = 1 si Kt pt > 0 y Kt i < k, 0 en caso contrario. EL JUEGO BAJO JUEGO NO ESTRATÉGICO Antes de considerar el juego estratégico, examinamos qué sucede en el sistema si todos juegan simplemente la misma estrategia Sk. Nuestro objetivo general es demostrar que existe una distribución de dinero (es decir, la fracción de personas con cada cantidad de dinero) tal que el sistema converge a esta distribución en un sentido que se precisará en breve. Supongamos que todos juegan Sk. Para simplificar, asumamos que todos tienen a lo sumo k dólares. Podemos hacer esta suposición prácticamente sin pérdida de generalidad, ya que si alguien tiene más de k dólares, simplemente gastará dinero hasta tener como máximo k dólares. Después de este punto, nunca adquirirá más que k. Por lo tanto, eventualmente el sistema estará en tal estado. Si M ≥ kn, ningún agente estará dispuesto a trabajar. Por lo tanto, para los propósitos de esta sección asumimos que M < kn. Desde la perspectiva de un solo agente, en equilibrio (estocástico), el agente está experimentando un paseo aleatorio. Sin embargo, los parámetros de esta caminata aleatoria dependen de las caminatas aleatorias de los otros agentes y es bastante complicado resolverlo directamente. Por lo tanto, consideramos un análisis alternativo basado en la evolución del sistema en su conjunto. Si todos tienen a lo sumo k dólares, entonces la cantidad de dinero que tiene un agente es un elemento de {0, . . . , k}. Si hay n agentes, entonces el estado del juego puede ser descrito identificando cuánto dinero tiene cada agente, por lo que podemos representarlo mediante un elemento de Sk,n = {0, . . . , k}{1,...,n}. Dado que la cantidad total de dinero es constante, no todos estos estados pueden surgir en el juego. Por ejemplo, el estado en el que cada jugador tiene $0 es imposible de alcanzar en cualquier juego con dinero en el sistema. Sea mS(s) = P i∈{1...n} s(i) el monto total de dinero en el juego en el estado s, donde s(i) es la cantidad de dólares que el agente i tiene en el estado s. Queremos considerar solo aquellos estados donde el dinero total en el sistema es M, es decir, Sk,n,M = {s ∈ Sk,n | mS(s) = M}. Bajo el supuesto de que todos los agentes utilizan la estrategia Sk, la evolución del sistema puede ser tratada como una cadena de Markov Mk,n,M sobre el espacio de estados Sk,n,M. Es posible pasar de un estado a otro en una sola ronda si al elegir a un agente en particular para hacer una solicitud y a otro agente en particular para satisfacerla, las cantidades de dinero poseídas por cada agente se convierten en las del segundo estado. Por lo tanto, la probabilidad de una transición de un estado s a t es 0 a menos que existan dos agentes i y j tales que s(i) = t(i) para todos los i /∈ {i, j}, t(i) = s(i) + 1, y t(j) = s(j) − 1. En este caso, la probabilidad de transición de s a t es la probabilidad de que j sea elegido para gastar un dólar y tenga a alguien dispuesto y capaz de satisfacer su solicitud ((1/n)(1 − (1 − β)|{i |s(i )=k}|−Ij ) multiplicado por la probabilidad de que i sea elegido para satisfacer su solicitud (1/(|({i | s(i ) = k}| − Ij ). Ij es 0 si j tiene k dólares y 1 en caso contrario (es solo una corrección por el hecho de que j no puede satisfacer su propia solicitud). Sea ∆k el conjunto de distribuciones de probabilidad en {0, . . . , k}. Podemos pensar en un elemento de ∆k como la descripción de la fracción de personas con cada cantidad de dinero. Esta es una forma útil de ver el sistema, ya que normalmente no nos importa quién tiene cada cantidad de dinero, sino simplemente la fracción de personas que tienen cada cantidad. Como antes, no todos los elementos de ∆k son posibles, dada nuestra restricción de que la cantidad total de dinero es M. En lugar de pensar en términos de la cantidad total de dinero en el sistema, resultará más útil pensar en términos del monto promedio de dinero que tiene cada jugador. Por supuesto, la cantidad total de dinero en un sistema con n agentes es M si y solo si la cantidad promedio que cada jugador tiene es m = M/n. Sea ∆k m el conjunto de todas las distribuciones d ∈ ∆k tales que E(d) = m (es decir, Pk j=0 d(j)j = m). Dado un estado s ∈ Sk,n,M, sea ds ∈ ∆k m la distribución de dinero en s. Nuestro objetivo es demostrar que, si n es grande, entonces existe una distribución d∗ ∈ ∆k m tal que, con alta probabilidad, la cadena de Markov Mk,n,M estará casi siempre en un estado s tal que ds esté cerca de d∗. Por lo tanto, los agentes pueden basar sus decisiones sobre qué estrategia usar en la suposición de que estarán en ese estado. De hecho, podemos caracterizar completamente la distribución d∗. Dada una distribución d ∈ ∆k , sea H(d) = − X {j:d(j)=0} d(j) log(d(j)) la entropía de d. Si ∆ es un conjunto convexo cerrado de distribuciones, entonces es bien sabido que hay una distribución única en ∆ en la que la función de entropía alcanza su valor máximo en ∆. Dado que ∆k m se ve fácilmente como un conjunto convexo cerrado de distribuciones, se sigue que hay una distribución única en ∆k m que denotamos como d∗ k,m cuya entropía es mayor que la de todas las demás distribuciones en ∆k m. Ahora mostramos que, para n suficientemente grande, la cadena de Markov Mk,n,M está casi seguramente en un estado s tal que ds está cerca de d∗ k,M/n. La afirmación es correcta en varios sentidos de cercanía. Para mayor claridad, consideramos la distancia euclidiana. Dado > 0, sea Sk,n,m el conjunto de estados s en Sk,n,mn tal que Pk j=0 |ds (j) − d∗ k,m|2 < . Dada una cadena de Markov M sobre un espacio de estados S y S ⊆ S, sea Xt,s,S la variable aleatoria que denota que M se encuentra en un estado de S en el tiempo t, cuando se inicia en el estado s. Teorema 3.1. Para todo ε > 0, todo k y todo m, existe un n tal que para todo n > n y todos los estados s ∈ Sk,n,mn, existe un tiempo t∗ (que puede depender de k, n, m y ) tal que para t > t∗, tenemos que Pr(Xt,s,Sk,n,m, ) > 1 − . Prueba. (Bosquejo) Supongamos que en algún momento t, Pr(Xt,s,s) es uniforme para todos los s. Entonces, la probabilidad de estar en un conjunto de estados es simplemente el tamaño del conjunto dividido por el número total de estados. Una técnica estándar de la mecánica estadística es demostrar que hay un fenómeno de concentración alrededor de la distribución de entropía máxima [16]. Más precisamente, utilizando un argumento combinatorio directo, se puede demostrar que la fracción de estados que no están en Sk,n,m está acotada por p(n)/ecn, donde p es un polinomio. Esta fracción claramente tiende a 0 a medida que n crece. Por lo tanto, para n suficientemente grande, Pr(Xt,s,Sk,n,m, ) > 1 − si Pr(Xt,s,s ) es uniforme. Es relativamente sencillo demostrar que nuestra Cadena de Markov tiene una distribución límite π sobre Sk,n,mn, tal que para todo s, s ∈ Sk,n,mn, limt→∞ Pr(Xt,s,s ) = πs. Que Pij denote la probabilidad de transición del estado i al estado j. Es fácil verificar mediante un cálculo explícito de las probabilidades de transición que Pij = Pji para todos los estados i y j. Se sigue inmediatamente de esta simetría que πs = πs, por lo que π es uniforme. Después de un tiempo suficiente, la distribución estará lo suficientemente cerca de π, de modo que las probabilidades vuelven a estar limitadas por una constante, lo cual es suficiente para completar el teorema. Realizamos una serie de experimentos que muestran que el comportamiento de máxima entropía descrito en el Teorema 3.1 surge rápidamente para valores bastante prácticos de n y t. El primer experimento mostró que, incluso si n = 1000, alcanzamos rápidamente la distribución de máxima entropía. Promediamos 10 ejecuciones de la cadena de Markov para k = 5 donde hay suficiente dinero para que cada agente tenga $2 comenzando desde una distribución muy extrema (cada agente tiene $0 o $5) y consideramos el tiempo promedio necesario para acercarse a varias distancias de la distribución de entropía máxima. Como muestra la Figura 1, después de 2,000 pasos, en promedio, la distancia euclidiana desde la distribución promedio del dinero hasta la distribución de máxima entropía es de .008; después de 3,000 pasos, la distancia disminuye a .001. Ten en cuenta que esto realmente solo son 3 unidades de tiempo reales, ya que con 1000 jugadores tenemos 1000 transacciones por unidad de tiempo. Luego consideramos qué tan cerca se mantiene la distribución de la entropía máxima una vez que la ha alcanzado. Para simplificar las cosas, comenzamos el sistema en un estado cuya distribución estaba muy cerca de la distribución de máxima entropía y lo ejecutamos durante 106 pasos, para varios valores de n. Como muestra la Figura 2, el sistema no se aleja mucho de la distribución de máxima entropía una vez que está allí. Por ejemplo, si n = 5000, el sistema nunca está a más de una distancia de .001 de la distribución de máxima entropía; si n = 25,000, nunca está a más de .0002 de la distribución de máxima entropía. Finalmente, consideramos con más cuidado cómo rápidamente el sistema converge a la distribución de máxima entropía para varios valores de n. Hay aproximadamente kn estados posibles, por lo que el tiempo de convergencia podría ser bastante largo en principio. Sin embargo, sospechamos que la cadena de Markov que surge aquí se mezcla rápidamente, lo que significa que convergerá significativamente más rápido (ver [20] para más detalles sobre la mezcla rápida). Creemos que el tiempo necesario en realidad es O(n). Este comportamiento se ilustra en la Figura 3, que muestra que para nuestra cadena de ejemplo (nuevamente promediada en 10 ejecuciones), después de 3n pasos, la distancia euclidiana entre la distribución real del dinero en el sistema y la distribución de máxima entropía es menor que .001. EL JUEGO BAJO JUGADA ESTRATÉGICA Hemos visto que el sistema se comporta bien si los agentes siguen todos una estrategia de umbral; ahora queremos demostrar que existe un equilibrio de Nash no trivial donde lo hacen (es decir, un equilibrio de Nash donde todos los agentes usan Sk para algún k > 0). Esto no es cierto en general. Si δ es pequeño, entonces los agentes no tienen incentivo para trabajar. Intuitivamente, si la utilidad futura está suficientemente descontada, entonces todo lo que importa es el presente, y no tiene sentido ofrecerse como voluntario para trabajar. Con un δ pequeño, S0 es el único equilibrio. Sin embargo, demostramos que para δ suficientemente grande, hay otro equilibrio en estrategias de umbral. Lo hacemos primero demostrando que, si cada otro agente está jugando una estrategia de umbral, entonces hay una mejor respuesta que también es una estrategia de umbral (aunque no necesariamente la misma). Luego demostramos que debe existir alguna estrategia de umbral (mixta) para la cual esta mejor respuesta sea la misma estrategia. Se deduce que este conjunto de estrategias de umbral es un equilibrio de Nash. Como primer paso, demostramos que, para todo k, si todos excepto el agente i están jugando Sk, entonces hay una estrategia de umbral Sk que es la mejor respuesta para el agente i. Para demostrar esto, necesitamos asumir que el sistema está cerca de la distribución de estado estacionario (es decir, la distribución de máxima entropía). Sin embargo, siempre y cuando δ esté suficientemente cerca de 1, podemos ignorar lo que sucede durante el período en el que el sistema no está en estado estacionario. Hasta ahora hemos considerado estrategias de umbral de la forma Sk, donde k es un número natural; este es un conjunto discreto de estrategias. Para una futura demostración, será útil contar con un conjunto continuo de estrategias. Si γ = k + γ, donde k es un número natural y 0 ≤ γ < 1, sea Sγ la estrategia que realiza Sk con probabilidad 1 − γ y Sk+1 con probabilidad γ. (Nótese que aquí no estamos considerando estrategias de umbral mixtas arbitrarias, sino simplemente mezclando entre estrategias adyacentes con el único propósito de hacer que las estrategias sean continuas de una manera natural). El Teorema 3.1 se aplica a las estrategias Sγ (la misma prueba se realiza sin cambios), donde γ es un número real no negativo arbitrario. Teorema 4.1. Fije una estrategia Sγ y un agente i. Existe δ∗ < 1 y n∗ tal que si δ > δ∗ , n > n∗ , y cada agente que no sea i está jugando Sγ en el juego G(n, δ), entonces existe un entero k tal que la mejor respuesta para el agente i es Sk. Ya sea que k sea único (es decir, haya una única mejor respuesta que también sea una estrategia de umbral), o existe un entero k tal que Sγ sea una mejor respuesta para el agente i para todos los γ en el intervalo [k, k + 1] (y estas son las únicas mejores respuestas entre las estrategias de umbral). Prueba. (Bosquejo:) Si δ es suficientemente grande, podemos ignorar lo que sucede antes de que el sistema converja a la distribución de entropía máxima. Si n es suficientemente grande, entonces la estrategia jugada por un agente no afectará significativamente la distribución del dinero. Por lo tanto, la probabilidad de que i se mueva de un estado (cantidad de dinero) a otro depende únicamente de su estrategia (ya que podemos considerar que la probabilidad de que i sea elegido para hacer una solicitud y la probabilidad de que i sea elegido para satisfacer una solicitud son constantes). Por lo tanto, desde su punto de vista, el sistema es un proceso de decisión de Markov (MDP), y necesita calcular la política óptima (estrategia) para este MDP. Se desprende de los resultados estándar [23, Teorema 6.11.6] que existe una política óptima que es una política de umbral. El argumento de que la mejor respuesta es única o que existe un intervalo de mejores respuestas se desprende de un análisis más detallado de la función de valor para el MDP. Observamos que puede haber mejores respuestas que no son estrategias de umbral. Todo lo que el Teorema 4.1 muestra es que, entre las mejores respuestas, hay al menos una que es una estrategia de umbral. Dado que sabemos que hay una mejor respuesta que es una estrategia de umbral, podemos buscar un equilibrio de Nash en el espacio de estrategias de umbral. Teorema 4.2. Para todo M, existe δ∗ < 1 y n∗ tal que si δ > δ∗ y n > n∗, existe un equilibrio de Nash en el juego G(n, δ) donde todos los agentes juegan Sγ para algún entero γ > 0. Prueba. Se sigue fácilmente de la prueba del Teorema 4.1 que si br(δ, γ) es la estrategia umbral de mejor respuesta mínima si todos los demás agentes están jugando Sγ y el factor de descuento es δ, entonces, para δ fijo, br(δ, ·) es una función escalonada. También se sigue 3 Formalmente, necesitamos definir las estrategias cuando el sistema está lejos del equilibrio. Sin embargo, estas estrategias lejos del equilibrio (estocástico) no afectarán el comportamiento de equilibrio cuando n sea grande y las desviaciones del equilibrio estocástico sean extremadamente raras. 145 del teorema que si hay dos mejores respuestas, entonces una mezcla de ellas también es una mejor respuesta. Por lo tanto, si podemos unir los pasos con una línea vertical, obtenemos una curva de mejor respuesta. Es fácil ver que en todos los puntos donde esta curva de mejor respuesta cruza la diagonal y = x se define un equilibrio de Nash donde todos los agentes están utilizando la misma estrategia de umbral. Como ya hemos observado, uno de estos equilibrios ocurre en 0. Si solo hay $M en el sistema, podemos restringirnos a estrategias de umbral Sk donde k ≤ M + 1. Dado que nadie puede tener más de $M, todas las estrategias Sk para k > M son equivalentes a SM; estas son simplemente las estrategias en las que el agente siempre se ofrece como voluntario en respuesta a una solicitud hecha por alguien que puede pagar. Claramente br(δ, SM) ≤ M para todo δ, por lo que la función de mejor respuesta está en o por debajo del equilibrio en M. Si k ≤ M/n, cada jugador tendrá al menos k dólares y por lo tanto no estará dispuesto a trabajar, siendo la mejor respuesta simplemente 0. Considera k∗, el menor k tal que k > M/n. No es difícil demostrar que para k∗ existe un δ∗ tal que para todo δ ≥ δ∗ , br(δ, k∗ ) ≥ k∗ . Se sigue por continuidad que si δ ≥ δ∗, debe existir algún γ tal que br(δ, γ) = γ. Este es el equilibrio de Nash deseado. Este argumento también nos muestra que no podemos esperar en general que los puntos fijos sean únicos. Si br(δ, k∗ ) = k∗ y br(δ, k + 1) > k + 1 entonces nuestro argumento muestra que debe haber un segundo punto fijo. En general, puede haber múltiples puntos fijos incluso cuando br(δ, k∗ ) > k∗ , como se ilustra en la Figura 4 con n = 1000 y M = 3000. 0 5 10 15 20 25 Estrategia del Resto de Agentes 0 5 10 15 20 25 Mejor Respuesta Figura 4: La función de mejor respuesta para n = 1000 y M = 3000. El Teorema 4.2 nos permite restringir nuestro diseño a agentes que utilizan estrategias de umbral con la confianza de que habrá un equilibrio no trivial. Sin embargo, esto no descarta la posibilidad de que pueda haber otros equilibrios que no involucren estrategias de umbral. Es incluso posible (aunque parece improbable) que algunos de estos equilibrios puedan ser mejores. 5. BIENESTAR SOCIAL Y ESCALABILIDAD Nuestros teoremas muestran que para cada valor de M y n, para un δ suficientemente grande, existe un equilibrio de Nash no trivial donde todos los agentes utilizan alguna estrategia de umbral Sγ(M,n). Desde el punto de vista del diseñador del sistema, no todos los equilibrios son igualmente buenos; queremos un equilibrio en el que el menor número posible de agentes tengan $0 cuando tengan la oportunidad de hacer una solicitud (para que puedan pagar la solicitud) y relativamente pocos agentes tengan más del monto umbral de dinero (para que siempre haya suficientes agentes para cumplir con la solicitud). Existe una tensión entre estos objetivos. No es difícil demostrar que a medida que la fracción de agentes con $0 aumenta en la distribución de entropía máxima, la fracción de agentes con la cantidad máxima de dinero disminuye. Por lo tanto, nuestro objetivo es entender cuál debería ser la cantidad óptima de dinero en el sistema, dada la cantidad de agentes. Es decir, queremos conocer la cantidad de dinero M que maximiza la eficiencia, es decir, la utilidad total esperada si todos los agentes utilizan Sγ(M,n). Primero observamos que el equilibrio más eficiente depende solo de la proporción de M a n, no de los valores reales de M y n. Teorema 5.1. Existe un n∗ tal que para todos los juegos G(n1, δ) y G(n2, δ) donde n1, n2 > n∗, si M1/n1 = M2/n2, entonces Sγ(M1,n1) = Sγ(M2,n2). Prueba. El teorema 3.1 muestra que la distribución de máxima entropía depende solo de k y la razón M/n, no de M y n por separado. Por lo tanto, dado r, para cada elección de k, hay una distribución única de entropía máxima dk,r. La mejor respuesta br(δ, k) depende solo de la distribución dk,r, no de M o n. Por lo tanto, el equilibrio de Nash depende solo de la proporción r. Es decir, para todas las elecciones de M y n tales que n es suficientemente grande (para que se aplique el Teorema 3.1) y M/n = r, las estrategias de equilibrio son las mismas. A la luz del Teorema 5.1, el diseñador del sistema debe asegurarse de que haya suficiente dinero M en el sistema para que la proporción entre M/n sea óptima. Actualmente estamos explorando exactamente cuál es la proporción óptima. Como muestran nuestros resultados muy preliminares para β = 1 en la Figura 5, la proporción parece aumentar de forma monótona en δ, lo cual coincide con la intuición de que deberíamos brindar a los agentes más pacientes la oportunidad de ahorrar más dinero. Además, parece ser relativamente suave, lo que sugiere que puede tener una solución analítica agradable. 0.9 0.91 0.92 0.93 0.94 0.95 Tasa de descuento ∆ 5 5.5 6 6.5 7 Proporción óptima de Mn Figura 5: Cantidad promedio óptima de dinero al número más cercano .25 para β = 1 Se destaca que, en la práctica, puede ser más fácil para el diseñador variar el precio de cumplir una solicitud en lugar de 4 Si hay múltiples equilibrios, tomamos Sγ(M,n) como el equilibrio de Nash que tiene la mayor eficiencia para M y n fijos. 146 inyectar dinero en el sistema. Esto produce el mismo efecto. Por ejemplo, cambiar el costo de cumplir una solicitud de $1 a $2 es equivalente a reducir a la mitad la cantidad de dinero que tiene cada agente. De manera similar, reducir a la mitad el costo de cumplir una solicitud es equivalente a duplicar la cantidad de dinero que todos tienen. Con una cantidad fija de dinero M, existe un producto óptimo nc del número de agentes y el costo c de cumplir una solicitud. El Teorema 5.1 también nos dice cómo manejar un grupo dinámico de agentes. Nuestro sistema puede manejar a los recién llegados relativamente fácilmente: simplemente permítales unirse sin dinero. Esto no brinda ningún incentivo a los agentes existentes para salir y volver a unirse como recién llegados. Luego cambiamos el precio de cumplir una solicitud para que se mantenga la proporción óptima. Este método tiene la característica interesante de que puede implementarse de forma distribuida; si todos los nodos en el sistema tienen una buena estimación de n, entonces todos pueden ajustar los precios automáticamente. (Alternativamente, el número de agentes en el sistema puede ser publicado en un lugar público). Los enfoques que dependen de ajustar la cantidad de dinero pueden requerir costosos cálculos a nivel de sistema (ver [26] para un ejemplo) y deben ser cuidadosamente ajustados para evitar crear incentivos para que los agentes manipulen el sistema mediante el cual se realiza esto. Ten en cuenta que, en principio, la realización de que el costo de cumplir una solicitud puede cambiar puede afectar la estrategia de un agente. Por ejemplo, si un agente espera que el costo aumente, entonces puede querer posponer ofrecerse como voluntario para cumplir con una solicitud. Sin embargo, si el número de agentes en el sistema siempre está aumentando, entonces el costo siempre disminuye, por lo que nunca hay ninguna ventaja en esperar. Puede haber una ventaja en retrasar una solicitud, pero es mucho más costoso en términos de costos de espera que en proporcionar el servicio, ya que asumimos que la necesidad de un servicio a menudo está sujeta a costos reales de espera, mientras que la necesidad de suministrar el servicio es simplemente aumentar el suministro de dinero. (Se discuten temas relacionados en [10].) Finalmente, esperamos modificar el mecanismo para que el precio de un trabajo pueda establecerse de forma endógena dentro del sistema (como en las economías del mundo real), con agentes pujando por trabajos en lugar de que exista un costo fijo establecido externamente. Sin embargo, aún no hemos explorado los cambios necesarios para implementar este cambio. Por lo tanto, por ahora, asumimos que el costo se establece como una función del número de agentes en el sistema (y que no hay posibilidad de que los agentes satisfagan una solicitud por menos del costo oficial o de que los solicitantes ofrezcan pagar más). 6. SIBILAS Y COLUSIÓN En un sentido ingenuo, nuestro sistema es esencialmente a prueba de sibilas. Para obtener d dólares, sus sibilas juntas todavía tienen que realizar d unidades de trabajo. Además, dado que los recién llegados ingresan al sistema con $0, no hay beneficio en crear nuevos agentes simplemente para aprovechar un dotación inicial. Sin embargo, existen algunas formas menos directas en las que un agente podría aprovecharse de los sybils. Primero, al tener más identidades, tendrá una mayor probabilidad de ser elegido para hacer una solicitud. Es fácil ver que esto llevará a que el agente tenga una mayor utilidad total. Sin embargo, esto es solo un artefacto de nuestro modelo. Para simplificar el análisis de nuestro sistema, hemos asumido que las oportunidades de solicitud llegaron de manera uniforme al azar. En la práctica, se hacen peticiones para satisfacer un deseo. Nuestro modelo asumió implícitamente que todos los agentes tienen la misma probabilidad de tener un deseo en un momento particular. Tener sibilas no debería aumentar la necesidad de que se satisfaga una solicitud. De hecho, sería razonable asumir que las sibilas no hacen solicitudes en absoluto. En segundo lugar, tener sibilas hace más probable que una de las sibilas sea elegida para cumplir una petición. Esto puede permitir a un usuario aumentar su utilidad al establecer un umbral más bajo; es decir, al usar una estrategia Sk donde k es menor que el k utilizado por la estrategia de equilibrio de Nash. Intuitivamente, la necesidad de dinero no es tan crítica si el dinero es más fácil de obtener. A diferencia de la primera preocupación, esto parece ser un problema real. Parece razonable creer que cuando las personas toman una decisión entre varios nodos para satisfacer una solicitud lo hacen de forma aleatoria, al menos en cierta medida. Aunque busquen las características de los nodos anunciadas para ayudar a tomar esta decisión, los sybils permitirían a un usuario anunciar una amplia gama de características. Tercero, un agente puede reducir el costo de cumplir una solicitud al introducir muchos síbiles. Del mismo modo, podría aumentar el costo (y por ende el valor de su dinero) al hacer que un número de sibilas salgan del sistema. Concebiblemente podría alternar entre estas técnicas para magnificar los efectos del trabajo que realiza. Todavía no hemos calculado el efecto exacto de este cambio (interactúa con los otros dos efectos de tener sibilas que ya hemos notado). Dado el número de síbiles que serían necesarios para causar un cambio real en el tamaño percibido de una gran red P2P, la viabilidad de este ataque depende en gran medida de cuánto cuestan los síbiles a un atacante y qué recursos tiene disponibles. El segundo punto planteado sobre las sibilas también se aplica a la colusión si permitimos que se preste dinero. Si k agentes coluden, pueden acordar que, si uno se queda sin dinero, otro en el grupo le prestará dinero. Al juntar su dinero de esta manera, los agentes k pueden volver a mejorar al establecer un umbral más alto. Ten en cuenta que el mecanismo de préstamo no necesita estar integrado en el sistema; los agentes pueden simplemente utilizar una transacción falsa para transferir el dinero. Estos parecen ser los principales métodos para ataques colusivos, pero aún estamos explorando este tema. 7. CONCLUSIÓN Hemos realizado un análisis formal de un sistema de escritura y hemos demostrado que existe un equilibrio de Nash donde todos los agentes utilizan una estrategia de umbral. Además, podemos calcular la eficiencia de la estrategia de equilibrio y optimizar el precio (o la oferta monetaria) para maximizar la eficiencia. Por lo tanto, nuestro análisis proporciona un mecanismo formal para resolver algunos problemas importantes en la implementación de sistemas de guiones. Nos dice que con una población fija de usuarios racionales, es muy poco probable que dichos sistemas se vuelvan inestables. Por lo tanto, si esta estabilidad es una creencia común entre los agentes, no esperaríamos inflación, burbujas ni colapsos debido a la especulación de los agentes. Sin embargo, no podemos descartar la posibilidad de que esos agentes tengan otras creencias que los lleven a especular. Nuestro análisis también nos indica cómo escalar el sistema para manejar una afluencia de nuevos usuarios sin introducir estos problemas: escalar la oferta monetaria para mantener constante la cantidad promedio de dinero (o ajustar los precios de manera equivalente para lograr el mismo objetivo). Hay una serie de problemas teóricos que aún están abiertos, incluida una caracterización de la multiplicidad de equilibrios, ¿suelen ser 2? Además, esperamos que uno pueda calcular estimaciones analíticas para la función de mejor respuesta y la fijación de precios óptima, lo que nos permitiría comprender la relación entre los precios y varios parámetros en el modelo. También sería de gran interés ampliar nuestro análisis para abordar configuraciones más realistas. Mencionamos algunas posibles extensiones aquí: • Hemos asumido que el mundo es homogéneo en varios aspectos, incluyendo la frecuencia de las solicitudes, la utilidad y la capacidad para satisfacer las solicitudes. Sería interesante examinar cómo relajar cualquiera de estas suposiciones alteraría nuestros resultados. • Hemos asumido que no hay costo para un agente al ser miembro del sistema. Supongamos en cambio que imponemos un pequeño costo simplemente por estar presente en el sistema para reflejar los costos de enrutamiento de mensajes y mantenimiento de la superposición. Esta modificación podría tener un impacto significativo en los ataques de Sybil. • Hemos descrito un sistema de escritura que funciona cuando no hay altruistas y hemos demostrado que ningún sistema puede funcionar una vez que hay suficientes altruistas. ¿Qué sucede entre estos extremos? • Un tipo de comportamiento irracional que se encuentra en los sistemas de cupones es el acaparamiento. Hay algunas similitudes entre el acaparamiento y el comportamiento altruista. Mientras que un altruista brinda servicio para todos, un acumulador se ofrecerá como voluntario para todos los trabajos (con el fin de obtener más dinero) y rara vez solicitará servicio (para no gastar dinero). Sería interesante investigar en qué medida nuestro sistema es robusto contra los acaparadores. Claramente, con demasiados acumuladores, puede que no quede suficiente dinero entre los no acumuladores para garantizar que, típicamente, un no acumulador tenga suficiente dinero para satisfacer una solicitud. • Finalmente, en los sistemas de intercambio de archivos P2P, existen comunidades superpuestas de varios tamaños que tienen significativamente más probabilidades de poder satisfacer las solicitudes de los demás. Sería interesante investigar el efecto de tales comunidades en el equilibrio de nuestro sistema. También hay una serie de problemas de implementación que tendrían que resolverse en un sistema real. Por ejemplo, debemos preocuparnos por la posibilidad de que los agentes falsifiquen dinero o mientan sobre si el servicio fue realmente proporcionado. Karma [26] proporciona técnicas para lidiar con ambos problemas y varios más, pero algunas decisiones de implementación de Karma señalan problemas para nuestro modelo. Por ejemplo, resulta prohibitivamente caro asegurar que los saldos de las cuentas bancarias nunca puedan ser negativos, un hecho que nuestro modelo no captura. Otro ejemplo es que Karma tiene nodos que actúan como contables de los saldos de cuentas de otros nodos. Al igual que mantener una presencia en la red, esto impone un costo al nodo, pero a diferencia de eso, la responsabilidad puede ser fácilmente eludida. Karma sugiere varias formas de incentivar a los nodos para que realicen estas tareas. No hemos investigado si estos mecanismos pueden ser incorporados sin perturbar nuestro equilibrio. 8. AGRADECIMIENTOS Nos gustaría agradecer a Emin Gun Sirer, Shane Henderson, Jon Kleinberg y 3 árbitros anónimos por sus sugerencias útiles. EF, IK y JH cuentan con el apoyo parcial de la NSF bajo la subvención ITR-0325453. JH también cuenta con el apoyo parcial de la NSF bajo los subsidios CTC-0208535 e IIS-0534064, de la ONR bajo el subsidio N00014-01-10-511, del Programa de Iniciativa de Investigación Universitaria Multidisciplinaria (MURI) del DoD administrado por la ONR bajo los subsidios N00014-01-1-0795 y N00014-04-1-0725, y de la AFOSR bajo el subsidio F49620-021-0101. 9. REFERENCIAS [1] E. Adar y B. A. Huberman. Viajando gratis en Gnutella. Primer lunes, 5(10), 2000. [2] K. G. Anagnostakis y M. Greenwald. Mecanismos de incentivos basados en intercambio para compartir archivos entre pares. En la Conferencia Internacional sobre Sistemas de Computación Distribuida (ICDCS), páginas 524-533, 2004. [3] BitTorrent Inc. Sitio web de BitTorrent. http://www.bittorent.com. [4] A. Cheng y E. Friedman. Mecanismos de reputación a prueba de Sybil. En Taller sobre Economía de Sistemas Peer-to-Peer (P2PECON), páginas 128-132, 2005. [5] Tecnologías de la Información de Cornell. Estadísticas de uso de Internet de la Universidad de Cornell. http://www.cit.cornell.edu/computer/students/bandwidth/charts.html. [6] J. R. Douceur. El ataque de la sibila. En el Taller Internacional de Sistemas Peer-to-Peer (IPTPS), páginas 251-260, 2002. [7] G. Ellison. Cooperación en el dilema del prisionero con emparejamiento aleatorio anónimo. Revisión de Estudios Económicos, 61:567-588, 1994. [8] Proyecto eMule. Sitio web de eMule. http://www.emule-project.net/. [9] M. Feldman, K. Lai, I. Stoica y J. Chuang. Técnicas de incentivos sólidas para redes peer-to-peer. En la Conferencia ACM sobre Comercio Electrónico (EC), páginas 102-111, 2004. [10] E. J. Friedman y D. C. Parkes. Establecimiento de precios del wifi en Starbucks: problemas en el diseño de mecanismos en línea. En EC 03: Actas de la 4ta Conferencia de la ACM sobre Comercio Electrónico, páginas 240-241. ACM Press, 2003. [11] E. J. Friedman y P. Resnick. El costo social de los seudónimos baratos. Revista de Economía y Estrategia de Gestión, 10(2):173-199, 2001. [12] R. Guha, R. Kumar, P. Raghavan y A. Tomkins. Propagación de la confianza y la desconfianza. En la Conferencia sobre la World Wide Web (WWW), páginas 403-412, 2004. [13] M. Gupta, P. Judge y M. H. Ammar. Un sistema de reputación para redes peer-to-peer. En Network and Operating System Support for Digital Audio and Video (NOSSDAV), páginas 144-152, 2003. [14] Z. Gyongi, P. Berkhin, H. Garcia-Molina y J. Pedersen. Detección de spam de enlaces basada en estimación de masa. Informe técnico, Universidad de Stanford, 2005. [15] J. Ioannidis, S. Ioannidis, A. D. Keromytis y V. Prevelakis. Fileteller: Pagar y recibir pago por almacenamiento de archivos. En Criptografía Financiera, páginas 282-299, 2002. [16] E. T. Jaynes. ¿En qué punto nos encontramos con respecto a la entropía máxima? En R. D. Levine y M. Tribus, editores, El Formalismo de la Entropía Máxima, páginas 15-118. MIT Press, Cambridge, Mass., 1978. 148 [17] S. D. Kamvar, M. T. Schlosser, y H. Garcia-Molina. El algoritmo Eigentrust para la gestión de reputación en redes P2P. En la Conferencia sobre la World Wide Web (WWW), páginas 640-651, 2003. [18] M. Kandori. Normas sociales y aplicación comunitaria. Revisión de Estudios Económicos, 59:63-80, 1992. [19] Corporación LogiSense. Sitio web de LogiSense. http://www.logisense.com/tm p2p.html. [20] L. Lovasz y P. Winkler. Mezcla de caminatas aleatorias y otras difusiones en un grafo. En Encuestas en Combinatoria, 1993, Walker (Ed.), Serie de Notas de Conferencias de la London Mathematical Society 187, Cambridge University Press. 1995. [21] Grupo de Tecnología de Código Abierto. Preguntas frecuentes sobre comentarios y moderación en Slashdot. http://slashdot.org/faq/com-mod.shtml#cm700. [22] OSMB LLC. Sitio web de Gnutella. http://www.gnutella.com/. [23] M. L. Puterman. Procesos de Decisión de Markov. Wiley, 1994. [24] SETI@home. 

Wiley, 1994. [24] SETI@home. Página web de SETI@home. http://setiathome.ssl.berkeley.edu/. [25] Sharman Networks Ltd. Sitio web de Kazaa. http://www.kazaa.com/. [26] V. Vishnumurthy, S. Chandrakumar y E. Sirer. Karma: Un marco económico seguro para el intercambio de recursos entre pares. En Taller sobre Economía de Sistemas Peer-to-Peer (P2PECON), 2003. [27] L. Xiong y L. Liu. Construyendo confianza en comunidades electrónicas descentralizadas de pares a pares. En la Conferencia Internacional de Investigación en Comercio Electrónico (ICECR) de 2002. [28] H. Zhang, A. Goel, R. Govindan, K. Mason y B. V. Roy. Haciendo que los sistemas de reputación basados en vectores propios sean robustos ante la colusión. En Taller sobre Algoritmos y Modelos para el Grafo Web (WAW), páginas 92-104, 2004. 149