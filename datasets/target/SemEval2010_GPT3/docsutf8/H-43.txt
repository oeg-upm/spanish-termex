Combinando contenido y enlaces para clasificación utilizando factorización de matrices Shenghuo Zhu Kai Yu Yun Chi Yihong Gong {zsh,kyu,ychi,ygong}@sv.nec-labs.com NEC Laboratories America, Inc. 10080 North Wolfe Road SW3-350 Cupertino, CA 95014, EE. UU. RESUMEN La World Wide Web contiene contenidos textuales ricos que están interconectados a través de enlaces complejos. Esta enorme base de datos viola la suposición mantenida por la mayoría de los métodos estadísticos convencionales de que cada página web se considera como una muestra independiente e idéntica. Por lo tanto, es difícil aplicar métodos tradicionales de minería o aprendizaje para resolver problemas de minería web, por ejemplo, la clasificación de páginas web, aprovechando tanto el contenido como la estructura de enlaces. La investigación en esta dirección ha recibido recientemente considerable atención pero aún se encuentra en una etapa temprana. Aunque algunos métodos explotan tanto la estructura de enlaces como la información de contenido, algunos de ellos combinan únicamente la información de autoridad con la información de contenido, y otros primero descomponen la estructura de enlaces en características de hub y autoridad, para luego aplicarlas como características adicionales del documento. Siendo prácticamente atractivo por su gran simplicidad, este documento tiene como objetivo diseñar un algoritmo que aproveche tanto la información de contenido como la de enlace, realizando una factorización conjunta en la matriz de adyacencia de enlaces y la matriz de documentos-términos, y deriva una nueva representación para las páginas web en un espacio de factores de baja dimensión, sin separar explícitamente factores de contenido, hub o autoridad. Se puede realizar un análisis adicional basado en la representación compacta de las páginas web. En los experimentos, el método propuesto se compara con métodos de última generación y demuestra una excelente precisión en la clasificación de hipertexto en los benchmarks WebKB y Cora. Categorías y Descriptores de Asignaturas: H.3.3 [Sistemas de Información]: Búsqueda y Recuperación de Información Términos Generales: Algoritmos, Experimentación 1. INTRODUCCIÓN Con el avance de la World Wide Web, cada vez hay más documentos de hipertexto disponibles en la red. Algunos ejemplos de estos datos incluyen páginas web organizacionales y personales (por ejemplo, el conjunto de datos de referencia WebKB, que contiene páginas web universitarias), artículos de investigación (por ejemplo, datos en CiteSeer), artículos de noticias en línea y medios generados por los clientes (por ejemplo, blogs). En comparación con los datos en la gestión tradicional de la información, además del contenido, estos datos en la web también contienen enlaces: por ejemplo, hipervínculos desde la página de inicio de un estudiante que apuntan a la página de inicio de su asesor, citas de artículos, fuentes de un artículo de noticias, comentarios de un bloguero en las publicaciones de otro bloguero, y así sucesivamente. Realizar tareas de gestión de información en datos estructurados plantea muchos nuevos desafíos de investigación. En la siguiente discusión, utilizamos la tarea de clasificación de páginas web como ejemplo ilustrativo, mientras que las técnicas que desarrollamos en las secciones posteriores son igualmente aplicables a muchas otras tareas en recuperación de información y minería de datos. Para el problema de clasificación de páginas web, un enfoque simple es tratar las páginas web como documentos independientes. La ventaja de este enfoque es que muchas herramientas de clasificación listas para usar se pueden aplicar directamente al problema. Sin embargo, este enfoque se basa únicamente en el contenido de las páginas web y no tiene en cuenta la estructura de los enlaces entre ellas. Las estructuras de enlace proporcionan información invaluable sobre las propiedades de los documentos, así como las relaciones entre ellos. Por ejemplo, en el conjunto de datos de WebKB, la estructura de enlaces proporciona información adicional sobre la relación entre los documentos (por ejemplo, los enlaces suelen apuntar de un estudiante a su asesor o de un miembro de la facultad a sus proyectos). Dado que algunos enlaces entre estos documentos implican la interdependencia entre los documentos, la suposición usual de i.i.d. (independiente e idénticamente distribuido) de los documentos ya no se cumple. Desde este punto de vista, los métodos de clasificación tradicionales que ignoran la estructura de enlaces pueden no ser adecuados. Por otro lado, algunos estudios, por ejemplo [25], se basan únicamente en estructuras de enlaces. Sin embargo, es un caso muy raro que la información de contenido pueda ser ignorada. Por ejemplo, en el conjunto de datos de Cora, el contenido del resumen de un artículo de investigación determina en gran medida la categoría del artículo. Para mejorar el rendimiento de la clasificación de páginas web, por lo tanto, tanto la estructura de enlaces como la información de contenido deben ser tomadas en consideración. Para lograr este objetivo, un enfoque simple es convertir un tipo de información en el otro. Por ejemplo, en la clasificación de blogs de spam, Kolari et al. [13] concatenan las características de enlaces salientes con las características de contenido del blog. En la clasificación de documentos, Kurland y Lee [14] convierten la similitud de contenido entre documentos en pesos de enlaces. Sin embargo, el enlace y la información del contenido tienen propiedades diferentes. Por ejemplo, un enlace es una pieza de evidencia real que representa una relación asimétrica, mientras que la similitud de contenido generalmente se define conceptualmente para cada par de documentos de manera simétrica. Por lo tanto, convertir directamente un tipo de información en otro generalmente degrada la calidad de la información. Por otro lado, existen algunos estudios, como discutiremos detalladamente en el trabajo relacionado, que consideran la información de enlaces y la información de contenido por separado para luego combinarlas. Sostenemos que este enfoque ignora la coherencia inherente entre el enlace y la información del contenido y, por lo tanto, no logra combinar los dos de manera fluida. Algunos trabajos, como [3], incorporan información de enlaces utilizando la similitud de cocitación, pero esto puede no capturar completamente la estructura global de enlaces. En la Figura 1, por ejemplo, las páginas web v6 y v7 citan conjuntamente la página web v8, lo que implica que v6 y v7 son similares entre sí. A su vez, v4 y v5 deberían ser similares entre sí, ya que v4 y v5 citan páginas web similares v6 y v7, respectivamente. Pero utilizando la similitud de cocitación, la similitud entre v4 y v5 es cero sin considerar otra información. v1 v2 v3 v4 v5 v6 v7 v8 Figura 1: Un ejemplo de estructura de enlaces En este artículo, proponemos una técnica simple para analizar documentos interconectados, como páginas web, utilizando análisis factorial[18]. En la técnica propuesta, tanto la información de contenido como las estructuras de enlace se combinan de manera fluida a través de un único conjunto de factores latentes. Nuestro modelo contiene dos componentes. El primer componente captura la información del contenido. Este componente tiene una forma similar a la de los temas latentes en el Indexado Semántico Latente (LSI) [8] en la recuperación de información tradicional. Es decir, los documentos se descomponen en temas/factores latentes, los cuales a su vez se representan como vectores de términos. El segundo componente captura la información contenida en la estructura de enlaces subyacente, como los enlaces de las páginas de inicio de los estudiantes a las de los miembros del profesorado. Un factor puede considerarse vagamente como un tipo de documento (por ejemplo, aquellas páginas web pertenecientes a estudiantes). Vale la pena señalar que no definimos explícitamente la semántica de un factor a priori. En cambio, al igual que en LSI, los factores se aprenden a partir de los datos. El análisis factorial tradicional modela las variables asociadas con entidades a través de los factores. Sin embargo, en el análisis de estructuras de enlaces, necesitamos modelar la relación de los dos extremos de los enlaces, es decir, los bordes entre pares de vértices. Por lo tanto, el modelo debería involucrar factores de ambos vértices del borde. Esta es una diferencia clave entre el análisis factorial tradicional y nuestro modelo. En nuestro modelo, conectamos dos componentes a través de un conjunto de factores compartidos, es decir, los factores latentes en el segundo componente (para contenidos) están vinculados a los factores en el primer componente (para enlaces). Al hacer esto, buscamos un conjunto unificado de factores latentes que explique de la mejor manera posible tanto la estructura de contenido como la de enlaces de forma simultánea y coherente. En la formulación, realizamos un análisis de factores basado en la factorización de matrices: la solución al primer componente se basa en la factorización de la matriz término-documento derivada de las características del contenido; la solución al segundo componente se basa en la factorización de la matriz de adyacencia derivada de los enlaces. Debido a que las dos factorizaciones comparten una base común, las bases descubiertas (factores latentes) explican tanto la información de contenido como las estructuras de enlace, y luego se utilizan en tareas adicionales de gestión de información como la clasificación. Este documento está organizado de la siguiente manera. La sección 2 revisa el trabajo relacionado. La sección 3 presenta el enfoque propuesto para analizar la página web basado en la información combinada de enlaces y contenido. La sección 4 amplía el marco básico y algunas variantes para ajustes finos. La sección 5 muestra los resultados del experimento. La sección 6 discute los detalles de este enfoque y la sección 7 concluye. TRABAJO RELACIONADO En la parte de análisis de contenido, nuestro enfoque está estrechamente relacionado con la Indexación Semántica Latente (LSI) [8]. LSI mapea documentos en un espacio latente de dimensiones inferiores. El espacio latente captura implícitamente una gran cantidad de información de los documentos, por lo tanto se le llama espacio semántico latente. La similitud entre documentos podría definirse por los productos punto de los vectores correspondientes de los documentos en el espacio latente. Las tareas de análisis, como la clasificación, podrían realizarse en el espacio latente. El método de descomposición de valores singulares (SVD) comúnmente utilizado garantiza que los puntos de datos en el espacio latente puedan reconstruir de manera óptima los documentos originales. Aunque nuestro enfoque también utiliza un espacio latente para representar páginas web (documentos), consideramos tanto la estructura de enlaces como el contenido de las páginas web. En el enfoque de análisis de enlaces, el marco de hubs y autoridades (HITS) [12] clasifica las páginas web en dos categorías, hubs y autoridades. Usando la noción recursiva, un centro es una página web con muchos enlaces salientes a autoridades, mientras que una autoridad es una página web con muchos enlaces entrantes de centros. En lugar de usar dos categorías, PageRank [17] utiliza una sola categoría para la noción recursiva, una autoridad es una página web con muchos enlaces entrantes de autoridades. Él et al. [9] proponen un algoritmo de agrupamiento para la agrupación de documentos web. El algoritmo incorpora la estructura de enlaces y los patrones de co-citación. En el algoritmo, todos los enlaces se tratan como aristas no dirigidas del grafo de enlaces. La información de contenido se utiliza únicamente para ponderar los enlaces por la similitud textual de ambos extremos de los enlaces. Zhang et al. [23] utiliza el marco de regularización de grafo no dirigido para la clasificación de documentos. Achlioptas et al[2] descomponen la web en atributos de centro y autoridad y luego los combinan con contenido. Zhou et al. [25] y [24] proponen un marco de regularización de grafo dirigido para el aprendizaje semi-supervisado. El marco combina la información de hub y autoridad de las páginas web. Pero es difícil combinar la información del contenido en ese marco. Nuestro enfoque considera el contenido y la vinculación dirigida entre los temas de las páginas web de origen y destino en un solo paso, lo cual implica que el tema combina la información de la página web como autoridades y como centros en un único conjunto de factores. Cohn y Hofmann [6] construyen el espacio latente a partir de la información de contenido y enlaces, utilizando un análisis de contenido basado en LSI probabilístico (PLSI) [10] y un análisis de enlaces basado en PHITS [5]. La principal diferencia entre el enfoque de [6] (PLSI+PHITS) y nuestro enfoque está en la parte del análisis de enlaces. En PLSI+PHITS, el enlace se construye con la vinculación desde el tema de la página web de origen hasta la página web de destino. En el modelo, los enlaces salientes de la página web de destino no tienen efecto en la página web de origen. En otras palabras, la estructura general de enlaces no se utiliza en PHITS. En nuestro enfoque, el enlace se construye con la conexión entre el factor de la página web de origen y el factor de la página web de destino, en lugar de la página web de destino en sí misma. El factor de la página web de destino contiene información sobre sus enlaces salientes. A su vez, esta información se transmite al factor de la página web de origen. Como resultado de la factorización de matrices, el factor forma un grafo de factores, una versión en miniatura del grafo original, preservando la estructura principal del grafo original. Taskar et al. [19] proponen redes de Markov relacionales (RMNs) para la clasificación de entidades, describiendo una distribución condicional de clases de entidades dadas las atributos y relaciones de las entidades. El modelo fue aplicado a la clasificación de páginas web, donde las páginas web son entidades y los hipervínculos son tratados como relaciones. Las RMNs aplican campos aleatorios condicionales para definir un conjunto de funciones potenciales en cliques de variables aleatorias, donde la estructura de enlace proporciona pistas para formar los cliques. Sin embargo, el modelo no proporciona una solución lista para usar, ya que el éxito depende en gran medida de las habilidades para diseñar las funciones potenciales. Por otro lado, la inferencia para las RMNs es intratable y requiere propagación de creencias. Los siguientes son algunos trabajos sobre la combinación de documentos y enlaces, pero los métodos están poco relacionados con nuestro enfoque. Los experimentos de [21] muestran que el uso de términos del documento vinculado mejora la precisión de la clasificación. Chakrabarti et al. [3] utilizan información de co-citación en su modelo de clasificación. Joachims et al. [11] combinan núcleos de texto y núcleos de co-citación para clasificación. Oh et al [16] utilizan el marco del Bayes ingenuo para combinar la información de enlaces con el contenido. 3. NUESTRO ENFOQUE En esta sección primero presentaremos un novedoso método de factorización de matrices, que es más adecuado que los métodos convencionales de factorización de matrices para el análisis de enlaces. Luego presentaremos nuestro enfoque que factoriza conjuntamente la matriz documento-término y la matriz de enlaces, y obtiene factores compactos y altamente indicativos para representar documentos o páginas web. 3.1 Factorización de la Matriz de Enlaces Supongamos que tenemos un grafo dirigido G = (V, E), donde el conjunto de vértices V = {vi}n i=1 representa las páginas web y el conjunto de aristas E representa los hipervínculos entre las páginas web. Sea A = {asd} denota la matriz de adyacencia n×n de G, la cual también es llamada matriz de enlaces en este artículo. Para un par de vértices, vs y vd, dejemos que asd = 1 cuando haya una arista de vs a vd, y asd = 0, en caso contrario. Ten en cuenta que A es una matriz asimétrica, ya que los hipervínculos son dirigidos. La mayoría de los algoritmos de aprendizaje automático asumen una representación de instancias en forma de vector de características. Para la clasificación de páginas web, sin embargo, el grafo de enlaces no proporciona fácilmente una representación vectorial para las páginas web. Si se utiliza directamente cada fila o columna de A para el trabajo, sufrirá un costo computacional muy alto porque la dimensionalidad es igual al número de páginas web. Por otro lado, producirá una baja precisión de clasificación (ver nuestros experimentos en la Sección 5), ya que A es extremadamente disperso. La idea de la factorización de matrices de enlaces es derivar una representación de características de alta calidad Z de las páginas web basada en el análisis de la matriz de enlaces A, donde Z es una matriz n × l, con cada fila siendo el vector de características de l dimensiones de una página web. La nueva representación de las páginas web captura los factores principales de la estructura de enlaces y hace que el procesamiento posterior sea más eficiente. Se puede utilizar un método similar a LSI para aplicar el conocido análisis de componentes principales (PCA) para derivar Z a partir de A. El problema de optimización correspondiente 2 es min Z,U A − ZU 2 F + γ U 2 F (1) donde γ es un número positivo pequeño, U es una matriz l ×n, y · F es la norma de Frobenius. La optimización tiene como objetivo aproximar A por ZU, un producto de dos matrices de rango bajo, con una regularización en U. Al final, el vector de fila i-ésimo de Z puede ser considerado como el vector de características del centro del vértice vi, y el vector de fila de U puede ser considerado como las características de autoridad. Un modelo de generación de enlaces propuesto en [2] es similar al enfoque de PCA. Dado que A es una matriz no negativa aquí, también se puede considerar imponer restricciones no negativas en U y Z, lo que produce un algoritmo similar a PLSA [10] y NMF [20]. Debido a la dispersión de A, los enlaces de dos páginas similares pueden no compartir ninguna página de destino común, lo que hace que parezcan diferentes. Sin embargo, las dos páginas pueden estar indirectamente vinculadas a muchas páginas comunes a través de sus vecinos. Otra forma equivalente es minZ,U A − ZU 2 F , sujeto a U U = I. La solución Z es idéntica sujeta a un factor de escala. Sin embargo, a pesar de su popularidad en el análisis de matrices, el PCA (o otros métodos similares como PLSA) es restrictivo para la factorización de matrices de enlace. El problema principal es que, el PCA ignora el hecho de que las filas y columnas de A están indexadas por exactamente el mismo conjunto de objetos (es decir, páginas web). La matriz aproximada ˜A = ZU no muestra evidencia de que los enlaces estén dentro del mismo conjunto de objetos. Para ver la desventaja, consideremos una situación de transitividad de enlaces vi → vs → vj, donde la página i está enlazada a la página s, la cual a su vez está enlazada a la página j. Dado que ˜A = ZU trata a A como enlaces desde páginas web {vi} hacia un conjunto diferente de objetos, sea denotado por {oi}, ˜A = ZU realmente divide un objeto enlazado os desde vs y descompone la ruta de enlace en dos partes vi → os y vs → oj. Esto es claramente una mala interpretación del enlace original. Para superar el problema de PCA, en este artículo sugerimos utilizar una factorización diferente: min Z,U A − ZUZ 2 F + γ U 2 F (2) donde U es una matriz completa de tamaño l × l. Ten en cuenta que U no es simétrica, por lo tanto ZUZ produce una matriz asimétrica, que es el caso de A. Nuevamente, cada vector fila de Z corresponde a un vector de características de una página web. La nueva forma aproximada ˜A = ZUZ establece claramente que los enlaces están entre el mismo conjunto de objetos, representados por las características Z. El modelo de factores en realidad mapea cada vértice, vi, en un vector zi = {zi,k; 1 ≤ k ≤ l} en el espacio Rl. Llamamos al espacio Rl el espacio factor. Entonces, {zi} codifica la información de la conectividad entrante y saliente de los vértices {vi}. Las cargas factoriales, U, explican cómo se produjeron estas conexiones observadas basadas en {zi}. Una vez que tengamos el vector zi, podemos utilizar muchos métodos de clasificación tradicionales (como las SVM) o herramientas de agrupamiento (como K-Means) para realizar el análisis. Ilustración basada en un problema sintético Para ilustrar aún más las ventajas de la factorización de matriz de enlace propuesta en la ecuación (2), consideremos el gráfico en la Figura 1. Dadas las observaciones v1 v2 v3 v4 v5 v6 v7 v8 de la Figura 2: Podemos resumir el gráfico agrupándolas como un grafo de factores representado en la Figura 2. En el siguiente paso realizamos los dos métodos de factorización Ecuación (2) y Ecuación (1) en esta matriz de enlaces. Una buena representación de bajo rango debería revelar la estructura del grafo de factores. Primero intentamos una descomposición similar a PCA, resolviendo la Ecuación (1) y obteniendo Z = U = 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 1. 1. 0 0 0 0 0 −.6 −.7 .1 0 0 .0 .6 −.0 0 0 .8 −.4 .3 0 0 .2 −.2 −.9 .7 .7 0 0 0 .7 .7 0 0 0 0 0 0 0 0 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 0 0 0 0 0 .5 −.5 0 0 0 .5 −.5 0 0 0 0 0 −0.6 −.7 .1 0 0 .0 .6 −.0 0 0 .8 −.4 .3 0 0 .2 −.2 −.9 .7 .7 0 0 0 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5 Podemos ver que los vectores fila de v6 y v7 son iguales en Z, lo que indica que v6 y v7 tienen los mismos atributos de centro. Los vectores fila de v2 y v3 son iguales en U, lo que indica que v2 y v3 tienen los mismos atributos de autoridad. No es claro ver la similitud entre v4 y v5, porque sus enlaces entrantes (y salientes) son diferentes. Entonces, factorizamos A por ZUZ resolviendo la Ec. (2), y obtenemos los resultados Z = U = 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 −.8 −.5 .3 −.1 −.0 −.0 .4 .6 −.1 −.4 −.0 .4 .6 −.1 −.4 .3 −.2 .3 −.4 .3 .3 −.2 .3 −.4 .3 −.4 .5 .0 −.2 .6 −.4 .5 .0 −.2 .6 −.1 .1 −.4 −.8 −.4 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5 2 6 6 6 6 6 6 6 6 4 −.1 −.2 −.4 .6 .7 .2 −.5 −.5 −.5 .0 .1 .1 .4 −.4 .3 .1 −.2 −.0 .3 −.1 −.3 .3 −.5 −.4 −.2 3 7 7 7 7 7 7 7 7 5 El Z resultante es muy consistente con la estructura de agrupamiento de los vértices: los vectores de fila de v2 y v3 son iguales, los de v4 y v5 son iguales, los de v6 y v7 son iguales. Incluso interesantemente, si agregamos restricciones para asegurar que Z y U sean no negativos, tenemos Z = U = 2 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 4 1. 0 0 0 0 0 .9 0 0 0 0 .9 0 0 0 0 0 .7 0 0 0 0 .7 0 0 0 0 0 .9 0 0 0 0 .9 0 0 0 0 0 1. 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 5 2 6 6 6 6 6 6 6 6 4 0 1. 0 0 0 0 0 .7 0 0 0 0 0 .7 0 0 0 0 0 1. 0 0 0 0 0 3 7 7 7 7 7 7 7 7 5 lo cual claramente indica la asignación de vértices a clústeres desde Z y los enlaces del grafo de factores desde U. Cuando la interpretabilidad no es crítica en algunas tareas, por ejemplo, clasificación, encontramos que se logran mejores precisión sin las restricciones no negativas. Dado nuestro análisis anterior, es claro que la factorización ZUZ es más expresiva que ZU en la representación de la matriz de enlaces A. 3.2 Factorización de la Matriz de Contenido Ahora consideremos la información de contenido en los vértices. Para combinar la información de los enlaces y la información del contenido, queremos utilizar el mismo espacio latente para aproximar el contenido como el espacio latente para los enlaces. Utilizando el enfoque de bolsa de palabras, denotamos el contenido de las páginas web mediante una matriz C de n×m, donde cada una de sus filas representa un documento y cada columna representa una palabra clave, donde m es el número de palabras clave. Al igual que el indexado semántico latente (LSI) [8], el espacio latente l-dimensional para las palabras se denota por una matriz V de m × l. Por lo tanto, utilizamos ZV para aproximar la matriz C, min V,Z C − ZV 2 F + β V 2 F, (3) donde β es un número positivo pequeño, β V 2 F sirve como término de regularización para mejorar la robustez. 3.3 Factorización Conjunta de Matrices de Enlaces y Contenido Existen muchas formas de emplear tanto la información de contenido como de enlaces para la clasificación de páginas web. Nuestra idea en este artículo no es simplemente combinarlos, sino más bien fusionarlos en una representación de características única, consistente y compacta. Para lograr este objetivo, resolvemos el siguiente problema, min U,V,Z n J (U, V, Z) def = A − ZUZ 2 F + α C − ZV 2 F + γ U 2 F + β V 2 F o . (4) La ecuación (4) es la factorización de matriz conjunta de A y C con regularización. La nueva representación Z se asegura de capturar tanto las estructuras de la matriz de enlaces A como la matriz de contenido C. Una vez que encontramos el Z óptimo, podemos aplicar los métodos tradicionales de clasificación o agrupamiento en los datos vectoriales Z. La relación entre estas matrices puede ser representada como se muestra en la Figura 3. Figura 3: Relación entre las matrices. El nodo Y es el objetivo de clasificación. La ecuación (4) se puede resolver utilizando métodos de gradiente, como el método del gradiente conjugado y los métodos quasi-Newton. La principal computación de los métodos de gradiente es evaluar la función objetivo J y sus gradientes con respecto a las variables, ∂J ∂U = Z ZUZ Z − Z AZ + γU, ∂J ∂V =α V Z Z − C Z + βV, ∂J ∂Z = ZU Z ZU + ZUZ ZU − A ZU − AZU + α ZV V − CV. Debido a la dispersión de A, la complejidad computacional de la multiplicación de A y Z es O(µAl), donde µA es el número de entradas no nulas en A. De manera similar, la complejidad computacional de C Z y CV es O(µC l), donde µC es el número de entradas no nulas en C. La complejidad computacional de las demás multiplicaciones en el cálculo del gradiente es O(nl2). Por lo tanto, la complejidad computacional total en una iteración es O(µAl + µC l + nl2). El número de enlaces y el número de palabras en una página web son relativamente pequeños en comparación con el número de páginas web, y son casi constantes a medida que aumenta el número de páginas web/documentos, es decir, µA = O(n) y µC = O(n). Por lo tanto, teóricamente el tiempo de cálculo es casi lineal al número de páginas web/documentos, n. 4. CONSIDERACIÓN DE FACTORIZACIÓN DE MATRIZ SUPERVISADA Considere un problema de clasificación de páginas web. Podemos resolver la Ec. (4) para obtener Z como sección 3, luego usar un clasificador tradicional para realizar la clasificación. Sin embargo, este enfoque no tiene en cuenta las etiquetas de datos en el primer paso. Creemos que el uso de etiquetas de datos mejora la precisión al obtener un mejor Z para la clasificación, por lo que consideramos utilizar las etiquetas de datos para guiar la factorización de matrices, llamada factorización de matrices supervisada [22]. Debido a que algunos datos utilizados en la factorización de matrices no tienen información de etiqueta, la factorización de matrices supervisada se clasifica en la categoría de aprendizaje semi-supervisado. Sea C el conjunto de clases. Para simplificar, primero consideramos un problema de clase binaria, es decir, C = {−1, 1}. 

C = {−1, 1}. Supongamos que conocemos las etiquetas {yi} para los vértices en T ⊂ V. Queremos encontrar una hipótesis h : V → R, de modo que asignemos vi a 1 cuando h(vi) ≥ 0, -1 en caso contrario. Suponemos que una transformación del espacio latente a R es lineal, es decir, h(vi) = w φ(vi) + b = w zi + b, donde w y b son parámetros a estimar. Aquí, w es la norma del límite de decisión. Similar a las Máquinas de Vectores de Soporte (SVM) [7], podemos usar la pérdida de bisagra para medir la pérdida, X i:vi∈T [1 − yih(vi)]+ , donde [x]+ es x si x ≥ 0, 0 si x < 0. Sin embargo, la pérdida de bisagra no es suave en el punto de bisagra, lo que dificulta aplicar métodos de gradiente en el problema. Para superar la dificultad, utilizamos una versión suavizada de la pérdida de bisagra para cada punto de datos, g(yih(vi)), donde g(x) = 8 >< >: 0 cuando x ≥ 2, 1 − x cuando x ≤ 0, 1 4 (x − 2)2 cuando 0 < x < 2. Reducimos un problema de múltiples clases en varios problemas binarios. Un esquema simple de reducción es el esquema de codificación uno contra el resto. En el esquema uno contra el resto, asignamos un vector de etiquetas para cada etiqueta de clase. El elemento de un vector de etiquetas es 1 si el punto de datos pertenece a la clase correspondiente, −1 si el punto de datos no pertenece a la clase correspondiente, 0 si el punto de datos no está etiquetado. Sea Y la matriz de etiquetas, donde cada columna es un vector de etiquetas. Por lo tanto, Y es una matriz de n × c, donde c es el número de clases, |C|. Entonces, los valores de la ecuación (5) forman una matriz H = ZW + 1b, (7) donde 1 es un vector de tamaño n, cuyos elementos son todos uno, W es una matriz de parámetros c × l, y b es un vector de parámetro de tamaño c. La pérdida total es proporcional a la suma de la ecuación (6) sobre todos los puntos de datos etiquetados y las clases, LY (W, b, Z) = λ X i:vi∈T ,j∈C g(YijHij), donde λ es el parámetro para escalar el término. Para obtener una solución robusta, también utilizamos la regularización de Tikhonov para W, ΩW (W) = ν 2 W 2 F, donde ν es el parámetro para escalar el término. Entonces, el problema de factorización de matrices supervisado se convierte en min U,V,Z,W,b Js(U, V, Z, W, b) (8) donde Js(U, V, Z, W, b) = J (U, V, Z) + LY (W, b, Z) + ΩW (W). También podemos utilizar métodos de gradiente para resolver el problema de la Ecuación (8). Los gradientes son ∂Js ∂U = ∂J ∂U , ∂Js ∂V = ∂J ∂V , ∂Js ∂Z = ∂J ∂Z + λGW, ∂Js ∂W =λG Z + νW, ∂Js ∂b =λG 1, donde G es una matriz n×c, cuyo elemento ik-ésimo es Yikg (YikHik), y g (x) = 8 >< >: 0 cuando x ≥ 2, −1 cuando x ≤ 0, 1 2 (x − 2) cuando 0 < x < 2. Una vez que obtengamos w, b y Z, podemos aplicar h a los vértices con etiquetas de clase desconocidas, o aplicar algoritmos de clasificación tradicionales en Z para obtener los resultados de clasificación. 5. EXPERIMENTOS 5.1 Descripción de los datos En esta sección, realizamos clasificación en dos conjuntos de datos, para demostrar nuestro enfoque. Los dos conjuntos de datos son el conjunto de datos WebKB[1] y el conjunto de datos Cora [15]. El conjunto de datos de WebKB consiste en aproximadamente 6000 páginas web de los departamentos de informática de cuatro universidades (Cornell, Texas, Washington y Wisconsin). Las páginas web están clasificadas en siete categorías. Los números de páginas en cada categoría se muestran en la Tabla 1. El conjunto de datos Cora consiste en los resúmenes y referencias de alrededor de 34,000 artículos de investigación en informática. Utilizamos parte de ellos para categorizar en uno de los subcampos de estructuras de datos (DS), hardware y arquitectura (HA), aprendizaje automático (ML) y lenguaje de programación (PL). Eliminamos aquellos artículos que no hacen referencia a otros artículos en el conjunto. El número de artículos y el número de subcampos en cada área se muestran en la Tabla 2. área # de artículos # de subcampos Estructura de datos (DS) 751 9 Hardware y arquitectura (HA) 400 7 Aprendizaje automático (ML) 1617 7 Lenguaje de programación (PL) 1575 9 Tabla 2: Conjunto de datos de Cora 5.2 Métodos La tarea de los experimentos es clasificar los datos basándose en su información de contenido y/o estructura de enlaces. Utilizamos los siguientes métodos: 65 70 75 80 85 90 95 100 WisconsinWashingtonTexasCornell precisión(%) conjunto de datos SVM en contenido SVM en enlace SVM en enlace-contenido Grafo dirigido reg. PLSI+PHITS enlace-contenido MF enlace-contenido sup. Método MF Cornell Texas Washington Wisconsin SVM en contenido 81.00 ± 0.90 77.00 ± 0.60 85.20 ± 0.90 84.30 ± 0.80 SVM en enlaces 70.10 ± 0.80 75.80 ± 1.20 80.50 ± 0.30 74.90 ± 1.00 SVM en enlace-contenido 80.00 ± 0.80 78.30 ± 1.00 85.20 ± 0.70 84.00 ± 0.90 Regularización de grafo dirigido 89.47 ± 1.41 91.28 ± 0.75 91.08 ± 0.51 89.26 ± 0.45 PLSI+PHITS 80.74 ± 0.88 76.15 ± 1.29 85.12 ± 0.37 83.75 ± 0.87 MF en enlace-contenido 93.50 ± 0.80 96.20 ± 0.50 93.60 ± 0.50 92.60 ± 0.60 sup. Aplicamos máquinas de vectores de soporte (SVM) en el contenido de los documentos. Las características son el modelo de bolsa de palabras y todas las palabras están truncadas. Este método ignora la estructura de enlaces en los datos. Se utiliza SVM lineal. El parámetro de regularización de SVM se selecciona utilizando el método de validación cruzada. La implementación de SVM utilizada en los experimentos es libSVM[4]. • SVM en enlaces Tratamos los enlaces como las características de cada documento, es decir, la i-ésima característica es enlace-a-páginai. Aplicamos SVM en las características de enlaces. Este método utiliza información de enlaces, pero no la estructura de enlaces. • SVM en contenido de enlaces. Combinamos las características de los dos métodos anteriores. Utilizamos diferentes pesos para estos dos conjuntos de características. Los pesos también son seleccionados utilizando validación cruzada. • Regularización de grafo dirigido. Este método está descrito en [25] y [24]. Este método se basa únicamente en la estructura de enlaces. • PLSI+PHITS Este método se describe en [6]. Este método combina información del contenido de texto y estructura de enlaces para su análisis. El algoritmo PHITS es en espíritu similar a la Ec.1, con una restricción adicional no negativa. Modela las estructuras salientes y entrantes por separado. • Contenido de enlace MF Este es nuestro enfoque de factorización de matrices descrito en la Sección 3. Utilizamos 50 factores latentes para Z. Después de calcular Z, entrenamos un SVM lineal utilizando Z como vectores de características, luego aplicamos SVM en la porción de prueba de Z para obtener el resultado final, debido a la salida multiclase. • Contenido del enlace sup. Este método es nuestro enfoque de la factorización de matrices supervisada en la Sección 4. Utilizamos 50 factores latentes para Z. Después de calcular Z, entrenamos un SVM lineal en la parte de entrenamiento de Z, luego aplicamos SVM en la parte de prueba de Z para obtener el resultado final, debido a la salida multiclase. Dividimos los datos aleatoriamente en cinco pliegues y repetimos el experimento cinco veces, en cada ocasión utilizamos un pliegue para pruebas y los otros cuatro pliegues para entrenamiento. Durante el proceso de entrenamiento, utilizamos la validación cruzada para seleccionar todos los parámetros del modelo. Medimos los resultados mediante la precisión de la clasificación, es decir, el porcentaje del número de documentos clasificados correctamente en todo el conjunto de datos. Los resultados se muestran como las precisión de clasificación promedio y su desviación estándar en las cinco repeticiones. Los promedios de precisión de clasificación para el conjunto de datos de WebKB se muestran en la Tabla 3. Para esta tarea, las precisiones de SVM en enlaces son peores que las de SVM en contenido. Pero la regularización del grafo dirigido, que también se basa únicamente en los enlaces, logra una precisión mucho mayor. Esto implica que la estructura de enlaces juega un papel importante en la clasificación de este conjunto de datos, pero los enlaces individuales en una página web proporcionan poca información. La combinación de enlaces y contenido utilizando SVM logra una precisión similar a la de SVM solo en el contenido, lo que confirma que los enlaces individuales en una página web proporcionan poca información. Dado que nuestro enfoque considera la estructura de enlaces, así como la información de contenido, nuestros dos métodos ofrecen resultados con las mayores precisiones entre estos enfoques. La diferencia entre los resultados de nuestros dos métodos no es significativa. Sin embargo, en los experimentos a continuación, mostramos la diferencia entre ellos. Las precisiones de clasificación para el conjunto de datos Cora se muestran en la Tabla 4. En este experimento, las precisiones de SVM en la combinación de enlaces y contenido son mayores que las de SVM solo en contenido o solo en enlaces. Esto indica que tanto el contenido como los enlaces son infor45 50 55 60 65 70 75 80 PLMLHADS precisión(%) conjunto de datos SVM en contenido SVM en enlace SVM en enlace-contenido Grafo dirigido reg. PLSI+PHITS enlace-contenido MF enlace-contenido sup. Método MF DS HA ML PL SVM en contenido 53.70 ± 0.50 67.50 ± 1.70 68.30 ± 1.60 56.40 ± 0.70 SVM en enlaces 48.90 ± 1.70 65.80 ± 1.40 60.70 ± 1.10 58.20 ± 0.70 SVM en enlace-contenido 63.70 ± 1.50 70.50 ± 2.20 70.56 ± 0.80 62.35 ± 1.00 Regularización de grafo dirigido 46.07 ± 0.82 65.50 ± 2.30 59.37 ± 0.96 56.06 ± 0.84 PLSI+PHITS 53.60 ± 1.78 67.40 ± 1.48 67.51 ± 1.13 57.45 ± 0.68 MF en enlace-contenido 61.00 ± 0.70 74.20 ± 1.20 77.50 ± 0.80 62.50 ± 0.80 sup. MF 69.38 ± 1.80 74.20 ± 0.70 78.70 ± 0.90 68.76 ± 1.32 Tabla 4: Exactitud de clasificación (media ± error estándar %) en el conjunto de datos de Cora informativo para clasificar los artículos en subcampos. El método de regularización de grafo dirigido no funciona tan bien como SVM en enlaces-contenido, lo que confirma la importancia del contenido del artículo en esta tarea. Aunque nuestro método de factorización de matrices de enlaces y contenido funciona ligeramente mejor que otros métodos, nuestro método de factorización de matrices supervisadas de enlaces y contenido supera significativamente. 5.4 El número de factores Como discutimos en la Sección 3, la complejidad computacional de cada iteración para resolver el problema de optimización es cuadrática respecto al número de factores. Realizamos experimentos para estudiar cómo el número de factores afecta la precisión de la predicción. Utilizamos diferentes números de factores para los datos de Cornell del conjunto de datos WebKB y los datos de aprendizaje automático (ML) del conjunto de datos Cora. El resultado mostrado en la Figura 4(a) y 4(b). Las cifras muestran que la precisión es del 88 al 95%, con un incremento de 0 a 50 en el número de factores de enlace de contenido compatible. Enlace de MF contenido de MF (a) Datos de Cornell 62 64 66 68 70 72 74 76 78 80 0 10 20 30 40 50 precisión(%) número de factores enlace de contenido sup. La precisión aumenta a medida que aumenta el número de factores. Es un concepto diferente al de elegir el número óptimo de grupos en una aplicación de agrupamiento. Es cuánta información representar en las variables latentes. Hemos considerado la regularización sobre los factores, lo cual evita el problema de sobreajuste para un gran número de factores. Para elegir el número de factores, necesitamos considerar el equilibrio entre la precisión y el tiempo de cálculo, que es cuadrático respecto al número de factores. La diferencia entre el método de factorización de matrices y el supervisado disminuye a medida que aumenta el número de factores. Esto indica que la utilidad de la factorización de matrices supervisada es mayor con un menor número de factores. 6. Las funciones de pérdida LA en la ecuación (2) y LC en la ecuación (3) utilizan la pérdida al cuadrado debido a la conveniencia computacional. De hecho, la pérdida al cuadrado no describe con precisión el modelo de ruido subyacente, ya que los pesos de la matriz de adyacencia solo pueden tomar valores no negativos, en nuestro caso, solo cero o uno, y los componentes de la matriz de contenido C solo pueden tomar enteros no negativos. Por lo tanto, podemos aplicar otros tipos de pérdida, como la pérdida de bisagra o la pérdida de bisagra suavizada, por ejemplo. LA(U, Z) = µh(A, ZUZ ), donde h(A, B) =P i,j [1 − AijBij]+. En nuestro artículo, principalmente discutimos la aplicación de la clasificación. Una entrada de la matriz Z significa la relación entre una página web y un factor. Los valores de las entradas son los pesos del modelo lineal, en lugar de las probabilidades de que las páginas web pertenezcan a temas latentes. Por lo tanto, permitimos que los componentes tomen cualquier valor real posible. Cuando llegamos a la aplicación de agrupamiento, podemos usar este modelo para encontrar Z, luego aplicar K-means para dividir las páginas web en clusters. De hecho, podemos utilizar la idea de factorización de matrices no negativas para el agrupamiento [20] para clusterizar directamente páginas web. Como se muestra en el ejemplo con restricciones no negativas en la Sección 3, representamos cada grupo con un tema latente, es decir, la dimensionalidad del espacio latente se establece en el número de grupos que deseamos. Entonces, el problema de la Ec. (4) se convierte en min U,V,Z J (U, V, Z), sujeto a Z ≥ 0. (9) Al resolver la Ec. (9), podemos obtener resultados más interpretables, que podrían ser utilizados para el agrupamiento. 7. CONCLUSIONES En este artículo, estudiamos el problema de cómo combinar la información de contenido y enlaces para el análisis de páginas web, principalmente en aplicaciones de clasificación. Proponemos un enfoque sencillo que utiliza factores para modelar el contenido de texto y la estructura de enlaces de páginas web/documentos. Los enlaces dirigidos se generan a partir de la combinación lineal de la vinculación entre los factores de origen y destino. Al compartir factores entre el contenido del texto y la estructura de enlaces, es fácil combinar tanto la información del contenido como la estructura de enlaces. Nuestros experimentos muestran que nuestro enfoque es efectivo para la clasificación. También discutimos una extensión para la aplicación de agrupamiento. Agradecimiento Nos gustaría agradecer al Dr. Dengyong Zhou por compartir el código de su algoritmo. También, gracias a los revisores por los comentarios constructivos. 8. REFERENCIAS [1] Proyecto de base de conocimiento mundial de CMU (WebKB). Disponible en http://www.cs.cmu.edu/∼WebKB/. [2] D. Achlioptas, A. Fiat, A. R. Karlin y F. McSherry. Búsqueda web a través de la síntesis de concentradores. En el Simposio de la IEEE sobre Fundamentos de la Ciencia de la Computación, páginas 500-509, 2001. [3] S. Chakrabarti, B. E. Dom y P. Indyk. Categorización de hipertexto mejorada utilizando hiperenlaces. En L. M. Haas y A. Tiwary, editores, Actas de SIGMOD-98, Conferencia Internacional de ACM sobre Gestión de Datos, páginas 307-318, Seattle, EE. UU., 1998. ACM Press, Nueva York, EE. UU. [4] C.-C. Chang y C.-J. I'm sorry, but "Lin" is not a sentence. Can you provide more context or a complete sentence for me to translate into Spanish? LIBSVM: una biblioteca para máquinas de vectores de soporte, 2001. Software disponible en http://www.csie.ntu.edu.tw/∼cjlin/libsvm. [5] D. Cohn y H. Chang. Aprendiendo a identificar de manera probabilística documentos autoritativos. Procesado. ICML 2000. pp.167-174., 2000. [6] D. Cohn y T. Hofmann. El eslabón perdido: un modelo probabilístico del contenido de documentos y la conectividad de hipertexto. En T. K. Leen, T. G. Dietterich y V. Tresp, editores, Avances en Sistemas de Procesamiento de Información Neural 13, páginas 430-436. MIT Press, 2001. [7] C. Cortes y V. Vapnik. Redes de vectores de soporte. Aprendizaje automático, 20:273, 1995. [8] S. C. Deerwester, S. T. Dumais, T. K. Landauer, G. W. Furnas y R. A. Harshman. Indexación mediante análisis semántico latente. Revista de la Sociedad Americana de Ciencia de la Información, 41(6):391-407, 1990. [9] X. Él, H. Zha, C. Ding y H. Simon. Agrupación de documentos web utilizando estructuras de hipervínculos. Estadística Computacional y Análisis de Datos, 41(1):19-45, 2002. [10] T. Hofmann. Indexación semántica latente probabilística. En Actas de la Vigésimo Segunda Conferencia Internacional Anual de SIGIR, 1999. [11] T. Joachims, N. Cristianini y J. Shawe-Taylor. Núcleos compuestos para la categorización de hipertexto. En C. Brodley y A. Danyluk, editores, Actas de ICML-01, 18ª Conferencia Internacional sobre Aprendizaje Automático, páginas 250-257, Williams College, EE. UU., 2001. Morgan Kaufmann Publishers, San Francisco, EE. UU. [12] J. M. Kleinberg. Fuentes autorizadas en un entorno hiperenlazado. J. ACM, 48:604-632, 1999. [13] P. Kolari, T. Finin, y A. Joshi. SVM para la blogosfera: Identificación de blogs y detección de splogs. En el Simposio de Primavera de la AAAI sobre Enfoques Computacionales para Analizar Weblogs, marzo de 2006. [14] O. Kurland y L. Lee. Pagerank sin hiperenlaces: reordenamiento estructural utilizando enlaces inducidos por modelos de lenguaje. En SIGIR 05: Actas de la 28ª conferencia internacional anual de ACM SIGIR sobre investigación y desarrollo en recuperación de información, páginas 306-313, Nueva York, NY, EE. UU., 2005. ACM Press. [15] A. McCallum, K. Nigam, J. Rennie, y K. Seymore. Automatizando la construcción de portales de internet con aprendizaje automático. Revista de Recuperación de Información, 3(127-163), 2000. [16] H.-J. Oh, S. H. Myaeng y M.-H. Lee. Un método práctico de categorización de hipertexto utilizando enlaces e información de clase disponible de forma incremental. En SIGIR 00: Actas de la 23ª conferencia internacional anual de ACM SIGIR sobre investigación y desarrollo en recuperación de información, páginas 264-271, Nueva York, NY, EE. UU., 2000. ACM Press. [17] L. Page, S. Brin, R. Motowani y T. Winograd. Clasificación de citas PageRank: orden en la web. Stanford Digital Library documento de trabajo 1997-0072, 1997. [18] C. Spearman. Inteligencia general, determinada y medida de manera objetiva. La Revista Americana de Psicología, 15(2):201-292, Abr 1904. [19] B. Taskar, P. Abbeel y D. Koller. Modelos probabilísticos discriminativos para datos relacionales. En Actas de la 18ª Conferencia Internacional de UAI, 2002. [20] W. Xu, X. Liu y Y. Gong. Agrupación de documentos basada en la factorización de matrices no negativas. En SIGIR 03: Actas de la 26ª conferencia internacional anual de ACM SIGIR sobre investigación y desarrollo en recuperación de información, páginas 267-273. ACM Press, 2003. [21] Y. Yang, S. Slattery y R. Ghani. Un estudio de enfoques para la categorización de hipertexto. Revista de Sistemas de Información Inteligente, 18(2-3):219-241, 2002. [22] K. Yu, S. Yu y V. Tresp. Indexación semántica latente informada de múltiples etiquetas. En SIGIR 05: Actas de la 28ª conferencia internacional anual de ACM SIGIR sobre investigación y desarrollo en recuperación de información, páginas 258-265, Nueva York, NY, EE. UU., 2005. ACM Press. [23] T. Zhang, A. Popescul y B. Dom. Modelos de predicción lineal con regularización de gráficos para la categorización de páginas web. En KDD 06: Actas de la 12ª conferencia internacional de ACM SIGKDD sobre descubrimiento de conocimiento y minería de datos, páginas 821-826, Nueva York, NY, EE. UU., 2006. ACM Press. [24] D. Zhou, J. Huang, y B. Sch¨olkopf. Aprendizaje a partir de datos etiquetados y no etiquetados en un grafo dirigido. En Actas de la 22ª Conferencia Internacional sobre Aprendizaje Automático, Bonn, Alemania, 2005. [25] D. Zhou, B. Sch¨olkopf y T. Hofmann. Aprendizaje semisupervisado en grafos dirigidos. Procesado. Información neural. Sistemas de Procesamiento, 2004.