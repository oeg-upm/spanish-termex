La colaboración entre un enjambre de satélites Grégory Bonnet ∗ ONERA - DCSD / CNES / Alcatel Space Alenia 2 avenue Edouard Belin BP 4025 31055 Toulouse, Francia gregory.bonnet@onera.fr Catherine Tessier ONERA - DCSD 2 avenue Edouard Belin BP 4025 31055 Toulouse, Francia catherine.tessier@onera.fr RESUMEN El artículo trata sobre la planificación a bordo para un enjambre de satélites a través de comunicación y negociación. Buscamos definir comportamientos individuales que resulten en un comportamiento global que cumpla con los requisitos de la misión. Presentaremos la formalización del problema, un protocolo de comunicación, un método de resolución basado en reglas de decisión reactivas y los primeros resultados. Categorías y Descriptores de Asignaturas H.4 [Aplicaciones de Sistemas de Información]: Varios; I.2.8 [Inteligencia Artificial]: Resolución de Problemas, Métodos de Control y Ejecución de Planes de Búsqueda, formación y generación; I.2.11 [Inteligencia Artificial]: Inteligencia Artificial Distribuida-Coherencia y Coordinación Términos Generales Algoritmos 1. INTRODUCCIÓN Se ha realizado mucha investigación para aumentar la autonomía de los satélites, como permitirles resolver por sí mismos problemas que puedan surgir durante una misión, adaptar su comportamiento a nuevos eventos y transferir la planificación a bordo; aunque el costo de desarrollo de dicho satélite se incremente, hay un aumento en el rendimiento y las posibilidades de misión [34]. Además, el uso de enjambres de satélites - conjuntos de satélites volando en formación o en constelación alrededor de la Tierra - hace posible considerar actividades conjuntas, distribuir habilidades y garantizar robustez. Se han desarrollado arquitecturas multiagente para enjambres de satélites [36, 38, 42], pero se hacen fuertes suposiciones sobre las capacidades de deliberación y comunicación para construir un plan colectivo. La planificación de un solo agente [4, 18, 28] y la asignación de tareas [20] son ampliamente estudiadas. En un contexto multiagente, los agentes que construyen un plan colectivo deben ser capaces de cambiar sus objetivos, reasignar recursos y reaccionar a los cambios del entorno y a las elecciones de los demás. Se debe agregar un paso de coordinación al paso de planificación [40, 30, 11]. Sin embargo, este paso requiere altas capacidades de comunicación y computación. Por ejemplo, los mecanismos basados en coaliciones [37], basados en contratos [35] y todos los mecanismos basados en negociaciones [25] necesitan estas capacidades, especialmente en entornos dinámicos. Para relajar las restricciones de comunicación, se considera la coordinación basada en normas y convenciones [16] o estrategias [17]. Las normas limitan a los agentes en sus decisiones de tal manera que se reducen las posibilidades de conflictos. Las estrategias son reglas de decisión privadas que permiten a un agente beneficiarse del mundo del conocimiento sin necesidad de comunicación. Sin embargo, la comunicación sigue siendo necesaria para compartir información y construir conjeturas y planes colectivos. La comunicación puede lograrse a través de un enfoque estigmérgico (a través del entorno) o mediante el intercambio de mensajes y un protocolo. Un protocolo define las interacciones entre agentes y no puede separarse de su objetivo, por ejemplo, intercambiar información, encontrar un equilibrio, asignar tareas, entre otros. Los protocolos pueden ser vistos como una abstracción de una interacción [9]. Pueden ser representados de diversas formas, por ejemplo, AUML [32] o redes de Petri [23]. Como los protocolos están diseñados originalmente para un único objetivo, algunos trabajos buscan dotarlos de flexibilidad [8, 26]. Sin embargo, un agente no siempre puede comunicarse con otro agente o las posibilidades de comunicación están restringidas a intervalos de tiempo cortos. El objetivo de este trabajo es utilizar conexiones entre satélites, llamadas Enlaces Intersatélite o ISL, en una constelación de observación terrestre inspirada en la misión Fuego [13, 19], con el fin de aumentar la reactividad del sistema y mejorar el rendimiento global de la misión a través de un enfoque de agente híbrido. A nivel individual, los agentes son deliberativos para crear un plan local, pero a nivel colectivo, utilizan reglas de decisión normativas para coordinarse entre sí. Presentaremos las características de nuestro problema, un protocolo de comunicación, un método para la asignación de solicitudes y, finalmente, estrategias de colaboración. 287 978-81-904262-7-5 (RPS) c 2007 IFAAMAS 2. CARACTERÍSTICAS DEL PROBLEMA Una constelación de satélites de observación es un conjunto de satélites en diversas órbitas cuya misión es tomar fotografías de varias áreas en la superficie terrestre, por ejemplo puntos calientes correspondientes a volcanes o incendios forestales. El suelo envía las solicitudes de observación de constelaciones caracterizadas por sus posiciones geográficas, prioridades especificando si las solicitudes son urgentes o no, las fechas deseadas de observación y las fechas deseadas para la descarga de datos. Los satélites están equipados con un único instrumento de observación cuyo espejo puede girar para cambiar la línea de visión. Es necesario una duración mínima para mover el espejo, por lo que las solicitudes que estén muy cerca entre sí no pueden ser realizadas por el mismo satélite. Los satélites también están equipados con un instrumento de detección apuntado hacia adelante que detecta puntos calientes y genera solicitudes de observación a bordo. Las constelaciones que consideramos son aquellas cuyas órbitas de los diferentes satélites se encuentran alrededor de los polos. Una posición juiciosa de los satélites en sus órbitas hace posible considerar que dos (o más) satélites se encuentren en las áreas polares, y por lo tanto puedan comunicarse sin intervención terrestre. De manera intuitiva, la comunicación entre satélites aumenta la reactividad de la constelación ya que cada satélite está dentro del campo de visión directa de una estación terrestre (y por lo tanto puede comunicarse con ella) solo el 10 % del tiempo. Las características del problema son las siguientes: - 3 a 20 satélites en la constelación; - comunicación en pares alrededor de los polos; - ninguna intervención terrestre durante el proceso de planificación; - solicitudes asincrónicas con diversas prioridades. Un enfoque multiagente Dado que cada satélite es una entidad única que forma parte del enjambre global, un sistema multiagente es adecuado para modelar constelaciones de satélites [39]. Este enfoque ha sido desarrollado a través de la arquitectura ObjectAgent [38], TeamAgent [31], DIPS [14] o Prospecting ANTS [12]. 3.1 Enjambre de satélites Un enjambre de satélites de observación es un sistema multiagente donde las solicitudes no tienen que ser realizadas en un orden fijo y los agentes (los satélites) no tienen ninguna interacción física. Llevar a cabo una solicitud no puede evitar que otro agente lleve a cabo otra, incluso la misma. Como máximo, habrá un desperdicio de recursos. Formalmente, un enjambre se define de la siguiente manera: Definición 1 (Enjambre). Un enjambre de satélites E es un trío < S, T, Vecindad >: - S es un conjunto de n agentes {s1 . . . sn}; - T ⊆ R+ o N+ es un conjunto de fechas con un orden total <; - Vecindad: S × T → 2S. En la secuela, asumiremos que los agentes comparten un reloj común. Para un agente dado y un tiempo dado, la relación de cercanía devuelve el conjunto de agentes con los que puede comunicarse en ese momento. Como hemos visto anteriormente, esta relación existe cuando los agentes se encuentran. Este término designará una constelación de satélites con Enlaces InterSatelitales. 3.2 Solicitudes Las solicitudes son las tareas de observación que el enjambre de satélites debe lograr. Como hemos visto anteriormente, las solicitudes se generan tanto en tierra como a bordo. A cada agente se le asigna un conjunto de solicitudes iniciales. Durante la misión, se envían nuevas solicitudes a los agentes desde tierra o los agentes pueden generar nuevas solicitudes por sí mismos. Formalmente, una solicitud se define de la siguiente manera: Definición 2 (Solicitud). Una solicitud R se define como una tupla < idR, pos(R), prio(R), tbeg(R), bR >: - idR es un identificador; - pos(R) es la posición geográfica de R; - prio(R) ∈ R es la prioridad de la solicitud; - tbeg(R) ∈ T es la fecha deseada de observación; - bR ∈ {verdadero, falso} especifica si R ha sido realizada. La prioridad prio(R) de una solicitud representa cuánto es importante para el usuario, es decir, el remitente de la solicitud, que la solicitud se lleve a cabo. Por lo tanto, una solicitud con alta prioridad debe ser realizada a toda costa. En nuestra aplicación, las prioridades van desde 1 hasta 5 (siendo 5 la más alta). En la secuela, notaremos Rt si como el conjunto de las solicitudes que son conocidas por el agente si en el tiempo t ∈ T. Para cada solicitud R en Rt si , hay un valor de costo, notado costsi (R) ∈ R, que representa qué tan lejos de la fecha deseada de observación tbeg(R) un agente si puede realizar R. Por lo tanto, cuanto más pueda un agente llevar a cabo una solicitud cerca de la fecha deseada de observación, menor será el valor del costo. 3.3 Candidatura Un agente puede tener varias intenciones sobre una solicitud, es decir, para una solicitud R, un agente si puede: - proponer llevar a cabo R: si puede realizar R; - comprometerse a llevar a cabo R: si realizará R; - no proponer llevar a cabo R: si puede no realizar R; - negarse a llevar a cabo R: si no realizará R. Podemos notar que estas cuatro proposiciones son modalidades de la proposición C: si realiza R: - 3C significa que si propone llevar a cabo R; - 2C significa que si se compromete a llevar a cabo R; - ¬3C significa que si no propone llevar a cabo R; - ¬2C significa que si se niega a llevar a cabo R. Más formalmente: Definición 3 (Candidatura). Una candidatura C es una tupla < idC , modC, sC , RC , obsC, dnlC >: - idC es un identificador; - modC ∈ {3, 2, ¬3, ¬2} es una modalidad; - sC ∈ S es el agente candidato; - RC ∈ Rt sC es la solicitud en la que sC se postula; - obsC ∈ T es la fecha de realización propuesta por sC; - dnlC ∈ T es la fecha de descarga. 3.4 Formalización del problema Entonces, nuestro problema es el siguiente: nos gustaría que cada agente construyera asignaciones de solicitudes (es decir, un plan) dinámicamente de tal manera que si estas solicitudes se llevan a cabo, su número sea el más alto posible o el costo global sea mínimo. Más formalmente, Definición 4 (Problema). Sea E un enjambre. Los agentes en E deben construir un conjunto {En s1 . . . En sn } donde At si ⊆ Rt si tal 288 La Sexta Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) como: - | S si∈S En si | es maximal; P si∈S P R∈En si prio(R) es maximal. Para todo \(P\) en \(S\), \(P\) es \(R\) en \(At\) si el costo de \(P\) en \(R\) es mínimo. Notemos que estos criterios no son necesariamente compatibles. Dado que las decisiones de un agente serán influenciadas por las decisiones de los demás, es necesario que los agentes razonen sobre un conocimiento común acerca de las solicitudes. Por lo tanto, es necesario establecer un protocolo de comunicación efectivo. 4. PROTOCOLO DE COMUNICACIÓN La comunicación se asocia comúnmente con la cooperación. Los agentes deliberativos necesitan comunicación para cooperar, mientras que no es necesariamente el caso para los agentes reactivos [2, 41]. Los protocolos de chismes [22, 24], o protocolos epidémicos, se utilizan para compartir conocimiento con multicast. Cada agente selecciona un conjunto de agentes en un momento dado para compartir información. La velocidad de transmisión de la información depende de la duración de la ronda de discusión. 4.1 La metáfora del pasillo El protocolo sugerido está inspirado en lo que llamamos la metáfora del pasillo, que representa bien el problema del enjambre de satélites. Varios agentes van de un lado a otro en un pasillo donde de vez en cuando aparecen objetos para recoger. Dos objetos que están demasiado cerca uno del otro no pueden ser recogidos por el mismo agente porque la acción lleva tiempo y un agente no puede detener su movimiento. Para optimizar la recolección, los agentes pueden comunicarse cuando se encuentren. Figura 1: Tiempo t 1 S 2S Creencia no A 3S. Figura 2: Tiempo t Ejemplo 1. Supongamos tres agentes, s1, s2, s3 y un objeto A que debe ser recolectado. En el tiempo t, s1 no recogió A y s2 no sabe que A existe. Cuando s1 se encuentra con s2, comunica la lista de los objetos que conoce, es decir, A. Ahora s2 cree que A existe y se prepara para recogerlo. No es seguro que A todavía esté allí porque otro agente pudo haber pasado antes de s2, pero puede tenerlo en cuenta en su plan. En el tiempo t, s3 recopila A. En las cercanías de s2, s3 comunica su lista de objetos y A no está en la lista. Como ambos agentes se encuentran en un lugar donde es posible que s3 haya recogido A, el objeto habría estado en la lista si no hubiera sido recogido. Por lo tanto, s2 puede creer que A ya no existe y puede retirarlo de su plan. 4.2 Conocimiento para comunicarse Para elaborar sus planes, los agentes necesitan conocer las solicitudes actuales y las intenciones de los otros agentes. Para cada agente se definen dos tipos de conocimiento a mantener: - solicitudes (Definición 2); - candidaturas (Definición 3). Definición 5 (Conocimiento). El conocimiento K es una tupla < data(K), SK , tK >: - data(K) es una solicitud R o una candidatura C; - SK ⊆ S es el conjunto de agentes que conocen K; - tK ∈ T es una marca de tiempo temporal. En la secuela, notaremos Kt si como el conocimiento del agente si en el tiempo t ∈ T. 4.3 Un protocolo de epidemia. A partir de la metáfora del corredor, podemos definir un protocolo de comunicación que se beneficie de todas las oportunidades de comunicación. Un agente notifica cualquier cambio dentro de su conocimiento y cada agente debe propagar estos cambios a su entorno, quienes actualizan sus bases de conocimiento y reiteran el proceso. Este protocolo es una variante de los protocolos de epidemia [22] inspirada en el trabajo sobre el sobrescucha [27]. Protocolo 1 (Comunicación). Sea si un agente en S. ∀t ∈ T: - ∀ sj ∈ Vecindad(si, t), si ejecuta: 1. ∀ K ∈ Kt si tal que sj ∈ SK : a. si comunica K a sj b. si sj confirma la recepción de K, SK ← SK ∪ {sj}. - ∀ K ∈ Kt si recibido por sj en el tiempo t: 1. sj actualiza Kt sj con K 2. sj confirma la recepción de K a si. Existen dos tipos de actualizaciones para un agente: una actualización interna a partir de una modificación de conocimiento realizada por el propio agente; y una actualización externa a partir de conocimiento recibido. Para una actualización interna, la actualización de K depende de los datos(K): una candidatura C se modifica cuando su modalidad cambia y una solicitud R se modifica cuando un agente se da cuenta de ella. Cuando se actualiza K, también se actualiza la marca de tiempo. Protocolo 2 (Actualización interna). Sea si ∈ S un agente. Una actualización interna de si en el tiempo t ∈ T se realiza: - cuando se crea el conocimiento K; - cuando se modifica data(K). En ambos casos: 1. tK ← t; 2. SK ← {si}. 

SK ← {si}. Para una actualización externa, solo se tiene en cuenta el conocimiento más reciente K, ya que las marcas de tiempo cambian solo cuando los datos(K) son modificados. Si K ya es conocido, se actualiza si el contenido o el conjunto de agentes que lo conocen han sido modificados. Si K es desconocido, simplemente se agrega al conocimiento de los agentes. Protocolo 3 (Actualización externa). Sea si un agente y K el conocimiento transmitido por el agente sj. Para todo K ∈ K, la actualización externa en el tiempo t ∈ T se define de la siguiente manera: 1. si ∃ K ∈ Kt si tal que iddata(K) = iddata(K ) entonces a. si tK ≥ tK entonces i. si tK > tK entonces SK ← SK ∪ {si} ii. si tK = tK entonces SK ← SK ∪ SK iii. Kt si ← (Kt si \{K }) ∪ {K} 2. else a. Kt si ← Kt si ∪ {K} b. SK ← SK ∪ {si} La Sexta Internacional. Si la información entrante tiene una marca de tiempo más reciente, significa que el agente receptor tiene información obsoleta. Por consiguiente, reemplaza la información antigua por la nueva y se añade al conjunto de agentes que conocen K (1.a.i). Si ambos sellos de tiempo son iguales, ambas piezas de información son iguales. Solo el conjunto de agentes que conocen K puede haber cambiado porque los agentes si y sj podrían haber transmitido la información a otros agentes. Por consiguiente, los conjuntos de agentes que conocen K se unifican (1.a.ii). 4.4 Propiedades La comunicación entre dos agentes cuando se encuentran está compuesta por la conjunción del Protocolo 1 y el Protocolo 3. En la secuela, llamamos a esta conjunción un suceso de comunicación. 4.4.1 Convergencia La estructura de la información transmitida y el mecanismo de actualización interna (Protocolo 2) permiten que el proceso converja. De hecho, una solicitud R solo puede estar en dos estados (realizada o no) dados por el booleano bR. Una vez que se realice una actualización interna, es decir, R se realiza - R no puede volver a su estado anterior. Por consiguiente, una actualización interna solo se puede realizar una vez. En lo que respecta a las candidaturas, las actualizaciones solo modifican las modalidades, las cuales pueden cambiar muchas veces y volver a estados anteriores. Entonces parece que es probable que aparezcan livelocks2. Sin embargo, una candidatura C está asociada a una solicitud y a una fecha de realización (la fecha límite proporcionada por obsC). Después de la fecha límite, la candidatura se vuelve insignificante. Por lo tanto, para cada candidatura, existe una fecha t ∈ T en la que los cambios ya no se propagarán. 4.4.2 Complejidad Se ha demostrado que en un conjunto de N agentes donde uno solo tiene una nueva pieza de información, un protocolo epidémico toma O(logN) pasos para difundir la información [33]. Durante un paso, cada agente tiene una ocurrencia de comunicación. Como los agentes no tienen mucho tiempo para comunicarse, tal ocurrencia de comunicación no debe tener una complejidad temporal demasiado grande, lo cual podemos demostrar formalmente: Proposición 1. La complejidad temporal de una ocurrencia de comunicación en el tiempo t ∈ T entre dos agentes si y sj es, para el agente si, O(|Rt si |.|Rt sj |.|S|2) Prueba 1. Para el peor caso, cada agente sk envía |Rt sk | piezas de información sobre solicitudes y |Rt sk |.|S| piezas de información sobre candidaturas (una candidatura para cada solicitud y para cada agente del enjambre). Dejen si y sj ser dos agentes que se encuentran en el tiempo t ∈ T. Para el agente si, la complejidad del Protocolo 1 es O(|Rt si | + |Rt si |.|S| | {z } emisión + |Rt sj | + |Rt sj |.|S| | {z } recepción). Por cada pieza de información recibida, el agente si utiliza el Protocolo 3 y busca a través de sus bases de conocimiento: |Rt si | piezas de información por cada solicitud recibida y |Rt si |.|S| piezas de información por cada candidatura recibida. Comunicando interminablemente sin converger. Por lo tanto, la complejidad del Protocolo 3 es O(|Rt sj |.|Rt si | + |Rt sj |.|Rt si |.|S|2 ) Así, la complejidad temporal de una ocurrencia de comunicación es: O(|Rt si | + |Rt si |.|S| + |Rt sj |.|Rt si | + |Rt sj |.|Rt si |.|S|2 )) Luego: O(|Rt si |.|Rt sj |.|S|2 ) 5. PLANIFICACIÓN A BORDO En contextos espaciales, [5, 21, 6] presentan arquitecturas multiagente para la planificación a bordo. Sin embargo, asumen altas capacidades de comunicación y computación [10]. [13] relajan estas restricciones dividiendo los módulos de planificación: por un lado, los satélites tienen un planificador que construye planes a largo plazo y, por otro lado, tienen un módulo de decisión que les permite elegir si llevar a cabo o no una observación planificada. En un entorno incierto como el de los enjambres de satélites, puede ser ventajoso retrasar la decisión hasta el último momento (es decir, la fecha de realización), especialmente si existen varias posibilidades para una solicitud determinada. La idea principal en la planificación de contingencia [15, 29] es determinar los nodos en el plan inicial donde los riesgos de fallas son más importantes e incrementar gradualmente las ramas de contingencia para estas situaciones. 5.1 Un enfoque deliberativo Inspirado en ambos enfoques, proponemos construir asignaciones compuestas por un conjunto de solicitudes incuestionables y un conjunto de solicitudes disyuntivas inciertas sobre las cuales se tomará una decisión al final del horizonte de decisión. Este horizonte corresponde a la fecha de realización de la solicitud. Proponer asignaciones parciales de esta manera permite resolver conflictos localmente sin propagarlos a lo largo de todo el plan. Para construir los planes iniciales de los agentes, asumamos que cada agente está equipado con un planificador a bordo. Un plan se define de la siguiente manera: Definición 6 (Plan). Que si sea un agente, Rt si un conjunto de solicitudes y Ct si un conjunto de candidaturas. Definamos tres conjuntos: - el conjunto de solicitudes potenciales: Rp = {R ∈ Rt si |bR = false} - el conjunto de solicitudes obligatorias: Rm = {R ∈ Rp |∃C ∈ Ct si : modC = 2, sC = si, RC = R} - el conjunto de solicitudes abandonadas: Rg = {R ∈ Rp |∃C ∈ Ct si : modC = ¬2, sC = si, RC = R} Un plan At si generado en el tiempo t ∈ T es un conjunto de solicitudes tal que Rm ⊆ At si ⊆ Rp y ∃ R ∈ Rg tal que R ∈ At si. Elaborar un plan genera candidaturas. Definición 7 (Generación de candidaturas). Que si sea un agente y At1 si un plan (posiblemente vacío) en el tiempo t1. El plan generado en el tiempo t2 con t2 > t1 es At2 si. - Para todo R ∈ At1 si tal que R ∈ At2 si, se genera una candidatura C tal que mod(C) = ¬3, sC = si y RC = R; - Para todo R ∈ At2 si tal que R ∈ At1 si, se genera una candidatura C tal que mod(C) = 3, sC = si y RC = R; - Se utiliza el Protocolo 2 para actualizar Kt1 si en Kt2 si. 290 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 5.2 Conflictos Cuando dos agentes comparan sus planes respectivos, pueden surgir algunos conflictos. Se trata de redundancias entre asignaciones en una solicitud dada, es decir: varios agentes se postulan como candidatos para llevar a cabo esta solicitud. Mientras que tales redundancias a veces pueden ser útiles para garantizar la realización de una solicitud (la realización puede fallar, por ejemplo, debido a las nubes), también pueden llevar a una pérdida de oportunidad. Por consiguiente, el conflicto debe ser definido: Definición 8 (Conflicto). Dejemos que si y sj sean dos agentes con, en el tiempo t, candidaturas Csi y Csj respectivamente (sCsi = si y sCsj = sj). si y sj están en conflicto si y solo si: - RCsi = RCsj - modCsi y modCsj ∈ {2, 3}. Notemos que los agentes tienen los medios para saber si están en conflicto con otro durante el proceso de comunicación. De hecho, intercambian información no solo sobre su propio plan, sino también sobre lo que saben acerca de los planes de los otros agentes. Todos los conflictos no tienen la misma intensidad, lo que significa que pueden resolverse con mayor o menor dificultad según las capacidades de comunicación de los agentes. Un conflicto es suave cuando los agentes involucrados pueden comunicarse antes de que uno u otro lleve a cabo la solicitud en cuestión. Un conflicto es difícil cuando los agentes no pueden comunicarse antes de la realización de la solicitud. Definición 9 (Conflicto suave/duro). Dejen si y sj (i < j) ser dos agentes en conflicto con, en el tiempo t, las candidaturas Csi y Csj respectivamente (sCsi = si y sCsj = sj). Si ∃ V ⊆ S tal que V = {si . . . sj} y si ∃ T ∈ T tal que T = {ti−1 . . . tj−1} (ti−1 = t) donde: ∀ i ≤ k < j, sk+1 ∈ Vecindad(sk, tk) con tk < obsCsi, tk < obsCsj y tk ≥ tk−1 entonces el conflicto es suave, de lo contrario es duro. Un conflicto es suave si existe una cadena de agentes entre los dos agentes en conflicto, de tal manera que la información pueda propagarse antes de que ambos agentes se den cuenta de la solicitud. Si esta cadena no existe, significa que los agentes en conflicto no pueden comunicarse directa o indirectamente. Por consiguiente, el conflicto es difícil. En enjambres de satélites, las posiciones geográficas de las solicitudes son conocidas, al igual que las órbitas de los satélites. Entonces cada agente es capaz de determinar si un conflicto es suave o duro. Podemos definir la cardinalidad del conflicto: Definición 10 (Cardinalidad del conflicto). Que si sea un agente y R una solicitud en conflicto. La cardinalidad del conflicto es cardc(R) = |{C ∈ Ct si |modC ∈ {2, 3}, CR = R}|. La cardinalidad del conflicto corresponde al número de agentes que son candidatos o están comprometidos con la misma solicitud. Por lo tanto, un conflicto tiene al menos una cardinalidad de 2. 6. ESTRATEGIAS DE COLABORACIÓN En contextos espaciales, el tiempo de comunicación y las capacidades de cálculo de los agentes son limitados. Cuando están en conflicto, los agentes deben encontrar un acuerdo local (en lugar de un costoso acuerdo global) utilizando el conflicto para aumentar el número de solicitudes realizadas, disminuir el tiempo de retorno de la misión, mejorar la calidad de las imágenes tomadas o asegurarse de que se cumpla una solicitud. Ejemplo 2. Supongamos un conflicto en la solicitud R entre los agentes si y sj. Nos gustaría que el agente más experto, es decir, el agente que pueda llevar a cabo la solicitud en las mejores condiciones, lo haga. Supongamos que si es el experto. Si debe asignarse R a sí mismo. Queda por determinar qué debe hacer sj: sj puede seleccionar un sustituto para R con el fin de aumentar el número de solicitudes potencialmente realizadas, o no hacer nada para preservar los recursos, o asignar R a sí mismo para garantizar redundancia. Por consiguiente, podemos definir estrategias de colaboración dedicadas a la resolución de conflictos. Una estrategia es un proceso de decisión privado (es decir, intrínseco a un agente) que le permite a un agente tomar una decisión sobre un objeto dado. En nuestra aplicación, las estrategias especifican qué hacer con las redundancias. 6.1 Costo y experiencia En nuestra aplicación, el costo está vinculado a las fechas de realización. Llevar a cabo una solicitud consume los recursos de los agentes (por ejemplo: energía a bordo, memoria). En consecuencia, una observación tiene un costo para cada agente que depende de cuándo se realiza: cuanto más cercana sea la fecha de realización a la fecha deseada de observación, menor será el costo. Definición 11 (Costo). Que si sea un agente. El costo costsi (RC) ∈ R de llevar a cabo una solicitud RC según una candidatura C se define como: costsi (RC) = |obsC - tbeg(RC)|. A partir de esta noción de costo, podemos definir formalmente una noción de experto entre dos agentes. La experiencia para un agente significa que puede realizar la solicitud a un costo más bajo. Definición 12 (Experiencia). Dejen si y sj ∈ S ser dos agentes y R una solicitud. El agente si es un experto para R si y solo si costosi (R) ≤ costsj (R). 6.2 Estrategias de resolución de conflictos suaves Se proponen tres estrategias para resolver un conflicto. La estrategia del experto implica que el agente experto mantiene su candidatura mientras que el otro se retira. La estrategia altruista significa que el agente que pueda descargar primero3, siempre y cuando el aumento de costo sea insignificante, mantiene su candidatura mientras que el otro se retira. La estrategia de seguro implica que ambos agentes mantengan sus candidaturas para garantizar redundancia. Estrategia 1 (Experto). Que si y sj sean dos agentes en conflicto en sus respectivas candidaturas Csi y Csj, siendo si el agente experto. La estrategia experta es: modCsi = 2 y modCsj = ¬2. Estrategia 2 (Altruista). Que si y sj sean dos agentes en conflicto en sus respectivas candidaturas Csi y Csj, siendo si el agente experto. Sea ∈ R+ un umbral en el aumento de costos. La estrategia altruista es: si dnlCsi > dnlCsj y |costsi (R) − costsj (R)| < entonces modCsi = ¬2 y modCsj = 2. Estrategia 3 (Seguros). Que si y sj sean dos agentes en conflicto en sus respectivas candidaturas Csi y Csj, siendo si el agente experto. Sea α ∈ R un umbral de prioridad. La estrategia de seguro es: si prio(R) cardc(R)−1 > α entonces modCsi = 3 y modCsj = 3, es decir, el agente utiliza recursos de memoria durante un tiempo más corto. El Sexto Internacional. En la estrategia de seguros, la activación de redundancia se ajusta por la cardinalidad de conflictos cardc(R). La razón es la siguiente: cuantas más redundancias haya en una solicitud dada, menos necesaria es una nueva redundancia en esta solicitud. Las tres estrategias se implementan en un protocolo de negociación dedicado a conflictos suaves. El protocolo se basa en una arquitectura de subsumption [7] en estrategias: la estrategia de seguro (1) es la estrategia principal porque garantiza la redundancia para la cual se implementa el enjambre. Luego viene la estrategia altruista para asignar los recursos de manera que mejore el rendimiento de la misión. Finalmente, la estrategia experta que no tiene condiciones previas (3) aumenta el costo del plan. Protocolo 4 (Resolución suave de conflictos). Sea R una solicitud en un conflicto suave entre dos agentes, si y sj. Estos agentes tienen Csi y Csj para sus respectivas candidaturas. Que si sea el agente experto. Los agentes aplican estrategias de la siguiente manera: 1. estrategia de seguro (α) 2. estrategia altruista ( ) 3. estrategia de experto. La elección de los parámetros α y permite ajustar los resultados del protocolo. Por ejemplo, si = 0, la estrategia altruista nunca se utiliza. 6.3 Estrategias de resolución de conflictos difíciles En caso de un conflicto difícil, el agente que no está al tanto necesariamente se dará cuenta de la solicitud (con éxito o no). En consecuencia, una redundancia es útil solo si el otro agente es más experto o si la prioridad de la solicitud es lo suficientemente alta como para necesitar redundancia. Por lo tanto, utilizaremos la estrategia de seguros (consulte la Sección 6.2) y definiremos una estrategia competitiva. El último está definido para dos agentes, si y sj, en un conflicto difícil sobre una solicitud R. Supongamos que si es el agente que es consciente del conflicto. Estrategia 4 (Competitiva). Sea λ ∈ R+ un umbral de costo. La estrategia competitiva es: si costosi (R) < costsj (R) − λ entonces modCsi = 3. Protocolo 5 (Resolución de conflictos difíciles). Que si sea un agente en un conflicto difícil con un agente sj en una solicitud R. si aplica estrategias de la siguiente manera: 1. estrategia de seguro (α) 2. estrategia competitiva (λ) 3. retirada: modCsi = ¬2 6.4 Generalización Aunque los agentes utilicen la comunicación en pares, pueden tener información sobre varios agentes y la cardinalidad del conflicto puede ser mayor a 2. Por lo tanto, definimos un k-conflicto como un conflicto con una cardinalidad de k en un conjunto de agentes que proponen o se comprometen a realizar la misma solicitud. Formalmente, Definición 13 (k-conflicto). Sea S = {s1 . . . sk} un conjunto de agentes con candidaturas respectivas Cs1 . . . Csk en el tiempo t. El conjunto S está en un k-conflicto si y solo si: - ∀1 ≤ i ≤ k, sCsi = si; - !∃R tal que ∀1 ≤ i ≤ k, RCsi = R; es decir, el agente que debe tomar una decisión sobre R. - ∀1 ≤ i ≤ k, modCsi ∈ {2, 3}. - S es maximal (⊆) entre los conjuntos que cumplen estas propiedades. Como anteriormente, un conflicto k puede ser suave o duro. Un k-conflicto es suave si cada par de conflictos en el k-conflicto es un conflicto suave con respecto a la Definición 9. A medida que los conflictos afectan a conjuntos de agentes, la experiencia es un orden total en los agentes. Definimos la experiencia de rango i donde el agente en cuestión es el i-ésimo experto. En caso de un conflicto k-suave, el agente experto de rango i toma su decisión con respecto al agente experto de rango (i + 1) de acuerdo con el Protocolo 4. El protocolo se aplica de forma recursiva y los parámetros α se actualizan en cada paso para evitar la explosión de costos. En caso de un conflicto fuerte, el conjunto S de agentes en conflicto puede dividirse en SS (el subconjunto de agentes en conflicto suave) y SH (el subconjunto de agentes inconscientes). Solo los agentes en SS pueden tomar una decisión y deben adaptarse a los agentes en SH. El agente experto de rango-i en SS utiliza el Protocolo 5 en el conjunto completo SH y el agente experto de rango-(i − 1) en SS. Si un agente en SS aplica la estrategia competitiva, todos los demás se retiran. 7. Se han implementado simulaciones de enjambres de satélites en JAVA con la plataforma JADE [3]. El planificador a bordo se implementa con programación lineal utilizando ILOG CPLEX [1]. El escenario de simulación implementa 3 satélites en órbitas de 6 horas. Se han considerado dos escenarios: el primero con un conjunto de 40 solicitudes con baja tasa de exclusión mutua y conflicto, y el segundo con un conjunto de 74 solicitudes con alta tasa de exclusión mutua y conflicto. Para cada escenario, se han realizado seis simulaciones: una con planificación centralizada (todas las solicitudes son planificadas por la estación terrestre antes de la simulación), una donde los agentes están aislados (no pueden comunicarse ni coordinarse entre sí), una simulación informada (los agentes solo comunican solicitudes) y tres simulaciones adicionales que implementan las estrategias de colaboración instanciadas (políticas): - política neutral: α y λ se establecen en valores promedio; - política drástica: α y λ se establecen en valores más altos, es decir, los agentes garantizarán redundancia solo si las prioridades son altas y, en caso de un conflicto fuerte, si la ganancia de costo es mucho mayor; - política laxa: α se establece en un valor más bajo, es decir, las redundancias son más frecuentes. En el caso de una baja tasa de exclusión mutua y conflicto (Tabla 1), las simulaciones centralizadas y aisladas conducen al mismo número de observaciones, con las mismas prioridades promedio. El aislamiento que conduce a un menor costo se debe al alto número de redundancias: muchos agentes realizan la misma solicitud a diferentes costos. La simulación informada reduce el número de redundancias pero aumenta ligeramente el costo promedio por la misma razón. Podemos notar que el uso de 5 Por ejemplo, el agente experto de rango 1 se retira debido a la estrategia altruista y el costo aumenta en el peor de los casos, luego el agente experto de rango 2 se retira debido a la estrategia altruista y el costo aumenta en el peor de los casos. Entonces el costo ha aumentado en 2 en el peor de los casos. 292 El Sexto Internacional. La colaboración de estrategias permite reducir considerablemente el número de redundancias, pero la cantidad de observaciones disminuye debido a la restricción creada por los compromisos. Además, el costo promedio también se incrementa. Sin embargo, cada redundancia evitada corresponde a recursos ahorrados para realizar las solicitudes generadas a bordo durante la simulación. En el caso de una alta tasa de exclusión mutua y conflicto (Tabla 2), existen diferencias notables entre las simulaciones centralizadas y aisladas. Podemos notar que todas las simulaciones informadas (con o sin estrategias) permiten realizar más observaciones que los agentes aislados con menos redundancias. Del mismo modo, podemos observar que toda política reduce el costo promedio en contraposición al primer escenario. La política drástica es interesante porque no solo permite realizar más observaciones que lo que hacen los agentes aislados, sino que también permite reducir significativamente el costo promedio con el menor número de redundancias. En cuanto al número de mensajes intercambiados, hay 12 reuniones entre 2 agentes durante las simulaciones. En el peor de los casos, en cada reunión cada agente envía N piezas de información sobre las solicitudes más 3N piezas de información sobre las intenciones de los agentes más 1 mensaje para el final de la comunicación, donde N es el número total de solicitudes. Por consiguiente, se intercambian 3864 mensajes en el peor de los casos para las simulaciones de 40 solicitudes y 7128 mensajes para las simulaciones de 74 solicitudes. Estos números son mucho más altos que la cantidad de mensajes que realmente se intercambian. Podemos notar que las simulaciones informadas, que comunican solo solicitudes, permiten una reducción mayor. En el caso general, el uso de la comunicación y estrategias permite reducir redundancias y ahorrar recursos, pero aumenta el costo promedio: si se realiza una solicitud, los agentes que la conocen no la planifican, incluso si su costo puede reducirse posteriormente. No es el caso con agentes aislados. El uso de estrategias en problemas poco restringidos como el escenario 1 limita demasiado a los agentes y provoca un aumento adicional en los costos. Las estrategias son más útiles en problemas altamente restringidos como el escenario 2. Aunque los agentes se limitan en el número de observaciones, el costo promedio se reduce ampliamente. 8. CONCLUSIÓN Y TRABAJO FUTURO Un enjambre de satélites de observación es un sistema multiagente cooperativo con fuertes restricciones en términos de capacidades de comunicación y computación. Para aumentar el resultado de la misión global, proponemos un enfoque híbrido: deliberativo para la planificación individual y reactivo para la colaboración. Los agentes razonan tanto sobre las solicitudes para llevar a cabo como sobre las intenciones de otros agentes (candidaturas). Un protocolo de comunicación epidémica utiliza todas las oportunidades de comunicación para actualizar esta información. Se proponen reglas de decisión reactivas (estrategias) para resolver conflictos que puedan surgir entre agentes. A través de la ajuste de las estrategias (α y λ) y su entrelazamiento plástico dentro del protocolo, es posible coordinar agentes sin comunicación adicional: el número de mensajes intercambiados permanece casi igual entre simulaciones informadas y simulaciones que implementan estrategias. Algunas simulaciones se han realizado para validar experimentalmente estos protocolos y los primeros resultados son prometedores pero plantean muchas preguntas. ¿Cuál es el equilibrio entre la tasa de restricción del problema y la necesidad de estrategias? ¿Hasta qué punto se ven afectados el número de despidos y el costo promedio por la optimización de las estrategias? Los trabajos futuros se centrarán en nuevas estrategias para resolver conflictos emergentes, especialmente aquellos que surgen al relajar la suposición de independencia entre las solicitudes. Un segundo punto es tener en cuenta la complejidad del problema inicial de planificación. De hecho, el enfoque de planificación elegido resulta en una explosión combinatoria con grandes conjuntos de solicitudes: se debe considerar un enfoque en cualquier momento o completamente reactivo para problemas más complejos. Agradecimientos Nos gustaría agradecer a Marie-Claire Charmeau (CNES), Serge Rainjonneau y Pierre Dago (Alcatel Space Alenia) por sus comentarios relevantes sobre este trabajo.  Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 293 9. REFERENCIAS [1] ILOG inc. CPLEX. http://www.ilog.com/products/cplex. [2] T. Balch y R. Arkin. Comunicación en sistemas robóticos multiagentes reactivos. Robots autónomos, páginas 27-52, 1994. [3] F. Bellifemine, A. Poggi y G. Rimassa. JADE - un marco de agentes compatible con FIPA. En Actas de PAAM99, páginas 97-108, 1999. [4] A. Blum y M. Furst. Planificación rápida a través del análisis del grafo de planificación. Inteligencia Artificial, Vol. 90:281-300, 1997. [5] E. Bornschlegl, C. Guettier, G. L. Lann y J.-C. Poncet. Planificación en capas basada en restricciones y control distribuido para el vuelo en formación de una nave espacial autónoma. En Actas del 1er Taller de la ESA sobre Autonomía Espacial, 2001. [6] E. Bornschlegl, C. Guettier y J.-C. Poncet. Planificación automática para constelación de naves espaciales autónomas. En Actas de la 2da Conferencia Internacional de la NASA. Taller sobre Planificación y Programación para el Espacio, 2000. [7] R. Brooks. Un sistema de control en capas robusto para un robot móvil. Memorando del Laboratorio de Inteligencia Artificial del MIT, Vol. 864, 1985. [8] A. Chopra y M. Singh. Máquinas de compromiso no monótonas. Notas de conferencia en Ciencias de la Computación: Avances en Comunicación de Agentes, Vol. 2922:183-200, 2004. [9] A. Chopra y M. Singh. Contextualizando protocolos de compromiso. En Actas de la 5ta AAMAS, 2006. [10] B. Clement y A. Barrett. Coordinación continua a través de actividades compartidas. En Actas del 2do AAMAS, páginas 57-64, 2003. [11] J. Cox y E. Durfee. Mecanismos eficientes para la fusión de planes de múltiples agentes. En Actas de la 3ª AAMAS, 2004. [12] S. Curtis, M. Rilee, P. Clark y G. Marr. Uso de la inteligencia de enjambre en constelaciones de naves espaciales para la exploración de recursos del cinturón de asteroides. En Actas del Tercer Taller Internacional sobre Constelaciones de Satélites y Vuelo en Formación, páginas 24-26, 2003. [13] S. Damiani, G. Verfaillie y M.-C. Charmeau. Una constelación de satélites observadores de la Tierra: Cómo gestionar un equipo de agentes observadores con comunicaciones limitadas. En Actas de la 4ta AAMAS, páginas 455-462, 2005. [14] S. Das, P. Gonzales, R. Krikorian y W. Truszkowski. Entorno de planificación y programación multiagente para mejorar la autonomía de las naves espaciales. En Actas del 5to ISAIRAS, 1999. [15] R. Dearden, N. Meuleau, S. Ramakrishnan, D. Smith y R. Wahington. Planificación de contingencia incremental. En Actas del Taller ICAPS03 sobre Planificación bajo Incertidumbre e Información Incompleta, páginas 1-10, 2003. [16] F. Dignum. Agentes autónomos con normas. Inteligencia Artificial y Derecho, Vol. 7:69-79, 1999. [17] E. Durfee. Escalando estrategias de coordinación de agentes. IEEE Computer, Vol. 34(7):39-46, 2001. [18] K. Erol, J. Hendler, y D. Nau. Planificación de HTN: Complejidad y expresividad. En Actas de la 12ª AAAI, páginas 1123-1128, 1994. [19] D. Escorial, I. F. Tourne y F. J. Reina. Fuego: una constelación dedicada de pequeños satélites para detectar y monitorear incendios forestales. Acta Astronautica, Vol.52(9-12):765-775, 2003. [20] B. Gerkey y M. Matarić. Un análisis formal y taxonomía de la asignación de tareas en sistemas multi-robot. Revista de Investigación en Robótica, Vol. 23(9):939-954, 2004. [21] C. Guettier y J.-C. Poncet. Planificación multinivel para la autonomía de las naves espaciales. En Actas del 6to ISAIRAS, páginas 18-21, 2001. [22] I. Gupta, A.-M. Kermarrec y A. Ganesh. Protocolos eficientes de estilo epidémico para multicast fiable y escalable. En Actas del 21º Simposio de Sistemas Distribuidos Confiables de IEEE, páginas 180-189, 2002. [23] G. Gutnik y G. Kaminka. Representando conversaciones para una audición escalable. Revista de Investigación en Inteligencia Artificial, Vol. 25:349-387, 2006. [24] K. Jenkins, K. Hopkinson y K. Birman. Un protocolo de chismes para la multidifusión de subgrupos. En Actas del 21º Congreso Internacional sobre Sistemas de Computación Distribuida - Talleres, páginas 25-30, 2001. [25] N. Jennings, S. Parsons, P. Norriega y C. Sierra. En la negociación basada en la argumentación. En Actas del Taller Internacional sobre Sistemas Multiagente, páginas 1-7, 1998. [26] J.-L. Koning y M.-P. Huget. Un lenguaje de especificación semi-formal dedicado a protocolos de interacción. Modelado de Información y Bases de Conocimiento XII: Fronteras en Inteligencia Artificial y Aplicaciones, páginas 375-392, 2001. [27] F. Legras y C. Tessier. LOTO: formación de grupos por escucha en equipos grandes. En Actas de la 2ª AAMAS, 2003. [28] D. McAllester, D. Rosenblitt, P. Norriega y C. Sierra. Planificación no lineal sistemática. En Actas de la 9ª AAAI, páginas 634-639, 1991. [29] N. Meuleau y D. Smith. Planificación de contingencia limitada óptima. En Actas de la 19ª AAAI, páginas 417-426, 2003. [30] P. Modi y M. Veloso. Estrategias de colisión para el problema de acuerdo multiagente. En Actas del 4to AAMAS, páginas 390-396, 2005. [31] J. B. Mueller, D. M. Surka y B. Udrea. Control basado en agentes para el vuelo en formación de múltiples satélites. En Actas del 6to ISAIRAS, 2001. [32] J. Odell, H. Parunak y B. Bauer. Ampliando UML para agentes. En Actas del Taller de Sistemas de Información Orientados a Agentes en la 17ª AAAI, 2000. [33] B. Pittel. Al difundir un rumor. Revista SIAM de Matemáticas Aplicadas, Vol. 47:213-223, 1987. [34] B. Polle. Requisito de autonomía y tecnologías para futuras constelaciones. Informe resumen de Astrium, 2002. [35] T. Sandholm. Tipos de contratos para la asignación de tareas satisfactorias. En Actas del Simposio de Primavera de la AAAI: Modelos de Satisfacción, páginas 23-25, 1998. [36] T. Schetter, M. Campbell y D. M. Surka. Autonomía basada en múltiples agentes para constelación de satélites. Inteligencia Artificial, Vol. 145:147-180, 2003. [37] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Inteligencia Artificial, Vol. 101(1-2):165-200, 1998. [38] D. M. Surka. AgenteObjeto para un control autónomo robusto. En Actas del Simposio de Primavera de la AAAI, 2001. [39] W. Truszkowski, D. Zoch y D. Smith. Autonomía para constelaciones. En las Actas de la Conferencia SpaceOps, 2000. [40] R. VanDerKrogt y M. deWeerdt. Planificar la reparación como una extensión de la planificación. En Actas de la 15ª ICAPS, páginas 161-170, 2005. [41] B. Werger. Cooperación sin deliberación: Un enfoque mínimo basado en el comportamiento para equipos de múltiples robots. Inteligencia Artificial, Vol. 110:293-320, 1999. [42] P. Zetocha. Control y comando de un grupo de satélites. Conferencia Aeroespacial de IEEE, Vol. 7:49-54, 2000. 294 La Sexta Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07)