La segmentación de temas con detección de temas compartidos y alineación de múltiples documentos Bingjun Sun*, Prasenjit Mitra*†, Hongyuan Zha‡, C. Lee Giles*†, John Yen*† *Departamento de Ciencias de la Computación e Ingeniería † Colegio de Ciencias de la Información y Tecnología Universidad Estatal de Pensilvania University Park, PA 16802 ‡ Colegio de Computación Instituto de Tecnología de Georgia Atlanta, GA 30332 *bsun@cse.psu.edu, † {pmitra,giles,jyen}@ist.psu.edu, ‡ zha@cc.gatech.edu RESUMEN La detección y seguimiento de temas [26] y la segmentación de temas [15] juegan un papel importante en la captura de la información local y secuencial de los documentos. El trabajo previo en esta área suele centrarse en documentos individuales, aunque existen múltiples documentos similares en muchos dominios. En este artículo, presentamos un novedoso método no supervisado para la detección de temas compartidos y la segmentación de temas de múltiples documentos similares basado en la información mutua (MI) y la información mutua ponderada (WMI), que es una combinación de MI y pesos de términos. La idea básica es que la segmentación óptima maximiza MI (o WMI). Nuestro enfoque puede detectar temas compartidos entre documentos. Puede encontrar los límites óptimos en un documento y alinear segmentos entre documentos al mismo tiempo. También puede manejar la segmentación de un solo documento como un caso especial de la segmentación y alineación de varios documentos. Nuestros métodos pueden identificar y fortalecer términos de señal que pueden ser utilizados para la segmentación y eliminar parcialmente las palabras de parada mediante el uso de pesos de términos basados en la entropía aprendida de múltiples documentos. Nuestros resultados experimentales muestran que nuestro algoritmo funciona bien para las tareas de segmentación de un solo documento, detección de temas compartidos y segmentación de múltiples documentos. El uso de información de múltiples documentos puede mejorar enormemente el rendimiento de la segmentación de temas, y utilizar WMI es aún mejor que utilizar MI para la segmentación de múltiples documentos. Categorías y Descriptores de Asignaturas H.3.3 [Almacenamiento y Recuperación de Información]: Búsqueda y Recuperación de Información-Agrupación; H.3.1 [Almacenamiento y Recuperación de Información]: Análisis de Contenido e Indexación-Procesamiento Lingüístico; I.2.7 [Inteligencia Artificial]: Procesamiento de Lenguaje Natural-Análisis de Texto; I.5.3 [Reconocimiento de Patrones]: Algoritmos de Agrupación-Medidas de Similitud Términos Generales Algoritmos, Diseño, Experimentación 1. INTRODUCCIÓN Muchos investigadores han trabajado en la detección y seguimiento de temas (TDT) [26] y la segmentación de temas durante la última década. La segmentación de temas tiene como objetivo identificar los límites en un documento con la meta de capturar la estructura temática latente. Las tareas de segmentación de temas generalmente se dividen en dos categorías [15]: la segmentación de flujos de texto, donde se identifica la transición de temas, y la segmentación coherente de documentos, en la que los documentos se dividen en subtemas. La primera categoría tiene aplicaciones en el reconocimiento automático del habla, mientras que la segunda tiene más aplicaciones como la consulta parcial de texto en documentos extensos en la recuperación de información, resumen de texto y medición de calidad de múltiples documentos. La investigación previa en relación con TDT se enmarca en la primera categoría, centrada en el seguimiento de temas de datos de discurso de transmisión y texto de agencia de noticias, mientras que la segunda categoría no ha sido estudiada muy bien. Los enfoques tradicionales realizan la segmentación de temas en los documentos uno a la vez [15, 25, 6]. La mayoría de ellos tienen un mal desempeño en tareas sutiles como la segmentación coherente de documentos [15]. A menudo, los usuarios finales buscan documentos que tengan un contenido similar. Los motores de búsqueda, como Google, proporcionan enlaces para obtener páginas similares. A una granularidad más fina, los usuarios pueden estar buscando obtener secciones de un documento similares a una sección en particular que presumiblemente discute un tema de interés para los usuarios. Por lo tanto, la extensión de la segmentación de temas desde documentos individuales para identificar segmentos similares de múltiples documentos similares con el mismo tema es una dirección natural y necesaria, y se espera que la segmentación de temas de múltiples documentos tenga un mejor rendimiento ya que se utiliza más información. Los enfoques tradicionales que utilizan la medición de similitud basada en la frecuencia de términos generalmente parten del mismo supuesto de que un vocabulario similar tiende a estar en un segmento de tema coherente [15, 25, 6]. Sin embargo, suelen tener el problema de identificar las palabras de parada. Por ejemplo, se eliminan las palabras de parada dependientes del documento junto con las palabras de parada genéricas en [15]. Hay dos razones por las que no eliminamos las palabras de parada directamente. Primero, identificar las palabras vacías es otro problema [12] que requiere estimación en cada dominio. Eliminar palabras comunes de parada puede resultar en la pérdida de información útil en un dominio específico. Segundo, aunque se pueden identificar las palabras de parada, la clasificación estricta de palabras de parada y palabras no de parada no puede representar el cambio gradual en la cantidad de contenido informativo de cada palabra. Empleamos una clasificación suave utilizando pesos de términos. En este documento, consideramos el problema de la segmentación de temas como un problema de optimización utilizando técnicas de teoría de la información para encontrar los límites óptimos de un documento dado el número de segmentos de texto, de manera que se minimice la pérdida de información mutua (MI) (o información mutua ponderada (WMI)) después de la segmentación y alineación. Esto es igual a maximizar el MI (o WMI). El MI se centra en medir la diferencia entre segmentos, mientras que investigaciones anteriores se enfocaban en encontrar la similitud (por ejemplo, la distancia del coseno) entre segmentos [15, 25, 6]. La alineación de temas de múltiples documentos similares se puede lograr agrupando las oraciones sobre el mismo tema en el mismo clúster. La segmentación de temas en un solo documento es solo un caso especial del problema de segmentación y alineación de temas en múltiples documentos. Los términos pueden ser co-agrupados como en [10] al mismo tiempo, dado el número de agrupaciones, pero nuestros resultados experimentales muestran que este método resulta en una peor segmentación (ver Tablas 1, 4 y 6). Por lo general, los lectores humanos pueden identificar la transición de temas basándose en palabras de señal, y pueden ignorar las palabras vacías. Inspirados por esto, asignamos a cada término (o grupo de términos) un peso basado en la entropía entre diferentes documentos y diferentes segmentos de documentos. No solo este enfoque puede aumentar la contribución de las palabras clave, sino que también puede disminuir el efecto de las palabras de parada comunes, palabras ruidosas y palabras de parada dependientes del documento. Estas palabras son comunes en un documento. Muchos métodos basados en la similitud de oraciones requieren que estas palabras sean eliminadas antes de que se pueda realizar la segmentación de temas [15]. Nuestros resultados en la Figura 3 muestran que los pesos de los términos son útiles para la segmentación y alineación de temas en múltiples documentos. La principal contribución de este artículo es que introduce un método novedoso para la segmentación de temas utilizando MI y demuestra que este método funciona mejor que los criterios previamente utilizados. Además, hemos abordado el problema de la segmentación y alineación de temas en varios documentos, mientras que la mayoría de las investigaciones existentes se centraron en la segmentación de documentos individuales. La segmentación y alineación de múltiples documentos pueden utilizar información de documentos similares y mejorar significativamente el rendimiento de la segmentación de temas. Obviamente, nuestro enfoque puede manejar documentos individuales como un caso especial cuando varios documentos no están disponibles. Puede detectar temas compartidos entre documentos para determinar si son múltiples documentos sobre el mismo tema. También introducimos el nuevo criterio de WMI basado en pesos de términos aprendidos de múltiples documentos similares, lo cual puede mejorar aún más el rendimiento de la segmentación de temas. Proponemos un algoritmo voraz iterativo basado en programación dinámica y demostramos que funciona bien en la práctica. Algunos de nuestros trabajos anteriores están en [24]. El resto de este documento está organizado de la siguiente manera: En la Sección 2, revisamos el trabajo relacionado. La sección 3 contiene una formulación del problema de segmentación de temas y alineación de múltiples documentos con co-clustering de términos, una revisión del criterio de MI para el clustering, y finalmente una introducción a WMI. En la Sección 4, primero proponemos el algoritmo voraz iterativo de segmentación y alineación de temas con co-clustering de términos, y luego describimos cómo el algoritmo puede ser optimizado mediante programación dinámica. En la Sección 5, se describen experimentos sobre la segmentación de documentos individuales, la detección de temas compartidos y la segmentación de documentos múltiples, y se presentan y discuten los resultados para evaluar el rendimiento de nuestro algoritmo. Las conclusiones y algunas direcciones futuras del trabajo de investigación se discuten en la Sección 6.2. TRABAJO PREVIO En general, los enfoques existentes para la segmentación de texto se dividen en dos categorías: aprendizaje supervisado [19, 17, 23] y aprendizaje no supervisado [3, 27, 5, 6, 15, 25, 21]. El aprendizaje supervisado suele tener un buen rendimiento, ya que aprende funciones a partir de conjuntos de entrenamiento etiquetados. Sin embargo, obtener conjuntos de entrenamiento grandes con etiquetas manuales en oraciones de documentos suele ser prohibitivamente costoso, por lo que se prefieren enfoques no supervisados. Algunos modelos consideran la dependencia entre oraciones y secciones, como el Modelo Oculto de Markov [3, 27], el Modelo de Máxima Entropía de Markov [19] y los Campos Aleatorios Condicionales [17], mientras que muchos otros enfoques se basan en la cohesión léxica o la similitud de las oraciones [5, 6, 15, 25, 21]. Algunos enfoques también se centran en las palabras clave como pistas de transiciones de tema [11]. Si bien algunos métodos existentes solo consideran información en documentos individuales [6, 15], otros utilizan varios documentos [16, 14]. No hay muchas obras en la última categoría, aunque se espera que el rendimiento de la segmentación sea mejor con la utilización de información de múltiples documentos. Investigaciones previas estudiaron métodos para encontrar temas compartidos [16] y segmentación y resumen de temas entre solo un par de documentos [14]. La clasificación y agrupación de textos es un área de investigación relacionada que categoriza documentos en grupos utilizando métodos supervisados o no supervisados. La clasificación o agrupación temática es una dirección importante en esta área, especialmente el co-agrupamiento de documentos y términos, como LSA [9], PLSA [13], y enfoques basados en distancias y particionamiento de gráficos bipartitos [28] o máxima MI [2, 10], o máxima entropía [1, 18]. Los criterios de estos enfoques pueden ser utilizados en el tema de la segmentación de temas. Algunos de esos métodos se han extendido al área de la segmentación de temas, como PLSA [5] y máxima entropía [7], pero hasta donde sabemos, el uso de MI para la segmentación de temas no ha sido estudiado. 3. FORMULACIÓN DEL PROBLEMA Nuestro objetivo es segmentar documentos y alinear los segmentos entre documentos (Figura 1). Sea T el conjunto de términos {t1, t2, ..., tl}, que aparecen en el conjunto no etiquetado de documentos D = {d1, d2, ..., dm}. Sea Sd el conjunto de oraciones para el documento d ∈ D, es decir, {s1, s2, ..., snd}. Tenemos una matriz tridimensional de frecuencia de términos, en la que las tres dimensiones son variables aleatorias de D, Sd y T. Sd en realidad es un vector aleatorio que incluye una variable aleatoria para cada d ∈ D. La frecuencia de términos se puede utilizar para estimar la distribución de probabilidad conjunta P(D, Sd, T), que es p(t, d, s) = T(t, d, s)/ND, donde T(t, d, s) es el número de t en la oración s de d y ND es el número total de términos en D. ˆS representa el conjunto de segmentos {ˆs1, ˆs2, ..., ˆsp} después de la segmentación y alineación entre varios documentos, donde el número de segmentos | ˆS| = p. Un segmento ˆsi del documento d es una secuencia de oraciones adyacentes en d. Dado que para diferentes documentos si pueden discutir diferentes subtemas, nuestro objetivo es agrupar oraciones adyacentes en cada documento en segmentos, y alinear segmentos similares entre documentos, de modo que para diferentes documentos ˆsi trate sobre el mismo subtema. El objetivo es encontrar la segmentación óptima de temas y el mapeo de alineación Segd(si) : {s1, s2, ..., snd } → {ˆs1, ˆs2, ..., ˆsp} y Alid(ˆsi) : {ˆs1, ˆs2, ..., ˆsp} → {ˆs1, ˆs2, ..., ˆsp}, para todo d ∈ D, donde ˆsi es el i-ésimo segmento con la restricción de que solo las oraciones adyacentes pueden ser asignadas al mismo segmento, es decir, para d, {si, si+1, ..., sj} → {ˆsq}, donde q ∈ {1, ..., p}, donde p es el número de segmento, y si i > j, entonces para d, ˆsq está ausente. Después de la segmentación y alineación, el vector aleatorio Sd se convierte en una variable aleatoria alineada ˆS. Por lo tanto, P(D, Sd, T) se convierte en P(D, ˆS, T). El término co-clustering es una técnica que se ha empleado [10] para mejorar la precisión del agrupamiento de documentos. Evaluamos el efecto de ello para la segmentación de temas. Un término t se asigna a exactamente un grupo de términos. El término co-clustering implica encontrar simultáneamente el mapeo óptimo de agrupación de términos Clu(t) : {t1, t2, ..., tl} → {ˆt1, ˆt2, ..., ˆtk}, donde k ≤ l, l es el número total de palabras en todos los documentos, y k es el número de clústeres. 4. METODOLOGÍA Ahora describimos un algoritmo novedoso que puede manejar la segmentación de un solo documento, la detección de temas compartidos y la segmentación y alineación de múltiples documentos basados en MI o WMI. 4.1 Información Mutua MI I(X; Y) es una cantidad que mide la cantidad de información contenida en dos o más variables aleatorias [8, 10]. Para el caso de dos variables aleatorias, tenemos I(X; Y) = x∈X y∈Y p(x, y)log p(x, y) p(x)p(y) , (1) Obviamente, cuando las variables aleatorias X e Y son independientes, I(X; Y) = 0. Por lo tanto, de manera intuitiva, el valor de MI depende de cómo las variables aleatorias están relacionadas entre sí. La co-agrupación óptima es el mapeo Clux: X → ˆX y Cluy: Y → ˆY que minimiza la pérdida: I(X; Y) - I(ˆX; ˆY), lo cual es igual a maximizar I(ˆX; ˆY). Este es el criterio de MI para la agrupación. En el caso de la segmentación de temas, las dos variables aleatorias son la variable de término T y la variable de segmento S, y cada muestra es una ocurrencia de un término T = t en un segmento particular S = s. Se utiliza I(T; S) para medir qué tan dependientes son T y S. Sin embargo, no se puede calcular I(T; S) para documentos antes de la segmentación, ya que no tenemos un conjunto de S debido a que las oraciones del Documento d, si ∈ Sd, no están alineadas con otros documentos. Así, en lugar de minimizar la pérdida de MI, podemos maximizar MI después de la segmentación de temas, calculada como: I( ˆT; ˆS) = ˆt∈ ˆT ˆs∈ ˆS p(ˆt, ˆs)log p(ˆt, ˆs) p(ˆt)p(ˆs) , (2) donde p(ˆt, ˆs) se estiman mediante la frecuencia de términos tf del Cluster de Términos ˆt y el Segmento ˆs en el conjunto de entrenamiento D. Nótese que aquí un segmento ˆs incluye oraciones sobre el mismo tema entre todos los documentos. La solución óptima es el mapeo Clut : T → ˆT, Segd : Sd → ˆS, y Alid : ˆS → ˆS, que maximiza I( ˆT; ˆS). 4.2 Información Mutua Ponderada En la segmentación de temas y alineación de múltiples documentos, si se conoce P(D, ˆS, T), basado en las distribuciones marginales P(D|T) y P( ˆS|T) para cada término t ∈ T, podemos categorizar los términos en cuatro tipos en el conjunto de datos: • Las palabras de parada comunes son comunes a lo largo de las dimensiones de documentos y segmentos. • Las palabras de parada dependientes del documento que dependen del estilo de escritura personal son comunes solo a lo largo de la dimensión de segmentos para algunos documentos. • Las palabras clave son los elementos más importantes para la segmentación. Son comunes a lo largo de la dimensión de los documentos solo para el mismo segmento, y no son comunes a lo largo de las dimensiones de los segmentos. • Las palabras ruidosas son otras palabras que no son comunes a lo largo de ambas dimensiones. La entropía basada en P(D|T) y P( ˆS|T) se puede utilizar para identificar diferentes tipos de términos. Para reforzar la contribución de las palabras clave en el cálculo de MI, y al mismo tiempo reducir el efecto de los otros tres tipos de palabras, similar a la idea del peso tf-idf [22], utilizamos las entropías de cada término a lo largo de las dimensiones del documento D y del segmento ˆS, es decir, ED(ˆt) y EˆS(ˆt), para calcular el peso. Una palabra de señal generalmente tiene un valor alto de ED(ˆt) pero un valor bajo de EˆS(ˆt). Introducimos los pesos de términos (o pesos de grupos de términos) wˆt = ( ED(ˆt) maxˆt ∈ ˆT (ED(ˆt )) )a (1 − EˆS(ˆt) maxˆt ∈ ˆT (EˆS(ˆt )) )b , (3) donde ED(ˆt) = d∈D p(d|ˆt)log|D| 1 p(d|ˆt) , EˆS(ˆt) = ˆs∈ ˆS p(ˆs|ˆt)log| ˆS| 1 p(ˆs|ˆt) , y a > 0 y b > 0 son potencias para ajustar los pesos de términos. Normalmente a = 1 y b = 1 por defecto, y se utilizan maxˆt ∈ ˆT (ED(ˆt )) y maxˆt ∈ ˆT (EˆS(ˆt )) para normalizar los valores de entropía. Los pesos de los grupos de términos se utilizan para ajustar p(ˆt, ˆs), pw(ˆt, ˆs) = wˆtp(ˆt, ˆs) ˆt∈ ˆT ;ˆs∈ ˆS wˆtp(ˆt, ˆs) , (4) e Iw( ˆT; ˆS) = ˆt∈ ˆT ˆs∈ ˆS pw(ˆt, ˆs)log pw(ˆt, ˆs) pw(ˆt)pw(ˆs) , (5) donde pw(ˆt) y pw(ˆs) son distribuciones marginales de pw(ˆt, ˆs). Sin embargo, dado que no conocemos ni los pesos de los términos ni P(D, ˆS, T), necesitamos estimarlos, pero wˆt depende de p(ˆs|t) y ˆS, mientras que ˆS y p(ˆs|t) también dependen de wˆt, que aún es desconocido. Por lo tanto, se requiere un algoritmo iterativo para estimar los pesos de los términos wˆt y encontrar la mejor segmentación y alineación para optimizar la función objetivo Iw de manera concurrente. Después de que un documento se segmenta en oraciones, se introduce: la distribución de probabilidad conjunta P(D, Sd, T), el número de segmentos de texto p ∈ {2, 3, ..., máx(sd)}, el número de grupos de términos k ∈ {2, 3, ..., l} (si k = l, no se requiere co-clustering de términos) y el tipo de peso w ∈ {0, 1}, indicando usar I o Iw, respectivamente. Mapeo de Clu, Seg, Ali y pesos de términos wˆt. Inicialización: 0. i = 0. Inicializar Clu (0) t, Seg (0) d y Ali (0) d; Inicializar w (0) ˆt usando la Ecuación (6) si w = 1; Etapa 1: 1. Si |D| = 1, k = l y w = 0, verifica todas las segmentaciones secuenciales de d en p segmentos y encuentra la mejor Segd(s) = argmaxˆsI( ˆT; ˆS), y devuelve Segd; de lo contrario, si w = 1 y k = l, ve a 3.1; Etapa 2: 2.1 Si k < l, para cada término t, encuentra el mejor clúster ˆt como Clu(i+1)(t) = argmaxˆtI( ˆT; ˆS(i)) basado en Seg(i) y Ali(i); 2.2 Para cada d, verifica todas las segmentaciones secuenciales de d en p segmentos con mapeo s → ˆs → ˆs, y encuentra la mejor Ali (i+1) d (Seg (i+1) d (s)) = argmaxˆsI( ˆT(i+1); ˆS) basado en Clu(i+1)(t) si k < l o Clu(0)(t) si k = l; 2.3 i + +. Si Clu, Seg o Ali cambian, ve a 2.1; de lo contrario, si w = 0, devuelve Clu(i), Seg(i) y Ali(i); de lo contrario, j = 0, ve a 3.1; Etapa 3: 3.1 Actualiza w (i+j+1) ˆt basado en Seg(i+j), Ali(i+j) y Clu(i) usando la Ecuación (3); 3.2 Para cada d, verifica todas las segmentaciones secuenciales de d en p segmentos con mapeo s → ˆs → ˆs, y encuentra la mejor Ali (i+j+1) d (Seg (i+j+1) d (s)) = argmaxˆsIw( ˆT(i); ˆS) basado en Clu(i) y w (i+j+1) ˆt; 3.3 j + +. Si Iw( ˆT; ˆS) cambia, ve al paso 6; de lo contrario, detente y devuelve Clu(i), Seg(i+j), Ali(i+j), y w (i+j) ˆt; Figura 2: Algoritmo: Segmentación y alineación de temas basada en MI o WMI. y cada oración se segmenta en palabras, cada palabra se reduce a su raíz. Entonces se puede estimar la distribución de probabilidad conjunta P(D, Sd, T). Finalmente, esta distribución se puede utilizar para calcular la MI en nuestro algoritmo. 4.3 Algoritmo Voraz Iterativo Nuestro objetivo es maximizar la función objetivo, I( ˆT; ˆS) o Iw( ˆT; ˆS), que puede medir la dependencia de las ocurrencias de términos en diferentes segmentos. Generalmente, primero no conocemos los pesos estimados de los términos, los cuales dependen de la segmentación y alineación óptimas de los temas, y los grupos de términos. Además, este problema es NP-duro [10], incluso si conocemos los pesos de los términos. Por lo tanto, se desea un algoritmo voraz iterativo para encontrar la mejor solución, aunque probablemente solo se alcancen máximos locales. Presentamos el algoritmo voraz iterativo en la Figura 2 para encontrar un máximo local de I( ˆT; ˆS) o Iw( ˆT; ˆS) con estimación simultánea de pesos de términos. Este algoritmo es iterativo y codicioso para casos de múltiples documentos o casos de un solo documento con estimación de peso de términos y/o co-clustering de términos. De lo contrario, dado que es solo un algoritmo de un paso para resolver la tarea de segmentación de un solo documento [6, 15, 25], se garantiza el máximo global de MI. Mostraremos más adelante que la coagrupación de términos reduce la precisión de los resultados y no es necesaria, y para la segmentación de un solo documento, los pesos de los términos tampoco son requeridos. 4.3.1 Inicialización En el Paso 0, la agrupación inicial de términos Clut y la segmentación y alineación de temas Segd y Alid son importantes para evitar máximos locales y reducir el número de iteraciones. Primero, se puede hacer una buena estimación de los pesos de los términos utilizando las distribuciones de frecuencia de términos a lo largo de las oraciones para cada documento y promediándolas para obtener los valores iniciales de wˆt: wt = ( ED(t) maxt ∈T (ED(t )) )(1 − ES(t) maxt ∈T (ES(t )) ), (6) donde ES(t) = 1 |Dt| d∈Dt (1 − s∈Sd p(s|t)log|Sd| 1 p(s|t) ), donde Dt es el conjunto de documentos que contienen el término t. Luego, para la segmentación inicial Seg(0), simplemente podemos segmentar los documentos de manera equitativa por oraciones. O podemos encontrar la segmentación óptima solo para cada documento d que maximice el WMI, Seg (0) d = argmaxˆsIw(T; ˆS), donde w = w (0) ˆt. Para el alineamiento inicial Ali(0), podemos primero asumir que el orden de los segmentos para cada d es el mismo. Para el agrupamiento inicial de términos Clu(0), las etiquetas de los primeros grupos pueden establecerse al azar, y después de la primera vez del Paso 3, se obtiene un buen agrupamiento inicial de términos. 4.3.2 Diferentes Casos Después de la inicialización, hay tres etapas para diferentes casos. En total hay ocho casos, |D| = 1 o |D| > 1, k = l o k < l, w = 0 o w = 1. La segmentación de un solo documento sin agrupamiento de términos y estimación de peso de términos (|D| = 1, k = l, w = 0) solo requiere la Etapa 1 (Paso 1). Si se requiere el agrupamiento de términos (k < l), la Etapa 2 (Paso 2.1, 2.2 y 2.3) se ejecuta de forma iterativa. Si se requiere la estimación del peso del término (w = 1), la Etapa 3 (Paso 3.1, 3.2 y 3.3) se ejecuta de forma iterativa. Si ambos son requeridos (k < l, w = 1), la Etapa 2 y 3 se ejecutan una tras otra. Para la segmentación de múltiples documentos sin agrupamiento de términos y estimación de peso de términos (|D| > 1, k = l, w = 0), solo se requiere la iteración de los Pasos 2.2 y 2.3. En la Etapa 1, el máximo global se puede encontrar basándose en I( ˆT; ˆS) utilizando programación dinámica en la Sección 4.4. Es imposible encontrar simultáneamente un buen agrupamiento de términos y pesos estimados de términos, ya que al mover un término a un nuevo grupo de términos para maximizar Iw( ˆT; ˆS), no sabemos si el peso de este término debería ser el del nuevo grupo o el del antiguo. Por lo tanto, primero realizamos el agrupamiento de términos en la Etapa 2, y luego estimamos los pesos de los términos en la Etapa 3. En la Etapa 2, el Paso 2.1 consiste en encontrar el mejor agrupamiento de términos y el Paso 2.2 consiste en encontrar la mejor segmentación. Este ciclo se repite para encontrar un máximo local basado en MI I hasta que converge. Los dos pasos son: (1) basados en el agrupamiento de términos actual Cluˆt, para cada documento d, el algoritmo segmenta todas las oraciones Sd en p segmentos secuencialmente (algunos segmentos pueden estar vacíos), y los coloca en los p segmentos ˆS del conjunto de entrenamiento completo D (se verifican todos los casos posibles de segmentación diferente Segd y alineación Alid) para encontrar el caso óptimo, y (2) basado en la segmentación y alineación actual, para cada término t, el algoritmo encuentra el mejor grupo de términos de t basado en la segmentación actual Segd y la alineación Alid. Después de encontrar un buen agrupamiento de términos, se estiman los pesos de los términos si w = 1. En la Etapa 3, al igual que en la Etapa 2, el Paso 3.1 es la reestimación del peso del término y el Paso 3.2 es encontrar una mejor segmentación. Se repiten para encontrar un máximo local basado en WMI Iw hasta que converja. Sin embargo, si el agrupamiento en la Etapa 2 no es preciso, entonces la estimación de peso en la Etapa 3 puede tener un mal resultado. Finalmente, en el Paso 3.3, este algoritmo converge y devuelve la salida. Este algoritmo puede manejar tanto la segmentación de un solo documento como la de múltiples documentos. También puede detectar temas compartidos entre documentos al verificar la proporción de frases superpuestas sobre los mismos temas, como se describe en la Sección 5.2. 4.4 Optimización del algoritmo. En muchos trabajos anteriores sobre segmentación, la programación dinámica es una técnica utilizada para maximizar la función objetivo. De manera similar, en los Pasos 1, 2.2 y 3.2 de nuestro algoritmo, podemos utilizar programación dinámica. Para la Etapa 1, utilizando programación dinámica aún se puede encontrar el óptimo global, pero para la Etapa 2 y la Etapa 3, solo podemos encontrar el óptimo para cada paso de segmentación de temas y alineación de un documento. Aquí solo mostramos la programación dinámica para el Paso 3.2 utilizando WMI (el Paso 1 y 2.2 son similares pero pueden usar I o Iw). Hay dos casos que no se muestran en el algoritmo de la Figura 2: (a) segmentación de un solo documento o segmentación de múltiples documentos con el mismo orden secuencial de segmentos, donde no se requiere alineación, y (b) segmentación de múltiples documentos con diferentes órdenes secuenciales de segmentos, donde la alineación es necesaria. La función de mapeo de alineación del primer caso es simplemente Alid(ˆsi) = ˆsi, mientras que para los últimos casos la función de mapeo de alineación es Alid(ˆsi) = ˆsj, donde i y j pueden ser diferentes. Los pasos computacionales para los dos casos se enumeran a continuación: Caso 1 (sin alineación): Para cada documento d: (1) Calcular pw(ˆt), pw parcial(ˆt, ˆs) y pw parcial(ˆs) sin contar las oraciones de d. Luego, colocar las oraciones de i a j en la Parte k, y calcular WMI parcial PIw( ˆT; ˆsk(si, si+1, ..., sj)) ˆt∈ ˆT pw(ˆt, ˆsk)log pw(ˆt, ˆsk) pw(ˆt)pw(ˆsk) , donde Alid(si, si+1, ..., sj) = k, k ∈ {1, 2, ..., p}, 1 ≤ i ≤ j ≤ nd, y Segd(sq) = ˆsk para todo i ≤ q ≤ j. (2) Dejar que M(sm, 1) = PIw( ˆT; ˆs1(s1, s2, ..., sm)). Entonces M(sm, L) = maxi[M(si−1, L − 1) + PIw( ˆT; ˆsL(si, ..., sm))], donde 0 ≤ m ≤ nd, 1 < L < p, 1 ≤ i ≤ m + 1, y cuando i > m, no se colocan oraciones en ˆsk al calcular PIw (nota PIw( ˆT; ˆs(si, ..., sm)) = 0 para la segmentación de un solo documento). (3) Finalmente M(snd , p) = maxi[M(si−1, p − 1)+ PIw( ˆT; ˆsp(si, ..., snd ))], donde 1 ≤ i ≤ nd+1. Se encuentra el Iw óptimo y la segmentación correspondiente es la mejor. Caso 2 (alineación requerida): Para cada documento d: (1) Calcular pw(ˆt), pw parcial(ˆt, ˆs), y pw parcial(ˆs), y PIw( ˆT; ˆsk(si, si+1, ..., sj)) de manera similar al Caso 1. (2) Sea M(sm, 1, k) = PIw( ˆT; ˆsk(s1, s2, ..., sm)), donde k ∈ {1, 2, ..., p}. Entonces M(sm, L, kL) = maxi,j[M(si−1, L − 1, kL/j) + PIw( ˆT; ˆsAlid(ˆsL )=j(si, si+1, ..., sm))], donde 0 ≤ m ≤ nd, 1 < L < p, 1 ≤ i ≤ m + 1, kL ∈ Set(p, L), que es el conjunto de todos los p! Hay L!(p−L)! combinaciones de L segmentos elegidos de entre todos los p segmentos, j ∈ kL, el conjunto de L segmentos elegidos de entre todos los p segmentos, y kL/j es la combinación de L − 1 segmentos en kL excepto el Segmento j. (3) Finalmente, M(snd , p, kp) = maxi,j[M(si−1, p − 1, kp/j) +PIw( ˆT; ˆsAlid(ˆsL )=j(si, si+1, ..., snd ))], donde kp es simplemente la combinación de todos los p segmentos y 1 ≤ i ≤ nd + 1, que es el óptimo Iw y la segmentación correspondiente es la mejor. Los pasos de los Casos 1 y 2 son similares, excepto que en el Caso 2, se considera el alineamiento además de la segmentación. Primero, se calculan los elementos básicos de probabilidad para computar Iw excluyendo el documento d, y luego se calcula el WMI parcial colocando cada segmento secuencial posible (incluido el segmento vacío) de d en cada segmento del conjunto. Segundo, se encuentra la suma óptima de PIw para L segmentos y las m oraciones más a la izquierda, M(sm, L). Finalmente, se encuentra el WMI máximo entre diferentes sumas de M(sm, p − 1) y PIw para el Segmento p. 5. EXPERIMENTOS En esta sección se probará la segmentación de un solo documento, la detección de temas compartidos y la segmentación de múltiples documentos. Se estudian diferentes hiperparámetros de nuestro método. Para mayor comodidad, nos referimos al método utilizando I como MIk si w = 0, e Iw como WMIk si w = 2 o como WMIk si w = 1, donde k es el número de grupos de términos, y si k = l, donde l es el número total de términos, entonces no se requiere agrupación de términos, es decir, El primer conjunto de datos que probamos es uno sintético utilizado en investigaciones anteriores [6, 15, 25] y muchos otros artículos. Tiene 700 muestras. Cada uno es una concatenación de diez segmentos. Cada segmento es la primera oración seleccionada al azar de las n primeras oraciones del corpus Brown, que se supone que tienen un tema diferente entre sí. Actualmente, los mejores resultados en este conjunto de datos son logrados por Ji et al. [15]. Para comparar el rendimiento de nuestros métodos, se aplica el criterio ampliamente utilizado en investigaciones anteriores en lugar del criterio imparcial introducido en [20]. Elige un par de palabras al azar. Si se encuentran en segmentos diferentes (diferentes) para la segmentación real (real), pero se predicen (pred) como en el mismo segmento, es un error. Si están en el mismo segmento (mismo), pero se predice que están en segmentos diferentes, es una falsa alarma. Por lo tanto, la tasa de error se calcula utilizando la siguiente ecuación: p(err|real, pred) = p(miss|real, pred, diff)p(diff|real) + p(false alarm|real, pred, same)p(same|real). 5.1.2 Resultados del Experimento Probamos el caso cuando se conoce el número de segmentos. La Tabla 1 muestra los resultados de nuestros métodos con diferentes valores de hiperparámetros y tres enfoques anteriores, C99[25], U00[6] y ADDP03[15], en este conjunto de datos cuando se conoce el número de segmento. En WMI para la segmentación de un solo documento, los pesos de los términos se calculan de la siguiente manera: wˆt = 1−EˆS(ˆt)/maxˆt ∈ ˆT (EˆS(ˆt)). Para este caso, nuestros métodos MIl y WMIl superan a todos los enfoques anteriores. Comparamos nuestros métodos con ADDP03 utilizando una prueba t de una muestra unilateral y los valores de p se muestran en la Tabla 2. A partir de los valores p, podemos ver que en su mayoría las diferencias son muy significativas. También comparamos las tasas de error entre nuestros dos métodos utilizando una prueba t de dos muestras de dos colas para verificar la hipótesis de que son iguales. No podemos rechazar la hipótesis de que son iguales, por lo que las diferencias no son significativas, a pesar de que todas las tasas de error para MIl son más pequeñas que las de WMIl. Sin embargo, podemos concluir que los pesos de los términos contribuyen poco en la segmentación de un solo documento. Los resultados también muestran que el uso de MI con co-clustering de términos (k = 100) disminuye el rendimiento. Probamos diferentes números de grupos de términos y encontramos que el rendimiento mejora cuando el número de grupos aumenta hasta llegar a l. WMIk<l tiene resultados similares que no mostramos en la tabla. Como se mencionó anteriormente, el uso de MI puede ser inconsistente en los límites óptimos dados diferentes números de segmentos. Esta situación ocurre especialmente cuando las similitudes entre los segmentos son bastante diferentes, es decir, algunas transiciones son muy obvias, mientras que otras no lo son. Esto se debe a que normalmente un documento es una estructura jerárquica en lugar de una estructura únicamente secuencial. Cuando los segmentos no están en el mismo nivel, esta situación puede ocurrir. Por lo tanto, se desea un enfoque de segmentación jerárquica de temas, y la estructura depende en gran medida del número de segmentos para cada nodo interno y del criterio de parada de la división. Para este conjunto de datos de segmentación de un solo documento, dado que es solo un conjunto sintético, que es simplemente una concatenación de varios segmentos sobre diferentes temas, es razonable que enfoques simplemente basados en la frecuencia de términos tengan un buen rendimiento. Normalmente, para las tareas de segmentación de documentos coherentes en subtemas, la efectividad disminuye mucho. 5.2 Detección de Temas Compartidos 5.2.1 Datos de Prueba y Evaluación El segundo conjunto de datos contiene 80 artículos de noticias de Google News. Hay ocho temas y cada uno tiene 10 artículos. Dividimos aleatoriamente el conjunto en subconjuntos con diferentes números de documentos y cada subconjunto tiene los ocho temas. Comparamos nuestro enfoque MIl y WMIl con LDA [4]. LDA trata un documento en el conjunto de datos como una bolsa de palabras, encuentra su distribución en temas y su tema principal. MIl y WMIl ven cada oración como un conjunto de palabras y la etiquetan con una etiqueta de tema. Luego, para cada par de documentos, LDA determina si están en el mismo tema, mientras que MIl y Table 3: Detección de Temas Compartidos: Tasas de Error Promedio para Diferentes Números de Documentos en Cada Subconjunto #Doc 10 20 40 80 LDA 8.89% 16.33% 1.35% 0.60% MIl, θ = 0.6 4.17% 1.71% 1.47% 0.0% WMIl, θ = 0.8 18.6% 3.16% 1.92% 0.0% WMIl comprueba si la proporción de oraciones superpuestas en el mismo tema es mayor que el umbral ajustable θ. Es decir, en MIl y WMIl, para un par de documentos d, d , si [ s∈Sd,s ∈Sd 1(temas=temas )/min(|Sd|, |Sd|)] > θ, donde Sd es el conjunto de oraciones de d, y |Sd| es el número de oraciones de d, entonces d y d comparten el tema. Para un par de documentos seleccionados al azar, la tasa de error se calcula utilizando la siguiente ecuación: p(err|real, pred) = p(miss|real, pred, same)p(same|real) + p(false alarm|real, pred, diff)p(diff|real), donde un error significa si tienen el mismo tema (same) para el caso real (real), pero se predice (pred) como en un tema diferente. Si están en diferentes temas (diff), pero se predicen como en el mismo tema, es una falsa alarma. 5.2.2 Resultados del Experimento Los resultados se muestran en la Tabla 3. Si la mayoría de los documentos tienen diferentes temas, en WMIl, la estimación de los pesos de términos en la Ecuación (3) no es correcta. Por lo tanto, no se espera que WMIL tenga un mejor rendimiento que MIL cuando la mayoría de los documentos tienen temas diferentes. Cuando hay menos documentos en un subconjunto con el mismo número de temas, más documentos tienen temas diferentes, por lo que WMIl es peor que MIl. Podemos ver que en la mayoría de los casos, MIl tiene un rendimiento mejor (o al menos similar) que LDA. Después de la detección de temas compartidos, se puede llevar a cabo la segmentación de documentos con los temas compartidos. 5.3 Segmentación de múltiples documentos 5.3.1 Datos de prueba y evaluación Para la segmentación y alineación de múltiples documentos, nuestro objetivo es identificar estos segmentos sobre el mismo tema entre varios documentos similares con temas compartidos. Se espera que al utilizar pesos de términos, Iw funcione mejor que I, ya que sin pesos de términos, el resultado se ve seriamente afectado por palabras de parada dependientes del documento y palabras ruidosas que dependen del estilo de escritura personal. Es más probable tratar los mismos segmentos de diferentes documentos como segmentos diferentes bajo el efecto de palabras de parada dependientes del documento y palabras ruidosas. Los pesos de términos pueden reducir el efecto de las palabras de parada dependientes del documento y las palabras ruidosas al darle más peso a los términos de señal. El conjunto de datos para la segmentación y alineación de múltiples documentos tiene un total de 102 muestras y 2264 oraciones. Cada uno es la parte de introducción de un informe de laboratorio seleccionado del curso de Biol 240W, Universidad Estatal de Pensilvania. Cada muestra tiene dos segmentos, la introducción de las hormonas vegetales y el contenido en el laboratorio. El rango de longitud de las muestras va desde dos hasta 56 oraciones. Algunas muestras solo tienen una parte y algunas tienen un orden inverso de estos dos segmentos. No es difícil identificar el límite entre dos segmentos para los humanos. Etiquetamos cada oración manualmente para evaluación. El criterio de evaluación consiste en utilizar la proporción del número de oraciones con etiquetas de segmento incorrectas predichas en el número total de oraciones en toda la Tabla de entrenamiento. Para mostrar los beneficios de la segmentación y alineación de múltiples documentos, comparamos nuestro método con diferentes parámetros en diferentes particiones del mismo conjunto de entrenamiento. Excepto los casos en los que el número de documentos es 102 y uno (que son casos especiales de uso del conjunto completo y la segmentación pura de un solo documento), dividimos aleatoriamente el conjunto de entrenamiento en m particiones, y cada una tiene 51, 34, 20, 10, 5 y 2 muestras de documentos. Luego aplicamos nuestros métodos en cada partición y calculamos la tasa de error de todo el conjunto de entrenamiento. Cada caso se repitió 10 veces para calcular las tasas de error promedio. Para diferentes particiones del conjunto de entrenamiento, se utilizan diferentes valores de k, ya que el número de términos aumenta cuando el número de documentos en cada partición aumenta. 5.3.2 Resultados del Experimento De los resultados del experimento en la Tabla 4, podemos ver las siguientes observaciones: (1) Cuando el número de documentos aumenta, todos los métodos tienen un mejor rendimiento. Solo de uno a dos documentos, el MIL ha disminuido un poco. Podemos observar esto en la Figura 3 en el punto del número de documento = 2. La mayoría de las curvas incluso tienen los peores resultados en este punto. Hay dos razones. Primero, porque las muestras votan por la mejor segmentación y alineación de múltiples documentos, pero si solo se comparan dos documentos entre sí, aquel con segmentos faltantes o una secuencia totalmente diferente afectará la correcta segmentación y alineación del otro. Segundo, como se señaló al principio de esta sección, si dos documentos tienen más palabras de parada dependientes del documento o palabras ruidosas que palabras clave, entonces el algoritmo puede considerarlos como dos segmentos diferentes y faltar el otro segmento. Generalmente, solo podemos esperar un mejor rendimiento cuando el número de documentos es mayor que el número de segmentos. (2) Excepto en la segmentación de un solo documento, WMIl siempre es mejor que MIl, y cuando el número de documentos se acerca a uno o aumenta a un número muy grande, sus rendimientos se vuelven más cercanos. La Tabla 5 muestra los valores p de la prueba t de dos muestras unilaterales entre MIl y WMIl. También podemos observar esta tendencia a partir de los valores de p. Cuando el número de documento es igual a 5, alcanzamos el valor p más pequeño y la mayor diferencia entre las tasas de error de MIl y WMIl. Para la Tabla 6 de un solo documento: Segmentación de múltiples documentos: Tasa de error promedio para el Documento Número = 5 en cada subconjunto con Diferente Número de Agrupaciones de Términos #Agrupaciones 75 100 150 250 l MIk 24.67% 24.54% 23.91% 22.59% 15.77% de segmentación, WMIl es incluso un poco peor que MIl, lo cual es similar a los resultados de la segmentación de un solo documento en el primer conjunto de datos. La razón es que para la segmentación de un solo documento, no podemos estimar con precisión los pesos de los términos, ya que no tenemos disponibles varios documentos. (3) El uso de agrupamiento de términos generalmente produce resultados peores que MIl y WMIl. (4) El uso de agrupamiento de términos en WMIk es aún peor que en MIk, ya que en WMIk los grupos de términos se encuentran primero utilizando I antes que Iw. Si los grupos de términos no son correctos, entonces los pesos de los términos se estiman peor, lo que puede llevar a que el algoritmo obtenga resultados aún peores. De los resultados también encontramos que en la segmentación y alineación de múltiples documentos, la mayoría de los documentos con segmentos faltantes y en orden inverso son identificados correctamente. La Tabla 6 ilustra los resultados del experimento para el caso de 20 particiones (cada una con cinco muestras de documentos) del conjunto de entrenamiento y la segmentación y alineación de temas utilizando MIk con diferentes números de grupos de términos k. Observa que cuando el número de grupos de términos aumenta, la tasa de error disminuye. Sin agrupamiento de términos, obtenemos el mejor resultado. No mostramos resultados para WMIk con agrupamiento de términos, pero los resultados son similares. También probamos WMIL con diferentes hiperparámetros de a y b para ajustar los pesos de los términos. Los resultados se presentan en la Figura 3. Se demostró que el caso predeterminado WMIl: a = 1, b = 1 dio los mejores resultados para diferentes particiones del conjunto de entrenamiento. Podemos observar la tendencia de que cuando el número de documentos es muy pequeño o grande, la diferencia entre MIl: a = 0, b = 0 y WMIl: a = 1, b = 1 se vuelve bastante pequeña. Cuando el número de documentos no es grande (aproximadamente de 2 a 10), todos los casos que utilizan pesos de términos tienen un mejor rendimiento que MIl: a = 0, b = 0 sin pesos de términos, pero cuando el número de documentos aumenta, los casos WMIl: a = 1, b = 0 y WMIl: a = 2, b = 1 empeoran en comparación con MIl: a = 0, b = 0. Cuando el número de documentos se vuelve muy grande, son aún peores que los casos con números de documentos pequeños. Esto significa que es muy importante encontrar una forma adecuada de estimar los pesos de los términos para el criterio de WMI. La Figura 4 muestra los pesos de los términos aprendidos de todo el conjunto de entrenamiento. Cuatro tipos de palabras se categorizan de manera aproximada aunque la transición entre ellas es sutil. La Figura 5 ilustra el cambio en la información mutua (ponderada) para MIl y WMIl. Como era de esperar, la información mutua para MIl aumenta de forma monótona con el número de pasos, mientras que WMIl no lo hace. Finalmente, MIl y WMIl son escalables, con complejidad computacional mostrada en la Figura 6. Una ventaja de nuestro enfoque basado en MI es que no es necesario eliminar las palabras vacías. Otra ventaja importante es que no hay hiperparámetros necesarios que ajustar. En la segmentación de un solo documento, el rendimiento basado en MI es aún mejor que el basado en WMI, por lo que no se requiere un hiperparámetro adicional. En la segmentación de múltiples documentos, mostramos en el experimento que a = 1 y b = 1 es lo mejor. Nuestro método otorga más peso a los términos de señal. Sin embargo, generalmente los términos o frases de señal aparecen al principio de un segmento, mientras que el final del segmento puede ser 1 2 5 10 20 34 51 102 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 Número de Documento Tasa de Error MIl :a=0,b=0 WMI l :a=1,b=1 WMI l :a=1,b=0 WMI l :a=2,b=1 Figura 3: Tasas de error para diferentes hiperparámetros de pesos de términos. 0 0.2 0.4 0.6 0.8 1 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Entropía de Documento Normalizada Entropía de Segmento Normalizada Palabras ruidosas Palabras de señal Palabras de parada comunes Palabras de parada de Doc-dep Figura 4: Pesos de términos aprendidos de todo el conjunto de entrenamiento. 0 100 200 300 400 500 600 0.06 0.08 0.1 0.12 0.14 0.16 0.18 Número de Pasos (Ponderado) Información Mutua MI l WMI l Figura 5: Cambio en la MI (ponderada) para MIl y WMIl. 0 20 40 60 80 100 120 0 200 400 600 800 1000 1200 1400 1600 1800 2000 Número de Documento Tiempo de Convergencia (seg) MI l WMI l Figura 6: Tiempo de convergencia para MIl y WMIl. muy ruidoso. Una posible solución es dar más peso a los términos al principio de cada segmento. Además, cuando la longitud de los segmentos es bastante diferente, los segmentos largos tienen frecuencias de términos mucho más altas, por lo que pueden dominar los límites de segmentación. La normalización de las frecuencias de términos en relación con la longitud del segmento puede ser útil. 6. CONCLUSIONES Y TRABAJO FUTURO Propusimos un método novedoso para la segmentación y alineación de temas en múltiples documentos basado en información mutua ponderada, que también puede manejar casos de un solo documento. Utilizamos programación dinámica para optimizar nuestro algoritmo. Nuestro enfoque supera a todos los métodos anteriores en casos de un solo documento. Además, también demostramos que realizar segmentación entre varios documentos puede mejorar el rendimiento enormemente. Nuestros resultados también demostraron que el uso de la información mutua ponderada puede aprovechar la información de varios documentos para lograr un mejor rendimiento. Solo probamos nuestro método en conjuntos de datos limitados. Se deben probar más conjuntos de datos, especialmente los complicados. Deberían compararse más métodos anteriores. Además, las segmentaciones naturales como los párrafos son pistas que se pueden utilizar para encontrar los límites óptimos. El aprendizaje supervisado también puede ser considerado. 7. AGRADECIMIENTOS Los autores desean agradecer a Xiang Ji y al Prof. J. Scott Payne por su ayuda. 8. REFERENCIAS [1] A. Banerjee, I. Ghillon, J. Ghosh, S. Merugu y D. Modha. Un enfoque generalizado de entropía máxima para la coagrupación de Bregman y la aproximación de matrices. En Actas de SIGKDD, 2004. [2] R. Bekkerman, R. El-Yaniv y A. McCallum. Agrupación distribucional de múltiples vías a través de interacciones por pares. En Actas de ICML, 2005. [3] D. M. Blei y P. J. Moreno. Segmentación de temas con un modelo oculto de Markov de aspectos. En Actas de SIGIR, 2001. [4] D. M. Blei, A. Ng y M. Jordan. Asignación latente de Dirichlet. Revista de Investigación en Aprendizaje Automático, 3:993-1022, 2003. [5] T. Brants, F. Chen e I. Tsochantaridis. Segmentación de documentos basada en temas con análisis semántico latente probabilístico. En Actas de CIKM, 2002. [6] F. Choi. Avances en la segmentación lineal de texto independiente del dominio. En Actas de la NAACL, 2000. [7] H. Christensen, B. Kolluru, Y. Gotoh y S. Renals. Segmentación de máxima entropía de noticias de transmisión. En Actas de ICASSP, 2005. [8] T. Cover y J. Thomas. Elementos de la teoría de la información. John Wiley and Sons, Nueva York, EE. UU., 1991. [9] S. Deerwester, S. Dumais, G. Furnas, T. Landauer y R. Harshman. Indexación mediante análisis semántico latente. Revista de la Sociedad Americana de Sistemas de Información, 1990. [10] I. Dhillon, S. Mallela y D. Modha. Co-clustering informativo-teórico. En Actas de SIGKDD, 2003. [11] M. Hajime, H. Takeo y O. Manabu. Segmentación de texto con múltiples señales lingüísticas superficiales. En Actas de COLING-ACL, 1998. [12] T. K. Ho. Detención de palabras y identificación para el reconocimiento de texto adaptativo. Revista Internacional de Análisis y Reconocimiento de Documentos, 3(1), agosto de 2000. [13] T. Hofmann. Análisis semántico latente probabilístico. En Actas de la UAI99, 1999. [14] X. Ji y H. Zha. Correlación de la sumarización de un par de documentos multilingües. En Actas de RIDE, 2003. [15] X. Ji y H. Zha. Segmentación de texto independiente del dominio utilizando difusión anisotrópica y programación dinámica. En Actas de SIGIR, 2003. [16] X. Ji y H. Zha. Extrayendo temas compartidos de múltiples documentos. En Actas de la 7ª PAKDD, 2003. [17] J. Lafferty, A. McCallum y F. Pereira. Campos aleatorios condicionales: Modelos probabilísticos para segmentar y etiquetar datos de secuencias. En Actas de ICML, 2001. [18] T. Li, S. Ma y M. Ogihara. Criterio basado en la entropía en la agrupación categórica. En Actas de ICML, 2004. [19] A. McCallum, D. Freitag y F. Pereira. Modelos de máxima entropía de Markov para extracción de información y segmentación. En Actas de ICML, 2000. [20] L. Pevzner y M. Hearst. Una crítica y mejora de una métrica de evaluación para la segmentación de texto. Lingüística Computacional, 28(1):19-36, 2002. [21] J. C. Reynar. Modelos estadísticos para la segmentación de temas. En Actas de ACL, 1999. [22] G. Salton y M. McGill. Introducción a la Recuperación de Información Moderna. McGraw Hill, 1983. [23] B. 

McGraw Hill, 1983. [23] B. Sun, Q. Tan, P. Mitra y C. L. Giles. Extracción y búsqueda de fórmulas químicas en documentos de texto en la web. En Actas de WWW, 2007. [24] B. Sun, D. Zhou, H. Zha, y J. I'm sorry, but "Yen" is not a sentence. Can you provide more context or a complete sentence for me to translate into Spanish? Segmentación y alineación de texto multitarea basada en información mutua ponderada. En Actas de CIKM, 2006. [25] M. Utiyama y H. Isahara. Un modelo estadístico para la segmentación de texto independiente del dominio. En Actas de la 39ª ACL, 1999. [26] C. Wayne. Detección y seguimiento de temas multilingües: Investigación exitosa habilitada por corpora y evaluación. En Actas de LREC, 2000. [27] J. Yamron, I. Carp, L. Gillick, S. Lowe y P. van Mulbregt. Un enfoque de modelo oculto de Markov para la segmentación de texto y seguimiento de eventos. En Actas de ICASSP, 1998. [28] H. Zha y X. Ji. Correlacionando documentos multilingües a través de modelado de gráficos bipartitos. En Actas de SIGIR, 2002.