La Lógica Lineal Temporal como base para Interacciones Flexibles de Agentes Duc Q. Pham, James Harland Escuela de Ciencias de la Computación e Información RMIT University GPO Box 2476V Melbourne, 3001, Australia {qupham,jah}@cs.rmit.edu.au RESUMEN Las interacciones entre agentes en un sistema abierto como Internet requieren un grado significativo de flexibilidad. Un aspecto crucial del desarrollo de tales métodos es la noción de compromisos, que proporciona un mecanismo para coordinar comportamientos interactivos entre agentes. En este documento, investigamos un enfoque para modelar compromisos con una integración estrecha con las acciones del protocolo. Esto significa que no es necesario tener un mapeo explícito de las acciones de los protocolos a las operaciones en los compromisos y un mecanismo externo para procesar y hacer cumplir los compromisos. Mostramos cómo los agentes pueden razonar sobre compromisos y acciones de protocolo para lograr los resultados finales de los protocolos utilizando un sistema de razonamiento basado en lógica lineal temporal, que incorpora tanto el razonamiento temporal como el sensible a los recursos. También discutimos la aplicación de este marco en escenarios como el comercio en línea. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Agentes Inteligentes; D.3.2 [Lenguajes de Programación]: Clasificaciones de Lenguajes Términos Generales Teoría, Diseño 1. INTRODUCCIÓN Y MOTIVACIÓN Recientemente, el desarrollo de software ha evolucionado hacia el desarrollo de sistemas inteligentes e interconectados que trabajan de manera distribuida. El paradigma de agentes se ha vuelto muy adecuado como metáfora de diseño para lidiar con sistemas complejos que comprenden muchos componentes, cada uno con su propio hilo de control y propósitos, involucrados en interacciones dinámicas y complejas. En entornos multiagente, los agentes a menudo necesitan interactuar entre sí para cumplir sus objetivos. Los protocolos se utilizan para regular las interacciones. En los enfoques tradicionales para la especificación de protocolos, como aquellos que utilizan Máquinas de Estados Finitos o Redes de Petri, los protocolos suelen ser secuencias legales predeterminadas de comportamientos interactivos. En entornos que cambian con frecuencia como Internet, tales secuencias fijas pueden volverse obsoletas rápidamente y son propensas a fallar. Por lo tanto, se requiere que los agentes adapten sus comportamientos interactivos para tener éxito y las interacciones entre agentes no deben ser construidas de manera rígida. Para lograr flexibilidad, como la caracterizada por Yolum y Singh en [11], los protocolos de interacción deben garantizar que los agentes tengan autonomía sobre sus comportamientos interactivos y estén libres de cualquier restricción innecesaria. Además, los agentes deben poder ajustar sus acciones interactivas para aprovechar oportunidades o manejar excepciones que surjan durante la interacción. Por ejemplo, considera el escenario a continuación para las ventas en línea. El comerciante Mer tiene 200 bates de cricket disponibles para la venta con un precio unitario de 10 dólares. Un cliente Cus tiene $50. Cus tiene como objetivo obtener en algún momento un bate de cricket de Mer. Hay dos opciones para que Cus pague. Si Cus utiliza el pago con tarjeta de crédito, Mer necesita un banco Ebank para verificar el crédito de Cus. Si se aprueba el crédito Cuss, Ebank organizará el pago del crédito. De lo contrario, Cus puede optar por pagar a través de PayPal. La interacción finaliza cuando se entregan los bienes y se arregla el pago. Un enfoque flexible para este ejemplo debería incluir varias características. En primer lugar, el método de pago utilizado por Cus debería ser elección de Cus y tener la propiedad de que si la verificación de crédito de Cus resulta en una desaprobación, esta excepción también debería ser manejada automáticamente cambiando a PayPal. En segundo lugar, no debería haber restricciones innecesarias sobre el orden en que se realizan las acciones, como cuál de hacer pagos y enviar el bate de cricket debería ser primero. En tercer lugar, la elección de una secuencia de acciones interactivas debe basarse en el razonamiento sobre los significados intrínsecos de las acciones del protocolo, que se basan en la noción de compromiso, es decir, que se refiere a una promesa sólida a otro(s) agente(s) de emprender ciertos cursos de acción. Los enfoques actuales [11, 12, 10, 1] para lograr flexibilidades utilizando la noción de compromiso hacen uso de una capa abstracta de compromisos. Sin embargo, en estos enfoques, es necesario proporcionar externamente un mapeo de las acciones del protocolo a operaciones en compromisos, así como mecanismos de manejo y aplicación de compromisos. La ejecución de acciones del protocolo también requiere la ejecución simultánea de operaciones en compromisos relacionados. Como resultado, el sobrecoste de procesar la capa de compromiso hace que la especificación y ejecución de protocolos sea más complicada y propensa a errores. También hay una falta de lógica para expresar de manera natural aspectos de recursos, elecciones internas y externas, así como el tiempo de los protocolos. En lugar de crear otra capa de compromiso fuera de las acciones del protocolo, intentamos lograr un modelado de compromisos que esté integrado con las acciones del protocolo. Tanto los compromisos como las acciones del protocolo pueden ser analizados en un sistema coherente. Para lograrlo, especificamos protocolos de manera declarativa, es decir, lo que se debe lograr en lugar de cómo deben interactuar los agentes. Una clave para esto es usar la lógica. La lógica temporal, en particular, es adecuada para describir y razonar sobre restricciones temporales, mientras que la lógica lineal es bastante adecuada para modelar recursos. Sugerimos utilizar una combinación de lógica lineal y lógica temporal para construir un marco de interacción basado en compromisos que permita tanto el razonamiento temporal como el relacionado con recursos para los protocolos de interacción. Esto proporciona un mecanismo natural de manipulación y razonamiento, así como mecanismos internos de cumplimiento para compromisos basados en la búsqueda de pruebas. Este documento está organizado de la siguiente manera. La sección 2 discute el material de fondo de la lógica lineal, la lógica lineal temporal y los compromisos. La sección 3 presenta nuestro marco de modelado y la especificación de los protocolos. La sección 4 discute cómo nuestro marco de trabajo puede ser utilizado como un ejemplo de interacciones de venta en línea entre un comerciante, un banco y un cliente. Luego discutimos las ventajas y limitaciones de utilizar nuestro marco para modelar protocolos de interacción y lograr flexibilidad en la Sección 5. La sección 6 presenta nuestras conclusiones y los elementos de trabajo adicional. FONDO Con el fin de aumentar la autonomía de los agentes sobre sus comportamientos interactivos, los protocolos deben especificarse en términos de lo que se debe lograr en lugar de cómo deben actuar los agentes. En otras palabras, los protocolos deben ser especificados de manera declarativa. El uso de la lógica es fundamental en este proceso de especificación. 2.1 Lógica Lineal La lógica se ha utilizado como formalismo para modelar y razonar sobre sistemas de agentes. La lógica lineal [3] es conocida por modelar recursos y actualizar procesos. Se ha considerado en sistemas de agentes el apoyo a la negociación y planificación de agentes mediante la búsqueda de pruebas [5, 8]. En la vida real, los recursos son consumidos y se crean nuevos recursos. En lógicas como la lógica clásica o la lógica temporal, sin embargo, resulta problemático hacer un mapeo directo de recursos a fórmulas. Si modelamos los recursos como A siendo un dólar y B siendo una barra de chocolate, entonces A ⇒ B en lógica clásica se lee como que a partir de un dólar podemos obtener una barra de chocolate. Esto causa problemas ya que la implicación permite obtener una barra de chocolate (B es verdadero) mientras se retiene un dólar (A sigue siendo verdadero). Para resolver problemas de mapeo de recursos - fórmulas, Girard propuso las restricciones en las que las fórmulas se utilizarán exactamente una vez y ya no se pueden agregar o quitar libremente en las derivaciones, tratando así las fórmulas de lógica lineal como recursos. En la lógica lineal, una implicación lineal A B, sin embargo, permite que A sea eliminado después de derivar B, lo que significa que el dólar desaparece después de usar uno para comprar una barra de chocolate. La conjunción clásica (y) y la disyunción (o) se reformulan en diferentes usos de contextos: multiplicativo como combinación y aditivo como compartición para dar lugar a cuatro conectivos. A ⊗ (conjunción multiplicativa) A, significa que se tienen dos As al mismo tiempo, lo cual es diferente de A ∧ A = A. Por lo tanto, ⊗ permite una expresión natural de proporción. A ℘ (disyunción multiplicativa) B, significa que si no A entonces B o viceversa, pero no ambos A y B. La capacidad de especificar opciones a través de los conectivos aditivos es una característica particularmente útil de la lógica lineal. La conjunción (aditiva) A, B, representa una elección propia, ya sea de A o B pero no de ambos. A ⊕ (disyunción aditiva) B, representa la posibilidad de que sea A o B, pero no sabemos cuál. Como se señala en [5], ⊕ permiten que se aclaren las elecciones entre las elecciones internas (propias) y las elecciones externas (elección de otros). Por ejemplo, para especificar que la elección de los lugares A o B para la entrega de mercancías es nuestra como proveedores, usamos A B, o es de los clientes, usamos A ⊕ B. En los sistemas de agentes, esta dualidad entre las elecciones internas y externas se manifiesta cuando un agente tiene el poder de elegir entre alternativas y el otro tiene que reaccionar ante la elección que se haya tomado. Además, durante la interacción, la capacidad de igualar el consumo y la oferta de recursos entre agentes puede simplificar la especificación de asignaciones de recursos. La lógica lineal es un mecanismo natural para proporcionar esta capacidad [5]. Además, se enfatiza en [8] que la lógica lineal se utiliza para modelar los estados de los agentes como conjuntos de recursos consumibles y, en particular, la implicación lineal se utiliza para modelar las transiciones entre estados y las capacidades de los agentes. 2.2 Lógica Lineal Temporal Si bien la lógica lineal ofrece ventajas para modelar y razonar sobre recursos, no trata naturalmente con restricciones de tiempo. La lógica temporal, por otro lado, es un sistema formal que aborda la descripción y el razonamiento sobre los cambios de los valores de verdad de las expresiones lógicas a lo largo del tiempo [2]. La lógica temporal se puede utilizar para la especificación y verificación de programas concurrentes y reactivos [2]. La Lógica Lineal Temporal (TLL) [6] es el resultado de introducir la lógica temporal en la lógica lineal y, por lo tanto, es consciente de los recursos y trata con el tiempo. Los operadores temporales utilizados son (siguiente), (en cualquier momento) y (en algún momento) [6]. Las fórmulas sin operadores temporales pueden considerarse como disponibles solo en el presente. Añadiendo a una fórmula A, es decir, A, significa que A solo se puede usar la próxima vez y exactamente una vez. De manera similar, A significa que A puede ser utilizado en cualquier momento y exactamente una vez. Un medio significa que A puede ser utilizado una vez en algún momento. Aunque ambos se refieren a un punto en el tiempo, la elección de cuál momento es diferente. En cuanto a , la elección es una elección interna, según la capacidad de cada uno. Con , la elección es decidida externamente por otros. 2.3 Compromiso El concepto de compromiso social ha sido reconocido como fundamental para la interacción de agentes. De hecho, el compromiso social proporciona significados intrínsecos de acciones y estados de protocolo [11]. En particular, la persistencia en los compromisos introduce en los agentes la consideración de un cierto nivel de previsibilidad de las acciones de otros agentes, lo cual es importante cuando los agentes lidian con problemas de interdependencias, restricciones globales o The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 125 recursos compartidos [7]. Los enfoques basados en el compromiso asocian las acciones de los protocolos con operaciones en compromisos y los estados del protocolo con el conjunto de compromisos efectivos [11]. Completar el protocolo se realiza a través del razonamiento de medios-fines sobre las operaciones de compromiso para llevar el estado actual a estados finales donde todos los compromisos están resueltos. A partir de entonces, se determinan las secuencias legales correspondientes de acciones interactivas. Por lo tanto, los enfoques mejoran sistemáticamente una variedad de cálculos legales [11]. Los compromisos pueden reducirse a una forma más fundamental conocida como precompromisos. Un precompromiso aquí se refiere a un compromiso potencial que especifica a qué está dispuesto a comprometerse el agente propietario [4], como realizar ciertas acciones o lograr un estado particular. Los agentes pueden negociar sobre compromisos previos enviando propuestas de los mismos a otros. Los demás pueden responder aceptando o rechazando la propuesta o proponiendo otro compromiso previo. Una vez que se acuerda un precompromiso, este se convierte en un compromiso y el proceso pasa de la fase de negociación a la fase de compromiso, en la que los agentes actúan para cumplir con sus compromisos. INTERACCIONES DE AGENTES DE MODELADO Los protocolos suelen ser vistos externamente a los agentes y son esencialmente un conjunto de compromisos impuestos externamente a los agentes participantes. Tomamos una visión interna de los protocolos, es decir, desde la perspectiva de los agentes participantes al colocar la especificación de compromisos localmente en los agentes respectivos de acuerdo a sus roles. Un enfoque de este tipo permite a los agentes gestionar sus propios compromisos de protocolo. De hecho, los agentes ya no aceptan y siguen un conjunto dado de compromisos, sino que pueden razonar sobre qué compromisos ofrecer y cuáles compromisos de otros aceptar, teniendo en cuenta las necesidades actuales y el entorno. Los protocolos surgen a medida que los compromisos se vinculan a través del razonamiento de agentes basado en la búsqueda de pruebas durante la interacción. Además, los cambios continuos en el entorno se toman como entrada en la generación de protocolos mediante el razonamiento del agente. Esta es la inversa de otros enfoques que intentan hacer que la especificación sea flexible para adaptarse a los cambios en el entorno. Por lo tanto, es un paso más cerca de permitir protocolos emergentes, lo que hace que los protocolos sean más dinámicos y flexibles al contexto. En pocas palabras, los servicios son lo que los agentes son capaces de proporcionar a otros agentes. Los compromisos pueden surgir de combinaciones de servicios, es decir, de las capacidades de los agentes. Una unidad de recursos consumibles se modela como una proposición en lógica lineal. Las cifras numéricas se pueden utilizar para abreviar una conjunción multiplicativa de las mismas instancias. Por ejemplo, 2 dólares = dólar ⊗ dólar. Además, dicho 3 A es una abreviatura de A. Para abordar la manipulación dinámica de recursos, también incluimos información sobre la ubicación y propiedad en la codificación de recursos para abordar el traslado y cambios en la posesión de recursos durante la interacción del agente. El hecho de que el recurso A se encuentre en el agente α y sea propiedad del agente β se expresa a través de una notación abreviada como A@αβ, la cual es tratada como una proposición lógica en nuestro marco de trabajo. Esta notación puede ser posteriormente extendida a una estructura lógica más compleja para razonar sobre cambios en la ubicación y la propiedad. En nuestro ejemplo en curso, un bate de cricket b ubicado en y propiedad del agente Mer se denota como cricket b@M. Después de una venta exitosa al cliente agente Cus, el bate de cricket será trasladado a y será propiedad del agente Cus. La fórmula cricket b@CC reemplazará la fórmula cricket b@MM para reflejar los cambios. Nuestro tratamiento de recursos ilimitados es modelarlo como un número σ de copias de la fórmula de recursos, de modo que el número σ se elige para ser extremadamente grande, en relación con el contexto. Por ejemplo, para indicar que el comerciante Mer puede emitir un número ilimitado de cotizaciones de venta en cualquier momento, usamos σ cotización de venta@M. La declaración de acciones también se modela de manera similar a la de los recursos. Las capacidades de los agentes se refieren a producir, consumir, reubicar y cambiar la propiedad de recursos. Las capacidades se representan describiendo el estado antes y después de realizarlas. La forma de representación general es Γ Δ, en la que Γ describe las condiciones antes y Δ describe las condiciones después. La implicación lineal en la lógica lineal garantiza que las condiciones previas se transformarán en las condiciones posteriores. Además, algunas capacidades se pueden aplicar en cualquier número de veces en el contexto de interacción y sus fórmulas también están precedidas por el número σ. Para poner un ejemplo, consideramos la capacidad del agente Mer de vender un bate de cricket por 10 dólares. Las condiciones anteriores son 10 dólares y un método de pago del agente Cus: 10$@CC ⊗ pagar m@C. Dado esto, al aplicar la capacidad C, Mer ganará 10 dólares (10$@MM) y com⊥) para que CusM se comprometa a proporcionar un bate de cricket (cricket b@M obtendrá un bate de cricket (cricket b@CC). Juntos, la capacidad está codificada como 10$@C ⊗ pagar m@C 10$@MC C ⊗ cricket b@C M ⊗ lazos. Por lo tanto, nuestro enfoque cambia de especificar un conjunto de compromisos de protocolo a especificar conjuntos de precompromisos como capacidades para cada agente. Los compromisos pueden ser modelados, razonados y manipulados por el mismo mecanismo lógico que se utiliza para las acciones, recursos y metas de los agentes, lo que simplifica en gran medida el sistema. Nuestro marco de trabajo utiliza TLL como un medio para especificar protocolos de interacción. Codificamos varios conceptos como recurso, capacidad y compromiso en TLL. La simetría entre una fórmula y su negación en TLL se explora como una forma de modelar recursos y compromisos. Luego discutimos el papel central de los compromisos previos y cómo se especifican en cada agente participante. Luego corresponde a los agentes razonar sobre los compromisos previos para formar compromisos de protocolo. Discutimos el modelado de varios tipos de compromisos, sus cumplimientos y mecanismos de aplicación. Debido a la dualidad en la lógica lineal, las fórmulas positivas pueden ser consideradas como fórmulas de suministro y las fórmulas negativas pueden ser consideradas como fórmulas de demanda. Por lo tanto, adoptamos un enfoque de modelado de compromisos no condicionales o básicos como fórmulas negativas. En particular, al convertir una fórmula en su forma negativa, se crea un compromiso base para obtener los recursos o llevar a cabo las acciones asociadas con la fórmula. En el ejemplo anterior, un compromiso del agente Mer a ⊥ M. que posteriormente son descargados. proporcionar un bate de cricket (cricket b@MM) es cricket b@M Un compromiso base se cumple (se descarga) siempre que el agente comprometido con éxito logra los respectivos 126 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) asigna recursos o lleva a cabo las acciones según lo requerido por el compromiso. En el modelado de TLL, esto significa que se deriva la fórmula positiva correspondiente. La resolución de compromisos puede llevarse a cabo de forma natural mediante la inferencia en TLL. Por ejemplo, el b@M de cricket cumplirá el compromiso-M de cricket b@M⊥ y ambas fórmulas se eliminan automáticamente como cricket b@MM ⊗ cricket b@M⊥. ⊥ Bajo la suposición adicional de que se espera que los agentes resuelvan todas las fórmulas en demanda (eliminando fórmulas negativas), esto crea una presión impulsora en los agentes para resolver compromisos base. Esta presión se convierte entonces en un mecanismo de cumplimiento natural e interno para los compromisos fundamentales. Un compromiso con condiciones (o compromiso condicional) puede ser modelado conectando las condiciones a compromisos base a través de una implicación lineal. Una forma general es Γ Δ donde Γ es la parte de la condición y Δ incluye compromisos base. Si la condición Γ se deriva, al consumir Γ, la implicación lineal garantizará que Δ resulte, lo que significa que los compromisos base en Δ se vuelven efectivos. Si las condiciones no se pueden cumplir, la implicación lineal no se puede aplicar y, por lo tanto, la parte de compromiso en el compromiso condicional sigue inactiva. En nuestro enfoque, los compromisos condicionales se especifican en su forma potencial como precompromisos de los agentes participantes. Los compromisos previos se negocian entre agentes a través de propuestas y, al ser aceptados, formarán compromisos condicionales entre los agentes involucrados. Los compromisos condicionales se interpretan como que la condición Γ es requerida del agente propuesto y la parte de compromiso Δ es responsabilidad del agente propietario (proponente). De hecho, dicha interpretación y codificación realizan la noción de un compromiso condicional que el agente propietario está dispuesto a comprometerse a derivar Δ dado que el agente propuesto cumple con las condiciones Γ. Los compromisos condicionales, las precompromisos y las capacidades tienen codificaciones similares. Sin embargo, sus diferencias radican en las fases de compromiso en las que se encuentran. Las capacidades son utilizadas internamente por el agente propietario y no implican ningún compromiso. Los compromisos previos pueden ser considerados como capacidades destinadas a formar compromisos condicionales. Una vez aceptados, los compromisos previos se convertirán en compromisos condicionales y llevarán a los dos agentes comprometidos a una fase de compromiso. Como ejemplo, considera que Mer tiene la capacidad de vender bates de cricket: (10$@CC ⊗ pagar m@CC) (10$@M ⊗ bate de cricket b@M⊥ ⊗ bate de cricket b@CC). Cuando MerM M propone su capacidad a Cus, la capacidad actúa como un compromiso previo. Cuando la propuesta sea aceptada, ese compromiso previo se convertirá en un compromiso condicional en el que Mer se compromete a cumplir con el compromiso base cricket b@M⊥ (lo que lleva a tener cricket b@CC) bajo la condición de que Cus derive 10$@CC ⊗pay m@C (lo que lleva a tener 10$@MM). Los compromisos que pueden romperse y que están diseñados para brindar a los agentes la flexibilidad deseada para retirarse de sus compromisos (cancelar compromisos) también se modelan de forma natural en nuestro marco de trabajo. Un compromiso base Com⊥ se convierte en un compromiso base rompible (cond ⊕ Com)⊥. El token adicional cond refleja la deliberación interna del agente sobre cuándo se rompe el compromiso de derivar Com. Una vez que se produce cond, debido a la deducción lógica cond ⊗ (cond ⊕ Com)⊥ ⊥, se elimina el compromiso (cond ⊕ Com)⊥, y por lo tanto se rompe el compromiso de derivar Com. Además, un compromiso condicional rompible se modela como A (1 B), en lugar de A B. Cuando se cumple la condición A, la implicación lineal produce (1 B) y ahora depende de los agentes propietarios la elección interna de si resulta 1 o B. Si el agente elige 1, lo que prácticamente significa que no se deriva nada, entonces el compromiso condicional se rompe deliberadamente. 3.3 Construcción de Protocolo Dado el modelado de varios conceptos de interacción como recurso, acción, capacidad y compromiso, discutiremos cómo se pueden especificar los protocolos. En nuestro marco de trabajo, cada agente está codificado con los recursos, acciones, capacidades, compromisos previos y cualquier compromiso pendiente que tenga. Los compromisos previos, que derivan de los servicios que los agentes son capaces de proporcionar, están designados para ser intercambios justos. En un precompromiso, todos los requisitos de la otra parte se colocan en la parte de la condición y todos los efectos que deben ser proporcionados por el agente propietario se colocan en la parte del compromiso para llegar a un equilibrio. Un diseño de este tipo permite a los agentes proponer libremente compromisos previos a cualquier parte interesada. Un ejemplo de compromisos previos es el de un agente Mercader con respecto a la venta de un bate de cricket: [10$@CC ⊗ pagar m@C 10 $@MM ⊗ bate de cricket@CC ⊗ bate de cricket@M⊥ M]. La condición es que el agente del cliente proporcione 10 dólares, que se asume que es el precio de un bate de cricket, a través de un método de pago. El intercambio es el bate de cricket para el cliente (cricket b@CC) y, por lo tanto, es justo para el comerciante. Los protocolos se especifican en términos de conjuntos de precompromisos en los agentes participantes. Dado ciertos compromisos iniciales de interacción, un protocolo emerge a medida que los agentes razonan sobre qué precompromisos ofrecer y aceptar para cumplir con estos compromisos. Dada una especificación de protocolo como esa, luego discutimos cómo podría tener lugar la interacción. Una interacción puede comenzar con una solicitud o una propuesta. Cuando un agente no puede cumplir algunos compromisos por sí mismo, puede solicitarlos o proponer un precompromiso relevante a un agente apropiado para cumplirlos. La elección de qué compromisos previos dependerá de si dichos compromisos previos pueden producir las fórmulas para cumplir con los compromisos pendientes de los agentes. Cuando un agente recibe una solicitud, busca compromisos previos que juntos puedan producir las fórmulas requeridas de las solicitudes. Los compromisos previos encontrados se utilizarán como propuestas para los agentes solicitantes. De lo contrario, se devolverá un aviso de error. Cuando se recibe una propuesta, el agente receptor también realiza una búsqueda con la inclusión de la propuesta para obtener una prueba de aquellas fórmulas que puedan resolver sus compromisos. Si el resultado de la búsqueda es positivo, la propuesta es aceptada y se convierte en un compromiso. El destinatario luego intenta cumplir las condiciones de los compromisos. De lo contrario, la propuesta es rechazada y no se forma ningún compromiso. A lo largo de la interacción, la búsqueda de pruebas ha desempeñado un papel vital en la construcción del protocolo. La búsqueda de pruebas revela que algunos compromisos no pueden resolverse localmente o que algunos precompromisos pueden ser utilizados para resolver compromisos pendientes, lo que lleva al agente a hacer una solicitud o propuesta respectivamente. La búsqueda de pruebas también determina qué compromisos previos son relevantes para el cumplimiento de una solicitud, lo que ayuda a los agentes a decidir qué compromisos previos proponer para responder a la solicitud. Además, si se recibe una propuesta C The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 127 es relevante para cualquier compromiso pendiente o no, también se determina mediante una búsqueda de pruebas de estos compromisos con la inclusión de la propuesta. Las condiciones de las propuestas pueden resolverse mediante la búsqueda de pruebas, ya que las vincula con los recursos y capacidades actuales de los agentes, así como con los compromisos previos relevantes. Por lo tanto, se puede observar que la búsqueda de pruebas realizada por agentes participantes puede vincular sus respectivos precompromisos y convertirlos en compromisos según corresponda, lo que da lugar a la formación del protocolo. Demostraremos esto a través de nuestro ejemplo en ejecución en la sección 4. 3.4 Los agentes de mensajes interactivos interactúan enviando mensajes. Abordamos la interacción entre agentes en un modelo simple que contiene mensajes de tipo solicitudes, propuestas, aceptación, rechazo y aviso de fallo. Denotamos Origen a Destino: antes de cada mensaje para indicar el origen y destino del mensaje. Por ejemplo, de Cust a Mer: indica que el mensaje es enviado del agente Cust al agente Mer. Los mensajes de solicitud comienzan con la palabra clave SOLICITUD: SOLICITUD + fórmula. Las fórmulas en los mensajes de solicitud son de compromisos. Los mensajes de propuesta van precedidos por PROPUESTA. Las fórmulas son de capacidades. Por ejemplo, α a β: PROPONER Γ Δ es una propuesta del agente α al agente β. Hay mensajes que los agentes utilizan para responder a una propuesta. Los agentes pueden indicar una aceptación: ACEPTAR, o un rechazo: RECHAZAR. Para notar un fallo en el cumplimiento de una solicitud o propuesta, los agentes responden con ese mensaje de solicitud o propuesta seguido de FAIL. 3.5 Generación de Interacciones Como hemos visto, la lógica lineal temporal proporciona un medio elegante para codificar los diversos conceptos de interacción de agentes en un marco de especificación basado en compromisos. La interacción apropiada se genera cuando los agentes negocian sus compromisos previamente especificados para cumplir sus objetivos. La asociación entre compromisos previos en agentes participantes y el monitoreo de compromisos para asegurar que todos sean cumplidos se realiza mediante la búsqueda de pruebas. En la siguiente sección, demostraremos cómo la especificación y generación de interacciones en nuestro marco de trabajo podrían funcionar. 4. Regresamos al escenario de ventas en línea presentado en la Sección 1. 4.1 Especificación del Protocolo Diseñamos un conjunto de compromisos previos y capacidades para implementar el escenario anterior. Para simplificar, nos referimos a ellos como reglas. Mer Mer tiene disponible en todo momento 200 bates de cricket para la venta y puede emitir cotizaciones de venta en cualquier momento: 200 b@M ⊗ σ cotización de venta@M .M M Regla 1: Mer se compromete a ofrecer un bate de cricket (b@M⊥ M ) a Cus (b@CC ) si Cus paga 10 dólares (10$@CC ) ya sea a través de Paypal o tarjeta de crédito. La elección está en Cus. σ [10$@C ⊗ (Pago de Paypal@M ⊕ pago con tarjeta de crédito@MM )C M 10 $@M ⊗ cricket b@C ⊗ cricket b@M⊥ M C M ] Regla 2: Si EBank realiza el pago con tarjeta de crédito a Mer, entonces se cumple el requisito de pago con tarjeta de crédito en Mer: σ [pago con tarjeta de crédito@M pago con tarjeta de crédito@MM ]B Regla 3: Si Ebank informa a Mer de su desaprobación del crédito de Cus, entonces Mer también informará a Cus. σ [crédito no aprobado@M crédito no aprobado@CB ]B Reglas en el agente Ebank Regla 4: Al recibir una cotización de venta de Mer, en el siguiente punto de tiempo, Ebank se compromete a informar a Mer que el crédito de Cus no está aprobado (crédito no aprobado@MB) o a organizar un pago con tarjeta de crédito a Mer (pago con tarjeta de crédito@MB). La decisión depende de la credibilidad de Cus y, por lo tanto, es externa (⊕) a Ebank y Mer: σ [cotización de venta@M (crédito no aprobado@MB) ⊕M pago de crédito@MB] Reglas en el agente Cus. Cus tiene un monto de 50 dólares disponible en todo momento, que puede ser utilizado para el pago con tarjeta de crédito o en efectivo: $50@C. Cus tiene el compromiso de obtener un bate de cricket en algún momento: [bate de cricket@CC]⊥. Regla 5: Cus pagará a Mer a través de Paypal si hay una indicación de EBank de que el crédito de Cus no está aprobado: σ [crédito no aprobado@C Paypal pagado@MM]B 4.2 Descripción de la interacción Cus solicita a Mer un bate de cricket en algún momento. Mer responde con una propuesta en la que cada bate de cricket cuesta 10 dólares. Cus necesita preparar 10 dólares y el pago se puede realizar con tarjeta de crédito o a través de Paypal. Suponiendo que Cus solo paga a través de Paypal si el pago con tarjeta de crédito falla, Cus permitirá que Mer realice cargos con tarjeta de crédito. Mer luego pedirá a EBank que organice un pago a crédito. EBank propone que Mer proporcione un presupuesto de venta y, dependiendo de la credibilidad de Cuss, en el siguiente momento, se organizará un pago a crédito o se informará de una desaprobación del crédito de Cuss. Mer acepta y cumple las condiciones. Si ocurre el primer caso, se realiza el pago del crédito. Si ocurre el segundo caso, el pago con tarjeta de crédito falla, el cliente puede retroceder y optar por pagar a través de Paypal. Una vez que se haya realizado el pago, Mer aplicará su propuesta original para satisfacer la solicitud de Cuss de un bate de cricket y, por lo tanto, eliminar un bate de cricket y agregar 10 dólares a su conjunto de recursos. 4.3 Interacción 1. Cus no puede cumplir con su compromiso de [cricket b@CC]⊥ y, por lo tanto, hace una solicitud al Comerciante: C a M: SOLICITUD [cricket b@CC]⊥ 2. Para cumplir con la solicitud, Mer busca las reglas aplicables. Una aplicación de la regla 1 puede derivar cricket b@C y cricket b@C cricket b@C. Mer propondrá la regla 1C C en un instante de tiempo n1 a Cus como un precompromiso. M a C: PROPONER n1 [10$@C ⊗ (Paypal pagado@M ⊕ crédito pagado@MM )C M 10 $@M ⊗ cricket b@C ⊗ cricket b@M⊥ M ]M C Con un análisis similar, Cus determina que dado el conC 128 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) puede ayudar a derivar su solicitud si se cumplen las condiciones propuestas. Por lo tanto, C a M: ACEPTAR Cus analiza las condiciones de la propuesta aceptada mediante la búsqueda de pruebas. n110$@CC ; n1Pago de Paypal pagado@M o n1Pago con tarjeta de crédito pagado@MM ; -(*)-M n110$@C ⊗ ( n1Pago de Paypal pagado@M ⊕ n1Pago con tarjeta de crédito pagado@MM )C M n1(10$@C ⊗ (Pago de Paypal pagado@M ⊕ pago con tarjeta de crédito pagado@MM ))C M A partir de (*), una forma de satisfacer las condiciones es que Cus derive, en los próximos n1 puntos temporales, 10 dólares ( n1 10$@CC ); y elija pagar a través de Paypal ( n1 Pago de Paypal pagado@MM ) O con pago con tarjeta de crédito ( n1 Pago con tarjeta de crédito pagado@MM ). 3. Derivando n1 10$@C: como Cus tiene 50 dólares, puede hacer uso de 10 dólares: 10 $@C 10$@C n1 10$@C. Hay dos opciones de método de pago, la elección está en manos del agente Cus. Suponemos que Cus prefiere el pago con tarjeta de crédito. 4. Derivando n1 crédito pagado@M: Cus no puede derivar esta fórmula por sí mismo, por lo tanto, hará una solicitud a Mer: C a M: SOLICITUD [ n1 crédito pagado@MM ]⊥ . 5. La regla 2 en Mer es aplicable, pero Mer no puede derivar su condición (n1 pago de crédito @MB). Por lo tanto, Mer hará una solicitud adicional a EBank. Solicitud [n1 pago de crédito @MB]⊥ El banco electrónico busca y encuentra aplicable la regla 4. Debido a que el pago con crédito estará disponible un punto de tiempo después de la aplicación de las reglas B, Ebank propone a Mer una instancia de la regla 4 en los próximos n1-1 puntos de tiempo. De B a M: PROPON n1−1 [cita@MM (crédito no apr@M ⊕ pago de crédito@MB)] B Con un análisis similar, Mer acepta la propuesta. M a B: ACEPTAR La condición de la regla se cumple por Mer como cita@MM n1−1 cita@M. Por lo tanto, Ebank aplica la propuesta M para derivar: n1−1 ( crédito no aprobado@M ⊕ pago de crédito@MB ). B ⊕ indica que la elección es externa para ambos agentes. Hay dos casos, el crédito de Cuss es aprobado o desaprobado. Para simplificar, mostramos solo el caso en el que se aprueba el crédito de Cuss. En el siguiente punto de tiempo (n1-1), n1−1 (crédito no apr@MB ⊕ pago de crédito@MB) se convierte en n1−1 pago de crédito@M n1 pago de crédito@M .B B Como resultado, en los próximos puntos de tiempo n1, Ebank organizará el pago del crédito. 7. Mer cumple con la solicitud inicial de Cuss. Cuando se deriva cualquiera de n1 Paypal pagado@M (si el cliente paga a través de PayPal) o n1 crédito pagado@M (si el cliente paga con tarjeta de crédito)M, también se deriva n1 (pago con tarjeta de crédito@M ⊕ Paypal pagado@MM), por lo tanto, se organiza el método de pago. Junto con la otra condición 10$@C siendo satisfecha, esto permite que la propuesta inicial sea aplicada por Mer para derivar n1 cricket b@CC y un compromiso de n1 cricket b@M⊥ M para Mer, lo cual también es resuelto por el recurso cricket b@MM disponible en Mer. Cualquier valor de n1 tal que n1 − 1 ≥ 0 ⇔ n1 ≥ 1 permitirá a Mer cumplir la solicitud inicial de Cuss de [ cricket b@CC ]⊥. La interacción finaliza una vez que todos los compromisos han sido resueltos. 4.4 Flexibilidad. La flexibilidad deseada se ha logrado en el ejemplo. Es decisión de Cuss proceder con el método de pago preferido. Además, se representa fielmente el no determinismo de si se desaprueba el crédito de Cuss o se realiza el pago del crédito a Mer. Si ocurre una excepción y el crédito de Cuss no es aprobado, se produce un crédito no aprobado y B Cus puede retroceder para pagar a través de Paypal. La regla 5 se utilizará entonces para permitir que Cus maneje la excepción pagando a través de Paypal. Además, para especificar que realizar pagos y enviar bates de cricket pueden ser en cualquier orden, podemos agregar delante del método de pago en la regla 1 de la siguiente manera: σ [10$@C ⊗ (Paypal pagado@M ⊕ crédito pagado@MM )C M 10 $@M ⊗ bate de cricket@C ⊗ bate de cricket@M⊥ M ].M C Esta adición en la condición de la regla significa que el momento del pago puede ser en cualquier momento hasta la elección del cliente, siempre y cuando el cliente pague y, por lo tanto, el orden de tiempo entre realizar pagos y enviar bienes se vuelve flexible. 5. PROBLEMAS DE CODIFICACIÓN 5.1 Ventajas del marco de trabajo TLL Nuestro marco de trabajo TLL ha demostrado una especificación natural y expresiva de los protocolos de interacción de agentes. La implicación lineal expresa una relación causal, lo que hace natural modelar una eliminación o un consumo, especialmente de recursos, junto con sus consecuencias. Por lo tanto, en nuestro marco de trabajo, la transformación de recursos se modela como una implicación lineal de los recursos consumidos a los recursos producidos. La reubicación de recursos se modela como una implicación lineal de un recurso en un agente a ese recurso en el otro agente. La implicación lineal también garantiza que el cumplimiento de las condiciones de un compromiso condicional hará que los compromisos ocurran. Además, las actualizaciones de estado de los agentes resultan de una implicación lineal del estado anterior al estado actual. Los operadores temporales (, y ) y sus combinaciones ayudan a especificar el tiempo de las acciones, la disponibilidad de recursos y expresan el orden temporal de los eventos. Particularmente, los puntos de tiempo precisos se describen mediante el uso del operador o múltiples copias de él. Basándose en esta capacidad para especificar puntos de tiempo correctos para acciones o eventos, también se puede capturar el orden temporal o secuenciación de los mismos. Además, se simula un sentido de duración al distribuir copias de las fórmulas de recursos o acciones en múltiples puntos temporales adyacentes. Además, la incertidumbre en el tiempo puede ser representada y razonada mediante el uso de "or" y sus combinaciones con "and". "Or" puede ser utilizado para expresar el no determinismo externo mientras que "and" expresa el no determinismo interno. Estas propiedades temporales de los recursos, acciones y eventos son correctamente respetadas a lo largo del proceso de razonamiento del agente basado en reglas de cálculo de secuentes. Además, la centralidad de la noción de compromiso en la interacción de agentes ha sido reconocida en muchos marcos [11, 12, 1, 10, 4]. Sin embargo, según nuestro mejor conocimiento, modelar compromisos directamente en el nivel proposicional de una lógica consciente de recursos y del tiempo como TLL es The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) fue investigada por primera vez en nuestro marco de trabajo. Nuestro marco de trabajo modela compromisos base como fórmulas negativas y compromisos condicionales a través del uso de implicación lineal y/o fórmulas negativas. La modelización de compromisos tiene una serie de ventajas: los compromisos se representan directamente en el nivel de la lógica proposicional o a través de un conectivo lógico en lugar de un constructo no lógico como [11], lo que hace que el tratamiento de los compromisos sea más natural y sencillo y permite utilizar sistemas de búsqueda de pruebas fácilmente disponibles, como el cálculo de secuentes para manejar los compromisos. Las conectivas lógicas existentes como ⊗, , ⊕, también están fácilmente disponibles para describir las relaciones entre compromisos. El cumplimiento de los compromisos se convierte entonces en derivar las fórmulas positivas correspondientes o las fórmulas de condición, lo que simplemente se reduce a una tarea de búsqueda de pruebas. Además, dado las fórmulas requeridas, el cumplimiento de compromisos puede ser implementado fácilmente y automáticamente como deducción (com ⊗ com⊥ ⊥). La aplicación de compromisos también es interna y simplemente se implementa a través de la suposición de que los agentes están motivados para eliminar todas las fórmulas negativas para los compromisos base y mediante el uso de la implicación lineal para los compromisos condicionales. En cuanto a hacer más flexible la especificación del protocolo, nuestro enfoque ha señalado varios puntos significativos. En primer lugar, la flexibilidad de las especificaciones del protocolo en nuestro marco proviene del poder expresivo de los conectivos de TLL. y ⊕ se refieren a las elecciones internas y externas de los agentes sobre recursos y acciones, mientras que y se refieren a las elecciones internas y externas en el dominio del tiempo. Dado que la flexibilidad incluye la capacidad de tomar una elección sensata, tener las opciones expresadas explícitamente en la especificación de los protocolos de interacción brinda a los agentes la oportunidad de razonar sobre las elecciones correctas durante la interacción y, por lo tanto, explorar la flexibilidad en ellas. En segundo lugar, en lugar de ser secuencias de acciones interactivas, los protocolos se estructuran en compromisos, los cuales son más abstractos que las acciones del protocolo. La ejecución de los protocolos se basa en cumplir compromisos. Por lo tanto, se eliminan las restricciones innecesarias sobre qué acciones interactivas particulares ejecutar por qué agentes y en qué orden entre ellas, lo cual es un avance hacia la flexibilidad en comparación con enfoques tradicionales. Por otro lado, en presencia de cambios introducidos externamente, los agentes tienen la libertad de explorar nuevos conjuntos de acciones interactivas o saltarse algunas acciones interactivas siempre y cuando sigan cumpliendo con los compromisos de los protocolos. Esto aporta más flexibilidad al nivel general de los comportamientos interactivos de los agentes, y por lo tanto al protocolo. En tercer lugar, el protocolo se especifica de manera declarativa esencialmente como conjuntos de compromisos previos en cada uno de los agentes participantes. Para lograr objetivos, los agentes utilizan el razonamiento basado en el cálculo de secuentes TLL para construir pruebas de objetivos a partir de precompromisos y fórmulas de estado. Esto básicamente otorga a los agentes autonomía en la utilización de compromisos previos y, por lo tanto, los agentes pueden adaptar las formas en que los utilizan para hacer frente de manera flexible a entornos cambiantes. En particular, dado que la construcción de pruebas por parte de los agentes selecciona una secuencia de precompromisos para la interacción, poder seleccionar entre todas las posibles combinaciones de precompromisos en la búsqueda de pruebas brinda más oportunidades y flexibilidad que seleccionar solo entre unas pocas secuencias fijas y predefinidas. Entonces también es más probable que permita a los agentes manejar excepciones o explorar oportunidades que surjan. Además, dado que el orden real de los compromisos previos está determinado por el proceso de construcción de la prueba en lugar de estar predefinido, los agentes pueden cambiar flexiblemente el orden para adaptarse a nuevas situaciones. En cuarto lugar, los cambios en el entorno pueden considerarse como la eliminación o adición de fórmulas al estado de fórmulas. Debido a que la construcción de la prueba por parte de los agentes tiene en cuenta las fórmulas del estado actual al seleccionar los precompromisos, los cambios en las fórmulas del estado se verán reflejados en la elección de qué precompromisos relevantes seguir. Por lo tanto, los agentes tienen flexibilidad para decidir qué hacer para enfrentar los cambios. Por último, la especificación de protocolos en nuestro marco de trabajo tiene un enfoque modular que agrega facilidad y flexibilidad al proceso de diseño de protocolos. Los protocolos se especifican colocando un conjunto de compromisos previos en cada agente participante de acuerdo a sus roles. Cada precompromiso puede ser especificado como un proceso en sí mismo con fórmulas de condición como entrada y fórmulas de partes de compromiso como salida. La ejecución de cada compromiso condicional es un hilo relativamente independiente y están vinculados entre sí por la búsqueda de pruebas para cumplir los compromisos de los agentes. Como resultado, con un diseño de precompromisos de este tipo, se puede agregar o quitar un precompromiso sin interferir con los demás y, por lo tanto, lograr un diseño modular de los protocolos. 5.2 Limitaciones del marco de trabajo TLL en la modelización. Dado que todos los operadores temporales en TLL se refieren a puntos temporales concretos, no podemos expresar duraciones de tiempo fielmente. Una de las principales desventajas de simular la duración de un evento al distribuir copias de ese evento en puntos de tiempo adyacentes A⊗ 10 continuamente (como A⊗ 2... A) es que requiere que se proporcione explícitamente el rango de tiempo. Por lo tanto, una noción como "hasta" no puede ser expresada de forma natural en TLL. Los compromisos de los agentes pueden entrar en conflicto, especialmente cuando resolver todos ellos requiere más recursos o acciones de los que los agentes tienen. Nuestro trabajo no ha abarcado el manejo de compromisos que están en conflicto. Otro aspecto problemático de este enfoque es que las reglas de interacción requieren un conocimiento detallado de las fórmulas de la lógica lineal temporal. Claramente sería beneficioso contar con una herramienta basada en la visualización similar a los diagramas UML que permitiría a los no expertos especificar las reglas apropiadas sin necesidad de aprender los detalles de las fórmulas mismas. CONCLUSIONES Y TRABAJOS FUTUROS Este artículo utiliza TLL para especificar protocolos de interacción. En particular, TLL se utiliza para modelar el concepto de recurso, capacidad, precompromiso y compromiso con una integración estrecha, así como sus manipulaciones en relación con el tiempo. Los agentes luego utilizan técnicas de búsqueda de pruebas para llevar a cabo las interacciones deseadas. En particular, el enfoque permite que las especificaciones de protocolo capturen el significado de las acciones interactivas a través de compromisos, para capturar las elecciones internas y externas de los agentes sobre recursos, compromisos y sobre el tiempo, así como los procesos de actualización. El mecanismo de construcción de pruebas 130 de la Sexta Conferencia Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) proporciona a los agentes la capacidad de seleccionar dinámicamente compromisos previos apropiados, y por lo tanto, ayuda a los agentes a ganar flexibilidad en la elección de acciones interactivas más adecuadas y en el orden de las mismas, teniendo en cuenta los cambios en curso en el entorno. Muchos otros enfoques para modelar protocolos también utilizan el concepto de compromiso para darle más significado a las acciones interactivas de los agentes. Los enfoques basados en máquinas de compromiso [11, 12, 10, 1] enfrentan una serie de problemas. Estos enfoques utilizan sistemas lógicos que tienen limitaciones en su capacidad de expresión para modelar recursos. Además, al crear una capa abstracta adicional de compromisos, se generan más tareas en consecuencia. En particular, debe existir un mapeo diseñado por humanos entre las acciones del protocolo y las operaciones en los compromisos, así como entre las variables de control (fluentes) y las fases de logro del compromiso. Además, deben existir mecanismos externos para comprender y manejar las operaciones y resolución de compromisos, así como para hacer cumplir la noción de compromiso en sus representaciones de tipo de datos abstractos. Esto requiere otra ejecución en la capa de compromiso en conjunto con la ejecución real del protocolo. No solo estas tareas adicionales crean una sobrecarga, sino que también hacen que la especificación y ejecución de los protocolos sean más propensas a errores. Trabajos similares en [8] y [9] exploran las ventajas de la lógica lineal y TLL respectivamente, utilizando técnicas de deducción parcial para ayudar a los agentes a descubrir las capacidades o recursos faltantes y, basándose en eso, negociar con otros agentes sobre estrategias de cooperación. Nuestro enfoque difiere al incorporar el concepto de compromiso en la modelización de la interacción, y al proporcionar un mapa más natural y detallado para especificar la interacción, especialmente en lo que respecta a las elecciones, el tiempo y la actualización utilizando el TLL proposicional completo. Además, hacemos hincapié en el uso de precompromisos como reglas de interacción con un conjunto completo de reglas de inferencia de TLL para proporcionar las ventajas de la construcción de pruebas en la consecución de una interacción flexible. Nuestro trabajo futuro incluirá el uso de TLL para verificar varias propiedades de los protocolos de interacción, como la vivacidad y la seguridad. Además, investigaremos el desarrollo de un mecanismo de ejecución para tales especificaciones TLL en nuestro marco de trabajo. Agradecimientos Estamos muy agradecidos a Michael Winikoff por sus muchas discusiones estimulantes y útiles sobre este material. También queremos agradecer el apoyo del Consejo de Investigación Australiano bajo la subvención DP0663147. REFERENCIAS [1] A. K. Chopra y M. P. Singh. Protocolo de compromiso contextualizando. En AAMAS 06: Actas de la quinta conferencia internacional conjunta sobre agentes autónomos y sistemas multiagente, páginas 1345-1352, Nueva York, NY, EE. UU., 2006. ACM Press. [2] E. A. Emerson. 

ACM Press. [2] E. A. Emerson. Lógica temporal y modal. Manual de Ciencias de la Computación Teórica, B, Capítulo 16:995-1072, 1990. [3] J.-Y. I'm sorry, but "Girard" is not a sentence. Could you please provide a sentence for me to translate into Spanish? Lógica lineal. Ciencia de la Computación Teórica, 50:1-102, 1987. [4] A. Haddadi. Comunicación y Cooperación en Sistemas de Agentes: una teoría pragmática. Springer-Verlag, Berlín Heidelberg, 1995. [5] J. Harland y M. Winikoff. La negociación del agente como búsqueda de prueba en lógica lineal. En AAMAS 02: Actas de la primera conferencia internacional conjunta sobre agentes autónomos y sistemas multiagente, páginas 938-939, Nueva York, NY, EE. UU., 2002. ACM Press. [6] T. Hirai. 

ACM Press. [6] T. Hirai. Lógica Lineal Temporal y sus Aplicaciones. Tesis doctoral, Escuela de Posgrado de Ciencia y Tecnología, Universidad de Kobe, 2000. [7] N. R. Jennings. Compromisos y convenciones: La base de la coordinación en sistemas multiagentes. La revisión de Ingeniería del Conocimiento, 8(3):223-250, 1993. [8] P. K¨ungas. Lógica lineal, deducción parcial y resolución cooperativa de problemas. En J. A. Leite, A. Omicini, L. Sterling y P. Torroni, editores, Lenguajes y Tecnologías de Agentes Declarativos, Primer Taller Internacional, DALT 2003. Melbourne, Victoria, 15 de julio de 2003. Notas del taller, páginas 97-112, 2003. [9] P. K¨ungas. Lógica lineal temporal para la negociación simbólica de agentes. Apuntes de conferencia en Inteligencia Artificial, 3157:23-32, 2004. [10] M. Venkatraman y M. P. Singh. Verificando el cumplimiento de los protocolos de compromiso. Agentes Autónomos y Sistemas Multiagente, 2(3):217-236, 1999. [11] P. Yolum y M. P. Singh. Máquinas de compromiso. En Actas del 8º Taller Internacional sobre Teorías, Arquitecturas e Idiomas de Agentes (ATAL-01), páginas 235-247. Springer-Verlag, 2002. [12] P. Yolum y M. P. Singh. Especificación y ejecución flexible del protocolo: aplicando la planificación del cálculo de eventos utilizando compromisos. En AAMAS 02: Actas de la primera conferencia internacional conjunta sobre agentes autónomos y sistemas multiagente, páginas 527-534, Nueva York, NY, EE. UU., 2002. ACM Press. APÉNDICE A. REGLAS SECUENCIALES TEMPORALES PARA TLL A, Γ Δ !Γ, Δ A, Λ, ?Σ A, Γ Δ L !Γ, Δ A, Λ, ?Σ R !Γ, Δ, A Λ, ?Σ Γ A.Δ !Γ, Δ, A Λ, ?Σ L Γ A, Δ R !Γ, Δ, Ξ A, Φ, Λ, ?Π !Γ, Δ, Ξ A, Φ, Λ, ?Π !Γ, Δ, Ξ, A Φ, Λ, ?Π !Γ, Δ, Ξ, A Φ, Λ, ?Π !Γ, Δ, Ξ Φ, Λ, ?Π !Γ, Δ, Ξ Φ, Λ, ?Π → La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 131