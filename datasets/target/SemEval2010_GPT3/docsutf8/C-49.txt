Evaluación de protocolos de enrutamiento oportunista con trazas de contacto realistas y extensas. Libo Song y David F. Kotz. Instituto de Estudios de Tecnología de Seguridad (ISTS), Departamento de Ciencias de la Computación, Dartmouth College, Hanover, NH, EE. UU. 03755. RESUMEN Los protocolos de enrutamiento tradicionales de redes móviles ad-hoc (MANET) asumen que existen rutas de comunicación de extremo a extremo contemporáneas entre los emisores y receptores de datos. En algunas redes móviles ad-hoc con una población de nodos dispersa, la ruta de comunicación de extremo a extremo puede romperse con frecuencia o puede no existir en ningún momento. Se han propuesto muchos protocolos de enrutamiento en la literatura para abordar el problema, pero pocos han sido evaluados en un entorno realista de redes oportunísticas. Utilizamos simulación y trazas de contacto (derivadas de registros en una red de producción) para evaluar y comparar cinco protocolos existentes: entrega directa, epidémico, aleatorio, PRoPHET y Estado de Enlace, así como nuestro propio protocolo de enrutamiento propuesto. Mostramos que los protocolos de entrega directa y enrutamiento epidémico sufren de baja tasa de entrega o alto uso de recursos, y otros protocolos hacen concesiones entre la tasa de entrega y el uso de recursos. Categorías y Descriptores de Asignaturas C.2.4 [Organización de Sistemas Informáticos]: Redes de Comunicación de Computadoras-Sistemas Distribuidos Términos Generales Rendimiento, Diseño 1. Las redes móviles oportunísticas son un tipo de red tolerante a retrasos (DTN, por sus siglas en inglés) [6]. Las redes tolerantes a retrasos proporcionan servicio a pesar de largos retrasos en los enlaces o frecuentes cortes de enlaces. Los largos retrasos en la comunicación ocurren en redes con nodos ubicados a gran distancia, como en las redes interplanetarias [2]. Las interrupciones de enlace son causadas por nodos que se mueven fuera de rango, cambios ambientales, interferencia de otros objetos en movimiento, apagones de radio o nodos fallidos. Para nosotros, las redes oportunísticas móviles son aquellas DTNs con una población de nodos dispersa y cortes frecuentes en las conexiones causados por apagados de energía y la movilidad de los nodos. Las redes oportunísticas móviles han recibido un interés creciente por parte de los investigadores. En la literatura, estas redes incluyen redes de sensores móviles [25], redes de seguimiento de animales salvajes [11], redes de conmutación de bolsillo [8] y redes de transporte [1, 14]. Esperamos ver más redes oportunísticas cuando el proyecto de un portátil por niño (OLPC) comience a distribuir laptops económicas con capacidad de conexión inalámbrica para niños en países en desarrollo, donde a menudo no existe infraestructura. La red oportunista es un enfoque prometedor para que esos niños intercambien información. Uno de los problemas fundamentales en las redes oportunísticas es cómo dirigir los mensajes desde su origen hasta su destino. Las redes oportunísticas móviles difieren de Internet en que las desconexiones son la norma en lugar de la excepción. En las redes oportunísticas móviles, los dispositivos de comunicación pueden ser transportados por personas [4], vehículos [1] o animales [11]. Algunos dispositivos pueden formar una pequeña red ad-hoc móvil cuando los nodos se acercan entre sí. Pero un nodo puede estar frecuentemente aislado de otros nodos. Se debe tener en cuenta que los protocolos de enrutamiento tradicionales de Internet y los protocolos de enrutamiento ad-hoc, como AODV [20] o DSDV [19], asumen que existe un camino de extremo a extremo contemporáneo, por lo que fallan en redes móviles oportunísticas. De hecho, puede que nunca exista un camino de extremo a extremo entre dos dispositivos dados. En este documento, estudiamos protocolos para el enrutamiento de mensajes entre dispositivos de redes inalámbricas transportados por personas. Suponemos que las personas envían mensajes a otras personas ocasionalmente, utilizando sus dispositivos; cuando no existe un enlace directo entre la fuente y el destino del mensaje, otros nodos pueden retransmitir el mensaje al destino. Cada dispositivo representa a una persona única (está fuera del alcance de este documento cuando un dispositivo puede ser utilizado por varias personas). Cada mensaje está destinado a una persona específica y, por lo tanto, a un nodo específico llevado por esa persona. Aunque una persona pueda llevar varios dispositivos, asumimos que el remitente sabe cuál es el mejor dispositivo para recibir el mensaje. No consideramos la multidifusión ni la geodifusión en este documento. Se han propuesto muchos protocolos de enrutamiento en la literatura. Pocos de ellos fueron evaluados en entornos de red realistas, o incluso en simulaciones realistas, debido a la falta de un modelo realista de movilidad de personas. Los modelos de movilidad de caminata aleatoria o de punto de destino aleatorio se utilizan frecuentemente para evaluar el rendimiento de esos protocolos de enrutamiento. Aunque estos modelos de movilidad sintéticos han recibido un amplio interés por parte de los investigadores de redes móviles ad hoc [3], no reflejan los patrones de movilidad de las personas [9]. Reconociendo las limitaciones de utilizar modelos de movilidad aleatoria en simulaciones, algunos investigadores han estudiado protocolos de enrutamiento en redes móviles oportunísticas con trazas de movilidad realistas. Chaintreau et al. [5] analizaron teóricamente el impacto de los algoritmos de enrutamiento sobre un modelo derivado de un conjunto de datos de movilidad realista. Su et al. [22] simularon un conjunto de 35 protocolos de enrutamiento en una pequeña red experimental. Esos estudios ayudan a los investigadores a comprender mejor los límites teóricos de las redes oportunísticas y el rendimiento del protocolo de enrutamiento en una red pequeña (20-30 nodos). Desplegar y experimentar redes oportunísticas móviles a gran escala es difícil, por lo que también recurrimos a la simulación. En lugar de utilizar un modelo de movilidad complejo para imitar los patrones de movilidad de las personas, utilizamos trazas de movilidad recopiladas en una red inalámbrica de producción en Dartmouth College para impulsar nuestra simulación. Nuestro modelo de generación de mensajes, sin embargo, era sintético. Hasta donde sabemos, somos los primeros en simular el efecto de los protocolos de enrutamiento en una red oportunista móvil a gran escala, utilizando trazas de contacto realistas derivadas de trazas reales de una red de producción con más de 5,000 usuarios. Usando trazas de contacto realistas, evaluamos el rendimiento de tres protocolos de enrutamiento ingenuos (entrega directa, epidémico y aleatorio) y dos protocolos de enrutamiento basados en predicción, PRoPHET [16] y Link-State [22]. También proponemos un nuevo protocolo de enrutamiento basado en predicciones y lo comparamos con el anterior en nuestra evaluación. 2. PROTOCOLO DE ENRUTAMIENTO Un protocolo de enrutamiento está diseñado para reenviar mensajes desde un nodo (origen) a otro nodo (destino). Cualquier nodo puede generar mensajes para cualquier otro nodo, y puede llevar mensajes destinados a otros nodos. En este documento, consideramos solo mensajes que son unicast (un solo destino). Los protocolos de enrutamiento DTN podrían describirse en parte por su probabilidad de transferencia y probabilidad de replicación; es decir, cuando un nodo se encuentra con otro nodo, ¿cuál es la probabilidad de que un mensaje deba ser transferido y, de ser así, si el remitente debe conservar su copia? Dos extremos son el protocolo de entrega directa y el protocolo epidémico. El antiguo transfiere con probabilidad 1 cuando el nodo se encuentra con el destino, 0 para los demás, y sin replicación. El último utiliza una probabilidad de transferencia de 1 para todos los nodos y replicación ilimitada. Ambos protocolos tienen sus ventajas y desventajas. Todos los demás protocolos se encuentran entre los dos extremos. Primero, definimos la noción de contacto entre dos nodos. Luego describimos cinco protocolos existentes antes de presentar nuestra propia propuesta. Un contacto se define como un período de tiempo durante el cual dos nodos tienen la oportunidad de comunicarse. Aunque somos conscientes de que las tecnologías inalámbricas difieren, asumimos que un nodo puede detectar de manera confiable el inicio y fin de un contacto con nodos cercanos. Un nodo puede estar en contacto con varios otros nodos al mismo tiempo. La historia de contactos de un nodo es una secuencia de contactos con otros nodos. El nodo i tiene un historial de contactos Hi(j), para cada otro nodo j, que denota los contactos históricos entre el nodo i y el nodo j. Registramos la hora de inicio y fin de cada contacto; sin embargo, los últimos contactos en el historial de contactos de los nodos pueden no haber finalizado. 2.1 Protocolo de Entrega Directa En este protocolo simple, un mensaje se transmite solo cuando el nodo fuente puede comunicarse directamente con el nodo destino del mensaje. En las redes móviles oportunísticas, sin embargo, la probabilidad de que el remitente se encuentre con el destino puede ser baja, o incluso cero. Protocolo de enrutamiento epidémico El protocolo de enrutamiento epidémico [23] difunde mensajes en la red. El nodo fuente envía una copia del mensaje a cada nodo que encuentra. Los nodos que reciben una copia del mensaje también envían una copia del mensaje a cada nodo que encuentran. Finalmente, una copia del mensaje llega al destino del mensaje. Este protocolo es simple, pero puede utilizar recursos significativos; una comunicación excesiva puede agotar rápidamente la batería de cada nodo. Además, dado que cada nodo guarda una copia de cada mensaje, el almacenamiento no se utiliza de manera eficiente y la capacidad de la red es limitada. Como mínimo, cada nodo debe expirar los mensajes después de cierto tiempo o dejar de reenviarlos después de un número determinado de saltos. Después de que un mensaje caduque, el mensaje no será transmitido y será eliminado del almacenamiento de cualquier nodo que tenga el mensaje. Una optimización para reducir el costo de comunicación es transferir mensajes de índice antes de transferir cualquier mensaje de datos. Los mensajes de índice contienen los IDs de los mensajes que un nodo tiene actualmente. Por lo tanto, al examinar los mensajes de índice, un nodo solo transfiere mensajes que aún no están contenidos en los otros nodos. 2.3 Enrutamiento Aleatorio Un enfoque obvio entre los dos extremos anteriores es seleccionar una probabilidad de transferencia entre 0 y 1 para reenviar mensajes en cada contacto. Utilizamos una estrategia de replicación simple que permite que solo el nodo fuente haga réplicas y limita la replicación a un número específico de copias. El mensaje tiene alguna posibilidad de ser transferido a un nodo altamente móvil, y por lo tanto puede tener una mejor oportunidad de llegar a su destino antes de que el mensaje expire. El Protocolo PRoPHET 2.4 PRoPHET es un Protocolo de Enrutamiento Probabilístico que utiliza el Historial de Encuentros pasados y la Transitividad para estimar la probabilidad de entrega de cada nodo para cada otro nodo. Cuando el nodo i se encuentra con el nodo j, la probabilidad de entrega del nodo i para j se actualiza mediante pij = (1 − pij)p0 + pij, donde p0 es una probabilidad inicial, un parámetro de diseño para una red dada. Lindgren et al. [16] eligieron 0.75, al igual que nosotros en nuestra evaluación. Cuando el nodo i no se comunica con j durante algún tiempo, la probabilidad de entrega disminuye según pij = αk pij, donde α es el factor de envejecimiento (α < 1), y k es el número de unidades de tiempo desde la última actualización. El protocolo PRoPHET intercambia mensajes de índice así como probabilidades de entrega. Cuando el nodo i recibe las probabilidades de entrega del nodo j, el nodo i puede calcular la probabilidad de entrega transitiva a través de j a z con piz = piz + (1 − piz)pijpjzβ, donde β es un parámetro de diseño para el impacto de la transitividad; utilizamos β = 0.25 como lo hizo Lindgren [16]. Protocolo de Estado de Enlace 2.5 Su et al. [22] utilizan un enfoque de estado de enlace para estimar el peso de cada ruta desde la fuente de un mensaje hasta el destino. Utilizan la duración mediana entre contactos o la duración de contacto envejecida exponencialmente como peso en los enlaces. La duración de interacción exponencialmente envejecida entre los nodos i y j se calcula mediante wij = αwij + (1 − α)I, donde I es la nueva duración de interacción y α es el factor de envejecimiento. Los nodos comparten sus pesos de estado de enlace cuando pueden comunicarse entre sí, y los mensajes se reenvían al nodo que tiene la ruta con el peso de estado de enlace más bajo. PROBABILIDAD DE CONTACTO OPORTUNO También utilizamos la información de contacto histórica para estimar la probabilidad de encontrarse con otros nodos en el futuro. Pero nuestro método difiere en que estimamos la probabilidad de contacto dentro de un período de tiempo. Por ejemplo, ¿cuál es la probabilidad de contacto en la próxima hora? Ni PRoPHET ni Link-State consideran el tiempo de esta manera. Una forma de estimar la probabilidad de contacto oportuno es utilizar la proporción de la duración total del contacto al tiempo total. Sin embargo, este enfoque no captura la frecuencia de los contactos. Por ejemplo, un nodo puede tener un contacto prolongado con otro nodo, seguido de un largo período sin contacto. Un tercer nodo puede tener un breve contacto con el primer nodo, seguido de un breve período sin contacto. Utilizando el enfoque de estimación anterior, ambos ejemplos tendrían una probabilidad de contacto similar. En el segundo ejemplo, sin embargo, los dos nodos tienen contactos más frecuentes. Diseñamos un método para capturar la frecuencia de contacto de los nodos móviles. Para este propósito, asumimos que incluso los contactos breves son suficientes para intercambiar mensajes. La probabilidad de que el nodo i se encuentre con el nodo j se calcula mediante el siguiente procedimiento. Dividimos el historial de contactos Hi(j) en una secuencia de n períodos de ΔT comenzando desde el tiempo de inicio (t0) del primer contacto en el historial Hi(j) hasta el tiempo actual. Numeramos cada uno de los n períodos del 0 al n − 1, luego verificamos cada período. Si el nodo i tuvo algún contacto con el nodo j durante un período dado m, que es [t0 + mΔT, t0 + (m + 1)ΔT), establecemos el estado de contacto Im en 1; de lo contrario, el estado de contacto Im es 0. La probabilidad p (0) ij de que el nodo i se encuentre con el nodo j en el próximo ΔT se puede estimar como el promedio del estado de contacto en intervalos anteriores: p (0) ij = 1 n n−1X m=0 Im. Para adaptarse al cambio de patrones de contacto y reducir el espacio de almacenamiento para historiales de contacto, un nodo puede descartar contactos antiguos; en esta situación, la estimación se basaría solo en el historial retenido. La probabilidad anterior es la probabilidad de contacto directo entre dos nodos. También estamos interesados en la probabilidad de que podamos pasar un mensaje a través de una secuencia de k nodos. Definimos la probabilidad de orden k de forma inductiva, p (k) ij = p (0) ij + X α p (0) iα p (k−1) αj , (6) donde α es cualquier nodo distinto de i o j. 3.1 Nuestro Protocolo de Enrutamiento Primero consideramos el caso de un camino de dos saltos, es decir, con solo un nodo de retransmisión. Consideramos dos enfoques: o bien el vecino receptor decide si actuar como relé, o la fuente decide qué vecinos utilizar como relé. 3.1.1 Decisión del Receptor Cada vez que un nodo se encuentra con otros nodos, intercambian todos sus mensajes (o como se mencionó anteriormente, mensajes de índice). Si el destino de un mensaje es el receptor mismo, el mensaje se entrega. De lo contrario, si la probabilidad de entregar el mensaje a su destino a través de este nodo receptor dentro de ΔT es mayor o igual a un cierto umbral, el mensaje se almacena en el almacenamiento de los receptores para reenviarlo. En nuestra simulación, sin embargo, modelamos con precisión los costos de comunicación y algunos contactos breves no lograrán transferir todos los mensajes al destino. Si la probabilidad es menor que el umbral, el receptor descarta el mensaje. Observa que nuestro protocolo replica el mensaje cada vez que aparece un relé atractivo. 3.1.2 Decisión del remitente Para tomar decisiones, un remitente debe tener la información sobre la probabilidad de contacto de sus vecinos con el destino de un mensaje. Por lo tanto, el intercambio de metadatos es necesario. Cuando dos nodos se encuentran, intercambian un meta-mensaje que contiene una lista desordenada de IDs de nodos para los cuales el remitente del meta-mensaje tiene una probabilidad de contacto mayor que el umbral. Después de recibir un meta-mensaje, un nodo verifica si tiene algún mensaje destinado a su vecino, o a un nodo en la lista de nodos del meta-mensaje de los vecinos. Si lo tiene, envía una copia del mensaje. Cuando un nodo recibe un mensaje, si el destino del mensaje es el receptor mismo, el mensaje es entregado. De lo contrario, el mensaje se almacena en el almacenamiento del receptor para reenviarlo al destino. 3.1.3 Relevador de múltiples nodos Cuando utilizamos más de dos saltos para retransmitir un mensaje, cada nodo necesita conocer las probabilidades de contacto a lo largo de todos los caminos posibles hacia el destino del mensaje. Cada nodo mantiene una matriz de probabilidad de contacto, en la que cada celda pij es una probabilidad de contacto entre los nodos i y j. Cada nodo i calcula sus propias probabilidades de contacto (fila i) con otros nodos utilizando la Ecuación (5) cada vez que el nodo finaliza un contacto con otros nodos. Cada fila de la matriz de probabilidad de contacto tiene un número de versión; el número de versión de la fila i solo se incrementa cuando el nodo i actualiza las entradas de la matriz en la fila i. Otras entradas de la matriz se actualizan mediante intercambio con otros nodos cuando se encuentran. Cuando dos nodos i y j se encuentran, primero intercambian sus matrices de probabilidad de contacto. El nodo i compara su propia matriz de contactos con la matriz del nodo j. Si la matriz de Node.js tiene una fila l con un número de versión más alto, entonces el nodo i reemplaza su propia fila l con la fila l de Node.js. De la misma manera, el nodo j actualiza su matriz. Después del intercambio, los dos nodos tendrán matrices de probabilidad de contacto idénticas. A continuación, si un nodo tiene un mensaje para reenviar, el nodo estima la probabilidad de contacto de orden-k de sus nodos vecinos para contactar al destino del mensaje utilizando la Ecuación (6). Si p(k)ij está por encima de un umbral, o si j es el destino del mensaje, el nodo i enviará una copia del mensaje al nodo j. Todo el esfuerzo anterior sirve para determinar la probabilidad de transferencia cuando dos nodos se encuentran. La decisión de replicación es ortogonal a la decisión de transferencia. En nuestra implementación, siempre replicamos. Aunque PRoPHET [16] y Link-State [22] no realizan replicación, como se describe, agregamos replicación a esos protocolos para una mejor comparación con nuestro protocolo. 4. RESULTADOS DE LA EVALUACIÓN Evaluamos y comparamos los resultados de los protocolos de enrutamiento de entrega directa, epidémico, aleatorio, PRoPHET, estado de enlace y contacto oportuno. 4.1 Rastros de movilidad Utilizamos datos reales de movilidad recopilados en Dartmouth College. El Dartmouth College ha recopilado mensajes de asociación y desasociación de dispositivos en su red inalámbrica de usuarios inalámbricos desde la primavera de 2001. Cada mensaje registra la dirección MAC de la tarjeta inalámbrica, el momento de asociación/desasociación y el nombre del punto de acceso. Tratamos cada dirección MAC única como un nodo. Para obtener más información sobre la red de Dartmouth y la recopilación de datos, consulte estudios anteriores [7, 12]. Nuestros datos no son contactos en una red ad-hoc móvil. Podemos aproximar las trazas de contacto asumiendo que dos usuarios pueden comunicarse entre sí siempre que estén asociados al mismo punto de acceso. Chaintreau et al. [5] utilizaron trazas de datos de Dartmouth y realizaron la misma suposición para analizar teóricamente el impacto de la movilidad humana en los algoritmos de reenvío oportunista. Esta suposición puede que no sea precisa, pero es una buena primera aproximación. En nuestra simulación, imaginamos los mismos clientes y la misma movilidad en una red sin puntos de acceso. Dado que nuestro campus cuenta con cobertura completa de WiFi, asumimos que la ubicación de los puntos de acceso tuvo poco impacto en la movilidad de los usuarios. Simulamos un mes completo de datos de traza (noviembre de 2003) tomados de CRAWDAD [13], con 5,142 usuarios. Aunque los protocolos basados en predicciones requieren un historial de contactos previos para estimar la probabilidad de entrega de cada nodo, nuestros resultados preliminares muestran que la mejora en el rendimiento al calentar durante un mes el rastro fue marginal. Por lo tanto, para simplificar, mostramos los resultados de todos los protocolos sin calentamiento previo. 4.2 Simulador Desarrollamos un simulador personalizado. Dado que utilizamos trazas de contacto derivadas de datos reales de movilidad, no necesitamos un modelo de movilidad y omitimos detalles físicos y de capa de enlace para el descubrimiento de nodos. Éramos conscientes de que el tiempo de descubrimiento de vecinos en diferentes tecnologías inalámbricas varía desde menos de un segundo hasta varios segundos. Además, el establecimiento de la conexión también lleva tiempo, como por ejemplo DHCP. En nuestra simulación, asumimos que los nodos podían descubrirse y conectarse instantáneamente cuando estaban asociados al mismo punto de acceso (AP). Para modelar con precisión los costos de comunicación, sin embargo, simulamos algunos comportamientos de la capa MAC, como las colisiones. La configuración predeterminada de la red de nuestro simulador se detalla en la Tabla 1, utilizando los valores recomendados por otros artículos [22, 16]. La probabilidad del mensaje era la probabilidad de generar mensajes, como se describe en la Sección 4.3. El ancho de banda de transmisión predeterminado era de 11 Mb/s. Cuando un nodo intentaba transmitir un mensaje, primero verificaba si algún nodo cercano estaba transmitiendo. Si lo era, el nodo retrocedía un número aleatorio de ranuras. Cada ranura era de 1 milisegundo, y el número máximo de ranuras de espera era 30. El tamaño de los mensajes estaba distribuido uniformemente entre 80 bytes y 1024 bytes. El límite de saltos (HCL) era el número máximo de saltos antes de que un mensaje debiera dejar de reenviarse. El tiempo de vida (TTL) era la duración máxima que un mensaje podía existir antes de expirar. La capacidad de almacenamiento era el espacio máximo que un nodo puede utilizar para almacenar mensajes. Para nuestro método de enrutamiento, utilizamos una ventana de predicción predeterminada ΔT de 10 horas y un umbral de probabilidad de 0.01. El factor de replicación r no estaba limitado por defecto, por lo que la fuente de un mensaje transfería los mensajes a cualquier otro nodo que tuviera una probabilidad de contacto con el destino del mensaje mayor que el umbral de probabilidad. 4.3 Generación de mensajes Después de cada evento de contacto en el rastro de contactos, generamos un mensaje con una probabilidad dada; elegimos un nodo fuente y un des2 Dos nodos pueden no haber podido comunicarse directamente mientras estaban en dos lados opuestos de un punto de acceso, o dos nodos pueden haber podido comunicarse directamente si estaban entre dos puntos de acceso adyacentes. 3 Intentamos utilizar un simulador de red general (ns2), que era extremadamente lento al simular un gran número de nodos móviles (en nuestro caso, más de 5000 nodos), y proporcionaba detalles innecesarios en la modelización de protocolos de red de nivel inferior. Tabla 1: Configuraciones predeterminadas del parámetro de simulación Valor predeterminado probabilidad de mensaje 0.001 ancho de banda 11 Mb/s ranura de transmisión 1 milisegundo máximo de ranuras de retraso 30 tamaño del mensaje 80-1024 bytes límite de recorrido de saltos (HCL) ilimitado tiempo de vida (TTL) ilimitado capacidad de almacenamiento ilimitado ventana de predicción ΔT 10 horas umbral de probabilidad 0.01 longitud del historial de contactos 20 replicación siempre factor de envejecimiento α 0.9 (0.98 PRoPHET) probabilidad inicial p0 0.75 (PRoPHET) impacto de transitividad β 0.25 (PRoPHET) 0 20000 40000 60000 80000 100000 120000 0 5 10 15 20 Númerodeocurrencia hora movimientos contactos Figura 1: Movimientos y contactos duración cada hora nodo de destino aleatoriamente utilizando una distribución uniforme entre nodos vistos en el rastro de contactos hasta el tiempo actual. Cuando había más contactos durante un cierto período, había una mayor probabilidad de que se generara un nuevo mensaje en ese período. Esta correlación no es irrazonable, ya que hubo más movimientos durante el día que durante la noche, y por lo tanto, el número de contactos. La Figura 1 muestra las estadísticas de los números de movimientos y los números de contactos durante cada hora del día, sumados en todos los usuarios y todos los días. El gráfico muestra un patrón de actividad diurna claro. Las actividades alcanzaron su punto más bajo alrededor de las 5am y alcanzaron su punto máximo entre las 4pm y las 5pm. Suponemos que en algunas aplicaciones, el tráfico de red presenta patrones similares, es decir, las personas envían más mensajes durante el día también. Los mensajes caducan después de un TTL. No utilizamos métodos proactivos para notificar a los nodos la entrega de mensajes, de modo que los mensajes puedan ser eliminados del almacenamiento. 4.4 Métricas Definimos un conjunto de métricas que utilizamos para evaluar los protocolos de enrutamiento en redes oportunísticas: • ratio de entrega, la proporción entre el número de mensajes entregados y el número total de mensajes generados. • transmisiones de mensajes, el número total de mensajes transmitidos durante la simulación en todos los nodos. • transmisiones de metadatos, el número total de unidades de metadatos transmitidas durante la simulación en todos los nodos. • duplicaciones de mensajes, el número de veces que se produjo una copia de un mensaje, debido a la replicación. • retraso, la duración entre el momento de generación de un mensaje y el momento de entrega del mensaje. • uso de almacenamiento, el máximo y la media del almacenamiento máximo (bytes) utilizado en todos los nodos. 4.5 Resultados Aquí comparamos los resultados de la simulación de los seis protocolos de enrutamiento. 0.001 0.01 0.1 1 ilimitado 100 24 10 1 Ratio de entrega Tiempo de vida del mensaje (TTL) (horas) directo aleatorio predicción estado profeta epidemia Figura 2: Ratio de entrega (escala logarítmica). Los protocolos directo y aleatorio para TTL de una hora tenían ratios de entrega tan bajos que no eran visibles en el gráfico. La Figura 2 muestra la tasa de entrega de todos los protocolos, con diferentes TTLs. (En todos los gráficos del artículo, la predicción representa nuestro método, el estado representa el protocolo de Estado de Enlace y el profeta representa PRoPHET). Aunque teníamos 5,142 usuarios en la red, los protocolos de entrega directa y aleatoria tenían ratios de entrega bajos (nota la escala logarítmica). Incluso para mensajes con una duración ilimitada, solo se entregaron 59 de 2077 mensajes durante esta simulación de un mes. La tasa de entrega del enrutamiento epidémico fue la mejor. Los tres enfoques basados en predicciones tuvieron una baja tasa de entrega, en comparación con el enrutamiento epidémico. Aunque nuestro método fue ligeramente mejor que los otros dos, la ventaja fue marginal. La alta tasa de entrega del enrutamiento epidémico vino con un precio: transmisiones excesivas. La Figura 3 muestra el número de transmisiones de datos de mensajes. El número de transmisiones de mensajes del enrutamiento epidémico fue más de 10 veces mayor que para los protocolos de enrutamiento basados en predicciones. Obviamente, el protocolo de entrega directa tuvo el menor número de transmisiones de mensajes: el número de mensajes entregados. Entre los tres métodos basados en predicciones, PRoPHET transmitió menos mensajes, pero tuvo una tasa de entrega comparable, como se observa en la Figura 2. La Figura 4 muestra que la epidemia y todos los métodos basados en predicciones tuvieron transmisiones de metadatos sustanciales, aunque la enrutación epidémica tuvo relativamente más, con TTL más cortos. Debido a que el protocolo de epidemia transmitía mensajes en cada contacto, a su vez, más nodos tenían mensajes que requerían transmisión de metadatos durante el contacto. Los protocolos de entrega directa y aleatoria no tuvieron transmisiones de metadatos. Además de sus transmisiones de mensajes y transmisiones de metadatos, el protocolo de enrutamiento epidémico también tenía un exceso de mensajes 1 10 100 1000 10000 100000 1e+06 1e+07 1e+08 ilimitado 100 24 10 1 Númerodemensajestransmitidos Tiempo de vida del mensaje (TTL) (hora) directo aleatorio predicción estado profeta epidémico Figura 3: Transmisiones de mensajes (escala logarítmica) 1 10 100 1000 10000 100000 1e+06 1e+07 1e+08 ilimitado 100 24 10 1 Númerodetransmisionesdemetadatos Tiempo de vida del mensaje (TTL) (hora) directo aleatorio predicción estado profeta epidémico Figura 4: Transmisiones de metadatos (escala logarítmica). Los protocolos directos y aleatorios no tenían transmisiones de metadatos, duplicaciones, ni réplicas de mensajes distribuidas por la red. La Figura 5 muestra que el enrutamiento epidémico tenía una o dos órdenes más de duplicación que los protocolos basados en predicciones. Recuerde que los protocolos de entrega directa y aleatoria no se replicaron, por lo tanto no hubo duplicaciones de datos. La Figura 6 muestra tanto la mediana como la media de los retrasos en las entregas. Todos los protocolos muestran retrasos de entrega similares tanto en medidas de media como de mediana para TTLs medios, pero difieren para TTLs largos y cortos. Con un TTL de 100 horas, o TTL ilimitado, el enrutamiento epidémico tuvo los retrasos más cortos. La entrega directa tuvo la mayor demora para TTL ilimitado, pero tuvo la menor demora para TTL de una hora. Los resultados parecen ir en contra de nuestra intuición: el protocolo de enrutamiento de epidemias debería ser el protocolo de enrutamiento más rápido ya que distribuye mensajes por toda la red. De hecho, las cifras muestran solo el tiempo de retraso de los mensajes entregados. Para la entrega directa, aleatoria y los protocolos de enrutamiento basados en probabilidad, relativamente pocos mensajes fueron entregados para TTL cortos, por lo que muchos mensajes expiraron antes de poder llegar a su destino; esos mensajes tenían un retraso de entrega infinito y no se incluyeron en las mediciones de la mediana o la media. Para TTLs más largos, se entregaron más mensajes incluso para el protocolo de entrega directa. Las estadísticas de TTLs más largos para comparación son más significativas que las de TTLs cortos. Dado que nuestra tasa de generación de mensajes era baja, el uso de almacenamiento también fue bajo en nuestra simulación. La Figura 7 muestra el volumen máximo y promedio del volumen máximo (en KBytes) de mensajes almacenados 39 1 10 100 1000 10000 100000 1e+06 1e+07 1e+08 ilimitado 100 24 10 1 Duplicaciones de mensajes Número de mensajes Tiempo de vida del mensaje (TTL) (horas) directo aleatorio predicción estado profeta epidemia Figura 5: Duplicaciones de mensajes (escala logarítmica). Los protocolos directo y aleatorio no tuvieron duplicaciones de mensajes. 1 10 100 1000 10000 ilimitado 100 24 10 1 ilimitado 100 24 10 1 Retraso (minutos) Tiempo de vida del mensaje (TTL) (horas) directo aleatorio predicción estado profeta epidemia Retraso medio Retraso mediano Figura 6: Retrasos mediano y medio (escala logarítmica) en cada nodo. El enrutamiento epidémico tuvo el mayor uso de almacenamiento. El parámetro de tiempo de vida del mensaje fue el factor principal que afectó el uso de almacenamiento para los protocolos de enrutamiento basados en epidemias y predicciones. Estudiamos el impacto de diferentes parámetros de nuestro protocolo de enrutamiento basado en predicciones. Nuestro protocolo basado en predicciones fue sensible a varios parámetros, como el umbral de probabilidad y la ventana de predicción ΔT. La Figura 8 muestra las tasas de entrega cuando utilizamos diferentes umbrales de probabilidad. (El valor más a la izquierda, 0.01, es el valor utilizado para los otros gráficos). Un umbral de probabilidad más alto limitó la probabilidad de transferencia, por lo que se entregaron menos mensajes. También requirió menos transmisiones como se muestra en la Figura 9. Con una ventana de predicción más amplia, obtuvimos una probabilidad de contacto más alta. Por lo tanto, para el mismo umbral de probabilidad, tuvimos una tasa de entrega ligeramente mayor como se muestra en la Figura 10, y unas cuantas transmisiones más como se muestra en la Figura 11. TRABAJO RELACIONADO Además de los protocolos que evaluamos en nuestra simulación, se han propuesto varios otros protocolos de enrutamiento de redes oportunísticas en la literatura. No implementamos ni evaluamos estos protocolos de enrutamiento, ya que requieren información específica del dominio (información de ubicación) [14, 15], asumen ciertos patrones de movilidad [17], presentan enfoques ortogonales [10, 24] a otros protocolos de enrutamiento. 0.1 1 10 100 1000 10000 ilimitado100 24 10 1 ilimitado100 24 10 1 Uso de almacenamiento (KB) Tiempo de vida del mensaje (TTL) (horas) directo aleatorio predicción estado profeta epidemia Media del máximo Máximo del máximo Figura 7: Uso máximo y medio del almacenamiento en todos los nodos (escala logarítmica). 0 0.2 0.4 0.6 0.8 1 0 0.2 0.4 0.6 0.8 1 Proporción de entrega Umbral de probabilidad Figura 8: Impacto del umbral de probabilidad en la proporción de entrega del enrutamiento de contacto oportuno. LeBrun et al. [14] proponen un protocolo de enrutamiento de red tolerante a retrasos basado en la ubicación. Su algoritmo asume que cada nodo conoce su propia posición, y que el destino está estacionario en una ubicación conocida. Un nodo reenvía datos a un vecino solo si el vecino está más cerca del destino que su propia posición. Nuestro protocolo no requiere conocimiento de las ubicaciones de los nodos, y aprende sus patrones de contacto. Leguay et al. [15] utilizan un espacio de alta dimensión para representar un patrón de movilidad, luego enrutan mensajes a nodos que están más cerca del nodo de destino en el espacio del patrón de movilidad. Se requiere información de la ubicación de los nodos para construir patrones de movilidad. Musolesi et al. [17] proponen un protocolo de enrutamiento adaptativo para redes móviles ad-hoc intermitentemente conectadas. Utilizan un filtro de Kalman para calcular la probabilidad de que un nodo entregue mensajes. Este protocolo asume movilidad grupal y conectividad en la nube, es decir, los nodos se mueven en grupo, y entre este grupo de nodos existe una conexión de extremo a extremo simultánea para cada par de nodos. Cuando dos nodos están en la misma nube conectada, se utiliza el enrutamiento DSDV [19]. La codificación de red también despierta mucho interés en la investigación de DTN. La codificación de borrado [10, 24] explora algoritmos de codificación para reducir réplicas de mensajes. El nodo fuente replica un mensaje m veces, luego utiliza un esquema de codificación para codificarlos en un único mensaje grande. Después de que las réplicas son codificadas, la fuente divide el mensaje grande en k bloques del mismo tamaño, y transmite un bloque a cada uno de los primeros k nodos encontrados. Si m de los bloques son recibidos en el destino, el mensaje puede ser restaurado, donde m < k. En un escenario de movilidad distribuida uniformemente, la probabilidad de entrega aumenta porque la probabilidad de que el nodo destino se encuentre con m retransmisores es mayor que la de encontrarse con k retransmisores, dado que m < k. 6. RESUMEN Proponemos un protocolo de enrutamiento basado en predicciones para redes oportunísticas. Evaluamos el rendimiento de nuestro protocolo utilizando trazas de contacto realistas y lo comparamos con cinco protocolos de enrutamiento existentes. Nuestros resultados de simulación muestran que la entrega directa tuvo la menor proporción de entrega, la menor cantidad de transmisiones de datos y ninguna transmisión de metadatos ni duplicación de datos. La entrega directa es adecuada para dispositivos que requieren un consumo de energía extremadamente bajo. El protocolo aleatorio aumentó la probabilidad de entrega para mensajes que de otro modo estarían atascados en algunos nodos de baja movilidad. El enrutamiento epidémico entregó la mayoría de los mensajes. Las transmisiones excesivas y la duplicación de datos, sin embargo, consumen más recursos de los que los dispositivos portátiles pueden proporcionar. Ninguno de estos protocolos (entrega directa, enrutamiento aleatorio y epidémico) son prácticos para la implementación real de redes oportunísticas, ya que o bien tenían una tasa de entrega extremadamente baja o un consumo de recursos extremadamente alto. Los protocolos de enrutamiento basados en predicciones tuvieron una tasa de entrega más de 10 veces mejor que la de la entrega directa y el enrutamiento aleatorio, y menos transmisiones y un menor uso de almacenamiento que el enrutamiento epidémico. También tenían menos duplicaciones de datos que el enrutamiento epidémico. Todos los protocolos de enrutamiento basados en predicciones que hemos evaluado tuvieron un rendimiento similar. Nuestro método tenía una tasa de entrega ligeramente más alta, pero más transmisiones y un mayor uso de almacenamiento. Existen muchos parámetros para los protocolos de enrutamiento basados en predicción, sin embargo, diferentes parámetros pueden producir resultados distintos. De hecho, existe la oportunidad de realizar cierta adaptación; por ejemplo, los mensajes de alta prioridad pueden tener probabilidades más altas de transferencia y replicación para aumentar la posibilidad de entrega y reducir el retraso, o un nodo con contactos poco frecuentes puede optar por aumentar su probabilidad de transferencia. Solo estudiamos el impacto de predecir la probabilidad de contacto de igual a igual para el enrutamiento en mensajes unicast. En algunas aplicaciones, la información de contexto (como la ubicación) puede estar disponible para los pares. También se puede considerar otros modelos de mensajería, por ejemplo, donde los mensajes se envían a una ubicación, de modo que cada nodo en esa ubicación recibirá una copia del mensaje. La predicción de ubicación [21] puede ser utilizada para predecir la movilidad de los nodos y elegir como retransmisores aquellos nodos que se mueven hacia la ubicación destinada. La investigación sobre enrutamiento en redes oportunísticas todavía se encuentra en una etapa temprana. Muchos otros problemas de las redes oportunísticas, como la seguridad y la privacidad, quedan principalmente abiertos. Anticipamos estudiar estos temas en trabajos futuros. AGRADECIMIENTO Esta investigación es un proyecto del Centro de Computación Móvil y el Instituto de Estudios de Tecnología de Seguridad en Dartmouth College. Fue apoyado por DoCoMo Labs USA, el archivo CRAWDAD en Dartmouth College (financiado por el Premio NSF CRI 0454062), el Premio de Infraestructura NSF EIA-9802068 y por el número de subvención 2005-DD-BX-1091 otorgado por la Oficina de Asistencia Judicial. Los puntos de vista u opiniones en este documento son de los autores y no representan la posición oficial o políticas de ningún patrocinador. REFERENCIAS [1] John Burgess, Brian Gallagher, David Jensen y Brian Neil Levine. MaxProp: enrutamiento para redes tolerantes a interrupciones basadas en vehículos. En Actas de la 25ª Conferencia Internacional de la IEEE sobre Comunicaciones de Computadoras (INFOCOM), abril de 2006. [2] Scott Burleigh, Adrian Hooke, Leigh Torgerson, Kevin Fall, Vint Cerf, Bob Durst, Keith Scott y Howard Weiss. Redes tolerantes a retrasos: Un enfoque para Internet interplanetaria. Revista de Comunicaciones de IEEE, 41(6):128-136, junio de 2003. [3] Tracy Camp, Jeff Boleng y Vanessa Davies. Una encuesta de modelos de movilidad para la investigación de redes ad-hoc. Comunicación inalámbrica y computación móvil (WCMC): Edición especial sobre Redes móviles ad-hoc: Investigación, tendencias y aplicaciones, 2(5):483-502, 2002. [4] Andrew Campbell, Shane Eisenman, Nicholas Lane, Emiliano Miluzzo y Ronald Peterson. Detección urbana centrada en las personas. En la Conferencia de Internet Inalámbrico de IEEE, agosto de 2006. [5] Augustin Chaintreau, Pan Hui, Jon Crowcroft, Christophe Diot, Richard Gass y James Scott. Impacto de la movilidad humana en el diseño de algoritmos de reenvío oportunista. En Actas de la 25ª Conferencia Internacional de la IEEE sobre Comunicaciones de Computadoras (INFOCOM), abril de 2006. [6] Kevin Fall. Una arquitectura de red tolerante a retrasos para internet con limitaciones. En Actas de la Conferencia de 2003 sobre Aplicaciones, Tecnologías, Arquitecturas y Protocolos para Comunicaciones de Computadoras (SIGCOMM), agosto de 2003. [7] Tristan Henderson, David Kotz e Ilya Abyzov. El cambio en el uso de una red inalámbrica madura en todo el campus. En Actas de la 10ª Conferencia Internacional Anual sobre Computación y Redes Móviles (MobiCom), páginas 187-201, septiembre de 2004. [8] Pan Hui, Augustin Chaintreau, James Scott, Richard Gass, Jon Crowcroft y Christophe Diot. Redes de bolsillo conmutadas y movilidad humana en entornos de conferencias. En el Taller ACM SIGCOMM sobre Redes Tolerantes a Retrasos, páginas 244-251, agosto de 2005. [9] Ravi Jain, Dan Lelescu y Mahadevan Balakrishnan. Modelo T: un modelo empírico para los patrones de registro de usuarios en una LAN inalámbrica del campus. En Actas de la 11ª Conferencia Internacional Anual sobre Computación y Redes Móviles (MobiCom), páginas 170-184, 2005. [10] Sushant Jain, Mike Demmer, Rabin Patra y Kevin Fall. Utilizando redundancia para hacer frente a fallos en una red tolerante a retrasos. En Actas de la Conferencia de 2005 sobre Aplicaciones, Tecnologías, Arquitecturas y Protocolos para Comunicaciones de Computadoras (SIGCOMM), páginas 109-120, agosto de 2005. [11] Philo Juang, Hidekazu Oki, Yong Wang, Margaret Martonosi, Li-Shiuan Peh y Daniel Rubenstein. Computación eficiente en energía para el seguimiento de la vida silvestre: Compensaciones de diseño y primeras experiencias con ZebraNet. En la Décima Conferencia Internacional sobre Soporte Arquitectónico para Lenguajes de Programación y Sistemas Operativos, octubre de 2002. [12] David Kotz y Kobby Essien. Análisis de una red inalámbrica en todo el campus. Redes inalámbricas, 11:115-133, 2005. [13] David Kotz, Tristan Henderson e Ilya Abyzov. Conjunto de datos CRAWDAD dartmouth/campus. http://crawdad.cs.dartmouth.edu/dartmouth/campus, diciembre de 2004. [14] Jason LeBrun, Chen-Nee Chuah, Dipak Ghosal y Michael Zhang. Reenvío oportunista basado en conocimiento en redes ad-hoc inalámbricas vehiculares. En la Conferencia de Tecnología Vehicular de IEEE, páginas 2289-2293, mayo de 2005. [15] Jeremie Leguay, Timur Friedman y Vania Conan. Evaluando el enrutamiento de espacio de patrones de movilidad para DTNs. En Actas de la 25ª Conferencia Internacional de Comunicaciones de Computadoras de IEEE (INFOCOM), abril de 2006. [16] Anders Lindgren, Avri Doria y Olov Schelen. Enrutamiento probabilístico en redes intermitentemente conectadas. En el taller sobre Garantía de Servicio con Recursos Parciales e Intermitentes (SAPIR), páginas 239-254, 2004. [17] Mirco Musolesi, Stephen Hailes y Cecilia Mascolo. Enrutamiento adaptativo para redes móviles ad hoc intermitentemente conectadas. En el Simposio Internacional de IEEE sobre un Mundo de Redes Móviles, Inalámbricas y Multimedia, páginas 183-189, junio de 2005. Versión extendida. [18] OLPC. Proyecto Una computadora por niño. http://laptop.org. [19] C. E. Perkins y P. Bhagwat. Enrutamiento vectorial de secuencia de destino altamente dinámico (DSDV) para computadoras móviles. Computer Communication Review, páginas 234-244, octubre de 1994. [20] C. E. Perkins y E. M. Royer. enrutamiento vectorial de distancia bajo demanda ad-hoc. En el taller de IEEE sobre Sistemas y Aplicaciones de Computación Móvil, páginas 90-100, febrero de 1999. [21] Libo Song, David Kotz, Ravi Jain y Xiaoning He. Evaluando predictores de la siguiente celda con extensos datos de movilidad de Wi-Fi. IEEE Transactions on Mobile Computing, 5(12):1633-1649, diciembre de 2006. [22] Jing Su, Ashvin Goel y Eyal de Lara. Una evaluación empírica de la red tolerante a retrasos Student-Net. En la Conferencia Internacional sobre Sistemas Móviles y Ubicuos (MobiQuitous), julio de 2006. [23] Amin Vahdat y David Becker. Enrutamiento epidémico para redes ad-hoc parcialmente conectadas. Informe técnico CS-2000-06, Universidad de Duke, julio de 2000. [24] Yong Wang, Sushant Jain, Margaret Martonosia y Kevin Fall. Enrutamiento basado en codificación de borrado para redes oportunísticas. En el Taller ACM SIGCOMM sobre Redes Tolerantes a Retrasos, páginas 229-236, agosto de 2005. [25] Yu Wang y Hongyi Wu. DFT-MSN: la red de sensores móviles tolerante a fallos de retardo para la recopilación de información ubicua. En Actas de la 25ª Conferencia Internacional de Comunicaciones de Computadoras de IEEE (INFOCOM), abril de 2006. 42