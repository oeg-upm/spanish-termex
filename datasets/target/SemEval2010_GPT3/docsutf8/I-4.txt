Coordinación de nivel meta para resolver cadenas de negociación en sistemas multiagente semi-cooperativos. Xiaoqin Zhang, Departamento de Ciencias de la Computación e Informática, Universidad de Massachusetts en Dartmouth, x2zhang@umassd.edu. Victor Lesser, Departamento de Ciencias de la Computación, Universidad de Massachusetts en Amherst, lesser@cs.umass.edu. RESUMEN Una cadena de negociación se forma cuando múltiples negociaciones relacionadas se distribuyen entre varios agentes. Con el fin de ordenar y estructurar adecuadamente las negociaciones que ocurren en la cadena para optimizar la utilidad esperada, presentamos una extensión a un marco de negociación concurrente de un solo agente. Este trabajo está dirigido a sistemas multiagentes semi-cooperativos, donde cada agente tiene sus propios objetivos y trabaja para maximizar su utilidad local; sin embargo, el rendimiento de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el rendimiento general del sistema. Introducimos una fase de prenegociación que permite a los agentes transferir información a nivel meta. Usando esta información, el agente puede construir un modelo más preciso de la negociación en términos de modelar la relación entre la flexibilidad y la probabilidad de éxito. Este modelo más preciso ayuda al agente a elegir una mejor solución de negociación en el contexto de la cadena de negociación global. El agente también puede utilizar esta información para asignar el tiempo apropiado a cada negociación, y así encontrar un buen orden de todas las negociaciones relacionadas. Los datos experimentales muestran que estos mecanismos mejoran significativamente el rendimiento de los agentes y de los sistemas en general. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagentes Términos Generales Algoritmos, Rendimiento, Experimentación 1. INTRODUCCIÓN La negociación sofisticada para la asignación de tareas y recursos es crucial para la próxima generación de aplicaciones de sistemas multiagente (MAS). Los grupos de agentes necesitan negociar de manera eficiente sobre múltiples temas relacionados simultáneamente en un entorno complejo y distribuido donde existen plazos límite para completar las negociaciones. Esta es un área de investigación importante donde se ha realizado muy poco trabajo. Este trabajo está dirigido a sistemas multiagentes semi-cooperativos, donde cada agente tiene sus propios objetivos y trabaja para maximizar su utilidad local; sin embargo, el rendimiento de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el rendimiento general del sistema. No hay un objetivo global único en tales sistemas, ya sea porque cada agente representa a una organización/usuario diferente, o porque es difícil/imposible diseñar un único objetivo global. Este problema surge debido a múltiples tareas concurrentes, limitaciones de recursos e incertidumbres, por lo que ningún agente tiene suficiente conocimiento o recursos computacionales para determinar lo que es mejor para todo el sistema [11]. Un ejemplo de dicho sistema sería una organización virtual (es decir, una cadena de suministro) formada dinámicamente en un mercado electrónico como el desarrollado por el proyecto CONOISE. Para llevar a cabo las tareas que llegan continuamente en la organización virtual, se necesita y prefiere la cooperación y la reubicación de sub-tareas. No hay un objetivo global único ya que cada agente puede estar involucrado en múltiples organizaciones virtuales. Mientras tanto, el rendimiento de cada agente individual está estrechamente relacionado con la cooperación de otros agentes y el rendimiento general de las organizaciones virtuales. La negociación en tales sistemas no es un juego de suma cero, se puede encontrar un acuerdo que aumente las utilidades de ambos agentes a través de una negociación eficiente. Además, hay múltiples encuentros entre agentes ya que constantemente están llegando nuevas tareas. En tales negociaciones, el precio puede o no ser importante, ya que puede estar fijado como resultado de un contrato a largo plazo. Otros factores como la calidad y el tiempo de entrega también son importantes. Los mecanismos de reputación en el sistema hacen que el hacer trampa no resulte atractivo desde un punto de vista a largo plazo debido a múltiples encuentros entre agentes. En tales sistemas, los agentes son egoístas porque se centran principalmente en sus propios objetivos; pero también son semi-cooperativos, lo que significa que están dispuestos a ser sinceros y colaborar con otros agentes para encontrar soluciones que sean beneficiosas para todos los participantes, incluido él mismo; aunque no sacrificará voluntariamente su propia utilidad a cambio de los beneficios de los demás. Otra diferencia importante entre este trabajo y otros trabajos sobre negociación es que la negociación, aquí, no se ve como un proceso independiente. Más bien, es una parte de la actividad de los agentes que está estrechamente entrelazada con la planificación, programación y ejecución de las actividades de los agentes, que también pueden estar relacionadas con otras negociaciones. Basado en este reconocimiento, este trabajo sobre negociación se preocupa más por el proceso de toma de decisiones a nivel meta en la negociación que por los protocolos básicos o los idiomas. El objetivo de esta investigación es desarrollar un conjunto de macroestrategias que permitan a los agentes gestionar de manera efectiva múltiples negociaciones relacionadas, incluyendo, pero no limitándose a los siguientes temas: cuánto tiempo se debe dedicar a cada negociación, cuánta flexibilidad (ver definición formal en Fórmula 3) se debe asignar a cada negociación, y en qué orden deben realizarse las negociaciones. Estas macroestrategias son diferentes de aquellas microestrategias que dirigen el hilo de la negociación individual, como si el agente debería ceder y cuánto debería ceder el agente, etc. En este artículo ampliamos un modelo de negociación multi-vinculado [10] desde una perspectiva de un solo agente a una perspectiva de múltiples agentes, de modo que un grupo de agentes involucrados en cadenas de negociaciones interrelacionadas pueda encontrar estrategias de negociación macro casi óptimas para llevar a cabo sus negociaciones. El resto de este documento está estructurado de la siguiente manera. La sección 2 describe el proceso básico de negociación y revisa brevemente un modelo de negociación multi-vínculo de un solo agente. La sección 3 introduce un escenario complejo de cadena de suministro. La sección 4 detalla cómo resolver los problemas que surgen en la cadena de negociación. La sección 5 informa sobre el trabajo experimental. La sección 6 discute el trabajo relacionado y la sección 7 presenta conclusiones y áreas de trabajo futuro. ANTECEDENTES SOBRE NEGOCIACIÓN MULTI-VINCULADA En este trabajo, el proceso de negociación entre cualquier par de agentes se basa en una versión extendida de la red de contratos [6]: el agente iniciador anuncia la propuesta que incluye múltiples características; el agente que responde la evalúa y responde con un sí/no o una contra propuesta con algunas características modificadas. Este proceso puede ir y venir hasta que se llegue a un acuerdo o los agentes decidan detenerse. Si se llega a un acuerdo y un agente no puede cumplir con el compromiso, debe pagar a la otra parte una penalización por incumplimiento tal como se especifica en el compromiso. Una negociación comienza con una propuesta, que anuncia que una tarea (t) debe ser realizada e incluye los siguientes atributos: 1. tiempo de inicio más temprano (est): el tiempo más temprano de inicio de la tarea t; la tarea t no puede comenzar antes del tiempo est. 2. fecha límite (dl): el tiempo más tardío de finalización de la tarea; la tarea debe ser finalizada antes de la fecha límite dl. 3. requisito mínimo de calidad (minq): la tarea debe ser finalizada con un logro de calidad no menor a minq. 4. recompensa regular (r): si la tarea es finalizada como se solicitó en el contrato, el agente contratista recibirá una recompensa r. 5. tasa de recompensa por finalización anticipada (e): si el agente contratista puede finalizar la tarea antes de dl, recibirá una recompensa adicional por finalización anticipada proporcional a esta tasa. 6. tasa de penalización por incumplimiento (p): si el agente contratista no puede realizar la tarea como prometió en el contrato o si el agente contratante necesita cancelar el contrato después de haber sido confirmado, también deberá pagar una penalización por incumplimiento (p∗r) al otro agente. Los atributos mencionados anteriormente también se conocen como atributos en negociación, que son las características del tema a negociar, y dependen del dominio. Otro tipo de atributo 1 es el atributo de negociación, que describe el proceso de negociación en sí mismo y es independiente del dominio, como: 1 Estos atributos son similares a los utilizados en la gestión de proyectos; sin embargo, el problema de negociación multi-vinculado no puede reducirse a un problema de gestión de proyectos o un problema de programación. El problema de negociación multi-vinculado tiene dos dimensiones: las negociaciones y los sujetos de las negociaciones. Las negociaciones están interrelacionadas y los temas están interrelacionados; los atributos de las negociaciones y los atributos de los temas también están interrelacionados. Esta complejidad bidimensional de interrelaciones lo distingue del problema clásico de gestión de proyectos o de programación, donde todas las tareas a programar son tareas locales y no se necesita negociación. 1. duración de la negociación (δ(v)): el tiempo máximo permitido para que la negociación v se complete, ya sea llegando a una propuesta acordada (éxito) o sin acuerdo (fracaso). 2. hora de inicio de la negociación (α(v)): la hora de inicio de la negociación v. α(v) es un atributo que debe ser decidido por el agente. 3. plazo de la negociación ( (v)): la negociación v debe finalizarse antes de este plazo (v). La negociación ya no es válida después del tiempo (v), lo que equivale a un resultado fallido de esta negociación. 4. probabilidad de éxito (ps(v)): la probabilidad de que v sea exitoso. Depende de un conjunto de atributos, incluyendo tanto atributos en negociación (es decir, recompensa, flexibilidad, etc.) como atributos de negociación (es decir, hora de inicio de la negociación, plazo de la negociación, etc.). Un agente involucrado en múltiples procesos de negociación relacionados necesita razonar sobre cómo gestionar estas negociaciones en términos de ordenarlas y elegir los valores apropiados para las características. Este es el problema de negociación multi-vinculado [10]: DEFINICIÓN 2.1. Un problema de negociación multi-vinculado se define como un grafo no dirigido (más específicamente, un bosque como un conjunto de árboles enraizados): M = (V, E), donde V = {v} es un conjunto finito de negociaciones, y E = {(u, v)} es un conjunto de relaciones binarias en V. (u, v) ∈ E denota que la negociación u y la negociación v están directamente vinculadas. Las relaciones entre las negociaciones están descritas por un bosque, un conjunto de árboles enraizados {Ti}. Existe un operador de relación asociado con cada negociación no hoja v (denotado como ρ(v)), que describe la relación entre la negociación v y sus hijos. Este operador de relación tiene dos posibles valores: Y y O. La relación Y asociada con una negociación v significa que el logro exitoso del compromiso en v requiere que todos sus nodos hijos tengan logros exitosos. La relación O asociada con una negociación v significa que el logro exitoso del compromiso en v requiere que al menos un nodo hijo tenga un logro exitoso, donde los múltiples nodos hijos representan alternativas para lograr el mismo objetivo. El problema de negociación multi-vinculado es un problema de optimización local. Resolver un problema de negociación multi-vinculado es encontrar una solución de negociación (φ, ϕ) con una utilidad esperada optimizada EU(φ, ϕ), que se define como: EU(φ, ϕ) = 2n X i=1 P(χi, ϕ) ∗ (R(χi, ϕ) − C(χi, φ, ϕ)) (1) Un ordenamiento de negociación φ define un orden parcial de todos los temas de negociación. Una asignación de característica ϕ es una función de mapeo que asigna un valor a cada atributo que necesita ser decidido en la negociación. Un resultado de negociación χ para un conjunto de negociaciones {vj}, (j = 1, ..., n) especifica el resultado de cada negociación, ya sea éxito o fracaso. Hay un total de 2n resultados diferentes para n negociaciones: {chii}, (i = 1, ..., 2n). P(χi, ϕ) denota la probabilidad del resultado χi dado el conjunto de características ϕ, la cual se calcula en base a la probabilidad de éxito de cada negociación. R(χi, ϕ) denota el aumento de utilidad de los agentes dado el resultado χi y la asignación de características ϕ, y C(χi, φ, ϕ) es la suma de las penalizaciones por incumplimiento de esas negociaciones, que son exitosas pero deben ser abandonadas debido al fracaso de otras negociaciones directamente relacionadas; estas negociaciones directamente relacionadas se realizan de manera concurrente con esta negociación o después de esta negociación de acuerdo con el orden de negociación φ. El Sexto Internacional. Se ha desarrollado un algoritmo de búsqueda heurística [10] para resolver el problema de negociación multi-vinculada de agentes individuales que produce soluciones casi óptimas. Este algoritmo se utiliza como núcleo de la toma de decisiones para cada agente individual en el escenario de la cadena de negociación. En el resto del documento, presentamos nuestro trabajo sobre cómo mejorar la solución local de un único agente en el contexto de la cadena de negociación global. 3. PROBLEMA DE CADENA DE NEGOCIACIÓN El problema de cadena de negociación ocurre en un sistema multiagente, donde cada agente representa a un individuo, una empresa u organización, y no hay una autoridad absoluta en el sistema. Cada agente tiene su propia función de utilidad para definir las implicaciones de lograr sus objetivos. El agente está diseñado para optimizar su utilidad esperada dadas sus limitadas información, recursos computacionales y de comunicación. Las tareas dinámicas llegan a agentes individuales, la mayoría de las tareas requieren la coordinación de múltiples agentes. Cada agente tiene la capacidad de programación y planificación para gestionar sus actividades locales, algunas de las cuales están relacionadas con las actividades de otros agentes. La negociación se utiliza para coordinar la programación de estas actividades mutuamente relacionadas. La negociación está estrechamente conectada con los procesos locales de programación/planificación de los agentes y también está relacionada con otras negociaciones. Un agente puede estar involucrado en múltiples negociaciones relacionadas con otros agentes, y cada uno de los otros agentes también puede estar involucrado en negociaciones relacionadas con otros. La Figura 1 describe un escenario de cadena de negociación compleja. La tienda, el fabricante de PC, el productor de memoria y el centro de distribución están todos involucrados en problemas de negociación multi-vinculados. La Figura 2 muestra un modelo distribuido de parte de la cadena de negociación descrita en la Figura 1. Cada agente tiene un problema de optimización local: el problema de negociación multi-vinculado (representado como un árbol de tipo y-o), que puede resolverse utilizando el modelo y los procedimientos descritos en la Sección 2. Sin embargo, la solución óptima local puede no ser óptima en el contexto global dado que el modelo local no es ni completo ni preciso. La línea de guiones en la Figura 2 representa la conexión de estos problemas de optimización local a través del tema común de negociación. El problema de la cadena de negociación O es un grupo de problemas de optimización local estrechamente acoplados: O = {O1, O2, ....On}, Oi denota el problema de optimización local (problema de negociación multi-vinculado) del agente Ai. La solución óptima local de Agente Ai, Slo i, maximiza la utilidad local esperada basada en información incompleta y suposiciones sobre las estrategias locales de otros agentes. Definimos tal información incompleta y suposiciones imperfectas del agente i como Ii): Uexp i (Slo i, Ii) ≥ Uexp i (Sx i, Ii) para todo x = lo. Sin embargo, la combinación de estas soluciones óptimas locales {Slo i} : <Slo 1, Slo 2, ....Slo n> puede ser subóptima en comparación con un conjunto de soluciones óptimas locales mejores {Sblo i} : <Sblo 1, Sblo 2, ....Sblo n> si la utilidad global puede mejorarse sin disminuir la utilidad local de ningún agente al utilizar {Sblo i}. En otras palabras, {Slo i} está dominado por {Sblo i} ({Slo i} ≺ {Sblo i}) si: Ui(<Slo 1, Slo 2, ....Slo n>) ≤ Ui(<Sblo 1, Sblo 2, ....Sblo n>) para i = 1, ...n y Pn i=1 Ui(<Slo 1, Slo 2, ....Slo n>) < Pn i=1 Ui(<Sblo 1, Sblo 2, ....Sblo n>). Hay múltiples conjuntos de soluciones locales óptimas mejores: {Sblo1 i}, {Sblo2 i}, ... {Sblom i}. Algunos de ellos pueden ser dominados por otros. Un conjunto de soluciones locales óptimas {S blog i} que no es dominado por ninguna otra se llama mejor solución local óptima. Si un conjunto de las mejores soluciones locales {S blog i} domina a todas las demás, {S blog i} se llama óptimo local global. Sin embargo, a veces el conjunto óptimo local global no existe, en su lugar existen múltiples conjuntos de las mejores soluciones óptimas locales. Aunque la solución óptima local global exista en teoría, encontrarla puede no ser realista dado que los agentes toman decisiones de manera concurrente, construir la información local perfecta y las suposiciones sobre otros agentes (Ii) en este entorno dinámico es una tarea muy difícil y a veces incluso imposible. El objetivo de este trabajo es mejorar el modelo local de cada agente sobre otros agentes (Ii) a través de la coordinación a nivel meta. A medida que se vuelve más preciso, la solución óptima local de los agentes para su problema de negociación local multi-vinculado se convierte en una mejor solución óptima local en el contexto del problema de cadena de negociación global. No estamos argumentando que esta afirmación sea una afirmación universalmente válida que se cumpla en todas las situaciones, pero nuestro trabajo experimental muestra que la suma de las utilidades de los agentes en el sistema ha mejorado en un 95% en promedio cuando se utiliza la coordinación a nivel meta para mejorar el modelo local de cada agente Ii. En este trabajo, nos enfocamos en mejorar el modelo local de los agentes a través de dos direcciones. Una dirección es construir una función mejor para describir la relación entre la probabilidad de éxito de la negociación y la flexibilidad asignada a la negociación. La otra dirección es encontrar cómo asignar el tiempo de manera más eficiente para cada negociación en el contexto de la cadena de negociación. 4. NUEVO MECANISMO - COORDINACIÓN A NIVEL META Para que un agente pueda obtener un mejor modelo local sobre otros agentes en el contexto de la cadena de negociación, introducimos una fase de prenegociación en el proceso de negociación local. Durante la fase de prenegociación, los agentes se comunican con otros agentes que tienen relaciones contractuales con ellos, transfieren información a nivel meta antes de decidir cómo y cuándo llevar a cabo las negociaciones. Cada agente le dice a los otros agentes qué tipos de tareas les pedirá que realicen, y las distribuciones de probabilidad de algunos parámetros de esas tareas, es decir, los tiempos de inicio más tempranos y las fechas límite, etc. Cuando estas distribuciones de probabilidad no están disponibles directamente, los agentes pueden aprender esa información de su experiencia pasada. En nuestro experimento descrito más adelante, dicha información distribuida se aprende en lugar de ser directamente proporcionada por otros agentes. Específicamente, cada agente proporciona la siguiente información a otros agentes relacionados: • Si se necesita negociación adicional para tomar una decisión sobre la tarea de contratación; en caso afirmativo, cuántas negociaciones más son necesarias. negCount representa el número total de negociaciones adicionales necesarias para una tarea, incluidas las negociaciones adicionales necesarias para sus subtareas que se llevan a cabo entre otros agentes. En una situación de cadena de negociación, esta información se está propagando y actualizando a lo largo de la cadena hasta el 52 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) E: Ordenar Hardware F: Entregar Computadora H: Obtener Memoria I: Entregar Hardware I: Entregar Hardware F: Entregar Computadora G: Obtener CPU E: Obtener Hardware y Transportador Centro de Distribución A: Comprar Computadora B: Comprar Memoria C: Ordenar Computadora D: Ordenar Memoria Almacenar Agente Fabricante de PC y C: Ordenar Computadora Figura 2: Modelo Distribuido de Cadenas de Negociación donde cada agente tiene información precisa. Sea subNeg(T) un conjunto de subtareas de la tarea T que requieren negociaciones adicionales, entonces tenemos: negCount(T) = |subNeg(T)| + Σ t∈subNeg(T) (negCount(t)) (2). Por ejemplo, en el escenario descrito en la Figura 1, para el centro de distribución, la tarea Ordenar Hardware consta de tres subtareas que necesitan negociaciones adicionales con otros agentes: Ordenar Chips, Ordenar Memoria y Entregar Hardware. Sin embargo, no se necesitan más negociaciones para que otros agentes tomen decisiones sobre estas subtareas, por lo tanto, el negCount para estas subtareas es 0. La siguiente información es enviada al fabricante de PC por el centro de distribución: negCount(Order Hardware) = 3 Para la tarea del fabricante de PC, la tarea Ordenar Computadora contiene dos subtareas que requieren negociaciones adicionales: Entregar Computadora y Ordenar Hardware. Cuando el fabricante de PC recibe el mensaje del Centro de Distribución, actualiza su información local: negCount(Pedido de Computadora) = 2 + negCount(Entrega de Computadora)(0) + negCount(Pedido de Hardware)(3) = 5 y envía la información actualizada al Agente de Tienda. • Si hay otras tareas compitiendo con esta tarea y cuál es la probabilidad de conflicto. El conflicto significa que, dadas todas las limitaciones, el agente no puede completar todas las tareas a tiempo, por lo que necesita rechazar algunas tareas. La probabilidad de conflicto Pcij entre una tarea de tipo i y otra tarea de tipo j se calcula en base al modelo estadístico de los parámetros de cada tarea, incluyendo el tiempo de inicio más temprano (est), la fecha límite (dl), la duración de la tarea (dur) y el tiempo de holgura (sl), utilizando la fórmula [7]: Pcij = P(dli − estj ≤ duri + durj ∧ dlj − esti ≤ duri + durj). Cuando hay más de dos tipos de tareas, la probabilidad de que no haya conflicto entre la tarea i y el resto de las tareas se calcula como: PnoConflict(i) = Qn j=1,j=i(1 − Pcij). Por ejemplo, el Productor de Memorias informa al Centro de Distribución sobre la tarea Orden de Memoria. Su decisión local no implica negociaciones adicionales con otros agentes (negCount = 0), sin embargo, hay otra tarea del Agente de Tienda que compite con esta tarea, por lo tanto, la probabilidad de que no haya conflicto es de 0.5 (PnoConflict = 0.5). Por otro lado, el Productor de la CPU informa al Centro de Distribución sobre la tarea Ordenar Chips: su decisión local no implica negociaciones adicionales con otros agentes, y no hay otras tareas compitiendo con esta tarea (PnoConflict = 1.0) dadas las condiciones actuales del entorno. Basándose en la información anterior, el Centro de Distribución sabe que la tarea de Orden de Memoria necesita más flexibilidad que la tarea de Orden de Chips para tener éxito en la negociación. Mientras tanto, el Centro de Distribución le informaría al Fabricante de PC que la tarea de Orden de Hardware implica una negociación adicional con otros agentes (negCount = 3), y que su decisión local depende de las decisiones de otros agentes. Esta información ayuda al fabricante de PC a asignar la flexibilidad adecuada para la Orden de Hardware en negociación. En este trabajo, presentamos un breve período y Producir_Computadora Obtener_Software Instalar_Software Entregar_Computadora Memoria ProductorHardware Productor Transportador Consumidor Agente Orden_Computadora Orden_Memoria Orden_Hardware Orden_Hardware tiempo de proceso: 3 Centro de Distribución Fabricante de PC Orden_Chips Entregar_Hardware Obtener_Piezas tiempo de proceso: 11 permite permite tiempo de proceso: 4 tiempo de proceso: 3 y y permite tiempo de proceso: 4 y permite tiempo de proceso: 3 tiempo de proceso: 2 Figura 3: Estructuras de Tareas del Fabricante de PC y Centro de Distribución para que los agentes aprendan las características de esas tareas entrantes, incluyendo est, dl, dur y sl, que se utilizan para calcular Pcij y PnoConflict para la coordinación a nivel meta. Durante el rendimiento del sistema, los agentes están monitoreando continuamente estas características. Un mensaje actualizado será enviado a los agentes relacionados cuando haya un cambio significativo en la información a nivel meta. A continuación describiremos cómo el agente utiliza la información de nivel meta transferida durante la fase de prenegociación. Esta información se utilizará para mejorar el modelo local de los agentes, más específicamente, se utilizan en el proceso de toma de decisiones locales de los agentes al afectar los valores de algunas características. Específicamente, nos centraremos en dos características que tienen fuertes implicaciones para la estrategia macro de los agentes en las negociaciones multi-vinculadas, y por lo tanto también afectan significativamente el desempeño de una cadena de negociación. El primero es la cantidad de flexibilidad especificada en el parámetro de negociación. La segunda característica que exploraremos es el tiempo asignado para que se complete el proceso de negociación. El tiempo asignado para cada negociación afecta el posible orden de esas negociaciones, y también afecta el resultado de la negociación. Los detalles se discuten en las siguientes secciones. 4.1 Flexibilidad y Probabilidad de Éxito. Los agentes no solo necesitan lidiar con problemas de negociación complejos, también necesitan manejar su propio proceso de programación y planificación local que se entrelaza con el proceso de negociación. La Figura 3 muestra las estructuras de tareas locales del Fabricante de PC y el Centro de Distribución. Algunas de estas tareas pueden ser realizadas localmente por el fabricante de PC, como Obtener Software e Instalar Software, mientras que otras tareas (tareas no locales) como Ordenar Hardware y Entregar Computadora necesitan ser realizadas por otros agentes. El fabricante de PC necesita negociar con el Centro de Distribución y el Transportista sobre si pueden realizar estas tareas, y de ser así, cuándo y cómo las llevarán a cabo. Cuando el fabricante de PC negocia con otros agentes sobre la tarea no local, necesita que el arreglo de los otros agentes se ajuste a su horario local. Dado que el fabricante de PC está lidiando con múltiples tareas no locales simultáneamente, también necesita asegurarse de que los compromisos en estas tareas no locales sean consistentes entre sí. Por ejemplo, la fecha límite de la tarea Ordenar Hardware no puede ser posterior a la hora de inicio de la tarea Entregar Computadora. Figura 4 La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 53 Orden_Hardware Entrega_Computadora [34, 40] tiempo de proceso: 4 tiempo de proceso: 3 [11, 28] [11, 28] tiempo de proceso: 11 Obtener_Software Instalar_Software [28, 34] tiempo de proceso: 2 La Orden_Computadora comienza en el tiempo 11 y finaliza en el 40. La Figura 4: Un Ejemplo de Programación Local del Fabricante de PC muestra un ejemplo de programación local del fabricante de PC. Según este horario, siempre y cuando la tarea Ordenar Hardware se realice durante el tiempo [11, 28] y la tarea Entregar Computadora se realice durante el tiempo [34, 40], existe un horario factible para todas las tareas y la tarea Ordenar Computadora puede completarse para el tiempo 40, que es la fecha límite prometida al Cliente. Estos intervalos de tiempo asignados para la tarea de Ordenar Hardware y la tarea de Entregar Computadora se llaman intervalos consistentes; las negociaciones sobre estas tareas pueden realizarse de forma independiente dentro de estos intervalos sin preocuparse por conflictos. Ten en cuenta que cada tarea debe ser asignada con un rango de tiempo lo suficientemente amplio para acomodar el tiempo estimado de procesamiento de la tarea. Cuanto mayor sea el rango, más probable será que la negociación tenga éxito, ya que será más fácil para el otro agente encontrar un horario local para esta tarea. Entonces la pregunta es, ¿qué tan grande debería ser este intervalo de tiempo? Definimos una medida cuantitativa llamada flexibilidad: Dada una tarea t, supongamos que el rango de tiempo asignado para t es [est, dl], donde est es el tiempo de inicio más temprano y dl representa la fecha límite, la flexibilidad(t) = dl − est − tiempo de proceso(t) / tiempo de proceso(t) (3). La flexibilidad es un atributo importante porque afecta directamente el resultado posible de la negociación. La probabilidad de éxito de una negociación puede ser descrita como una función de la flexibilidad. En este trabajo, adoptamos la siguiente fórmula para la función de probabilidad de éxito basada en la flexibilidad del tema de negociación: ps(v) = pbs(v) ∗ (2/π) ∗ (arctan(f(v) + c))) (4) Esta función describe un fenómeno donde inicialmente la probabilidad de una negociación exitosa aumenta significativamente a medida que la flexibilidad crece, y luego se estabiliza posteriormente, lo que refleja nuestra experiencia de experimentos anteriores. pbs es la probabilidad básica de éxito de esta negociación v cuando la flexibilidad f(v) es muy grande. c es un parámetro utilizado para ajustar la relación. Diferentes patrones de función pueden resultar de diferentes valores de parámetros, como se muestra en la Figura 5. Esta función describe la suposición del agente sobre cómo respondería el otro agente involucrado en esta negociación a esta solicitud de negociación en particular, cuando tiene flexibilidad f(v). Esta función es parte del modelo local de los agentes sobre otros agentes. Para mejorar la precisión de esta función y hacerla más cercana a la realidad, el agente ajusta estos dos valores de acuerdo con la información de nivel meta transferida durante la fase de prenegociación. Los valores de c dependen de si hay negociaciones adicionales involucradas y si hay otras tareas compitiendo con esta tarea por recursos comunes. Si es así, se necesita más flexibilidad para este problema y, por lo tanto, c debería asignarse un valor más pequeño. En nuestra implementación, se utiliza el siguiente procedimiento para calcular c basado en la información de nivel meta negCount y PnoConflict: si (PnoConflict > 0.99) // no hay otra tarea competidora c = Clarge − negCount de lo contrario // existe una tarea competidora c = Csmall Este procedimiento funciona de la siguiente manera: cuando no hay otra tarea competidora, c depende del número de negociaciones adicionales necesarias. Cuanto más negociaciones adicionales sean necesarias, menor valor tiene la variable c, por lo tanto, se asignará más flexibilidad a este tema para garantizar el éxito de la negociación. Si no se necesita más negociación, c se asigna a un número grande Clarge, lo que significa que se necesita menos flexibilidad para este problema. Cuando hay otras tareas competidoras, c se asigna a un número pequeño Csmall, lo que significa que se necesita más flexibilidad para este problema. En nuestro trabajo experimental, tenemos Clarge como 5 y Csmall como 1. Estos valores son seleccionados de acuerdo a nuestra experiencia; sin embargo, un enfoque más práctico es que los agentes aprendan y ajusten dinámicamente estos valores. Esto también es parte de nuestro trabajo futuro. pbs se calcula en base a PnoConflict, f(v) (la flexibilidad de v en la negociación previa) y c, utilizando el formato inverso de la ecuación 4. pbs(v) = min(1.0, PnoConflict(v)∗(π/2)/(arctan(f(v)+c))) (5) Por ejemplo, basado en el escenario descrito anteriormente, los agentes tienen los siguientes valores para c y pbs basados en la información de nivel meta transferida: • Fabricante de PC, Orden de Hardware: pbs = 1.0, c = 2; • Centro de Distribución, Orden de Chips: pbs = 1.0, c = 5; • Agente de Tienda, Orden de Memoria: pbs = 0.79, c = 1; La Figura 5 muestra los diferentes patrones de la función de probabilidad de éxito dados diferentes valores de parámetros. Basándose en tales patrones, el Agente de Tienda asignaría más flexibilidad a la tarea de Memoria de Pedidos para aumentar la probabilidad de éxito en la negociación. En el proceso de negociación adicional de los agentes, se utiliza la fórmula 4 con diferentes valores de parámetros para razonar sobre cuánta flexibilidad se debe asignar a cierto tema. La comunicación previa a la negociación ocurre antes de la negociación, pero no antes de cada sesión de negociación. Los agentes solo necesitan comunicarse cuando el entorno cambia, por ejemplo, se generan nuevos tipos de tareas, las características de las tareas cambian, el socio de negociación cambia, etc. Si no ocurre ningún cambio importante, el agente puede simplemente utilizar el conocimiento actual de las comunicaciones anteriores. El sobrecoste de comunicación y computación de este mecanismo de prenegociación es muy pequeño, dada la sencilla procedimiento de recopilación de información y el breve mensaje a transferir. Discutiremos el efecto de este mecanismo en la Sección 5. 4.2 Duración y Plazo de Negociación En el modelo local de los agentes, hay dos atributos que describen cuán pronto el agente espera que el otro agente responda a la negociación v: duración de la negociación δ(v) y plazo de la negociación (v) 54 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Tabla 1: Ejemplos de negociaciones (δ(v): duración de la negociación, s.p.: probabilidad de éxito) índice nombre de la tarea δ(v) recompensa s.p. penalización 1 Ordenar Hardware 4 6 0.99 3 2 Ordenar Chips 4 1 0.99 0.5 3 Ordenar Memoria 4 1 0.80 0.5 4 Entregar Hardware 4 1 0.70 0.5 Estos dos atributos importantes que afectan la solución de la negociación. Parte de la solución de negociación es un ordenamiento de negociación φ que especifica en qué orden deben realizarse las múltiples negociaciones. Para controlar el proceso de negociación, cada negociación debe finalizarse antes de su fecha límite de negociación, y la duración de la negociación es el tiempo asignado para esta negociación. Si una negociación no puede ser finalizada durante el tiempo asignado, el agente debe detener esta negociación y considerarla como un fracaso. La decisión sobre el orden de negociación depende de la probabilidad de éxito, la recompensa y la penalización por desistimiento de cada negociación. Un buen orden de negociación debería reducir el riesgo de incumplimiento y, por lo tanto, disminuir la penalización por incumplimiento. Se ha desarrollado un algoritmo de búsqueda para encontrar dicho orden de negociación descrito en [10]. Por ejemplo, la Tabla 1 muestra algunas de las negociaciones para el Centro de Distribución y sus atributos relacionados. Dado suficiente tiempo (la fecha límite de negociación es mayor a 16), el mejor orden de negociación es: 4 → 3 → 2 → 1. La negociación más incierta (4: Entregar Hardware) se realiza primero. La negociación con la penalización más alta (1: Ordenar hardware) se realiza después de que todas las negociaciones relacionadas (2, 3 y 4) hayan sido completadas para reducir el riesgo de descompromiso. Si la fecha límite de negociación es menor a 12 y mayor a 8, se prefiere el siguiente orden de negociación: (4, 3, 2) → 1, lo que significa que las negociaciones 4, 3, 2 se pueden realizar en paralelo, y la 1 debe realizarse después de ellas. Si la fecha límite de negociación es inferior a 8, entonces todas las negociaciones deben realizarse en paralelo, ya que no hay tiempo para secuenciar las negociaciones. En el modelo original para un solo agente [10], se asume que la fecha límite de negociación (v) es establecida por el agente que inicia el contrato. La duración de la negociación δ(v) es una estimación de cuánto tiempo lleva la negociación basada en la experiencia. Sin embargo, la situación no es tan simple en un problema de cadena de negociación. Considerando el siguiente escenario. Cuando el cliente publica un contrato para la tarea Compra de Computadora, podría requerir que el Agente de la Tienda responda antes de la hora 20. El plazo de negociación para la compra de la computadora se considera como el tiempo 20. ¿Cuál es la fecha límite de negociación que el Agente de la Tienda debe especificar al negociar con el Fabricante de PC sobre el Pedido de Computadoras? La duración de la negociación sobre el pedido de computadoras depende de cómo el fabricante de PC maneje sus múltiples negociaciones locales: ya sea que responda primero al agente de la tienda o espere hasta que se hayan resuelto todas las demás negociaciones relacionadas. Sin embargo, el orden de las negociaciones depende de la fecha límite de negociación en Order Computer, la cual debe ser proporcionada por el Agente de la Tienda. La fecha límite de negociación de Order Computer para el Fabricante de PC se decide en realidad en función de la duración de la negociación de Order Computer para el Agente de la Tienda. Cuánto tiempo le gustaría al Agente de la Tienda pasar en la negociación del Pedido de Computadoras es su duración, y también determina la fecha límite de negociación para el Fabricante de PC. Ahora surge la pregunta: ¿cómo debería un agente decidir cuánto tiempo debería dedicar a cada negociación, lo cual afecta realmente las decisiones de negociación de los otros agentes? El modelo original no aborda esta pregunta ya que asume que la duración de la negociación δ(v) es conocida. Aquí proponemos tres enfoques diferentes para abordar este problema. 1. Política de misma fecha límite. Utilice la misma fecha límite de negociación para todas las negociaciones relacionadas, lo que significa asignar todo el tiempo disponible a todas las negociaciones: δ(v) = tiempo total disponible. Por ejemplo, si la fecha límite de negociación para la Compra de Computadora es 20, el Agente de la Tienda le dirá al Fabricante de PC que responda antes del 20 para la Orden de Computadora (ignorando el retraso en la comunicación). Esta estrategia permite que cada negociación tenga la mayor duración posible, sin embargo, también elimina la posibilidad de realizar negociaciones en secuencia: todas las negociaciones deben realizarse en paralelo porque el tiempo total disponible es igual a la duración de cada negociación. Política de plazo de meta-información. Asigna tiempo para cada negociación de acuerdo con la información de nivel meta transferida en la fase previa a la negociación. Una negociación más complicada, que involucra negociaciones adicionales, debería asignarse más tiempo. Por ejemplo, el fabricante de PC asigna una duración de 12 para la negociación de la Orden de Hardware, y una duración de 4 para la Entrega de la Computadora. La razón es que la negociación con el Centro de Distribución sobre el Pedido de Hardware es más complicada porque implica negociaciones adicionales entre el Centro de Distribución y otros agentes. En nuestra implementación, utilizamos el siguiente procedimiento para decidir la duración de la negociación δ(v): si (negCount(v) >= 3) // se necesita más negociación adicional δ(v) = (negCount(v)−1)∗ciclo de negociación básico de lo contrario, si (negCount(v) > 0) // se necesitan una o dos negociaciones adicionales δ(v) = 2 ∗ ciclo de negociación básico de lo contrario // no se necesita negociación adicional δ(v) = ciclo de negociación básico + 1 El ciclo de negociación básico representa el tiempo mínimo necesario para un ciclo de negociación (propuesta-pensamiento-respuesta), que es de 3 en nuestra configuración del sistema, incluido el retraso de comunicación. Se asigna una unidad de tiempo adicional para la negociación más simple porque le permite al agente realizar un proceso de razonamiento más complicado en su pensamiento. Nuevamente, la estructura de este procedimiento se selecciona según la experiencia, y puede ser aprendida y ajustada por los agentes de forma dinámica. Política de plazo dividido equitativamente. Divida equitativamente el tiempo disponible entre las n negociaciones relacionadas: δ(v) = tiempo total disponible/n Por ejemplo, si el tiempo actual es 0 y la fecha límite de negociación para Ordenador es 21, considerando otras dos negociaciones relacionadas, Orden de Hardware y Entrega de Ordenador, a cada negociación se le asigna una duración de 7. Intuitivamente sentimos que la estrategia 1 puede no ser buena, porque realizar todas las negociaciones en paralelo aumentaría el riesgo de desvinculación y, por lo tanto, también de penalizaciones por desvinculación. Sin embargo, no está muy claro cómo se desempeñan las estrategias 2 y 3, y discutiremos algunos resultados experimentales en la Sección 5.5. Para verificar y evaluar los mecanismos presentados para el problema de la cadena de negociación, implementamos el escenario descrito en la Figura 1. Nuevas tareas fueron generadas aleatoriamente con una tasa de penalización por desistimiento p ∈ [0, 1], una tasa de recompensa por finalización temprana e ∈ [0, 0.3], y una fecha límite dl ∈ [10, 60] (este rango permite diferentes flexibilidades disponibles para esas tareas subcontratadas), y llegaron al agente de la tienda periódicamente. Realizamos dos series de experimentos para estudiar The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 55 Tabla 2: Valores de Parámetros Sin/Con Información Meta-Nivel fija-flexible meta-info-flex negociación pbs pbs c Ordenador 0.95 1.0 0 Orden Memoria (1) 0.95 0.79 1 Orden Hardware 0.95 1.0 2 Entregar Ordenador 0.95 1.0 1 Entregar Hardware 0.95 1.0 5 Ordenar Chips 0.95 1.0 1 Orden Memoria (2) 0.95 0.76 1 Figura 6: Diferentes Políticas de Flexibilidad cómo las funciones de probabilidad de éxito y los plazos de negociación afectan el resultado de la negociación, las utilidades de los agentes y la utilidad general del sistema. En este experimento, los agentes deben tomar decisiones sobre el orden de negociación y la asignación de características para múltiples atributos, incluyendo: hora de inicio más temprana, plazo, hora de finalización prometida y aquellos atributos de negociación. Para centrarse en el estudio de la flexibilidad, en este experimento, las recompensas regulares para cada tipo de tarea están fijas y no son negociables. Aquí solo describimos cómo los agentes manejan la duración de la negociación y los plazos de la negociación porque son los atributos afectados por la fase de prenegociación. Todos los demás atributos involucrados en la negociación se manejan de acuerdo a cómo afectan la viabilidad del horario local (atributos relacionados con el tiempo) y cómo afectan la probabilidad de éxito de la negociación (atributos relacionados con el tiempo y el costo) y cómo afectan la utilidad esperada. Se utiliza un algoritmo de búsqueda [10] y un conjunto de algoritmos de programación de órdenes parciales para manejar estos atributos. Probamos dos políticas de flexibilidad diferentes. 1. política de flexibilidad fija: el agente utiliza un valor fijo como la probabilidad de éxito (ps(v) = pbs(v)), de acuerdo con su conocimiento y estimación local. 2. política de flexibilidad de meta-información: el agente utiliza la función ps(v) = pbs(v) ∗ (2/π) ∗ (arctan(f(v) + c))) para modelar la probabilidad de éxito. También ajusta esos parámetros (pbs(v) y c) de acuerdo con la información a nivel meta obtenida en la fase de prenegociación descrita en la Sección 4. La Tabla 2 muestra los valores de esos parámetros para algunas negociaciones. La Figura 6 muestra los resultados de este experimento. Este conjunto de experimentos incluye 10 ejecuciones del sistema, y cada ejecución es de 1000 unidades de tiempo de simulación. En las primeras 200 unidades de tiempo, los agentes están aprendiendo sobre las características de la tarea, las cuales se utilizarán para calcular las probabilidades de conflicto Pcij. En el tiempo 200, los agentes realizan comunicación de información a nivel meta, y en las siguientes 800 unidades de tiempo, los agentes utilizan la información a nivel meta en su proceso de razonamiento local. Los datos fueron recopilados durante las 800 unidades de tiempo después de la pre-negociación de la Figura 7: Fase 2 de las diferentes políticas de plazos de negociación. Se genera una tarea de Compra de Computadora cada 20 unidades de tiempo, y se generan dos tareas de Compra de Memoria cada 20 unidades de tiempo. La fecha límite para la tarea Compra de Computadora se genera aleatoriamente en el rango de [30, 60], la fecha límite para la tarea Compra de Memoria está en el rango de [10, 30]. La tasa de penalización por desvinculación se genera aleatoriamente en el rango de [0, 1]. Esta configuración crea múltiples situaciones de cadenas de negociación concurrentes; hay una cadena larga: Cliente - Tienda - Fabricante de PC - Centro de Distribución - Productores - Transportista y dos cadenas cortas: Cliente - Tienda - Fabricante de Memorias. Esto demuestra que este mecanismo es capaz de manejar múltiples cadenas de negociación concurrentes. Todos los agentes tienen un mejor rendimiento en este ejemplo (obtienen más utilidad) cuando utilizan la información a nivel meta para ajustar su control local a través de los parámetros en la función de probabilidad de éxito (política de flexibilidad de meta-información). Especialmente para aquellos agentes en medio de la cadena de negociación, como el Fabricante de PC y el Centro de Distribución, la política de flexibilidad marca una diferencia significativa. Cuando el agente tiene una mejor comprensión del escenario de negociación global, puede asignar más flexibilidad para aquellas tareas que implican negociaciones complicadas y conflictos de recursos. Por lo tanto, la probabilidad de éxito aumenta y se rechazan o cancelan menos tareas (el 90% de las tareas se han negociado con éxito cuando se utiliza información a nivel meta, en comparación con el 39% cuando no se utiliza prenegociación), lo que resulta en un mejor rendimiento tanto para el agente como para el sistema. En el segundo conjunto de experimentos, comparamos tres políticas de plazos de negociación descritas en la Sección 4.2 al utilizar la política de flexibilidad de meta-información descrita anteriormente. El resultado inicial muestra que la política de misma fecha límite y la política de fecha límite de meta-información tienen un rendimiento casi igual cuando el nivel de carga de trabajo del sistema es moderado, las tareas pueden ser acomodadas con suficiente flexibilidad. En esta situación, con cualquiera de las políticas, la mayoría de las negociaciones son exitosas y hay pocas desvinculaciones, por lo que el orden de las negociaciones no marca demasiada diferencia. Por lo tanto, en este segundo conjunto de experimentos, aumentamos el número de nuevas tareas generadas para aumentar la carga de trabajo promedio en el sistema. Se genera una tarea de Compra de Computadora cada 15 unidades de tiempo, tres tareas de Compra de Memoria se generan cada 2. Solo medimos la utilidad recolectada después de la fase de aprendizaje porque esta fase de aprendizaje es relativamente corta en comparación con la fase de evaluación, además, durante la fase de aprendizaje, no se utiliza información de nivel meta, por lo que algunas de las políticas son inválidas. 56 La Sexta Conferencia Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) genera una tarea de Entrega de Regalo (directamente del cliente al Transportista) cada 10 unidades de tiempo, durante 15 unidades de tiempo. Esta configuración genera un nivel más alto de carga de trabajo del sistema, lo que resulta en que algunas tareas no se completen sin importar el orden de negociación utilizado. En esta situación, encontramos que la política de meta-información-plazo límite funciona mucho mejor que la política de mismo plazo límite (Ver Figura 7). Cuando un agente utiliza la política de misma fecha límite, todas las negociaciones deben realizarse en paralelo. En caso de que una negociación falle, todas las tareas relacionadas deben ser canceladas, y el agente debe pagar múltiples penalizaciones por incumplimiento. Cuando el agente utiliza la política de meta-información-plazo, las negociaciones complicadas reciben más tiempo y, en correspondencia, las negociaciones más simples reciben menos tiempo. Esto también tiene el efecto de permitir que algunas negociaciones se realicen en secuencia. La consecuencia de la negociación secuencial es que, si hay un fracaso, un agente puede simplemente cancelar las otras negociaciones relacionadas que no han comenzado. De esta manera, el agente no tiene que pagar una penalización por desistimiento por esas negociaciones canceladas porque aún no se ha establecido ningún compromiso. La política de plazos divididos equitativamente funciona mucho peor que la política de plazos de meta-información. En la política de plazos divididos equitativamente, el agente asigna el tiempo de negociación de manera equitativa entre las negociaciones relacionadas, por lo tanto, la negociación complicada no recibe suficiente tiempo para completarse. Los resultados del experimento anterior muestran que la información de nivel meta transferida entre agentes durante la fase de prenegociación es crucial para construir un modelo más preciso del problema de negociación. El proceso de razonamiento basado en este modelo más preciso produce una solución de negociación eficiente, que mejora significativamente la utilidad general de los agentes y los sistemas. Esta conclusión es válida para aquellos entornos donde el sistema enfrenta una carga moderadamente pesada y las tareas tienen plazos de tiempo relativamente ajustados (nuestra configuración experimental es producir dicho entorno); la negociación eficiente es especialmente importante en tales entornos. 6. TRABAJO RELACIONADO Fatima, Wooldridge y Jennings [1] estudiaron los múltiples problemas en la negociación en términos de la agenda y el procedimiento de negociación. Sin embargo, este trabajo es limitado ya que solo involucra la perspectiva de un único agente sin comprender que el agente puede formar parte de una cadena de negociación. Mailler y Lesser [4] han presentado un enfoque para un problema de asignación de recursos distribuidos donde ocurre el escenario de cadena de negociación. El problema de negociación se modela como un problema de optimización de restricciones distribuidas (DCOP) y se utiliza un mecanismo de mediación cooperativa para centralizar las partes relevantes del DCOP. En nuestro trabajo, la negociación implica cuestiones más complicadas como recompensas, penalizaciones y utilidad; además, adoptamos un enfoque de distribución donde no se necesita control centralizado. Se ha aplicado un enfoque parcial centralizado basado en mediadores para la coordinación y programación de una red de tareas complejas [8], lo cual es diferente a nuestro trabajo ya que el sistema es un sistema cooperativo completo y la utilidad individual de un solo agente no se considera en absoluto. Una subasta combinatoria [2, 9] podría ser otro enfoque para resolver el problema de la cadena de negociación. Sin embargo, en una subasta combinatoria, el agente no razona sobre el orden de las negociaciones. Esto llevaría a un problema similar a los que discutimos cuando se utiliza la política de misma fecha límite. 7. CONCLUSIÓN Y TRABAJOS FUTUROS En este artículo, hemos resuelto problemas de cadenas de negociación al extender nuestro modelo de negociación multi-vinculado desde la perspectiva de un solo agente a múltiples agentes. En lugar de resolver el problema de la cadena de negociación de forma centralizada, adoptamos un enfoque distribuido donde cada agente tiene un modelo local extendido y un proceso de toma de decisiones. Hemos introducido una fase de prenegociación que permite a los agentes transferir información a nivel meta sobre temas de negociación relacionados. Usando esta información, el agente puede construir un modelo más preciso de la negociación en términos de modelar la relación entre flexibilidad y probabilidad de éxito. Este modelo más preciso ayuda al agente a elegir la solución de negociación apropiada. Los datos experimentales muestran que estos mecanismos mejoran significativamente el rendimiento de los agentes y de los sistemas en general. En futuras extensiones de este trabajo, nos gustaría desarrollar mecanismos para verificar qué tan confiables son los agentes. También reconocemos que el enfoque actual de aplicar la información a nivel meta es principalmente heurístico, por lo que nos gustaría desarrollar un mecanismo de aprendizaje que permita al agente aprender a utilizar dicha información para ajustar su modelo local a partir de experiencias previas. Para verificar aún más este enfoque distribuido, nos gustaría desarrollar un enfoque centralizado, para poder evaluar qué tan buena es la solución de este enfoque distribuido en comparación con la solución óptima encontrada por el enfoque centralizado. REFERENCIAS [1] S. S. Fatima, M. Wooldridge y N. R. Jennings. Estrategias óptimas de negociación para agentes con información incompleta. En los Artículos Revisados del 8vo Taller Internacional sobre Agentes Inteligentes VIII, páginas 377-392. Springer-Verlag, 2002. [2] L. Hunsberger y B. J. Grosz. Una subasta combinatoria para la planificación colaborativa. En Actas de la Cuarta Conferencia Internacional sobre Sistemas Multiagente (ICMAS-2000), 2000. [3] N. R. Jennings, P. Faratin, T. J. Norman, P. OBrien, B. Odgers y J. L. Alty. Implementando un sistema de gestión de procesos empresariales utilizando Adept: Un estudio de caso del mundo real. Int. Revista de Inteligencia Artificial Aplicada, 2000. [4] R. Mailler y V. Lesser. Un protocolo cooperativo basado en mediación para la asignación dinámica y distribuida de recursos. IEEE Transaction on Systems, Man, and Cybernetics, Part C, Edición Especial sobre Análisis Teórico de Juegos y Simulación Estocástica de Agentes de Negociación, 2004. [5] T. J. Norman, A. Preece, S. Chalmers, N. R. Jennings, M. Luck, V. D. Dang, T. D. Nguyen, V. Deora, J. Shao, A. Gray, y N. Fiddian. Formación de organizaciones virtuales basadas en agentes. Int. I'm sorry, but the sentence "J." does not have a clear meaning or context for translation. Could you please provide more information or a complete sentence for me to translate into Spanish? Sistemas basados en el conocimiento, 17(2-4):103-111, 2004. [6] T. Sandholm y V. Lesser. Problemas en la negociación automatizada y el comercio electrónico: Ampliando el marco de la red de contratos. En Actas de la Primera Conferencia Internacional sobre Sistemas Multiagente (ICMAS95), páginas 328-335, 1995. [7] J. Shen, X. Zhang y V. Lesser. Grado de cooperación local y su implicación en la utilidad global. Actas de la Tercera Conferencia Internacional Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 2004), julio de 2004. [8] M. Sims, H. Mostafa, B. Horling, H. Zhang, V. Lesser y D. Corkill. Centralización parcial lateral y jerárquica para la coordinación distribuida y programación de redes de tareas jerárquicas complejas. Simposio de Primavera AAAI 2006 sobre Gestión Distribuida de Planes y Horarios, 2006. [9] W. Walsh, M. Wellman y F. Ygge. Subastas combinatorias para la formación de cadenas de suministro. En la Segunda Conferencia ACM sobre Comercio Electrónico, 2000. [10] X. Zhang, V. Lesser y S. Abdallah. Gestión eficiente de negociaciones multi-vinculadas basada en un modelo formalizado. Agentes Autónomos y Sistemas Multiagente, 10(2):165-205, 2005. [11] X. Zhang, V. Lesser y T. Wagner. Negociación integradora entre agentes situados en organizaciones. IEEE Transactions on System, Man, and Cybernetics: Part C, Edición Especial sobre Análisis Teórico de Juegos y Simulación Estocástica de Agentes de Negociación, 36(1):19-30, enero de 2006. [12] Q. Zheng y X. Zhang. Formación y análisis automático de organizaciones virtuales de múltiples agentes. Revista de la Sociedad Brasileña de Computación: Edición Especial sobre Agentes Organizaciones, 11(1):74-89, julio de 2005. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 57