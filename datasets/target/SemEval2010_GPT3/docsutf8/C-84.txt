Caché egoísta en sistemas distribuidos: un análisis teórico de juegos Byung-Gon Chun ∗ bgchun@cs.berkeley.edu Kamalika Chaudhuri † kamalika@cs.berkeley.edu Hoeteck Wee ‡ hoeteck@cs.berkeley.edu Marco Barreno § barreno@cs.berkeley.edu Christos H. Papadimitriou † christos@cs.berkeley.edu John Kubiatowicz ∗ kubitron@cs.berkeley.edu División de Ciencias de la Computación Universidad de California, Berkeley RESUMEN Analizamos la replicación de recursos por nodos servidores que actúan de manera egoísta, utilizando un enfoque teórico de juegos. Nos referimos a esto como el problema de almacenamiento en caché egoísta. En nuestro modelo, los nodos incurren en costos ya sea por replicar recursos o por acceder a una réplica remota. Mostramos la existencia de equilibrios de Nash de estrategia pura e investigamos el precio de la anarquía, que es el costo relativo de la falta de coordinación. El precio de la anarquía puede ser alto debido a problemas de escasez, pero con ciertas topologías de red tiene límites mejores. Con un esquema de pago, el juego siempre puede implementar el óptimo social en el mejor de los casos al dar incentivos a los servidores para replicar. Categorías y Descriptores de Asignaturas C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos Términos Generales Algoritmos, Economía, Teoría, Rendimiento 1. INTRODUCCIÓN Los sistemas de archivos de pares a nivel mundial [2,5,22,32,33], las cachés de pares a nivel mundial [15, 16] y las cachés web [6, 10] se han vuelto populares en los últimos años. La caché de archivos en servidores seleccionados se utiliza ampliamente para mejorar el rendimiento, la disponibilidad y la fiabilidad de estos sistemas. Sin embargo, la mayoría de estos sistemas asumen que los servidores cooperan entre sí siguiendo protocolos optimizados para el rendimiento general del sistema, independientemente de los costos incurridos por cada servidor. En realidad, los servidores pueden comportarse de manera egoísta, buscando maximizar su propio beneficio. Por ejemplo, las partes en diferentes dominios administrativos utilizan sus recursos locales (servidores) para brindar un mejor soporte a los clientes en sus propios dominios. Tienen incentivos evidentes para almacenar en caché objetos que maximicen el beneficio en sus dominios, posiblemente a expensas de un comportamiento óptimo a nivel global. Ha sido una pregunta abierta si estos escenarios y protocolos de almacenamiento en caché mantienen sus propiedades globales deseables (como un bajo costo social total, por ejemplo) frente al comportamiento egoísta. En este artículo, adoptamos un enfoque de teoría de juegos para analizar el problema de almacenamiento en caché en redes de servidores egoístas a través de análisis teóricos y simulaciones. Modelamos el almacenamiento en caché egoísta como un juego no cooperativo. En el modelo básico, los servidores tienen dos acciones posibles para cada objeto. Si se encuentra una réplica de un objeto solicitado en un nodo cercano, el servidor puede tener más ventaja accediendo a la réplica remota. Por otro lado, si todas las réplicas están ubicadas demasiado lejos, es mejor que el servidor almacene en caché el objeto en sí mismo. Las decisiones sobre almacenar en caché las réplicas localmente se toman localmente, teniendo en cuenta solo los costos locales. También definimos un modelo de pago más elaborado, en el cual cada servidor hace una oferta para tener un objeto replicado en otro sitio. Cada sitio ahora tiene la opción de replicar un objeto y recopilar las ofertas relacionadas. Una vez que todos los servidores hayan elegido una estrategia, cada juego especifica una configuración, es decir, el conjunto de servidores que replican el objeto y los costos correspondientes para todos los servidores. La teoría de juegos predice que tal situación terminará en un equilibrio de Nash, es decir, un conjunto de estrategias (posiblemente aleatorias) con la propiedad de que ningún jugador puede beneficiarse al cambiar su estrategia mientras los otros jugadores mantienen sus estrategias sin cambios [28]. Consideraciones fundamentales no obstante, no es fácil aceptar estrategias aleatorias como el comportamiento de agentes racionales en un sistema distribuido (ver [28] para una discusión extensa) - pero esto es lo que la teoría clásica de juegos puede garantizar. En ciertas situaciones muy afortunadas, sin embargo (ver [9]), se puede predecir la existencia de equilibrios de Nash puros (es decir, deterministas). Con o sin aleatorización, sin embargo, la falta de coordinación inherente en la toma de decisiones egoístas puede incurrir en costos mucho más allá de lo que sería óptimo a nivel global. Esta pérdida de eficiencia se cuantifica mediante el precio del anarquía [21]. Utilizaremos el almacenamiento en caché y la replicación de forma intercambiable. Utilizamos el término objeto como una entidad abstracta que representa archivos y otros objetos de datos. El precio del desorden es la proporción entre el costo social (total) del peor equilibrio de Nash posible y el costo del óptimo social. El precio del desorden limita el peor comportamiento posible de un sistema egoísta, cuando se deja completamente a su suerte. Sin embargo, en realidad existen formas mediante las cuales el sistema puede ser guiado, ya sea a través de siembra o incentivos, hacia un equilibrio de Nash preseleccionado. Esta versión optimista del precio del anarquía [3] se captura mediante la menor proporción entre un equilibrio de Nash y el óptimo social. En este documento abordamos las siguientes preguntas: • ¿Existen equilibrios de Nash de estrategia pura en el juego de almacenamiento en caché? • Si existen equilibrios de Nash de estrategia pura, ¿qué tan eficientes son (en términos del precio del anarquía, o su contraparte optimista) bajo diferentes costos de ubicación, topologías de red y distribuciones de demanda? • ¿Cuál es el efecto de adoptar pagos? ¿Se mejorarán los equilibrios de Nash? Mostramos que los equilibrios de Nash de estrategia pura siempre existen en el juego de almacenamiento en caché. El precio del desorden del modelo de juego básico puede ser O(n), donde n es el número de servidores; la razón intuitiva es la insuficiencia de suministro. Bajo ciertas topologías, el precio de la anarquía tiene límites más estrictos. Para grafos completos y estrellas, es O(1). Para redes de D dimensiones, es O(n D D+1). Incluso el precio de anarquía optimista puede ser O(n). En el modelo de pago, sin embargo, el juego siempre puede implementar un equilibrio de Nash que sea igual al óptimo social, por lo que el precio de anarquía optimista es uno. Nuestros resultados de simulación muestran varias fases interesantes. A medida que el costo de ubicación aumenta desde cero, el precio del desorden aumenta. Cuando el costo de ubicación excede por primera vez la distancia máxima entre servidores, el precio de la anarquía alcanza su punto máximo debido a problemas de insuficiencia de suministro. A medida que el costo de ubicación aumenta aún más, el precio del desorden disminuye, y el efecto de la mala ubicación de réplicas domina el precio del desorden. El resto del documento está organizado de la siguiente manera. En la Sección 2 discutimos el trabajo relacionado. La sección 3 discute los detalles del juego básico y analiza los límites del precio de la anarquía. En la Sección 4 discutimos el juego de pagos y analizamos su precio de la anarquía. En la Sección 5 describimos nuestra metodología de simulación y estudiamos las propiedades de los equilibrios de Nash observados. Discutimos extensiones del juego y direcciones para trabajos futuros en la Sección 6.2. TRABAJO RELACIONADO Ha habido una considerable investigación sobre sistemas de archivos peer-to-peer de área amplia como OceanStore [22], CFS [5], PAST [32], FARSITE [2] y Pangaea [33], cachés web como NetCache [6] y SummaryCache [10], y cachés peer-to-peer como Squirrel [16]. La mayoría de estos sistemas utilizan almacenamiento en caché para mejorar el rendimiento, la disponibilidad y la fiabilidad. Los protocolos de almacenamiento en caché asumen obediencia al protocolo e ignoran los incentivos de los participantes. Nuestro trabajo parte del supuesto de que los servidores son egoístas y cuantifica el costo de la falta de coordinación cuando los servidores se comportan de manera egoísta. La ubicación de réplicas en el problema de almacenamiento en caché es el tema más importante. Hay mucho trabajo en la ubicación de réplicas web, servidores de instrumentación y recursos replicados. Todos los protocolos asumen obediencia e ignoran los incentivos de los participantes. En [14], Gribble et al. discuten el problema de la ubicación de datos en sistemas peer-to-peer. Ko y Rubenstein proponen un algoritmo de coloración de grafos autoestabilizante y distribuido para la colocación de recursos replicados [20]. Chen, Katz y Kubiatowicz proponen un algoritmo de ubicación dinámica de réplicas que explota las tablas hash distribuidas subyacentes [4]. Douceur y Wattenhofer describen un algoritmo de escalada de colina para intercambiar réplicas por confiabilidad en FARSITE [8]. RaDar es un sistema que replica y migra objetos para un servicio de alojamiento en Internet [31]. Tang y Chanson proponen un almacenamiento en caché web en ruta coordinado que almacena objetos a lo largo de la ruta de enrutamiento [34]. Los algoritmos centralizados para la ubicación de objetos, servidores proxy web, espejos y servidores de instrumentación en Internet han sido estudiados extensamente [18,19,23,30]. El problema de ubicación de instalaciones ha sido ampliamente estudiado como un problema de optimización centralizado en la ciencia de la computación teórica y la investigación de operaciones [27]. Dado que el problema es NP-duro, se han explorado algoritmos de aproximación basados en técnicas primal-dual, algoritmos voraces y búsqueda local [17, 24, 26]. Nuestro juego de almacenamiento en caché es diferente de todos estos en que el proceso de optimización se realiza entre servidores egoístas distribuidos. Hay poca investigación en juegos de localización de instalaciones no cooperativas, hasta donde sabemos. Vetta [35] considera una clase de problemas donde la utilidad social es submodular (la submodularidad significa una utilidad marginal decreciente). En el caso de la ubicación competitiva de instalaciones entre corporaciones, demuestra que cualquier equilibrio de Nash proporciona una utilidad social esperada dentro de un factor de 2 del óptimo más un término aditivo que depende del costo de apertura de la instalación. Sus resultados no son directamente aplicables a nuestro problema, sin embargo, ya que consideramos que cada servidor está vinculado a una ubicación particular, mientras que en su modelo un agente puede abrir instalaciones en múltiples ubicaciones. Ten en cuenta que en ese artículo el aumento del precio de la anarquía se debe a problemas de exceso de oferta debido a que las corporaciones competidoras pueden abrir instalaciones en el mismo lugar. Por otro lado, los problemas significativos en nuestro juego son la escasez y la mala ubicación. En un artículo reciente, Goemans et al. analizan la distribución de contenido en redes inalámbricas ad-hoc utilizando un enfoque de teoría de juegos [12]. En nuestro trabajo, proporcionan incentivos monetarios a los usuarios móviles para almacenar en caché elementos de datos, y establecen límites estrictos sobre el precio de la anarquía y la velocidad de convergencia a equilibrios de Nash (aproximados). Sin embargo, sus resultados no son comparables a los nuestros porque sus funciones de recompensa no tienen en cuenta las latencias de red entre usuarios, consideran múltiples elementos de datos (mercados) y cada nodo tiene un presupuesto limitado para almacenar en caché elementos. El reparto de costos en el problema de localización de instalaciones ha sido estudiado utilizando la teoría de juegos cooperativos [7, 13, 29]. Goemans y Skutella muestran fuertes conexiones entre asignaciones de costos justos y relajaciones de programación lineal para problemas de ubicación de instalaciones [13]. P´al y Tardos desarrollan un método de reparto de costos que es aproximadamente equilibrado en presupuesto y a prueba de estrategias de grupo, y demuestran que el método recupera 1/3 del costo total para el juego de ubicación de instalaciones [29]. Devanur, Mihail y Vazirani proponen una asignación de costos a prueba de estrategias para el problema de ubicación de instalaciones, pero no logran alcanzar la estrategia grupal a prueba de fallos [7]. 3. El problema de almacenamiento en caché que estudiamos consiste en encontrar una configuración que cumpla ciertos objetivos (por ejemplo, costo total mínimo). La Figura 1 muestra ejemplos de almacenamiento en caché entre cuatro servidores. En la red (a), A almacena un objeto. Supongamos que B quiere acceder al objeto. Si es más barato acceder a la réplica remota que almacenarla en caché, B accede a la réplica remota como se muestra en la red (b). En la red (c), C quiere acceder al objeto. Si C está lejos de A, C almacena en caché el objeto en lugar de acceder al objeto desde A. Es posible que en una configuración óptima sea mejor colocar réplicas en A y B. El entendimiento de la colocación de réplicas por servidores egoístas es el enfoque de nuestro estudio. El problema de almacenamiento en caché se abstrae de la siguiente manera. Hay un conjunto N de n servidores y un conjunto M de m objetos. La distancia entre servidores se puede representar como una matriz de distancias D (es decir, dij es la distancia 22 Servidor Servidor Servidor Servidor A B C D (a) Servidor Servidor Servidor Servidor A B C D (b) Servidor Servidor Servidor Servidor A B C D (c) Figura 1: Caché. Hay cuatro servidores etiquetados como A, B, C y D. Los rectángulos son réplicas de objetos. En (a), A almacena un objeto. Si B incurre en menos costos accediendo a la réplica de A que almacenando el objeto en sí mismo, accede al objeto desde A como en (b). Si el costo de la distancia es demasiado alto, el servidor almacena en caché el objeto en sí mismo, como lo hace C en (c). Esta figura es un ejemplo de nuestro modelo de juego de almacenamiento en caché, desde el servidor i hasta el servidor j. El modelo D representa una topología de red subyacente. Para nuestro análisis asumimos que las distancias son simétricas y que se cumple la desigualdad triangular en las distancias (para todos los servidores i, j, k: dij + djk ≥ dik). Cada servidor tiene demanda de clientes que está representada por una matriz de demanda W (es decir, wij es la demanda del servidor i para el objeto j). Cuando un servidor almacena en caché objetos, el servidor incurre en un costo de ubicación que está representado por una matriz α (es decir, αij es el costo de ubicación del servidor i para el objeto j). En este estudio, asumimos que los servidores no tienen límite de capacidad. Como discutiremos en la siguiente sección, este hecho significa que el comportamiento de almacenamiento en caché con respecto a cada objeto puede ser examinado por separado. Por consiguiente, podemos hablar sobre las configuraciones del sistema con respecto a un objeto dado: DEFINICIÓN 1. Una configuración X para un objeto O es el conjunto de servidores que replican este objeto. El objetivo del juego básico es encontrar configuraciones que se logran cuando los servidores optimizan sus funciones de costo localmente. 3.1 Modelo de Juego Adoptamos un enfoque de teoría de juegos para analizar el problema de almacenamiento en caché sin capacidad entre servidores egoístas en red. Modelamos el problema de almacenamiento en caché egoísta como un juego no cooperativo con n jugadores (servidores/nodos) cuyas estrategias son conjuntos de objetos para almacenar en caché. En el juego, cada servidor elige una estrategia pura que minimiza su costo. Nuestro enfoque es investigar la configuración resultante, que es el equilibrio de Nash del juego. Se debe enfatizar que consideramos únicamente equilibrios de Nash de estrategia pura en este artículo. El modelo de costos es una parte importante del juego. Sea Ai el conjunto de estrategias factibles para el servidor i, y sea Si ∈ Ai la estrategia elegida por el servidor i. Dado un perfil de estrategia S = (S1, S2, ..., Sn), el costo incurrido por el servidor i se define como: Ci(S) = j∈Si αij + j /∈Si wij di (i,j). (1) donde αij es el costo de ubicación del objeto j, wij es la demanda que el servidor i tiene para el objeto j, (i, j) es el servidor más cercano a i que almacena en caché el objeto j, y dik es la distancia entre i y k. Cuando ningún servidor almacena en caché el objeto, definimos el costo de distancia di (i,j) como lo suficientemente grande (dM) para que al menos un servidor elija almacenar en caché el objeto. El costo de ubicación se puede dividir aún más en el costo de instalación inicial y el costo de mantenimiento: αij = k1i + k2i UpdateSizej ObjectSizej 1 T Pj k wkj , (2) donde k1i es el costo de instalación, k2i es el peso relativo entre el costo de mantenimiento y el costo de instalación, Pj es la proporción del número de escrituras sobre el número de lecturas y escrituras, UpdateSizej es el tamaño de una actualización, ObjectSizej es el tamaño del objeto, y T es el período de actualización. Observamos compensaciones entre diferentes parámetros en esta ecuación. Por ejemplo, colocar réplicas se vuelve más costoso a medida que aumenta UpdateSizej, Pj aumenta o T disminuye. Sin embargo, hay que tener en cuenta que al variar αij en sí mismo podemos capturar toda la gama de comportamientos en el juego. Para nuestro análisis, solo utilizamos αij. Dado que no hay límite de capacidad en los servidores, podemos considerar cada objeto individual como un juego separado y combinar los equilibrios de estrategia pura de estos juegos para obtener un equilibrio de estrategia pura del juego multiobjeto. Fabrikant, Papadimitriou y Talwar discuten este argumento de existencia: si se sabe que dos juegos tienen equilibrios puros, y sus funciones de costo son cruz-monótonas, entonces se garantiza que su unión también tendrá equilibrios de Nash puros, mediante un argumento de continuidad [9]. Un equilibrio de Nash para el juego multi-objetivo es el producto cruzado de equilibrios de Nash para juegos de un solo objeto. Por lo tanto, podemos centrarnos en el juego de un solo objeto en el resto de este documento. Para el almacenamiento en caché egoísta de un solo objeto, cada servidor i tiene dos estrategias: almacenar en caché o no almacenar en caché. El objeto bajo consideración es j. Definimos Si como 1 cuando el servidor i almacena en caché j y 0 en caso contrario. El costo incurrido por el servidor i es Ci(S) = αij Si + wij di (i,j)(1 − Si). Nos referimos a este juego como el juego básico. El alcance en el que Ci(S) representa el costo real incurrido por el servidor i está más allá del alcance de este documento; asumiremos que se puede definir una función de costo apropiada en la forma de la Ecuación 3.2 Soluciones de Equilibrio de Nash En principio, podemos comenzar con una configuración aleatoria y permitir que esta configuración evolucione a medida que cada servidor altera su estrategia e intenta minimizar su costo. La teoría de juegos se interesa en soluciones estables llamadas equilibrios de Nash. Un equilibrio de Nash de estrategia pura se alcanza cuando ningún servidor puede beneficiarse al cambiar unilateralmente su estrategia. Un equilibrio de Nash (S∗ i , S∗ −i) para el juego básico especifica una configuración X tal que ∀i ∈ N, i ∈ X ⇔ S∗ i = 1. Por lo tanto, podemos considerar un conjunto E de todas las configuraciones de equilibrio de Nash de estrategia pura: X ∈ E ⇔ ∀i ∈ N, ∀Si ∈ Ai, Ci(S∗ i , S∗ −i) ≤ Ci(Si, S∗ −i) (4) Según esta definición, ningún servidor tiene incentivo para desviarse en las configuraciones ya que no puede reducir su costo. Para el juego básico, podemos ver fácilmente que: X ∈ E ⇔ ∀i ∈ N, ∃j ∈ X tal que dji ≤ α y ∀j ∈ X, ¬∃k ∈ X tal que dkj < α (5). La primera condición garantiza que hay un servidor que coloca la réplica a una distancia α de cada servidor i. Si la réplica no se coloca 3 La notación para el perfil estratégico (S∗ i , S∗ −i) separa la estrategia del nodo i (S∗ i ) de las estrategias de los otros nodos (S∗ −i). 23 A B1−α 0 0 0 0 0 0 0 0 0 0 2 n nodos 2 n nodos (a) A B1−α 0 0 0 0 0 0 0 0 0 0 2 n nodos 2 n nodos (b) A B1−α 2 n nodos 2 n nodos n2 n2 n2 n2 n2 n2 n2 n2 n2 n2 (c) Figura 2: Ineficiencia potencial de los equilibrios de Nash ilustrada por dos grupos de n 2 servidores. Las distancias intra-cluster son todas cero y la distancia entre clusters es α − 1, donde α es el costo de ubicación. Los nodos oscuros replican el objeto. La red (a) muestra un equilibrio de Nash en el juego básico, donde un servidor en un clúster almacena en caché el objeto. La red (b) muestra el óptimo social donde se colocan dos réplicas, una para cada clúster. El precio del anarquismo es O(n) e incluso el precio del anarquismo optimista es O(n). Este alto precio de la anarquía proviene de la escasez de réplicas debido a la naturaleza egoísta de los servidores. La red (c) muestra un equilibrio de Nash en el juego de pagos, donde se colocan dos réplicas, una para cada clúster. Cada nodo de luz en cada clúster paga 2/n al nodo oscuro, y el nodo oscuro replica el objeto. Aquí, el precio de anarquía optimista es uno. En i, luego se coloca en otro servidor a una distancia α de i, por lo que i no tiene incentivo para almacenar en caché. Si la réplica se coloca en i, entonces la segunda condición asegura que no hay incentivo para eliminar la réplica porque ningún par de servidores separados por una distancia menor que α colocan réplicas. Óptimo social El costo social de un perfil de estrategia dado se define como el costo total incurrido por todos los servidores, a saber: C(S) = n−1 i=0 Ci(S) (6) donde Ci(S) es el costo incurrido por el servidor i dado por la Ecuación 1. El costo óptimo social, referido como C(SO) en el resto del documento, es el costo social mínimo. El costo óptimo social servirá como un caso base importante para medir el costo del almacenamiento en caché egoísta. Definimos C(SO) como: C(SO) = min S C(S) (7) donde S varía sobre todos los perfiles de estrategia posibles. Ten en cuenta que en el juego básico, esto significa variar la configuración X sobre todas las configuraciones posibles. En cierto sentido, C(SO) representa el mejor comportamiento de almacenamiento en caché posible, si solo se pudiera convencer a los nodos para cooperar entre sí. La configuración óptima social es una solución de un problema de ubicación de instalaciones de mini-suma, el cual es NP-duro [11]. Para encontrar tales configuraciones, formulamos un problema de programación entera: minimizar Σi Σj αij xij + Σk wij dikyijk sujeto a ∀i, j Σk yijk = I(wij) ∀i, j, k xij − ykji ≥ 0 ∀i, j xij ∈ {0, 1} ∀i, j, k yijk ∈ {0, 1} (8) Aquí, xij es 1 si el servidor i replica el objeto j y 0 en caso contrario; yijk es 1 si el servidor i accede al objeto j desde el servidor k y 0 en caso contrario; I(w) devuelve 1 si w es distinto de cero y 0 en caso contrario. La primera restricción especifica que si el servidor i tiene demanda del objeto j, entonces debe acceder a j desde exactamente un servidor. La segunda restricción asegura que el servidor i replica el objeto j si cualquier otro servidor accede a j desde i. 3.4 Análisis Para analizar el juego básico, primero presentamos una prueba de la existencia de equilibrios de Nash en estrategias puras. Discutimos el precio del desorden en general y luego en topologías subyacentes específicas. En este análisis utilizamos simplemente α en lugar de αij, ya que estamos tratando con un único objeto y asumimos que el costo de ubicación es el mismo para todos los servidores. Además, al calcular el precio del anarquía, asumimos que todos los nodos tienen la misma demanda (es decir, ∀i ∈ N wij = 1). TEOREMA 1. Existen equilibrios de Nash de estrategia pura en el juego básico. PRUEBA. Mostramos una prueba constructiva. Primero, inicializa el conjunto V a N. Luego, elimina todos los nodos con demanda cero de V. Cada nodo x define βx, donde βx = α wxj. Además, sea Z(y) = {z : dzy ≤ βz, z ∈ V}; Z(y) representa todos los nodos z para los cuales y se encuentra dentro de βz desde z. Elige un nodo y ∈ V tal que βy ≤ βx para todo x ∈ V. Coloca una réplica en y y luego elimina y y todos los z ∈ Z(y) de V. Ningún z puede tener incentivo para replicar el objeto porque puede acceder a la réplica de y a un costo menor (o igual). Itera este proceso de colocar réplicas hasta que V esté vacío. Debido a que en cada iteración y es el nodo restante con el mínimo β, ninguna réplica será colocada dentro de una distancia βy de cualquier y por este proceso. La configuración resultante es un equilibrio de Nash de estrategia pura del juego básico. El Precio del Anarquía (POA): Para cuantificar el costo de la falta de coordinación, utilizamos el precio del anarquía [21] y el precio del anarquía optimista [3]. El precio del anarquismo es la proporción entre los costos sociales del equilibrio de Nash en el peor caso y el óptimo social, y el precio optimista del anarquismo es la proporción entre los costos sociales del equilibrio de Nash en el mejor caso y el óptimo social. Mostramos límites generales sobre el precio de la anarquía. A lo largo de nuestra discusión, utilizamos C(SW) para representar el costo del equilibrio de Nash en el peor caso, C(SO) para representar el costo del óptimo social, y PoA para representar el precio de la anarquía, que es C(SW) / C(SO). El equilibrio de Nash del peor caso maximiza el costo total bajo la restricción de que la configuración cumpla con la condición de Nash. Formalmente, podemos definir C(SW) de la siguiente manera. C(SW) = max X∈E (α|X| + i min j∈X dij) (9) donde minj∈X dij es la distancia a la réplica más cercana (incluyendo i mismo) desde el nodo i y X varía a través de las configuraciones de equilibrio de Nash. Límites en el Precio de la Anarquía: Mostramos límites del precio de la anarquía variando α. Sea dmin = min(i,j)∈N×N,i=j dij y dmax = max(i,j)∈N×N dij. Vemos que si α ≤ dmin, PoA = 1 24 Topología PoA Grafo completo 1 Estrella ≤ 2 Línea O( √ n) Red D-dimensional O(n D D+1 ) Tabla 1: PoA en el juego básico para topologías específicas trivialmente, ya que cada servidor almacena en caché el objeto tanto para el equilibrio de Nash como para el óptimo social. Cuando α > dmax, hay una transición en los equilibrios de Nash: dado que el costo de ubicación es mayor que cualquier costo de distancia, solo un servidor almacena en caché el objeto y los otros servidores lo acceden de forma remota. Sin embargo, el óptimo social aún puede colocar múltiples réplicas. Dado que α ≤ C(SO) ≤ α+minj∈N Èi dij cuando α > dmax, obtenemos α+maxj∈N Èi dij α+minj∈N Èi dij ≤ PoA ≤ α+maxj∈N Èi dij α. Ten en cuenta que dependiendo de la topología subyacente, incluso el límite inferior de PoA puede ser O(n). Finalmente, hay una transición cuando α > maxj∈N Èi dij. En este caso, PoA = α+maxj∈N Èi dij α+minj∈N Èi dij y está acotado por arriba por 2. La Figura 2 muestra un ejemplo de la ineficiencia de un equilibrio de Nash. En la red hay dos grupos de servidores cuyo tamaño es n al cuadrado. La distancia entre dos grupos es α − 1 donde α es el costo de ubicación. La Figura 2(a) muestra un equilibrio de Nash donde un servidor en un clúster almacena en caché el objeto. En este caso, C(SW) = α + (α − 1)n/2, ya que todos los servidores en el otro clúster acceden a la réplica remota. Sin embargo, el óptimo social coloca dos réplicas, una para cada grupo, como se muestra en la Figura 2(b). Por lo tanto, C(SO) = 2α. PoA = α+(α−1) n 2 2α , que es O(n). Este mal precio de la anarquía proviene de una insuficiente oferta de réplicas debido a la naturaleza egoísta de los servidores. Ten en cuenta que todos los equilibrios de Nash tienen el mismo costo; por lo tanto, incluso el precio de anarquía optimista es O(n). En el Apéndice A, analizamos el precio del anarquía con topologías subyacentes específicas y mostramos que el PoA puede tener límites más ajustados que O(n) para el grafo completo, estrella, línea y cuadrícula D-dimensional. En estas topologías, establecemos la distancia entre nodos directamente conectados en uno. Describimos el caso donde α > 1, ya que PoA = 1 trivialmente cuando α ≤ 1. Un resumen de los resultados se muestra en la Tabla 1. 4. JUEGO DE PAGOS En esta sección, presentamos una extensión al juego básico con pagos y analizamos el precio del desorden y el precio del desorden optimista del juego. 4.1 Modelo de Juego El nuevo juego, al que nos referimos como el juego de pagos, permite a cada jugador ofrecer un pago a otro jugador para darle a este último incentivo para replicar el objeto. El costo de replicación se comparte entre los nodos que pagan al servidor que replica el objeto. La estrategia para cada jugador i está especificada por un triplete (vi, bi, ti) ∈ {N, Ê+, Ê+}. vi especifica el jugador al que i hace una oferta, bi ≥ 0 es el valor de la oferta, y ti ≥ 0 denota un umbral para los pagos más allá del cual i replicará el objeto. Además, usamos Ri para denotar la cantidad total de ofertas recibidas por un nodo i (Ri = Èj:vj =i bj). Un nodo i replica el objeto si y solo si Ri ≥ ti, es decir, la cantidad de ofertas que recibe es mayor o igual a su umbral. Que Ii denote la variable indicadora correspondiente, es decir, Ii es igual a 1 si i replica el objeto, y 0 en caso contrario. Establecemos la regla de que si un nodo i hace una oferta a otro nodo j y j replica el objeto, entonces i debe pagar a j la cantidad bi. Si j no replica el objeto, i no paga a j. Dado un perfil de estrategia, el resultado del juego es el conjunto de tuplas {(Ii, vi, bi, Ri)}. Nos indica si el jugador i replica el objeto o no, bi es el pago que el jugador i hace al jugador vi, y Ri es la cantidad total de ofertas recibidas por el jugador i. Para calcular las ganancias dadas las consecuencias, ahora debemos tener en cuenta los pagos que realiza un nodo, además de los costos de colocación y acceso del juego básico. Según nuestras reglas, un nodo de servidor i paga bi al nodo vi si vi replica el objeto, y recibe un pago de Ri si replica el objeto en sí mismo. Su pago neto es biIvi − RiIi. El costo total incurrido por cada nodo es la suma de su costo de ubicación, costo de acceso y pago neto. Se define como Ci(S) = αij Ii + wij di (i,j)(1 − Ii) + biIvi − RiIi. (10) El costo del óptimo social para el juego de pagos es el mismo que para el juego básico, ya que los pagos netos realizados se cancelan. 4.2 Análisis Al analizar el modelo de pagos, primero mostramos que un equilibrio de Nash en el juego básico también es un equilibrio de Nash en el juego de pagos. Luego presentamos un resultado positivo importante: en el juego de pagos, la configuración socialmente óptima siempre puede ser implementada mediante un equilibrio de Nash. Sabemos por el contraejemplo en la Figura 2 que esto no está garantizado en el juego básico. En este análisis usamos α para representar αij. TEOREMA 2. Cualquier configuración que sea un equilibrio de Nash de estrategia pura en el juego básico también es un equilibrio de Nash de estrategia pura en el juego de pagos. Por lo tanto, el precio del desorden del juego de pago es al menos el del juego básico. PRUEBA. Considera cualquier configuración de equilibrio de Nash en el juego básico. Para cada nodo i que replica el objeto, establezca su umbral ti en 0; todos los demás tienen un umbral α. Además, para todo i, bi = 0. Un nodo que replica el objeto no tiene incentivo para cambiar su estrategia: cambiar el umbral no disminuye su costo, y tendría que pagar al menos α para acceder a una réplica remota o incentivar a un nodo cercano a almacenar en caché. Por lo tanto, es mejor mantener su umbral y oferta en 0 y replicar el objeto. Un nodo que no está replicando el objeto puede acceder al objeto de forma remota a un costo menor o igual a α. Reducir su umbral no disminuye su costo, ya que todos los bi son cero. El pago necesario para que otro servidor coloque una réplica es de al menos α. Ningún jugador tiene incentivo para desviarse, por lo que la configuración actual es un equilibrio de Nash. De hecho, el Apéndice B muestra que el PoA del juego de pago puede ser mayor que el del juego básico en una topología dada. Ahora veamos qué sucede con el ejemplo mostrado en la Figura 2 en el mejor caso. Supongamos que los vecinos del nodo B deciden pagarle al nodo B una cantidad de 2/n. B no tiene un incentivo para desviarse, ya que acceder a la réplica remota no disminuye su costo. El mismo argumento se aplica a A debido a la simetría en el gráfico. Dado que nadie tiene un incentivo para desviarse, la configuración es un equilibrio de Nash. Su costo total es 2α, igual que en la configuración socialmente óptima mostrada en la Figura 2(b). A continuación demostramos que el juego de pagos siempre tiene un perfil estratégico que implementa la configuración socialmente óptima como un equilibrio de Nash. Primero presentamos la siguiente observación, la cual se utiliza en la demostración, acerca de los umbrales en el juego de pagos. OBSERVACIÓN 1. Si el nodo i replica el objeto, j es el nodo más cercano a i entre los otros nodos que replican el objeto, y dij < α en un equilibrio de Nash, entonces i debería tener un umbral de al menos 25 (α - dij). De lo contrario, no puede recolectar suficiente pago para compensar el costo de replicar el objeto y es mejor acceder a la réplica en j. TEOREMA 3. En el juego de pagos, siempre hay un equilibrio de Nash de estrategia pura que implementa la configuración óptima social. El precio de anarquía optimista en el juego de pagos siempre es uno. PRUEBA. Considera la configuración óptima social φopt. Sea No el conjunto de nodos que replican el objeto y Nc = N − No el resto de los nodos. Además, para cada i en No, sea Qi el conjunto de nodos que acceden al objeto desde i, sin incluir i mismo. En la configuración socialmente óptima, dij ≤ α para todo j en Qi. Queremos encontrar un conjunto de pagos y umbrales que haga que esta configuración sea implementable. La idea es examinar cada nodo i en No y distribuir el pago mínimo necesario para hacer que i replique el objeto entre los nodos que acceden al objeto desde i. Para cada i en No, y para cada j en Qi, definimos δj = min{α, min k∈No−{i} djk} − dji (11). Nótese que δj es la diferencia entre el costo de j para acceder a la réplica en i y la siguiente mejor opción de j entre replicar el objeto y acceder a alguna réplica que no sea i. Es claro que δj ≥ 0. AFIRMACIÓN 1. Para cada i ∈ No, sea el nodo más cercano a i en No. Entonces, Èj∈Qi δj ≥ α − di. PRUEBA. (de la afirmación) Supongamos lo contrario, es decir, Èj∈Qi δj < α − di. Considera la nueva configuración φnueva en la que i no se replica y cada nodo en Qi elige su próxima mejor estrategia (ya sea replicar o acceder a la réplica en algún nodo en No − {i}). Además, todavía colocamos réplicas en cada nodo en No − {i}. Es fácil ver que el costo de φopt menos el costo de φnew es al menos: (α + j∈Qi dij) − (di + j∈Qi min{α, min k∈No−{i} dik}) = α − di − j∈Qi δj > 0, lo cual contradice la optimalidad de φopt. Establecemos ofertas de la siguiente manera. Para cada i en No, bi = 0 y para cada j en Qi, j ofrece a i (es decir, vj = i) la cantidad: bj = max{0, δj − i/(|Qi| + 1)}, j ∈ Qi (12) donde i = Èj∈Qi δj − α + di ≥ 0 y |Qi| es la cardinalidad de Qi. Para los umbrales, tenemos: ti = α si i ∈ Nc; Èj∈Qi bj si i ∈ No. (13) Esto especifica completamente el perfil estratégico de los nodos, y es fácil ver que el resultado es de hecho la configuración socialmente óptima. A continuación, verificamos que las estrategias estipuladas constituyen un equilibrio de Nash. Haber establecido ti en α para i en Nc significa que cualquier nodo en N está al menos tan bien al disminuir su umbral y replicarse como al ofrecer α a algún nodo en Nc para que se replique, por lo que podemos descartar esto último como una estrategia rentable. Por la observación 1, para asegurar que cada i en No no se desvíe, requerimos que si j es el nodo más cercano a i en No, entonces Èj∈Qi bj sea al menos (α − di). De lo contrario, elevaré ti por encima de Èj∈Qi bj para que no se replique y en su lugar acceda a la réplica en . Podemos verificar fácilmente que j∈Qi bj ≥ j∈Qi δj − |Qi| i |Qi| + 1 = α − di + i |Qi| + 1 ≥ α − di. 1 1.5 2 2.5 3 3.5 4 4.5 5 5.5 0 20 40 60 80 100 120 140 160 180 200 1 10 100 C(NE)/C(SO) Número promedio de réplicas alfa PoA Ratio OPoA Réplica (SO) Réplica (NE) Figura 3: Presentamos los resultados de PoA, Ratio y OPoA para el juego básico, variando α en una topología de línea de 100 nodos, y mostramos el número de réplicas colocadas por las equilibrios de Nash y por la solución óptima. Observamos grandes picos en P oA y OP oA en α = 100, donde una transición de fase provoca una transición abrupta en las líneas. Por lo tanto, cada nodo i ∈ No no tiene incentivo para cambiar ti ya que i pierde los pagos recibidos o no hay cambio, y i no tiene incentivo para bi ya que replica el objeto. Cada nodo j en Nc no tiene incentivo para cambiar tj ya que cambiar tj no reduce su costo. Tampoco tiene incentivo para reducir bj, ya que el nodo donde j accede no replica y j tiene que replicar el objeto o acceder a la réplica más cercana siguiente, lo cual cuesta al menos lo mismo según la definición de bj. Ningún jugador tiene incentivo para desviarse, por lo que este perfil estratégico es un equilibrio de Nash. 5. SIMULACIÓN Ejecutamos simulaciones para comparar los equilibrios de Nash para el juego de almacenamiento de un solo objeto con el óptimo social calculado resolviendo el programa lineal entero descrito en la Ecuación 8 utilizando Mosek [1]. Examinamos el precio del anarquía (PoA), el precio del anarquía optimista (OPoA) y la proporción promedio de los costos de los equilibrios de Nash y las óptimas sociales (Ratio), y cuando sea relevante también mostramos el número promedio de réplicas colocadas por el equilibrio de Nash (Réplica(NE)) y la óptima social (Réplica(SO)). El PoA y el OPoA se toman de los peores y mejores equilibrios de Nash, respectivamente, que observamos a lo largo de las ejecuciones. Cada punto de datos en nuestras figuras se basa en 1000 ejecuciones, variando aleatoriamente el perfil de estrategia inicial y el orden de los jugadores. Los detalles de las simulaciones, incluidos los protocolos y una discusión de la convergencia, se presentan en el Apéndice C. En nuestra evaluación, estudiamos los efectos de la variación en cuatro categorías: costo de ubicación, topología subyacente, distribución de la demanda y pagos. Al variar el costo de ubicación α, influimos directamente en el equilibrio entre la caché y no caché. Para obtener una imagen clara de la dependencia de PoA en α en un caso simple, primero analizamos el juego básico con una topología de línea de 100 nodos cuya distancia de borde es uno. También exploramos topologías de tránsito de tipo stub generadas utilizando la biblioteca GTITM [36] y topologías de ley de potencia (modelo Barabasi-Albert a nivel de enrutador) generadas utilizando el generador de topologías BRITE [25]. Para estas topologías, generamos un grafo físico subyacente de 3050 nodos físicos. Ambas topologías tienen distancias mínimas, medias y máximas de nodos físicos similares. La distancia promedio es de 0.42. Creamos una superposición de 100 nodos de servidor y utilizamos la misma superposición para todos los experimentos con la topología dada. En el juego, cada servidor tiene una demanda cuya distribución es Bernoulli(p), donde p es la probabilidad de tener demanda del objeto; el valor predeterminado a menos que se especifique lo contrario es p = 1.0. 26 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8 3 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C(NE)/C(SO) Número Promedio de Réplicas alfa PoA Ratio OPoA Réplica (SO) Réplica (NE) (a) 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 2.6 2.8 3 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C(NE)/C(SO) Número Promedio de Réplicas alfa PoA Ratio OPoA Réplica (SO) Réplica (NE) (b) Figura 4: Topología de tránsito-rama: (a) juego básico, (b) juego de pago. Mostramos el P oA, Ratio, OP oA y el número de réplicas colocadas al variar α entre 0 y 2 con 100 servidores en una topología de tránsito de 3050 nodos físicos. 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C(NE)/C(SO) Número promedio de réplicas alfa PoA Ratio OPoA Réplica (SO) Réplica (NE) (a) 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4 0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 1 10 100 C(NE)/C(SO) Número promedio de réplicas alfa PoA Ratio OPoA Réplica (SO) Réplica (NE) (b) Figura 5: Topología de ley de potencia: (a) juego básico, (b) juego de pago. Mostramos el P oA, Ratio, OP oA y el número de réplicas colocadas al variar α entre 0 y 2 con 100 servidores en una topología de ley de potencia de 3050 nodos físicos. 5.1 Variación del Costo de Colocación La Figura 3 muestra PoA, OPoA y Ratio, así como el número de réplicas colocadas, para la topología de línea a medida que varía α. Observamos dos fases. A medida que α aumenta, el PoA aumenta rápidamente hasta alcanzar un pico en 100. Después de 100, hay un declive gradual. OPoA y Ratio muestran un comportamiento similar al de PoA. Estos comportamientos pueden ser explicados al examinar el número de réplicas colocadas por los equilibrios de Nash y por las soluciones óptimas. Vemos que cuando α es mayor que uno, las soluciones de equilibrio de Nash colocan menos réplicas que las óptimas en promedio. Por ejemplo, cuando α es 100, el óptimo social coloca cuatro réplicas, pero el equilibrio de Nash solo coloca una. El pico en PoA en α = 100 ocurre en el punto para una línea de 100 nodos donde el costo en el peor de los casos de acceder a una réplica remota es ligeramente menor que el costo de colocar una nueva réplica, por lo que los servidores egoístas nunca colocarán una segunda réplica. La solución óptima, sin embargo, coloca múltiples réplicas para disminuir el alto costo global de acceso. A medida que α continúa aumentando, el problema de subabastecimiento disminuye, ya que la solución óptima coloca menos réplicas. 5.2 Diferentes Topologías Subyacentes En la Figura 4(a) examinamos un grafo de superposición en la topología más realista de tránsito-punta. Las tendencias para el PoA, OPoA y Ratio son similares a los resultados para la topología de línea, con un pico en el PoA en α = 0.8 debido a un subsuministro máximo. En la Figura 5(a) examinamos un grafo superpuesto en la topología de ley de potencias. Observamos varias diferencias interesantes entre los resultados de la ley de potencia y los resultados de tránsito de tope. Primero, el PoA alcanza un nivel más bajo en el gráfico de ley de potencias, alrededor de 2.3 (en α = 0.9), mientras que el pico de PoA en la topología de tránsito-rama es casi 3.0 (en α = 0.8). Después del pico, PoA y Ratio disminuyen más lentamente a medida que α aumenta. OPoA está cerca de uno para todo el rango de valores de α. Esto se puede explicar por la observación en la Figura 5(a) de que no hay un problema significativo de subabastecimiento aquí, como lo había en el gráfico de tránsito de extremo muerto. De hecho, el alto PoA se debe principalmente a problemas de desplazamiento cuando α está entre 0.7 y 2.0, ya que hay poco descenso en el PoA cuando el número de réplicas en el óptimo social cambia de dos a uno. El OPoA es igual a uno en la figura cuando se colocan el mismo número de réplicas. 5.3 Variación de la Distribución de la Demanda Ahora examinamos los efectos de variar la distribución de la demanda. El conjunto de servidores con demanda es aleatorio para p < 1, por lo que calculamos el PoA esperado promediando en 5 pruebas (cada punto de datos se basa en 5000 ejecuciones). Realizamos simulaciones para niveles de demanda de p ∈ {0.2, 0.6, 1.0} a medida que α varía en los 100 servidores sobre el grafo de tránsito de derivación. Observamos que a medida que la demanda disminuye, también lo hace el PoA esperado. A medida que p disminuye, el número de réplicas colocadas en el óptimo social disminuye, pero el número en los equilibrios de Nash cambia poco. Además, cuando α excede el diámetro de superposición, el número de equilibrios de Nash se mantiene constante cuando varía p. Por lo tanto, un valor de p más bajo conduce a un problema de subabastecimiento menor, lo que concuerda con la intuición. No presentamos el gráfico debido a limitaciones de espacio y redundancia; el PoA para p = 1.0 es idéntico al PoA en la Figura 4(a), y las líneas para p = 0.6 y p = 0.2 son similares pero más bajas y planas. 27 5.4 Efectos del Pago. Finalmente, discutimos los efectos de los pagos en la eficiencia de los equilibrios de Nash. Los resultados se presentan en la Figura 4(b) y la Figura 5(b). Como se muestra en el análisis, las simulaciones logran un OPoA cercano a uno (no es exactamente uno debido a la aleatoriedad en las simulaciones). La proporción para el juego de pago es mucho menor que la proporción para el juego básico, ya que el protocolo para el juego de pago tiende a explorar buenas regiones en el espacio de equilibrios de Nash. Observamos en la Figura 4 que para α ≥ 0.4, el número promedio de réplicas de equilibrios de Nash se acerca con los pagos al óptimo social más que lo hace sin ellos. Observamos en la Figura 5 que se colocan más réplicas con pagos que sin ellos cuando α está entre 0.7 y 1.3, el único rango de suboferta significativa en el caso de la ley de potencias. Los resultados confirman que los pagos dan incentivos a los servidores para replicar el objeto y esto conduce a equilibrios mejores. 6. DISCUSIÓN Y TRABAJO FUTURO Sugerimos varias extensiones y direcciones interesantes. Una extensión es considerar múltiples objetos en el juego de almacenamiento en caché con capacidad limitada, en el cual los servidores tienen límites de capacidad al colocar objetos. Dado que almacenar en caché un objeto afecta la capacidad de almacenar en caché otro, no hay separabilidad de un juego de varios objetos en varios juegos de un solo objeto. Como se estudió en [12], una forma de formular este problema es encontrar la mejor respuesta de un servidor resolviendo un problema de la mochila y calcular los equilibrios de Nash. En nuestros análisis, asumimos que todos los nodos tienen la misma demanda. Sin embargo, los nodos podrían tener diferentes demandas dependiendo de los objetos. Tenemos la intención de examinar los efectos de las demandas heterogéneas (o los costos de ubicación heterogéneos) de forma analítica. También queremos analizar el siguiente efecto de agregación. Supongamos que hay n − 1 nodos agrupados a una distancia de α−1 de un nodo que alberga una réplica. Todos los nodos tienen una demanda de uno. En ese caso, el precio del desorden es O(n). Sin embargo, si agregamos n − 1 nodos en un solo nodo con una demanda de n − 1, el precio del anarquía se convierte en O(1), ya que α debería ser mayor que (n − 1)(α − 1) para replicar solo un objeto. Tal agregación puede reducir la ineficiencia de los equilibrios de Nash. Tenemos la intención de calcular los límites del precio del anarquía bajo diferentes topologías subyacentes, como grafos aleatorios o métricas de crecimiento restringido. Queremos investigar si existen ciertas restricciones de distancia que garanticen un precio de anarquía O(1). Además, queremos realizar simulaciones a gran escala para observar el cambio en el precio del anarquía a medida que aumenta el tamaño de la red. Otra extensión es considerar la congestión del servidor. Supongamos que la distancia es la distancia de red más γ × (número de accesos) donde γ es un retraso adicional cuando un servidor adicional accede a la réplica. Entonces, cuando α > γ, se puede demostrar que el PoA está limitado por α γ. A medida que γ aumenta, el límite del precio del desorden disminuye, ya que la carga de accesos se equilibra entre los servidores. Mientras explorábamos el problema de almacenamiento en caché, hicimos varias observaciones que parecen contraintuitivas. Primero, el PoA en el juego de pago puede ser peor que el PoA en el juego básico. Otra observación que hicimos fue que el número de réplicas en un equilibrio de Nash puede ser mayor que el número de réplicas en el óptimo social incluso sin pagos. Por ejemplo, un grafo con un diámetro ligeramente mayor que α puede tener una configuración de equilibrio de Nash con dos réplicas en los dos extremos. Sin embargo, el óptimo social puede colocar una réplica en el centro. Dejamos la investigación de más ejemplos como un tema abierto. 7. CONCLUSIONES En este trabajo presentamos un nuevo modelo de juego no cooperativo para caracterizar el problema de almacenamiento en caché entre servidores egoístas sin coordinación central. Mostramos que existen equilibrios de Nash de estrategia pura en el juego y que el precio de la anarquía puede ser O(n) en general, donde n es el número de servidores, debido a problemas de suboferta. Con topologías específicas, demostramos que el precio de la anarquía puede tener límites más ajustados. Más importante aún, con los pagos, se incentiva a los servidores a replicar y el precio optimista del caos siempre es uno. El almacenamiento en caché no cooperativo es un modelo más realista que el almacenamiento en caché cooperativo en el competitivo Internet, por lo tanto, este trabajo es un paso importante hacia sistemas de almacenamiento en caché federados viables. AGRADECIMIENTOS Agradecemos a Kunal Talwar por las enriquecedoras discusiones sobre este trabajo. 9. REFERENCIAS [1] http://www.mosek.com. [2] A. Adya et al. FARSITE: Almacenamiento Federado, Disponible y Confiable para un Entorno con Confianza Incompleta. En Proc. de USENIX OSDI, 2002. [3] E. Anshelevich, A. Dasgupta, E. Tardos y T. Wexler. Diseño de red casi óptimo con agentes egoístas. En Proc. de ACM STOC, 2003. [4] Y. Chen, R. H. Katz y J. D. Kubiatowicz. ESCANEO: Una Red de Distribución de Contenido Dinámica, Escalable y Eficiente. En Proc. de Intl. Conf. sobre Computación Pervasive, 2002. [5] F. Dabek y otros. Almacenamiento Cooperativo de Área Amplia con CFS. En Proc. de ACM SOSP, Oct. 2001. [6] P. B. Danzig. Arquitectura e Implementación de NetCache. En Redes de Computadoras y Sistemas ISDN, 1998. [7] N. Devanur, M. Mihail y V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Proc. de ACM EC, 2003. [8] J. R. Douceur y R. P. Wattenhofer. Simulación a gran escala de algoritmos de colocación de réplicas para un sistema de archivos distribuido sin servidor. En Proc. de MASCOTS, 2001. [9] A. Fabrikant, C. H. Papadimitriou y K. Talwar. La complejidad de los equilibrios de Nash puros. En Proc. de ACM STOC, 2004. [10] L. Fan, P. Cao, J. Almeida y A. Z. Broder. Resumen de la caché: un protocolo de compartición de caché web escalable de área amplia. IEEE/ACM Trans. on Networking, 8(3):281-293, 2000. [11] M. R. Garey y D. S. Johnson. Computadoras e Intractabilidad: Una Guía de la Teoría de NP-Completitud. W. H. Freeman and Co., 1979. [12] M. X. Goemans, L. Li, V. S. Mirrokni, y M. Thottan. Juegos de reparto de mercado aplicados a la distribución de contenido en redes ad-hoc. En Proc. de ACM MOBIHOC, 2004. [13] M. X. Goemans y M. Skutella. Juegos de ubicación de instalaciones cooperativas. En Proc. de ACM-SIAM SODA, 2000. [14] S. Gribble y otros. ¿Qué pueden hacer las bases de datos para el sistema peer-to-peer? En el taller WebDB sobre bases de datos y la web, junio de 2001. [15] K. P. Gummadi y otros. Medición, modelado y análisis de una carga de trabajo de intercambio de archivos entre pares. En Proc. de ACM SOSP, octubre de 2003. [16] S. Iyer, A. Rowstron y P. Druschel. Ardilla: Una caché web descentralizada de pares a pares. En Proc. de ACM PODC, 2002. [17] K. Jain y V. V. Vazirani. Algoritmos de Aproximación Primal-Dual para Problemas de Localización de Instalaciones Métricas y k-Mediana. En Proc. de IEEE FOCS, 1999. 28 [18] S. Jamin y otros. Sobre la ubicación de la instrumentación de Internet. En Proc. de IEEE INFOCOM, páginas 295-304, 2000. [19] S. Jamin et al. Colocación de espejos restringida en Internet. En Proc. de IEEE INFOCOM, páginas 31-40, 2001. [20] B.-J. Ko y D. Rubenstein. Un protocolo distribuido y autoestabilizante para la ubicación de recursos replicados en redes emergentes. En Proc. de IEEE ICNP, 2003. [21] E. Koutsoupias y C. Papadimitriou. Equilibrios de peor caso. En STACS, 1999. [22] J. Kubiatowicz et al. OceanStore: Una arquitectura para almacenamiento persistente a escala global. En Proc. de ACM ASPLOS. ACM, noviembre de 2000. [23] B. Li, M. J. Golin, G. F. Italiano y X. Deng. Sobre la ubicación óptima de los servidores proxy web en Internet. En Proc. de IEEE INFOCOM, 1999. [24] M. Mahdian, Y. Ye y J. Zhang. Algoritmos de aproximación mejorados para problemas de localización de instalaciones métricas. En Proc. de Intl. Taller sobre Algoritmos de Aproximación para Problemas de Optimización Combinatoria, 2002. [25] A. Medina, A. Lakhina, I. Matta y J. Byers. BRITE: Generación de topología universal desde la perspectiva del usuario. Informe técnico 2001-003, 1 2001. [26] R. R. Mettu y C. G. Plaxton. El Problema de la Mediana en Línea. En Proc. de IEEE FOCS, 2000. [27] P. B. Mirchandani y R. L. Francis. Teoría de la ubicación discreta. Serie Wiley-Interscience en Matemáticas Discretas y Optimización, 1990. [28] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. MIT Press, 1994. [29] M. Pal y E. Tardos. Mecanismos a prueba de estrategias de grupo a través de algoritmos primal-dual. En Proc. de IEEE FOCS, 2003. [30] L. Qiu, V. N. Padmanabhan y G. M. Voelker. Sobre la ubicación de réplicas de servidores web. En Proc. de IEEE INFOCOM, 2001. [31] M. Rabinovich, I. Rabinovich, R. Rajaraman y A. Aggarwal. Un protocolo de replicación y migración de objetos dinámicos para un servicio de alojamiento en Internet. En Proc. de IEEE ICDCS, 1999. [32] A. Rowstron y P. Druschel. Gestión de almacenamiento y almacenamiento en caché en PAST, una utilidad de almacenamiento entre pares a gran escala y persistente. En Proc. de ACM SOSP, octubre de 2001. [33] Y. Saito, C. Karamanolis, M. Karlsson y M. Mahalingam. Domando la replicación agresiva en el Sistema de Archivos de Área Amplia Pangaea. En Proc. de USENIX OSDI, 2002. [34] X. Tang y S. T. Chanson. Caché web coordinada en ruta. En IEEE Trans. Computadoras, 2002. [35] A. Vetta. Equilibrios de Nash en sociedades competitivas, con aplicaciones a la ubicación de instalaciones, enrutamiento de tráfico y subastas. En Proc. de IEEE FOCS, 2002. [36] E. W. Zegura, K. L. Calvert y S. Bhattacharjee. Cómo modelar una internetwork. En Proc. de IEEE INFOCOM, 1996. APÉNDICE A. ANÁLISIS DE TOPOLOGÍAS ESPECÍFICAS Ahora analizamos el precio del anarquía (PoA) para el juego básico con topologías subyacentes específicas y mostramos que PoA puede tener límites mejores. Observamos un grafo completo, una estrella, una línea y una cuadrícula D-dimensional. En todas estas topologías, establecemos la distancia entre dos nodos directamente conectados en uno. Describimos el caso donde α > 1, ya que PoA = 1 trivialmente cuando α ≤ 1. Figura 6: Ejemplo donde el juego de pago tiene un equilibrio de Nash que es peor que cualquier equilibrio de Nash en el juego básico. Las distancias no etiquetadas entre los nodos en el clúster son todas de 1. Los umbrales de los nodos blancos son todos α y los umbrales de los nodos oscuros son todos α/4. Los dos nodos oscuros replican el objeto en este equilibrio de Nash del juego de pago. Para un grafo completo, PoA = 1, y para una estrella, PoA ≤ 2. Para un grafo completo, cuando α > 1, tanto los equilibrios de Nash como los óptimos sociales colocan una réplica en un servidor, por lo que el PoA = 1. Para estrella, cuando 1 < α < 2, el equilibrio de Nash en el peor de los casos coloca réplicas en todos los nodos hoja. Sin embargo, el óptimo social coloca una réplica en el nodo central. Por lo tanto, PoA = (n−1)α+1 α+(n−1) ≤ 2(n−1)+1 1+(n−1) ≤ 2. Cuando α > 2, el equilibrio de Nash en el peor de los casos coloca una réplica en un nodo hoja y los otros nodos acceden a la réplica remota, mientras que el óptimo social coloca una réplica en el centro. PoA = α+1+2(n−2) α+(n−1) = 1 + n α+(n−1) ≤ 2.

El PoA = α+1+2(n−2) α+(n−1) = 1 + n α+(n−1) ≤ 2. Para una línea, el precio del anarquía es O( √ n). Cuando 1 < α < n, el equilibrio de Nash en el peor de los casos coloca réplicas cada 2α para que no haya superposición entre las áreas cubiertas por dos servidores adyacentes que almacenan en caché el objeto. El óptimo social coloca réplicas al menos cada √ 2α. La ubicación de las réplicas para el óptimo social es la siguiente. Supongamos que hay dos réplicas separadas por una distancia d. Al colocar una réplica adicional en el medio, queremos que la reducción de la distancia sea de al menos α. La reducción de la distancia es d/2 + 2{((d/2 − 1) − 1) + ((d/2 − 2) − 2) + ... + ((d/2 − d/4) − d/4)} ≥ d2 /8. d debe ser como máximo 2 √ 2α. Por lo tanto, la distancia entre réplicas en el óptimo social es como máximo √ 2α. C(SW) = α(n-1) 2α + α(α+1) 2 (n-1) 2α = Θ(αn).

C(SW) = α(n-1) 2α + α(α+1) 2 (n-1) 2α = Θ(αn). C(SO) ≥ α n−1√ 2α + 2 √ 2α/2( √ 2α/2+1) 2 n−1√ 2α.

C(SO) ≥ α n−1√ 2α + 2 √ 2α/2( √ 2α/2+1) 2 n−1√ 2α. C(SO) = Ω( √ αn). 

La traducción al español sería: C(SO) = Ω( √ αn). Por lo tanto, PoA = O( √ α). Cuando α > n − 1, el equilibrio de Nash en el peor de los casos coloca una réplica en un nodo hoja y C(SW) = α + (n−1)n 2. Sin embargo, el óptimo social sigue colocando réplicas cada √ 2α. Si consideramos PoA como una función continua de α y calculamos la derivada de PoA, la derivada se vuelve 0 cuando α es Θ(n2), lo que significa que la función disminuye a medida que α aumenta desde n. Por lo tanto, PoA es máximo cuando α es n, y PoA = Θ(n2) Ω(√ nn) = O(√ n). Cuando α > (n−1)n 2 , el óptimo social también coloca solo una réplica, y el PoA está trivialmente limitado por 2. Este resultado es válido para el anillo y puede generalizarse a la cuadrícula de D dimensiones. A medida que la dimensión en la cuadrícula aumenta, la reducción de la distancia de colocación de réplicas adicionales se convierte en Ω(dD+1), donde d es la distancia entre dos réplicas adyacentes. Por lo tanto, PoA = Θ(n2) Ω(n 1 D+1 n) = O(n D D+1 ). I'm sorry, but you did not provide a sentence to translate. Please provide the sentence you would like me to translate to Spanish. El pago puede empeorar. Considere la red en la Figura 6 donde α > 1+α/3. Cualquier equilibrio de Nash en el modelo de juego básico tendría exactamente dos réplicas: una en el grupo izquierdo y otra en el derecho. Es fácil verificar que la peor ubicación (en términos de costo social) de dos réplicas ocurre cuando se colocan en los nodos A y B. Esta colocación puede lograrse como un equilibrio de Nash en el juego de pagos, pero no en el juego básico ya que A y B están a una distancia de 3α/4. 29 Algoritmo 1 Inicialización para el Juego Básico L1 = un subconjunto aleatorio de servidores para cada nodo i en N hacer si i ∈ L1 entonces Si = 1 ; replicar el objeto de lo contrario Si = 0 Algoritmo 2 Selección de Movimiento de i para el Juego Básico Costo1 = α Costo2 = minj∈X−{i} dij ; X es la configuración actual CostoMin = min{Costo1, Costo2} si CostoActual > CostoMin entonces si CostoMin == Costo1 entonces Si = 1 de lo contrario Si = 0 C. PROTOCOLOS DE DINÁMICA DE NASH El simulador inicializa el juego de acuerdo con los parámetros dados y un perfil de estrategia inicial aleatorio y luego itera a través de rondas. Inicialmente, el orden de las acciones de los jugadores se elige al azar. En cada ronda, cada servidor realiza el protocolo de dinámica de Nash que ajusta sus estrategias de forma codiciosa en el orden elegido. Cuando una ronda pasa sin que ningún servidor cambie su estrategia, la simulación termina y se alcanza un equilibrio de Nash. En el juego básico, elegimos un subconjunto inicial aleatorio de servidores para replicar el objeto como se muestra en el Algoritmo 1. Después de la inicialización, cada jugador ejecuta el procedimiento de selección de movimiento descrito en el Algoritmo 2 (en los algoritmos 2 y 4, Costnow representa el costo actual para el nodo i). Este procedimiento elige de forma codiciosa entre replicación y no replicación. No es difícil ver que este protocolo de dinámica de Nash converge en dos rondas. En el juego de pago, elegimos un subconjunto inicial aleatorio de servidores para replicar el objeto estableciendo sus umbrales en 0. Además, inicializamos un segundo subconjunto aleatorio de servidores para replicar el objeto con pagos de otros servidores. Los detalles se muestran en el Algoritmo 3. Después de la inicialización, cada jugador ejecuta el procedimiento de selección de movimiento descrito en el Algoritmo 4. Este procedimiento elige de manera codiciosa entre la replicación y el acceso a una réplica remota, con las posibilidades de recibir y realizar pagos, respectivamente. En el protocolo, cada nodo aumenta su valor de umbral por incr si no replica el objeto. Mediante este procedimiento de aumento gradual, el costo de replicar un objeto se comparte de manera justa entre los nodos que acceden a una réplica desde un servidor que realiza almacenamiento en caché. Si incr es pequeño, el costo se comparte de manera más justa y el juego tiende a alcanzar equilibrios que fomentan que más servidores almacenen réplicas, aunque la convergencia lleva más tiempo. Si incr es grande, el protocolo converge rápidamente, pero puede perder equilibrios eficientes. En las simulaciones establecimos incr en 0.1. La mayoría de nuestros A B C a b c α/3+1 2α/3−1 2α/3 Figura 7: Un ejemplo donde el protocolo de dinámica de Nash no converge en el juego de pagos. Algoritmo 3 Inicialización para el Juego de Pagos L1 = un subconjunto aleatorio de servidores para cada nodo i en N hacer bi = 0 si i ∈ L1 entonces ti = 0 ; replicar el objeto de lo contrario ti = α L2 = {} para cada nodo i en N hacer si lanzamiento de moneda == cara entonces Mi = {j : d(j, i) < mink∈L1∪L2 d(j, k)} si Mi != ∅ entonces para cada nodo j ∈ Mi hacer bj = max{ α+ Èk∈Mi d(i,k) |Mi| − d(i, j), 0} L2 = L2 ∪ {i} Algoritmo 4 Selección de Movimiento de i para el Juego de Pagos Costo1 = α − Ri Costo2 = minj∈N−{i}{tj − Rj + dij } CostoMin = min{Costo1, Costo2} si CostoActual > CostoMin entonces si CostoMin == Costo1 entonces ti = Ri de lo contrario ti = Ri + incr vi = argminj{tj − Rj + dij} bi = tvi − Rvi las ejecuciones de simulación convergieron, pero hubo muy pocos casos donde la simulación no convergió debido a los ciclos de la dinámica. El protocolo no garantiza la convergencia dentro de un número determinado de rondas como el protocolo para el juego básico. Proporcionamos un grafo de ejemplo y una condición inicial tal que el protocolo de dinámica de Nash no converge en el juego de pagos si se inicia desde esta condición inicial. El gráfico está representado por una métrica de camino más corto en la red mostrada en la Figura 7. En la configuración inicial, solo A replica el objeto y le paga una cantidad α/3 para hacerlo. Los umbrales para A, B y C son α/3 cada uno, y los umbrales para a, b y c son 2α/3. No es difícil verificar que el protocolo de dinámica de Nash nunca convergerá si comenzamos con esta condición. El protocolo de dinámica de Nash para el juego de pagos necesita una investigación adicional. El protocolo de dinámicas para el juego de pagos debe evitar ciclos de acciones para lograr la estabilización del protocolo. Encontrar un protocolo de dinámica autoestabilizadora es un problema interesante. Además, un valor fijo de incr no puede adaptarse a entornos cambiantes. Un valor pequeño de incr puede llevar a equilibrios eficientes, pero puede tardar mucho tiempo en converger. Una área importante para futuras investigaciones es examinar el cambio adaptativo incrementado en un 30%.