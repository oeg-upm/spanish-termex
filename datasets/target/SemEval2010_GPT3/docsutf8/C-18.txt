Un Análisis Inicial y Presentación de Malware que Exhibe Comportamiento Similar a un Enjambre por Fernando C. Colón Osorio Laboratorio de Investigación en Seguridad de Sistemas Inalámbricos (W.S.S.R.L.) El Slammer, que actualmente es el gusano informático más rápido en la historia registrada, se observó infectando el 90 por ciento de todos los hosts vulnerables de Internet en 10 minutos. Aunque la acción principal que realiza el gusano Slammer es una replicación relativamente poco sofisticada de sí mismo, se propaga tan rápidamente que la respuesta humana fue ineficaz. La mayoría de las estrategias de contramedidas propuestas se basan principalmente en la detección de tasas y algoritmos de limitación. Sin embargo, se están diseñando y desarrollando estrategias para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En nuestro trabajo, planteamos la hipótesis de que los gusanos de la próxima generación serán radicalmente diferentes, y posiblemente dichas técnicas resultarán ineficaces. Específicamente, proponemos estudiar una nueva generación de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. La Inteligencia Emergente es el comportamiento de sistemas, muy similar a sistemas biológicos como hormigas o abejas, donde las interacciones locales simples de miembros autónomos, con acciones primitivas simples, dan lugar a un comportamiento global complejo e inteligente. En este manuscrito introduciremos los principios básicos detrás de la idea de los Gusanos en Enjambre, así como la estructura básica requerida para ser considerado un gusano en enjambre. Además, presentaremos resultados preliminares sobre las velocidades de propagación de un gusano de enjambre llamado gusano ZachiK. Demostraremos que ZachiK es capaz de propagarse a una velocidad 2 órdenes de magnitud más rápida que gusanos similares sin capacidades de enjambre. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Detección de Intrusiones; D.4.6 [Seguridad y Protección]: Software Invasivo Términos Generales Experimentación, Seguridad 1. INTRODUCCIÓN Y TRABAJO PREVIO En las primeras horas de la mañana (05:30 GMT) del 25 de enero de 2003, el gusano informático más rápido en la historia registrada comenzó a propagarse por Internet. Dentro de los 10 minutos posteriores al primer huésped infectado (paciente cero), el 90 por ciento de todos los huéspedes vulnerables habían sido comprometidos, creando una interrupción significativa en la infraestructura de Internet a nivel global. Vern Paxson del Instituto Internacional de Ciencias de la Computación y del Laboratorio Nacional Lawrence Berkeley comentó en su análisis de Slammer: El gusano Slammer se propagó tan rápidamente que la respuesta humana fue ineficaz, ver [4]. La parte interesante, desde nuestro punto de vista, sobre la propagación de Slammer es que era un gusano relativamente poco sofisticado con un comportamiento benigno, es decir, la auto-reproducción. Desde Slammer, los investigadores han explorado los comportamientos de los gusanos de propagación rápida y han diseñado estrategias de contramedidas basadas principalmente en la detección de la velocidad y algoritmos de limitación. Por ejemplo, Zou, et al., [2], propusieron un esquema donde se utiliza un filtro de Kalman para detectar la propagación temprana de un gusano. Otros investigadores han propuesto el uso de detectores donde las tasas de mensajes de Destino Inalcanzable son monitoreadas por los firewalls, y un aumento significativo más allá de lo normal alerta a la organización sobre la posible presencia de un gusano. Sin embargo, tales estrategias sufren del síndrome de luchar la última guerra. Es decir, se están diseñando y desarrollando sistemas para contener de manera efectiva gusanos cuyos comportamientos son similares a los de Slammer. En el trabajo descrito aquí, planteamos la hipótesis de que los gusanos de la próxima generación serán diferentes, y por lo tanto, dichas técnicas pueden tener algunas limitaciones significativas. Específicamente, proponemos estudiar una nueva generación de gusanos llamados Gusanos en Enjambre, cuyo comportamiento se basa en el concepto de inteligencia emergente. El concepto de inteligencia emergente fue estudiado por primera vez en asociación con sistemas biológicos. En tales estudios, los primeros investigadores descubrieron una variedad de comportamientos interesantes de insectos o animales en la naturaleza. Una bandada de pájaros cruza el cielo. Un grupo de hormigas busca comida. Una escuela de peces nada, gira, huye juntos lejos de un depredador, y así sucesivamente. En general, este tipo de movimiento agregado se ha llamado comportamiento de enjambre. Los biólogos y científicos de la computación en el campo de la inteligencia artificial han estudiado tales enjambres biológicos y han intentado crear modelos que expliquen cómo interactúan los elementos de un enjambre, logran objetivos y evolucionan. Además, en los últimos años el estudio de la inteligencia de enjambre ha cobrado cada vez más importancia en los campos de la robótica, el diseño de Redes Móviles Ad-hoc (MANETS), el diseño de Sistemas de Detección de Intrusiones, el estudio de patrones de tráfico en sistemas de transporte, en aplicaciones militares y otras áreas, ver [3]. Los conceptos básicos que se han desarrollado en la última década para explicar los enjambres y su comportamiento incluyen cuatro componentes básicos. Estos son: 1. Sencillez de la lógica y acciones: Un enjambre está compuesto por N agentes cuya inteligencia es limitada. Los agentes en el enjambre utilizan reglas locales simples para gobernar sus acciones. Algunos modelos llaman a estas acciones o comportamientos primitivos; 2. Mecanismos de comunicación local: Los agentes interactúan con otros miembros en el enjambre a través de simples mecanismos de comunicación local. Por ejemplo, un pájaro en una bandada percibe la posición del pájaro adyacente y aplica una regla simple de evitación y seguimiento. 3. Control distribuido: Los agentes autónomos interactúan con su entorno, que probablemente consiste en otros agentes, pero actúan relativamente de forma independiente de todos los demás agentes. No hay un mando central o líder, y ciertamente no hay un plan global. Inteligencia emergente: El comportamiento agregado de agentes autónomos resulta en comportamientos inteligentes complejos, incluyendo la autoorganización. Para comprender completamente el comportamiento de tales enjambres, es necesario construir un modelo que explique el comportamiento de lo que llamaremos gusanos genéricos. Este modelo, que amplía el trabajo de Weaver [5], se presenta aquí en la sección 2. Además, tenemos la intención de ampliar dicho modelo de tal manera que explique claramente los comportamientos de esta nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biológicos y muestran un alto grado de aprendizaje, comunicación e inteligencia distribuida. Tales gusanos en enjambre son potencialmente más dañinos que sus contrapartes genéricas similares. Específicamente, la primera instancia, según nuestro conocimiento, de un gusano de aprendizaje de este tipo fue creado, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseñas simple que incorpora diferentes estrategias de aprendizaje y compartición de información. Un gusano de enjambre similar fue desplegado tanto en una red de área local de treinta (30) hosts, como simulado en una topología de 10,000 nodos. Los resultados preliminares mostraron que dichos gusanos son capaces de comprometer a los anfitriones a velocidades hasta dos órdenes de magnitud más rápidas que su contraparte genérica. El resto de este manuscrito está estructurado de la siguiente manera. En la sección 2 se presenta un modelo abstracto tanto de gusanos genéricos como de gusanos en enjambre. Este modelo se utiliza en la sección 2.6 para describir la primera instancia de un gusano enjambre, ZachiK. En la sección 4, se presentan resultados preliminares a través de mediciones empíricas y simulaciones. Finalmente, en la sección 5 se presentan nuestras conclusiones y perspectivas sobre trabajos futuros. MODELADO DE GUSANOS Para estudiar el comportamiento de los gusanos en enjambre en general, es necesario crear un modelo que refleje de manera realista la estructura de los gusanos y que no esté necesariamente ligado a una instancia específica. En esta sección, describimos un modelo en el que un gusano general se describe como teniendo cuatro (4) componentes básicos o subfunciones. Por definición, un gusano es un programa autocontenido y auto propagante. Por lo tanto, en términos simples, tiene dos funciones principales: la que se propaga y la que realiza otras tareas. Proponemos que hay una tercera amplia funcionalidad de un gusano, la de autoconservación. También proponemos que la otra funcionalidad de un gusano podría ser categorizada de manera más apropiada como Acciones Basadas en Objetivos (ABO), ya que cualquier funcionalidad incluida en un gusano dependerá naturalmente de los objetivos (y subobjetivos) que tenga el autor. El trabajo presentado por Weaver et al. en [5] nos proporciona principalmente una taxonomía de gusanos informáticos basada en acciones y técnicas, la cual utilizamos y ampliamos aquí. 2.1 Propagación La función de propagación en sí misma puede desglosarse en tres acciones: adquirir objetivo, enviar escaneo e infectar objetivo. Adquirir el objetivo simplemente significa elegir un anfitrión para atacar a continuación. Enviar un escaneo implica verificar si ese host está receptivo a un intento de infección, ya que el espacio de direcciones IP está escasamente poblado. Esto puede implicar un simple ping para verificar si el host está activo o una evaluación completa de vulnerabilidades. Infectar al objetivo es el método real utilizado para enviar el código del gusano al nuevo hospedador. En forma de algoritmo: propagar() { host := adquirir_objetivo() éxito := enviar_escaneo(host) si( éxito ) entonces infectar(host) fin si } En el caso de un gusano simple que no verifica primero si el host está disponible o susceptible (como Slammer), se elimina el método de escaneo: propagar() { host := adquirir_objetivo() infectar(host) } Cada una de estas acciones puede tener un costo asociado a su inclusión y ejecución, como un aumento en el tamaño del gusano y la carga de CPU o red. Dependiendo de las necesidades o requisitos de los autores, estos se convierten en factores limitantes en lo que puede incluirse en las acciones de los gusanos. Esto se discute más a fondo después de expandir sobre estas acciones a continuación. 2.2 Adquisición de Objetivos: La fase de Adquisición de Objetivos de nuestro algoritmo de gusano se construye directamente a partir de la sección de Descubrimiento de Objetivos en [5]. Weaver et al. clasifican esta tarea en 5 categorías separadas. Aquí, ampliamos aún más su trabajo a través de la parametrización. Escaneo: El escaneo puede considerarse un método basado en ecuaciones para elegir un anfitrión. Cualquier tipo de ecuación puede ser utilizada para llegar a una dirección IP, pero hasta ahora se han visto tres tipos principales: secuencial, aleatorio y preferencia local. El escaneo secuencial es exactamente como suena: comenzar en una dirección IP e incrementar a través de todo el espacio de direcciones IP. Esto podría llevar consigo las opciones de qué IP empezar (valor elegido por el usuario, aleatorio o basado en la IP del host infectado) y cuántas veces incrementar (continuo, valor elegido o basado en subred). El escaneo aleatorio es completamente al azar (dependiendo del método PRNG elegido y su valor de semilla). El escaneo de preferencia local es una variante de Secuencial o Aleatorio, en la que tiene una mayor probabilidad de elegir una dirección IP local en lugar de una remota (por ejemplo, la división tradicional de 80/20). Listas de objetivos pregeneradas: Las listas de objetivos pregeneradas, o también llamadas listas de objetivos, podrían incluir opciones para el porcentaje de la población total y el porcentaje de errores, o simplemente el número de direcciones IP a incluir. Implícito en este tipo es el hecho de que la lista se divide entre un padre y sus hijos, evitando el problema de que cada instancia golpee exactamente las mismas máquinas. Listas de objetivos generadas externamente: Las listas de objetivos generadas externamente dependen de una o más fuentes externas que pueden ser consultadas para obtener datos del host. Esto implicará servidores que normalmente están públicamente disponibles, como los meta-servidores de juegos, o aquellos configurados explícitamente por el gusano o el autor del gusano. Los meta-servidores normalmente disponibles podrían tener parámetros para tasas de cambio, como muchos apareciendo por la noche o desapareciendo por la mañana. Cada servidor también podría tener un máximo de consultas por segundo que sería capaz de manejar. El gusano también necesitaría una forma de encontrar estos servidores, ya sea codificada en duro o a través de escaneo. Listas de Objetivos Internos: Las Listas de Objetivos Internos dependen en gran medida del host infectado. Este método podría parametrizar la elección de cuánta información hay en el host, como todas las máquinas en la subred, todas las computadoras con Windows en la subred, servidores específicos, número de internos/externos, o alguna combinación. Los métodos pasivos son determinados por las interacciones normales entre los anfitriones. Los parámetros pueden incluir una tasa de interacción con máquinas particulares, una tasa de interacción interna/externa, o una tasa de interacción basada en subredes. Cualquiera de estos métodos también puede combinarse para producir diferentes tipos de estrategias de adquisición de objetivos. Por ejemplo, un gusano puede comenzar con una lista inicial de 100 hosts o subredes diferentes. Una vez que haya agotado su búsqueda utilizando la lista de éxitos, puede proceder a realizar un escaneo aleatorio con un sesgo local del 50%. Es importante tener en cuenta, sin embargo, que el consumo de recursos de cada método no es el mismo. Diferentes métodos pueden requerir que el gusano sea grande, como los bytes adicionales necesarios para una lista de objetivos, o que tome más tiempo de procesamiento, como al buscar direcciones de otros hosts vulnerables en el host. Se deben realizar investigaciones y análisis adicionales en esta área para determinar los costos asociados de utilizar cada método. Los costos podrían ser utilizados para determinar los compromisos de diseño en los que los autores de gusanos participan. Por ejemplo, las listas de objetivos proporcionan una alta tasa de infección, pero a un alto costo en el tamaño de la carga útil del gusano. 2.2.1 Envío de un Escaneo La función de envío de escaneo prueba si el host está disponible para la infección. Esto puede ser tan simple como verificar si el host está activo en la red o tan complejo como verificar si el host es vulnerable al exploit que se utilizará. El envío de un escaneo antes de intentar una infección puede aumentar la tasa de escaneo si el costo por fallar en una infección es mayor que el costo de fallar en un escaneo o de enviar un escaneo más una infección; y las fallas son más frecuentes que los éxitos. Un parámetro importante para esto sería la elección del protocolo de transporte (TCP/UDP) o simplemente el tiempo para un escaneo exitoso y el tiempo para un escaneo fallido. Además, ya sea que se pruebe si el host está activo o si es una prueba completa de la vulnerabilidad (o de múltiples vulnerabilidades). 2.2.2 Vector de Infección (VI) El vector de infección particular utilizado para acceder al host remoto depende principalmente de la vulnerabilidad específica elegida para explotar. En un sentido no específico, depende del protocolo de transporte elegido para usar y del tamaño del mensaje que se va a enviar. La Sección 3 de [5] también propone tres clases particulares de IV: Autotransportado, segundo canal e incrustado. 2.3 Autopreservación Las acciones de autopreservación de un gusano pueden tomar muchas formas. En la naturaleza, se ha observado que los gusanos desactivan el software antivirus o evitan enviarse a ciertas direcciones conocidas por los antivirus. También se ha observado que intentan deshabilitar otros gusanos que podrían estar compitiendo por el mismo sistema. También creemos que un escaneo con limitación de tiempo podría ayudar al gusano a pasar desapercibido. También proponemos un método de señuelo, mediante el cual un gusano liberará a unos pocos hijos que causen mucho ruido para que el progenitor no sea notado. También se ha propuesto [5] que un gusano cause daño a su huésped si, y solo si, se ve perturbado de alguna manera. Este módulo podría contener parámetros para: probabilidad de éxito en deshabilitar actualizaciones de antivirus u otro software, probabilidad de ser detectado y por ende eliminado, o fortalecimiento del anfitrión contra otros gusanos. 2.4 Acciones Basadas en Objetivos La funcionalidad de GBA de un gusano depende de la lista de objetivos del autor. La sección de Cargas útiles de [5] proporciona algunas sugerencias útiles para dicho módulo. La apertura de una puerta trasera puede hacer que el anfitrión sea susceptible a más ataques. Esto implicaría una probabilidad de que se utilice la puerta trasera y cualquier utilización de tráfico asociada. También podría proporcionar una lista de otros gusanos a los que este hospedador es ahora susceptible o una lista de vulnerabilidades que este hospedador tiene ahora. Los retransmisores de spam y los servidores proxy HTTP, por supuesto, tienen un consumo de ancho de banda o un patrón de tráfico asociado. Los ataques de denegación de servicio en Internet tendrían un tiempo de activación establecido, un objetivo y un patrón de tráfico. El daño de los datos tendría una probabilidad asociada de que el anfitrión muera debido al daño. En la Figura 1, se resume este modelo general de un gusano. Por favor, tenga en cuenta que en este modelo no hay aprendizaje, o muy poco, intercambio de información entre las instancias de gusano, y ciertamente no hay coordinación de acciones. En la siguiente sección ampliamos el modelo para incluir dichos mecanismos, y por lo tanto, llegamos al modelo general de un gusano en enjambre. 2.5 Enjambres - Modelo General Como se describe en la sección 1, las características básicas que distinguen el comportamiento en enjambre de lo que simplemente parece ser comportamientos colectivos coordinados son cuatro atributos básicos. Estos son: 1. Sencillez de lógica y acciones; 2. Mecanismos de Comunicación Local; 3. Control distribuido; y 4. Inteligencia emergente, incluyendo autoorganización. 325 Estructura Función/Ejemplo Infección, Vector de Infección El ejecutable se ejecuta Protección y sigilo Deshabilitar McAfee (Mantenerse vivo) Propagación Enviar correo electrónico a todos en la libreta de direcciones Acción basada en objetivos (ABO) DDoS www.sco.com Todo lo demás, a menudo llamado carga útil Figura 1: Modelo general de gusano En este trabajo agregamos todos estos atributos bajo el título general de Aprendizaje, Comunicación y Control Distribuido. La presencia de estos atributos distingue a los gusanos de enjambre de los gusanos regulares, u otros tipos de malware como los Zombies. En la figura ? ?, el modelo genérico de un gusano se amplía para incluir este conjunto de acciones. Dentro de este contexto, un gusano como Slammer no puede ser categorizado como un gusano en enjambre debido a que las nuevas instancias del gusano no coordinan sus acciones ni comparten información. Por otro lado, los zombies y muchas otras formas de DDoS, que a primera vista pueden considerarse gusanos enjambre, no lo son. Esto se debe simplemente al hecho de que en el caso de los zombies, el control no está distribuido sino centralizado, y no surgen comportamientos emergentes. Lo último, la posible aparición de inteligencia o nuevos comportamientos es lo que hace que los gusanos en enjambre sean potencialmente peligrosos. Finalmente, cuando se considera la mayoría de las interrupciones recientes en la Infraestructura de Internet, y a la luz de nuestra descripción de los ataques en enjambre, entonces dichas interrupciones pueden ser fácilmente categorizadas como precursores de un comportamiento verdaderamente en enjambre. Específicamente, • DDOS: Un gran número de hosts comprometidos envían paquetes inútiles que requieren procesamiento (Stacheldraht, http://www.cert.org/incidentnotes/IN-99-04.html). Los ataques DDoS son los precursores tempranos de los Ataques en Enjambre debido al gran número de agentes involucrados. • Code Red CrV1, Code Red II, Nimbda - Exhiben nociones tempranas de ataques en enjambre, incluyendo un canal de comunicación oculto. • Staniford & Paxson en ¿Cómo Dominar Internet en Tu Tiempo Libre? exploran modificaciones a CrV1, Code Red I, II con un tipo de comportamiento similar a un enjambre. Por ejemplo, especulan sobre nuevos gusanos que emplean comunicación directa de gusano a gusano y utilizan actualizaciones programables. Por ejemplo, el gusano Warhol y los gusanos de Permutation-Scanning (autocoordinados). 2.6 Gusano Swarm: los detalles Al considerar la creación de lo que creíamos que era el primer Gusano Swarm en existencia, queríamos adherirnos lo más cercanamente posible al modelo general presentado en la sección ? ? mientras facilitábamos al mismo tiempo un análisis a gran escala, tanto empírico como a través de simulaciones, del comportamiento del enjambre. Por esta razón, seleccionamos como primera instancia Estructura Función/Ejemplo Infección, Infección Vector Ejecutable se ejecuta Protección y Sigilo Deshabilitar McAfee (Manteniéndose Vivo) Propagación Enviar correo electrónico a todos en la libreta de direcciones Aprendizaje, Comunicación, Feromonas/Banderas (Prueba y Control Distribuido si el Gusano ya está presente) Bombas de tiempo, Algoritmos de Aprendizaje, Canal IRC Acción Basada en Objetivos (ABO) DDoS www.sco.com Todo lo demás, a menudo llamado carga útil Figura 2: Modelo General de un Gusano de Enjambre del enjambre un gusano simple de craqueo de contraseñas. El objetivo de este gusano simplemente es infectar a un anfitrión intentando secuencialmente iniciar sesión en el anfitrión utilizando contraseñas conocidas (ataque de diccionario), contraseñas que han sido descubiertas previamente por cualquier miembro del enjambre, y contraseñas aleatorias. Una vez que un huésped está infectado, el gusano creará canales de comunicación tanto con sus vecinos conocidos en ese momento, como con cualquier descendencia que genere con éxito. En este contexto, una generación exitosa de una descendencia significa simplemente infectar a un nuevo huésped y replicar una copia exacta de sí misma en dicho huésped. Llamamos a este gusano enjambre el gusano ZachiK en honor a uno de sus creadores. Como se puede ver en esta descripción, el gusano ZachiK exhibe todos los elementos descritos anteriormente. En las siguientes secciones, describimos detalladamente cada uno de los elementos del gusano ZachiK. 2.7 Vector de Infección El vector de infección utilizado por el gusano ZachiK es el protocolo de shell seguro SSH. Se escribió un cliente modificado que es capaz de recibir contraseñas desde la línea de comandos, e integrado con un script que le suministra diversas contraseñas: conocidas y aleatorias. Cuando se encuentra una contraseña para un objetivo adecuado, comienza el proceso de infección. Después de descubrir la contraseña de root de un host, el gusano infecta el host objetivo y se replica a sí mismo. El gusano crea un nuevo directorio en el host objetivo, copia el cliente ssh modificado, el script, los servidores de comunicaciones y las versiones actualizadas de los archivos de datos (lista de contraseñas conocidas y una lista de vecinos actuales). Luego ejecuta el script modificado en los hosts recién infectados, lo que genera el servidor de comunicaciones, notifica a los vecinos y comienza a buscar nuevos objetivos. Se podría argumentar, de manera correcta, que el gusano ZachiK puede ser fácilmente derrotado por las técnicas de contramedidas actuales presentes en la mayoría de los sistemas hoy en día, como la prohibición de accesos directos de root desde la red. Dentro de este contexto, ZachiK puede ser rápidamente descartado como un gusano muy simple e inofensivo que no requiere un estudio adicional. Sin embargo, el lector debería considerar lo siguiente: 1. ZachiK se puede modificar fácilmente para incluir una variedad de vectores de infección. Por ejemplo, podría programarse para adivinar nombres de usuario comunes y sus contraseñas; obtener acceso al sistema, luego adivinar la contraseña de root o utilizar otras vulnerabilidades conocidas para obtener privilegios de root. ZachiK es un gusano de prueba de concepto. La importancia de ZachiK radica en que incorpora todos los comportamientos de un gusano en enjambre, incluyendo, pero no limitándose a, el control distribuido, la comunicación entre agentes y el aprendizaje; 3. ZachiK está compuesto por una gran colección de agentes que operan de forma independiente, lo que se presta naturalmente a algoritmos paralelos como la búsqueda paralela del espacio de direcciones IPV4. Dentro de este contexto, SLAMMER incorpora una capacidad de búsqueda paralela de direcciones potencialmente susceptibles. Sin embargo, a diferencia de ZachiK, el conocimiento descubierto por la búsqueda nunca se comparte entre los agentes. Por estas razones, y muchas otras, no se debe descartar el potencial de esta nueva clase de gusanos, sino más bien abrazar su estudio. 2.8 Autopreservación En el caso del gusano ZachiK, las principales técnicas de autopreservación utilizadas son simplemente mantener el tamaño de la carga útil pequeño. En este contexto, esto simplemente significa restringir la cantidad de contraseñas que una descendencia hereda, enmascarar mensajes de gusano como solicitudes http comunes y limitar el número de vecinos a un máximo de cinco-(5). 2.9 Propagación Elegir el(los) próximo(s) objetivo(s) de manera eficiente requiere reflexión. En el pasado, los gusanos conocidos y propuestos, ver [5], han aplicado técnicas de propagación que variaban. Estos incluyen: selección estrictamente aleatoria de un posible anfitrión vulnerable; listas de objetivos de anfitriones vulnerables; selección aleatoria localmente sesgada (seleccionar un objetivo de anfitrión al azar de una subred local); y una combinación de algunas o todas las anteriores. En nuestros entornos de prueba y simulación, aplicaremos una combinación de selección localmente sesgada y totalmente aleatoria de posibles hosts vulnerables. Sin embargo, debido a que el gusano ZachiK es un gusano enjambre, la información de descubrimiento de direcciones (es decir, cuando se descubren direcciones inexistentes) se compartirá entre los miembros del enjambre. Los hilos de infección y propagación realizan el siguiente conjunto de actividades repetidamente: • Elegir una dirección • Verificar la validez de la dirección • Elegir un conjunto de contraseñas • Intentar infectar al host seleccionado con este conjunto de contraseñas. Como se describió anteriormente, la elección de una dirección hace uso de una combinación de selección aleatoria, sesgo local y listas de objetivos. Específicamente, para elegir una dirección, la instancia puede: • Generar una nueva dirección aleatoria • Generar una dirección en la red local • Elegir una dirección de una lista de transferencia La elección se realiza de forma aleatoria entre estas opciones, y puede variarse para probar la dependencia de la propagación en elecciones particulares. Las contraseñas son elegidas de una lista de contraseñas conocidas o generadas recientemente. Cuando una infección de una dirección válida falla, se agrega a una lista de entregas, que se envía a los vecinos para intentar solucionar el problema. 2.10 Aprendizaje, Comunicación y Control Distribuido 2.10.1 Comunicación El concepto de un enjambre se basa en la transferencia de información entre vecinos, quienes retransmiten sus nuevos mensajes entrantes a sus vecinos, y así sucesivamente hasta que cada instancia del gusano en el enjambre esté al tanto de estos mensajes. Hay dos clases de mensajes: mensajes de datos o información y comandos. Los mensajes de comando están destinados a un usuario externo (también conocidos como hackers y/o crackers) para controlar las acciones de las instancias, y actualmente no están implementados. Los mensajes de información actualmente son de tres tipos: nuevo miembro, contraseñas y direcciones explotables (transferencias). Los mensajes de nuevo miembro son mensajes que una nueva instancia envía a los vecinos en su lista (corta) de vecinos iniciales. Los vecinos luego registran estas instancias en su lista de vecinos. Estos son mensajes que forman la multi-conectividad del enjambre, y sin ellos, la topología sería una estructura en forma de árbol, donde la eliminación de un solo nodo haría que las instancias debajo de él fueran inaccesibles. Los mensajes de contraseñas informan instancias de contraseñas recién descubiertas, y al informar a todas las instancias, el enjambre en su totalidad recopila esta información, lo que le permite infectar nuevas instancias de manera más efectiva. Los mensajes de entrega informan instancias de direcciones válidas que no pudieron ser comprometidas (fallaron al romper la contraseña de la cuenta root). Dado que el espacio de direcciones es bastante disperso, lleva un tiempo relativamente largo (es decir, muchos intentos) descubrir una dirección válida. Por lo tanto, al entregar las direcciones válidas descubiertas, el enjambre está (a) conservando energía al no redescubrir las mismas direcciones (b) atacando de manera más efectiva. De cierta manera, esto es una simple instancia de actividad coordinada de un enjambre. 2.10.2 Coordinación Cuando nace una instancia de gusano, transmite su existencia a todos los vecinos en su lista. El hilo principal luego genera algunas hebras de infección y continúa manejando mensajes entrantes (registrando vecinos, agregando nuevas contraseñas, recibiendo direcciones y transmitiendo estos mensajes). 2.10.3 Control Distribuido El control en el gusano ZachiK es distribuido en el sentido de que cada instancia del gusano realiza un conjunto de acciones de forma independiente de cada otra instancia, al mismo tiempo que se beneficia del aprendizaje logrado por sus vecinos inmediatos. 2.11 Acciones Basadas en Objetivos La primera instancia del gusano ZachiK tiene dos objetivos básicos. Estos son: (1) propagar, y (2) descubrir y compartir con los miembros de la colonia nuevas contraseñas de root. 3. DISEÑO EXPERIMENTAL Para verificar nuestra hipótesis de que los Gusanos de Enjambre son más capaces y, por lo tanto, más peligrosos que otros 327 gusanos conocidos, se creó un banco de pruebas de red y se desarrolló un simulador capaz de simular topologías a gran escala similares a Internet (espacio IPV4). El banco de pruebas de red consistía en una red de área local de 30 computadoras basadas en Linux. El simulador fue escrito en C++. El gusano de enjambre simple descrito en la sección 2.6 se utilizó para infectar al paciente cero, y luego se permitió que el gusano de enjambre se propagara a través de sus propios mecanismos de propagación, control distribuido y comportamientos de enjambre. En el caso de una red de área local simple de 30 computadoras, se seleccionaron seis (6) contraseñas raíz diferentes de un espacio de contraseñas de 4 dígitos (10000 opciones). Al comienzo del experimento se conoce una única contraseña, la del paciente cero. Todas las contraseñas compartidas se distribuyen aleatoriamente en todos los nodos. De manera similar, en el caso de la simulación, se construyó una topología de red de 10,000 hosts cuyas direcciones fueron seleccionadas al azar en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseñas compartidas ya sea de forma aleatoria y/o dirigida a subredes específicas de topologías de red. Por ejemplo, en una de nuestras ejecuciones de simulación, la topología de red consistía en 200 subredes, cada una conteniendo 50 hosts. En dicha topología, las contraseñas compartidas se distribuían en subredes donde un porcentaje variable de contraseñas se compartían entre subredes. Los porcentajes de contraseñas compartidas utilizadas reflejaban los primeros estudios empíricos, donde se descubrió que hasta el 39.7% de las contraseñas comunes eran compartidas. RESULTADOS En la Figura 3 se presentan los resultados comparando el comportamiento del Ataque de Enjambre versus el de un Gusano Malformado típico para una LAN de 30 nodos. En este conjunto de ejecuciones empíricas, seis (6) contraseñas compartidas fueron distribuidas al azar en todos los nodos de un total de 10,000 contraseñas desconocidas posibles. Los datos presentados reflejan los comportamientos de un total de tres (3) clases distintas de gusanos o enjambres de gusanos. La clase de gusanos presentada es la siguiente: • I-NS-NL:= Gusano genérico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir información con vecinos o descendientes (NS); • S-L-SP:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseñas aprendidas, y comparte contraseñas (SP) con vecinos más cercanos y descendientes; y • S-L-SP&A:= Gusano en enjambre (S), aprendizaje (L), mantiene una lista de contraseñas aprendidas, y comparte contraseñas y direcciones existentes (SP&A) con vecinos más cercanos y descendientes. Como se muestra en la Figura 3, los resultados validan nuestra hipótesis original de que los gusanos en enjambre son significativamente más eficientes y peligrosos que los gusanos genéricos. En este conjunto de experimentos, el compartir contraseñas proporciona una mejora de un orden de magnitud sobre un gusano aleatorio sin memoria. De manera similar, un gusano en enjambre que comparte contraseñas y direcciones es aproximadamente dos órdenes de magnitud más eficiente que su contraparte genérica. En la Figura 3, se pueden observar una serie de discontinuidades. Estas discontinuidades son un artefacto del pequeño espacio muestral utilizado para este experimento. Básicamente, tan pronto como se rompe una contraseña, todos los nodos que comparten esa contraseña específica se infectan en cuestión de segundos. Ten en cuenta que es trivial para un gusano en enjambre escanear y descubrir un pequeño espacio de contraseñas compartidas. En la Figura 4, se presentan los resultados de la simulación comparando el Comportamiento de Ataque de Enjambre con el de un Gusano Malformado Genérico. En este conjunto de ejecuciones de simulación, se construyó una topología de red de 10,000 hosts, cuyas direcciones fueron seleccionadas aleatoriamente en el espacio IPV4. Dentro de ese espacio, se seleccionaron y distribuyeron un total de 200 contraseñas compartidas ya sea de forma aleatoria y/o dirigida a subredes específicas de topologías de red. Los datos presentados reflejan los comportamientos de tres (3) clases distintas de gusanos o gusanos en enjambre y dos (2) estrategias de exploración de selección de objetivo de host diferentes (exploración aleatoria y sesgo local). La cantidad de sesgo local varió en múltiples ejecuciones de simulación. Los resultados presentados son comportamientos agregados. En general, se simularon las siguientes clases de Gusanos Genéricos y Gusanos en Enjambre. Exploración de direcciones: • Aleatoria:= las direcciones se seleccionan al azar de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones; y • Sesgo local:= las direcciones se seleccionan al azar de una subred local (256 direcciones) o de un subconjunto del espacio IPV4, es decir, un espacio de 224 direcciones. El porcentaje de sesgo local varía en múltiples ejecuciones. Aprendizaje, Comunicación y Control Distribuido • I-NL-NS: Gusano genérico, independiente (I), sin aprendizaje/sin memoria (NL), y sin compartir información con vecinos o descendientes (NS); • I-L-OOS: Gusano genérico, independiente (I), con aprendizaje/sin memoria (L), y compartiendo información una sola vez con descendientes solamente (OOS); • S-L-SP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseñas aprendidas, y comparte contraseñas (SP) con vecinos más cercanos y descendientes; • S-L-S&AOP:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseñas aprendidas, y comparte direcciones con vecinos y descendientes, comparte contraseñas solo una vez (al crearse) con descendientes (SA&OP); • S-L-SP&A:= Gusano en enjambre (S), con aprendizaje (L), mantiene lista de contraseñas aprendidas, y comparte contraseñas y direcciones existentes (SP&A) con vecinos más cercanos y descendientes. Como se muestra en la Figura 4, los resultados son consistentes con nuestro conjunto de resultados empíricos. Además, se pueden hacer las siguientes observaciones. 1. La preferencia local es increíblemente efectiva. Las transferencias cortas de dirección son más efectivas que las largas. Variamos el tamaño de la lista permitida en el intercambio de direcciones; el sobrecosto asociado con una lista de direcciones larga es perjudicial para el rendimiento del gusano en enjambre, así como para su sigilo; 3. Para el caso de sesgo local, compartir direcciones válidas de host susceptibles, el gusano S-L-S&AOP (recuerde, el enjambre S-L-S&AOP comparte contraseñas, solo una vez, con descendientes 328 en el momento de la creación) es más efectivo que compartir contraseñas en el caso del enjambre S-L-SP. En este caso, podemos pensar en el enjambre como lanzando un ataque de diccionario distribuido: diferentes segmentos del enjambre utilizan diferentes contraseñas para intentar ingresar a hosts no infectados susceptibles. En el modo de sesgo local, al principio de la vida del enjambre, compartir direcciones es más efectivo que compartir contraseñas, hasta que se descubran la mayoría de las subredes. Entonces, el apuntar a direcciones locales ayuda a descubrir los hosts susceptibles, mientras que los miembros del enjambre necesitan perder tiempo redescubriendo contraseñas; y 4. Infectar el último 0.5% de los nodos lleva mucho tiempo en modo de sesgo no local. Básicamente, la lista de contraseñas compartidas entre subredes se ha agotado, y el enjambre vuelve a simplemente descubrir una contraseña al azar. Figura 3: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados Empíricos, LAN de 30 nodos Figura 4: Comportamiento del Ataque de Enjambre vs Gusano Malformado: Resultados de Simulación 5. RESUMEN Y TRABAJO FUTURO En este manuscrito, hemos presentado un modelo abstracto, similar en algunos aspectos al de Weaver [5], que ayuda a explicar la naturaleza genérica de los gusanos. El modelo presentado en la sección 2 se extendió para incorporar una nueva clase de gusanos potencialmente peligrosos llamados Gusanos en Enjambre. Los Gusanos en Enjambre se comportan de manera muy similar a los enjambres biológicos y muestran un alto grado de aprendizaje, comunicación e inteligencia distribuida. Tales gusanos en enjambre son potencialmente más dañinos que sus contrapartes genéricas. Además, se creó la primera instancia, que sepamos, de un gusano de aprendizaje, llamado ZachiK. ZachiK es un gusano enjambre de descifrado de contraseñas simple que incorpora diferentes estrategias de aprendizaje y compartición de información. Un gusano de enjambre similar fue desplegado tanto en una red de área local de treinta (30) hosts, como simulado en una topología de 10,000 nodos. Los resultados preliminares mostraron que tales gusanos son capaces de comprometer a los anfitriones a tasas hasta 2 órdenes de magnitud más rápido que su contraparte genérica, manteniendo al mismo tiempo sus capacidades de sigilo. Este trabajo abre una nueva área de problemas interesantes. Algunos de los problemas más interesantes y urgentes a considerar son los siguientes: • ¿Es posible aplicar algunos de los conceptos de aprendizaje desarrollados en los últimos diez años en las áreas de inteligencia de enjambre, sistemas de agentes y control distribuido al diseño de gusanos de enjambre sofisticados de tal manera que se produzca un verdadero comportamiento emergente? • ¿Son efectivas las técnicas actuales que se están desarrollando en el diseño de Sistemas de Detección y Contramedidas de Intrusión y sistemas supervivientes contra esta nueva clase de gusanos?; y • ¿Qué técnicas, si las hay, se pueden desarrollar para crear defensas contra los gusanos de enjambre? 6. AGRADECIMIENTOS Este trabajo se realizó como parte de un esfuerzo más amplio en el desarrollo de sistemas de Detección de Intrusiones y Contramedidas de próxima generación en WSSRL. El trabajo se lleva a cabo bajo los auspicios de la subvención ACG-2004-06 otorgada por Acumen Consulting Group, Inc., Marlboro, Massachusetts. REFERENCIAS [1] C.C. Zou, L. Gao, W. G., y Towsley, D. Monitoreo y alerta temprana para gusanos de internet. En la 10ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones, Washington, DC (octubre de 2003). [2] Liu, S. y Passino, K. Inteligencia de enjambre: Resumen de la literatura. En el Departamento de Ingeniería Eléctrica, Universidad Estatal de Ohio, 2015 Neil Ave., Columbus, OH 43210 (2000). [3] Moore, D., Paxson, V., Savage, S., Shannon, C., Staniford, S., y Weaver, N. La propagación del gusano saphire/slammer. Inf. técnico, Un esfuerzo conjunto de CAIDA, ICSI, Silicon Defense, UC Berkeley EECS y UC San Diego CSE, 2003. [4] Weaver, N., Paxson, V., Staniford, S. y Cunningham, R. Una taxonomía de gusanos informáticos. En Actas del Taller de ACM sobre Malware Rápido (WORM) (2003). 329