Un Modelo Formal para la Alineación Semántica Situada Manuel Atencia Marco Schorlemmer IIIA, Instituto de Investigación en Inteligencia Artificial CSIC, Consejo Superior de Investigaciones Científicas Bellaterra (Barcelona), Cataluña, España {manu, marco}@iiia.csic.es RESUMEN El emparejamiento de ontologías es actualmente una tecnología clave para lograr la alineación semántica de entidades ontológicas utilizadas por aplicaciones basadas en conocimiento, y por lo tanto para permitir su interoperabilidad en entornos distribuidos como sistemas multiagente. La mayoría de los mecanismos de coincidencia de ontologías, sin embargo, asumen que la coincidencia previa a la integración y se basan en la semántica que ha sido codificada a priori en jerarquías de conceptos o fuentes externas. En este documento, presentamos un modelo formal para un procedimiento de alineación semántica que alinea de forma incremental las conceptualizaciones diferentes de dos o más agentes en relación con su percepción respectiva del entorno o dominio en el que están actuando. Por lo tanto, hace explícita la situación en la que se produce el alineamiento en el modelo. Recurremos a la Teoría de Canales para llevar a cabo la formalización. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial Distribuida-coherencia y coordinación, sistemas multiagente; D.2.12 [Ingeniería de Software]: Interoperabilidad-mapeo de datos; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-redes semánticas, sistemas de relaciones. Teoría de Términos Generales 1. INTRODUCCIÓN Una ontología se define comúnmente como una especificación de la conceptualización de un dominio particular. Fija el vocabulario utilizado por los ingenieros del conocimiento para denotar conceptos y sus relaciones, y restringe la interpretación de este vocabulario al significado originalmente pretendido por los ingenieros del conocimiento. Como tal, las ontologías han sido ampliamente adoptadas como una tecnología clave que puede favorecer el intercambio de conocimientos en entornos distribuidos, como sistemas multiagente, bases de datos federadas o la Web Semántica. Pero la proliferación de muchas ontologías diversas causadas por diferentes conceptualizaciones incluso del mismo dominio, y su posterior especificación utilizando terminología variada, ha resaltado la necesidad de técnicas de emparejamiento de ontologías que sean capaces de calcular relaciones semánticas entre entidades de ontologías diseñadas de forma separada. Hasta hace poco, la mayoría de los mecanismos de emparejamiento de ontologías desarrollados hasta ahora han adoptado un enfoque funcional clásico para el problema de la heterogeneidad semántica, en el que el emparejamiento de ontologías se ve como un proceso que toma dos o más ontologías como entrada y produce una alineación semántica de entidades ontológicas como salida. Además, la coincidencia se ha llevado a cabo frecuentemente en el momento del diseño, antes de integrar sistemas basados en el conocimiento o hacer que interoperen. Esto podría haber sido exitoso para dominios claramente delimitados y estables y para sistemas distribuidos cerrados, pero es insostenible e incluso indeseable para el tipo de aplicaciones que actualmente se despliegan en sistemas abiertos. La comunicación entre múltiples agentes, el intercambio de información entre pares y la composición de servicios web son de naturaleza descentralizada, dinámica y abierta, y requieren que la coincidencia de ontologías se realice localmente durante el tiempo de ejecución. Además, en muchas situaciones las ontologías de pares ni siquiera están abiertas para su inspección (por ejemplo, cuando se basan en información confidencial comercial). Ciertamente, existen esfuerzos para emparejar eficientemente entidades ontológicas en tiempo de ejecución, tomando solo aquel fragmento de la ontología que es necesario para la tarea en cuestión [10, 13, 9, 8]. Sin embargo, las técnicas utilizadas por estos sistemas para establecer las relaciones semánticas entre entidades ontológicas, aunque se apliquen en tiempo de ejecución, aún explotan taxonomías de conceptos previamente definidas tal como se representan en las estructuras basadas en grafos de las ontologías a emparejar, utilizan fuentes externas previamente existentes como tesauros (por ejemplo, WordNet) y ontologías de nivel superior (por ejemplo, CyC o SUMO), o recurren a repositorios de conocimiento adicionales o instancias compartidas. Sostenemos que la alineación semántica de la terminología ontológica es en última instancia relativa a la situación particular en la que se lleva a cabo la alineación, y que esta situación debería ser explícita e incorporada en el mecanismo de alineación. Incluso dos agentes con capacidades de conceptualización idénticas, y utilizando exactamente el mismo vocabulario para especificar sus respectivas conceptualizaciones, pueden no lograr interoperar en una situación concreta debido a su percepción diferente del dominio. Imagina una situación en la que dos agentes se enfrentan frente a un tablero de damas. El agente A1 puede conceptualizar una figura en el tablero como situada en el margen izquierdo del tablero, mientras que el agente A2 puede conceptualizar la misma figura como situada en el margen derecho. Aunque la conceptualización de izquierda y derecha se realice de la misma manera por ambos agentes, y aunque ambos utilicen los términos izquierda y derecha en su comunicación, aún necesitarán alinear sus respectivos vocabularios si desean comunicarse con éxito acciones que cambien la posición de las figuras en el tablero de damas. Su alineación semántica, sin embargo, solo será válida en el ámbito de su interacción dentro de esta situación o entorno particular. Los mismos agentes situados de manera diferente pueden producir una alineación diferente. Este escenario es reminiscente de aquellos en los que un grupo de agentes distribuidos se adaptan para formar una ontología y un léxico compartido de manera emergente y descentralizada, con solo interacciones locales y sin autoridad de control central [12]. Este tipo de emergencia autoorganizada de significado compartido se basa en última instancia en la interacción física de los agentes con el entorno. En este artículo, sin embargo, abordamos el caso en el que los agentes ya están dotados de una ontología diseñada de arriba hacia abajo (incluso puede ser la misma), la cual no adaptan ni refinan, pero para la cual desean encontrar las relaciones semánticas con ontologías separadas de otros agentes en función de su comunicación dentro de una situación específica. En particular, proporcionamos un modelo formal que formaliza el alineamiento semántico situado como una secuencia de refinamientos de canal de información en el sentido de la teoría del flujo de información de Barwise y Seligman. Esta teoría es particularmente útil para nuestro empeño porque modela el flujo de información que ocurre en sistemas distribuidos debido a las situaciones particulares -o tokens- que llevan información. Análogamente, la alineación semántica que permitirá que la información fluya finalmente será llevada por la situación particular en la que los agentes están actuando. Por lo tanto, consideraremos un escenario con dos o más agentes situados en un entorno. Cada agente tendrá su propio punto de vista del entorno, de modo que, si el entorno se encuentra en un estado concreto, ambos agentes pueden tener percepciones diferentes de este estado. Debido a estas diferencias, puede haber una discrepancia en el significado de las entidades sintácticas con las que los agentes describen sus percepciones (y que constituyen las respectivas ontologías de los agentes). Sostenemos que estas entidades sintácticas pueden estar relacionadas de acuerdo con la semántica intrínseca proporcionada por la relación existente entre el punto de vista de los agentes del entorno. La existencia de esta relación está justificada precisamente por el hecho de que los agentes están situados y observan el mismo entorno. En la Sección 2 describimos nuestro modelo formal para el Alineamiento Semántico Situado (SSA). Primero, en la Sección 2.1 asociamos un canal al escenario bajo consideración y mostramos cómo la lógica distribuida generada por este canal proporciona las relaciones lógicas entre los puntos de vista de los agentes del entorno. En segundo lugar, en la Sección 2.2 presentamos un método mediante el cual los agentes obtienen aproximaciones de esta lógica distribuida. Estas aproximaciones se vuelven gradualmente más confiables a medida que se aplica el método. En la Sección 3 informamos sobre una aplicación de nuestro método. Las conclusiones y trabajos futuros se analizan en la Sección 4. Finalmente, un apéndice resume los términos y teoremas de la teoría de Canales utilizados a lo largo del documento. No asumimos ningún conocimiento de la Teoría de Canales; reiteramos definiciones básicas y teoremas en el apéndice, pero cualquier exposición detallada de la teoría está fuera del alcance de este documento. 2. Un modelo formal para SSA 2.1 La lógica de SSA Considere un escenario con dos agentes A1 y A2 situados en un entorno E (la generalización a cualquier conjunto numerable de agentes es directa). Asociamos un conjunto numerable S de estados a E y, en cualquier instante dado, suponemos que E se encuentra en uno de estos estados. Suponemos además que cada agente es capaz de observar el entorno y tiene su propia percepción de él. Esta habilidad es capturada fielmente por una función sobreyectiva seei: S → Pi, donde i ∈ {1, 2}, y típicamente see1 y see2 son diferentes. Según la Teoría del Canal, la información solo es viable donde existe una forma sistemática de clasificar cierto rango de cosas como siendo de una manera u otra, en otras palabras, donde hay una clasificación (ver apéndice A). Por lo tanto, para estar dentro del marco de la Teoría de Canales, debemos asociar clasificaciones a los componentes de nuestro sistema. Para cada i ∈ {1, 2}, consideramos una clasificación Ai que modela el punto de vista de Ai sobre E. Primero, tok(Ai) está compuesto por las percepciones de Ai sobre los estados de E, es decir, tok(Ai) = Pi. Segundo, typ(Ai) contiene las entidades sintácticas mediante las cuales Ai describe sus percepciones, las que constituyen la ontología de Ai. Finalmente, |=Ai sintetiza cómo Ai relaciona sus percepciones con estas entidades sintácticas. Ahora, con el objetivo de asociar el entorno E con una clasificación E, elegimos la clasificación de potencia de S como E, que es la clasificación cuyo conjunto de tipos es igual a 2S, cuyos tokens son los elementos de S, y para la cual un token e es de tipo ε si e ∈ ε. La razón para tomar la clasificación de poder es porque no hay entidades sintácticas que puedan desempeñar el papel de tipos para E, ya que, en general, no hay una conceptualización global del entorno. Sin embargo, el conjunto de tipos de la clasificación de potencia incluye todas las posibles configuraciones de tokens potencialmente descritas por tipos. Por lo tanto, tok(E) = S, typ(E) = 2S y e |=E ε si y solo si e ∈ ε. La noción de canal (ver apéndice A) es fundamental en la teoría de Barwise y Seligman. El flujo de información entre los componentes de un sistema distribuido se modela en términos de un canal y las relaciones entre estos componentes se expresan a través de infomorfismos (ver apéndice A) que proporcionan una forma de mover información entre ellos. El flujo de información del escenario bajo consideración está descrito con precisión por el canal E = {fi : Ai → E}i∈{1,2} definido de la siguiente manera: • ˆfi(α) = {e ∈ tok(E) | seei(e) |=Ai α} para cada α ∈ typ(Ai) • ˇfi(e) = seei(e) para cada e ∈ tok(E) donde i ∈ {1, 2}. La definición de ˇfi parece natural mientras que ˆfi se define de tal manera que se cumple la propiedad fundamental de los infomorfismos: ˇfi(e) |=Ai α si y solo si seei(e) |=Ai α (por definición de ˇfi) si y solo si e ∈ ˆfi(α) (por definición de ˆfi) si y solo si e |=E ˆfi(α) (por definición de |=E) El Sexto Congreso Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1279. Por consiguiente, E es el núcleo del canal E y un estado e ∈ tok(E) conecta las percepciones de los agentes ˇf1(e) y ˇf2(e) (ver Figura 1). typ(E) typ(A1) ˆf1 99ttttttttt typ(A2) ˆf2 eeJJJJJJJJJ tok(E) |=E        ˇf1yyttttttttt ˇf2 %%JJJJJJJJJ tok(A1) |=A1        tok(A2) |=A2        Figura 1: Canal E E explica el flujo de información de nuestro escenario debido a que los agentes A1 y A2 están situados y perciben el mismo entorno E. Queremos obtener relaciones significativas entre las entidades sintácticas de los agentes, es decir, los tipos de agentes. Declaramos que la significatividad debe estar en concordancia con E. La operación de suma (ver apéndice A) nos brinda una forma de combinar las clasificaciones de los dos agentes del canal E en una sola clasificación, es decir, A1 + A2, y también de combinar las dos infomorfismos en un solo infomorfismo, f1 + f2: A1 + A2 → E. A1 + A2 ensambla las clasificaciones de los agentes de una manera muy general. tok(A1 + A2) es el producto cartesiano de tok(A1) y tok(A2), es decir, tok(A1 + A2) = {p1, p2 | pi ∈ Pi}, por lo que un token de A1 + A2 es un par de percepciones de agentes sin restricciones. typ(A1 + A2) es la unión disjunta de typ(A1) y typ(A2), y p1, p2 es de tipo i, α si pi es de tipo α. Damos importancia a tomar la unión disjunta porque A1 y A2 podrían usar tipos idénticos con el propósito de describir sus respectivas percepciones de E. La clasificación A1 + A2 parece ser el lugar natural en el que buscar relaciones entre los tipos de agentes. Ahora, la Teoría de Canales proporciona una forma de hacer explícitas todas estas relaciones de manera lógica mediante teorías y lógicas locales (ver apéndice A). La teoría generada por la clasificación de la suma, Th(A1 + A2), y por ende su lógica generada, Log(A1 + A2), involucran todas aquellas restricciones entre los tipos de agentes válidos de acuerdo a A1 + A2. Sin embargo, hay que tener en cuenta que estas restricciones son obvias. Como hemos indicado anteriormente, la significatividad debe estar en concordancia con el canal E. Las clasificaciones A1 + A2 y E están conectadas a través del sum infomorfismo, f = f1 + f2, donde: • ˆf( i, α ) = ˆfi(α) = {e ∈ tok(E) | seei(e) |=Ai α} para cada i, α ∈ typ(A1 + A2) • ˇf(e) = ˇf1(e), ˇf2(e) = see1(e), see2(e) para cada e ∈ tok(E) Las restricciones significativas entre los tipos de agentes están en concordancia con el canal E porque se calculan utilizando f como explicamos a continuación. Tan importante como la noción de canal es el concepto de lógica distribuida (ver apéndice A). Dada un canal C y una lógica L en su núcleo, DLogC(L) representa el razonamiento sobre las relaciones entre los componentes de C justificado por L. Si L = Log(C), la lógica distribuida, denotada por Log(C), captura de manera lógica el flujo de información inherente en el canal. En nuestro caso, Log(E) explica la relación entre los puntos de vista de los agentes del entorno de manera lógica. Por un lado, las restricciones de Th(Log(E)) están definidas por: Γ Log(E) Δ si ˆf[Γ] Log(E) ˆf[Δ] (1) donde Γ, Δ ⊆ typ(A1 + A2). Por otro lado, el conjunto de tokens normales, NLog(E), es igual al rango de la función ˇf: NLog(E) = ˇf[tok(E)] = { see1(e), see2(e) | e ∈ tok(E)} Por lo tanto, un token normal es un par de percepciones de agentes que están restringidas por provenir del mismo estado del entorno (a diferencia de los tokens A1 + A2). Todos los límites de Th(Log(E)) son cumplidos por todos los tokens normales (debido a ser una lógica). En este caso particular, esta condición también es suficiente (la demostración es directa); como alternativa a (1) tenemos: Γ Log(E) Δ si y solo si para todo e ∈ tok(E), si (∀ i, γ ∈ Γ)[seei(e) |=Ai γ] entonces (∃ j, δ ∈ Δ)[seej(e) |=Aj δ] (2) donde Γ, Δ ⊆ typ(A1 + A2). Log(E) es la lógica de SSA. El Th(Log(E)) comprende las restricciones más significativas entre los tipos de agentes de acuerdo con el canal E. En otras palabras, la lógica de SSA contiene y también justifica las relaciones más significativas entre esas entidades sintácticas que los agentes utilizan para describir sus propias percepciones del entorno. Log(E) es completo ya que Log(E) es completo, pero no necesariamente es válido porque aunque Log(E) es válido, ˇf no es sobreyectiva en general (ver apéndice B). Si Log(E) también es válido, entonces Log(E) = Log(A1 + A2) (ver apéndice B). Eso significa que no hay una relación significativa entre los puntos de vista de los agentes sobre el entorno según E. Es simplemente el hecho de que Log(E) sea insostenible lo que permite una relación significativa entre los puntos de vista de los agentes. Esta relación se expresa a nivel de tipo en términos de restricciones por Th(Log(E)) y a nivel de token por NLog(E). 2.2 Acercándonos a la lógica de la SSA a través de la comunicación. Hemos denominado Log(E) a la lógica de la SSA. Th(Log(E)) comprende las restricciones más significativas entre los tipos de agentes según E. El problema es que ninguno de los agentes puede hacer uso de esta teoría porque no conocen E completamente. En esta sección, presentamos un método mediante el cual los agentes obtienen aproximaciones a Th(Log(E)). También demostramos que estas aproximaciones se vuelven gradualmente más confiables a medida que se aplica el método. Los agentes pueden obtener aproximaciones a Th(Log(E)) a través de la comunicación. A1 y A2 se comunican intercambiando información sobre sus percepciones de los estados del entorno. Esta información se expresa en términos de sus propias relaciones de clasificación. Específicamente, si E se encuentra en un estado concreto e, asumimos que los agentes pueden comunicarse entre sí qué tipos son satisfechos por sus respectivas percepciones de e y cuáles no lo son. Este intercambio genera un canal C = {fi : Ai → 1280 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) C}i∈{1,2} y Th(Log(C)) contiene las restricciones entre los tipos de agentes justificadas por el hecho de que los agentes han observado e. Ahora, si E cambia a otro estado e y los agentes proceden como antes, otro canal C = {fi : Ai → C }i∈{1,2} da cuenta de la nueva situación considerando también la información previa. Th(Log(C )) comprende las restricciones entre los tipos de agentes justificadas por el hecho de que los agentes han observado e y e . El punto significativo es que C es un refinamiento de C (ver apéndice A). El Teorema 2.1 a continuación asegura que el canal refinado implica información más confiable. La comunicación supuestamente termina cuando los agentes han observado todos los estados del entorno. Nuevamente esta situación puede ser modelada por un canal, llámelo C∗ = {f∗ i : Ai → C∗ }i∈{1,2}. El teorema 2.2 establece que Th(Log(C∗ )) = Th(Log(E)). El Teorema 2.1 y el Teorema 2.2 aseguran que aplicando el método, los agentes pueden obtener aproximaciones a Th(Log(E)) gradualmente más confiables. Teorema 2.1. Sean C = {fi : Ai → C}i∈{1,2} y C = {fi : Ai → C}i∈{1,2} dos canales. Si C es un refinamiento de C entonces: 1. Th(Log(C )) ⊆ Th(Log(C)) 2.
La traducción al español es: Th(Log(C )) ⊆ Th(Log(C)) 2. NLog(C ) ⊇ NLog(C) Prueba. Dado que C es un refinamiento de C, entonces existe un refinamiento infomorfismo r de C a C; por lo tanto, fi = r ◦ fi. Sea A =def A1 + A2, f =def f1 + f2 y f =def f1 + f2. 1. Sean Γ y Δ subconjuntos de typ(A) y supongamos que Γ Log(C) Δ, lo cual significa que ˆf [Γ] ⊂ ˆf [Δ]. Tenemos que demostrar Γ Log(C) Δ, o equivalentemente, ˆf[Γ] C ˆf[Δ]. Procedemos por reducción al absurdo. Supongamos que c ∈ tok(C) no satisface el secuente ˆf[Γ], ˆf[Δ]. Entonces c |=C ˆf(γ) para todo γ ∈ Γ y c |=C ˆf(δ) para todo δ ∈ Δ. Elijamos un γ arbitrario ∈ Γ. Tenemos que γ = i, α para algún α ∈ typ(Ai) e i ∈ {1, 2}. Por lo tanto ˆf(γ) = ˆf( i, α ) = ˆfi(α) = ˆr ◦ ˆfi (α) = ˆr( ˆfi (α)). Por lo tanto: c |=C ˆf(γ) si y solo si c |=C ˆr( ˆfi (α)) si y solo si ˇr(c) |=C ˆfi (α) si y solo si ˇr(c) |=C ˆf ( i, α ) si y solo si ˇr(c) |=C ˆf (γ). En consecuencia, ˇr(c) |=C ˆf (γ) para todo γ ∈ Γ. Dado que ˆf [Γ] ⊂ ˆf [Δ], entonces existe δ∗ ∈ Δ tal que ˇr(c) |=C ˆf (δ∗ ). Una secuencia de equivalencias similar a la anterior justifica que c |=C ˆf(δ∗), contradiciendo que c sea un contraejemplo para ˆf[Γ], ˆf[Δ]. Por lo tanto, Γ Log(C) Δ como queríamos demostrar. 2. Permita que a1, a2 ∈ tok(A) y suponga que a1, a2 ∈ NLog(C). Por lo tanto, existe un token c en C tal que a1, a2 = ˇf(c). Entonces tenemos ai = ˇfi(c) = ˇfi ◦ ˇr(c) = ˇfi (ˇr(c)), para i ∈ {1, 2}. Por lo tanto, a1, a2 = ˇf (ˇr(c)) y a1, a2 ∈ NLog(C). Por consiguiente, NLog(C) ⊇ NLog(C), lo que concluye la prueba. Observación 2.1. El Teorema 2.1 afirma que el canal más refinado proporciona información más confiable. Aunque su teoría tiene menos restricciones, tiene más tokens normales a los que se aplica. En el resto de la sección, describimos explícitamente el proceso de comunicación y concluimos con la prueba del Teorema 2.2. Supongamos que typ(Ai) es finito para i ∈ {1, 2} y S es numerable infinito, aunque el caso finito se puede tratar de forma similar. También elegimos un conjunto numerable infinito de símbolos {cn | n ∈ N}. Omitimos los superíndices de los informorfismos cuando no surge confusión. Los tipos suelen ser representados por letras griegas y los tokens por letras latinas, por lo que si f es un infomorfismo, f(α) ≡ ˆf(α) y f(a) ≡ ˇf(a). La comunicación de los agentes comienza a partir de la observación de E. Supongamos que E se encuentra en el estado e1 ∈ S = tok(E). La percepción de A1 de e1 es f1(e1) y la percepción de A2 de e1 es f2(e1). Damos por sentado que A1 puede comunicar a A2 aquellos tipos que están y no están satisfechos por f1(e1) según su clasificación A1. Así puede hacer A2. Dado que tanto typ(A1) como typ(A2) son finitos, este proceso eventualmente termina. Después de esta comunicación surge un canal C1 = {f1 i : Ai → C1 }i=1,2 (ver Figura 2). C1 A1 f1 1 ==|||||||| A2 f1 2 aaCCCCCCCC Figura 2: La primera etapa de comunicación Por un lado, C1 está definido por: • tok(C1 ) = {c1 } • typ(C1 ) = typ(A1 + A2) • c1 |=C1 i, α si fi(e1 ) |=Ai α (para todo i, α ∈ typ(A1 + A2)) Por otro lado, f1 i , con i ∈ {1, 2}, está definido por: • f1 i (α) = i, α (para todo α ∈ typ(Ai)) • f1 i (c1 ) = fi(e1 ) Log(C1 ) representa el razonamiento sobre la primera etapa de comunicación. Es fácil demostrar que Th(Log(C1)) = Th(C1). El punto significativo es que ambos agentes conocen C1 como resultado de la comunicación. Por lo tanto, pueden calcular por separado la teoría Th(C1) = typ(C1), C1 que contiene las restricciones entre los tipos de agentes justificadas por el hecho de que los agentes han observado e1. Ahora, supongamos que E cambia a un nuevo estado e2. Los agentes pueden proceder como antes, intercambiando esta vez información sobre sus percepciones de e2. Aparece otro canal C2 = {f2 i : Ai → C2 }i∈{1,2}. Definimos C2 de manera que también tenga en cuenta la información proporcionada por la etapa previa de comunicación. Por un lado, C2 está definido por: • tok(C2) = {c1, c2} Escribimos estos símbolos con superíndices porque limitamos el uso de subíndices en lo que respecta a los agentes. Ten en cuenta que este conjunto se elige con la misma cardinalidad que S. El Sexto Congreso Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1281 • typ(C2) = typ(A1 + A2) • ck |=C2 i, α si fi(ek) |=Ai α (para todo k ∈ {1, 2} e i, α ∈ typ(A1 + A2)) Por otro lado, f2 i, con i ∈ {1, 2}, está definido por: • f2 i (α) = i, α (para todo α ∈ typ(Ai)) • f2 i (ck) = fi(ek) (para todo k ∈ {1, 2}) Log(C2) representa el razonamiento sobre las etapas de comunicación anteriores y posteriores. Th(Log(C2)) es igual a Th(C2) = typ(C2), C2, entonces contiene las restricciones entre los tipos de agentes justificadas por el hecho de que los agentes han observado e1 y e2. A1 y A2 conocen C2, por lo que pueden usar estas restricciones. El punto clave es que el canal C2 es un refinamiento de C1. Es fácil comprobar que f1, definida como la función identidad en tipos y la función de inclusión en tokens, es un infomorfismo de refinamiento (ver en la parte inferior de la Figura 3). Según el Teorema 2.1, las restricciones C2 son más confiables que las restricciones C1. En la situación general, una vez que los estados e1, e2, ..., en−1 (n ≥ 2) han sido observados y aparece un nuevo estado en, el canal Cn = {fn i : Ai → Cn }i∈{1,2} informa sobre la comunicación de los agentes hasta ese momento. La definición de Cn es similar a las anteriores y se pueden hacer observaciones análogas (ver en la parte superior de la Figura 3). La teoría Th(Log(Cn )) = Th(Cn ) = typ(Cn ), Cn contiene las restricciones entre los tipos de agentes justificados por el hecho de que los agentes han observado e1 , e2 , . . . , en. Recuerda que hemos asumido que S es infinitamente numerable. Por lo tanto, no es práctico permitir que la comunicación termine cuando todos los estados del entorno han sido observados por A1 y A2. En ese punto, la familia de canales {Cn}n∈N informaría de todas las etapas de comunicación. Por lo tanto, corresponde a los agentes decidir cuándo dejar de comunicarse si se ha alcanzado una aproximación lo suficientemente buena para los propósitos de sus respectivas tareas. Pero el estudio de posibles criterios de terminación está fuera del alcance de este documento y se deja para trabajos futuros. Desde un punto de vista teórico, sin embargo, podemos considerar el canal C∗ = {f∗ i : Ai → C∗ }i∈{1,2} que informa del final de la comunicación después de observar todos los estados del entorno. Por un lado, C∗ está definido por: • tok(C∗) = {cn | n ∈ N} • typ(C∗) = typ(A1 + A2) • cn |=C∗ i, α si fi(en) |=Ai α (para n ∈ N e i, α ∈ typ(A1 + A2)) Por otro lado, f∗ i, con i ∈ {1, 2}, está definido por: • f∗ i (α) = i, α (para α ∈ typ(Ai)) • f∗ i (cn) = fi(en) (para n ∈ N) El teorema a continuación constituye la piedra angular del modelo expuesto en este documento. Junto con el Teorema 2.1, se asegura que en cada etapa de comunicación los agentes obtengan una teoría que se aproxime más ala teoría generada por la lógica de SSA. Teorema 2.2. Las siguientes afirmaciones son válidas: 1. Para todo n ∈ N, C∗ es un refinamiento de Cn. 2. Th(Log(E)) = Th(C∗ ) = Th(Log(C∗ )). 

Th(Log(E)) = Th(C∗ ) = Th(Log(C∗ )). Prueba. 1. Es fácil demostrar que para cada n ∈ N, gn definido como la función identidad en tipos y la función de inclusión en tokens es un infomorfismo de refinamiento de C∗ a Cn. 2. La segunda igualdad es directa; la primera sigue directamente de: cn |=C∗ i, α si y solo si ˇfi(en ) |=Ai α (por definición de |=C∗ ) si y solo si en |=E ˆfi(α) (porque fi es un infomorfismo) si y solo si en |=E ˆf( i, α ) (por definición de ˆf) E C∗ gn  A1 fn 1 99OOOOOOOOOOOOO f∗ 1 UUooooooooooooo f1 cc A2 f∗ 2 ggOOOOOOOOOOOOO fn 2 wwooooooooooooo f2 ????????????????? Cn 1282 La Sexta Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 3. En el apartado anterior hemos descrito con gran detalle nuestro modelo formal para SSA. Sin embargo, aún no hemos abordado el aspecto práctico del modelo. En esta sección, damos un breve resumen de la visión pragmática de nuestro enfoque. Estudiamos un ejemplo muy simple y explicamos cómo los agentes pueden utilizar esas aproximaciones de la lógica de SSA que pueden obtener a través de la comunicación. Reflexionemos sobre un sistema que consiste en robots ubicados en una cuadrícula bidimensional en busca de paquetes con el objetivo de moverlos a un destino específico (Figura 4). Los robots solo pueden transportar un paquete a la vez y no pueden moverse a través de un paquete. Figura 4: El escenario Robots tienen una vista parcial del dominio y existen dos tipos de robots según el campo visual que poseen. Algunos robots son capaces de observar los ocho cuadrados adyacentes, pero otros solo observan los tres cuadrados que tienen delante (ver Figura 5). Los llamamos robots URDL (forma abreviada de Arriba-Derecha-Abajo-Izquierda) y LCR (abreviatura de Izquierda-Centro-Derecha) respectivamente. Describir los estados del entorno y las funciones de percepción de los robots es bastante tedioso e incluso innecesario. Suponemos que el lector tiene todas esas descripciones en mente. Todos los robots en el sistema deben ser capaces de resolver problemas de distribución de paquetes de forma cooperativa comunicando sus intenciones entre sí. Para comunicarse, los agentes envían mensajes utilizando alguna ontología. En nuestro escenario, coexisten dos ontologías, las ontologías UDRL y LCR. Ambos son muy simples y se limitan a describir lo que los robots observan. Figura 5: Campo de visión de los robots. Cuando un robot que lleva un paquete encuentra otro paquete obstruyendo su camino, puede rodearlo o, si hay otro robot en su campo visual, pedirle ayuda. Supongamos que dos robots URDL se encuentran en una situación como la que se muestra en la Figura 6. El Robot1 (el que lleva un paquete) decide pedir ayuda al Robot2 y envía una solicitud. Esta solicitud está escrita a continuación como un mensaje KQML y debe interpretarse intuitivamente como: Robot2, recoge el paquete ubicado en mi cuadrado de Arriba, sabiendo que estás ubicado en mi cuadrado de Arriba-Derecha. ` solicitud :emisor Robot1 :receptor Robot2 :idioma Distribución de paquetes :ontología Ontología URDL :contenido (recoger U(Paquete) porque UR(Robot2) ´ Figura 6: Asistencia de robot Robot2 entiende el contenido de la solicitud y puede usar una regla representada por la siguiente restricción: 1, UR(Robot2) , 2, UL(Robot1) , 1, U(Paquete) 2, U(Paquete) La restricción anterior debe interpretarse intuitivamente como: si Robot2 está situado en el cuadrado de Arriba-Derecha de Robot1, Robot1 está situado en el cuadrado de Arriba-Izquierda de Robot2 y un paquete está ubicado en el cuadrado de Arriba de Robot1, entonces un paquete está ubicado en el cuadrado de Arriba de Robot2. Ahora, surgen problemas cuando un robot LCR y un robot URDL intentan interoperar. Ver la Figura 7. El Robot1 envía una solicitud en la forma: ` solicitud :emisor Robot1 :receptor Robot2 :idioma Distribución de paquetes :ontología Ontología LCR :contenido (recoger R(Robot2) porque C(Paquete) ´ Robot2 no entiende el contenido de la solicitud pero deciden comenzar un proceso de alineación -correspondiente con un canal C1. Una vez finalizado, Robot2 busca en Th(C1) restricciones similares a la esperada, es decir, aquellas de la forma: 1, R(Robot2), 2, UL(Robot1), 1, C(Package) C1 2, λ(Package) donde λ ∈ {U, R, D, L, UR, DR, DL, UL}. De estos, solo las siguientes restricciones son plausibles según C1: El Sexto Internacional. En la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1283 Figura 7: Desajuste de ontología 1, R(Robot2), 2, UL(Robot1), 1, C(Paquete) C1 2, U(Paquete) 1, R(Robot2), 2, UL(Robot1), 1, C(Paquete) C1 2, L(Paquete) 1, R(Robot2), 2, UL(Robot1), 1, C(Paquete) C1 2, DR(Paquete) Si posteriormente ambos robots que adoptan los mismos roles participan en una situación como la que se muestra en la Figura 8, se lleva a cabo un nuevo proceso de alineación, correspondiente a un canal C2. C2 también considera la información previa y, por lo tanto, perfecciona C1. La única restricción de las anteriores que sigue siendo plausible según C2 es: 1, R(Robot2), 2, UL(Robot1), 1, C(Package) C2 2, U(Package). Nótese que esta restricción es un elemento de la teoría de la lógica distribuida. Los agentes se comunican para cooperar con éxito y el éxito está garantizado utilizando restricciones de la lógica distribuida. Figura 8: Refinamiento 4. CONCLUSIONES Y TRABAJOS FUTUROS En este artículo hemos expuesto un modelo formal de alineación semántica como una secuencia de refinamientos del canal de información que son relativos a los estados particulares del entorno en el que dos agentes se comunican y alinean sus respectivas conceptualizaciones de estos estados. Antes que nosotros, Kent [6] y Kalfoglou y Schorlemmer [4, 10] han aplicado la Teoría del Canal para formalizar la alineación semántica utilizando también la perspicacia de Barwise y Seligman para centrarse en los tokens como los facilitadores del flujo de información. Su enfoque para la alineación semántica, sin embargo, al igual que la mayoría de los mecanismos de coincidencia de ontologías desarrollados hasta la fecha (independientemente de si siguen un enfoque funcional basado en el diseño temporal o un enfoque basado en la interacción en tiempo de ejecución), aún define la alineación semántica en términos de decisiones de diseño a priori, como la taxonomía de conceptos de las ontologías o las fuentes externas incorporadas en el proceso de alineación. En cambio, el modelo que hemos presentado en este artículo hace explícitas las condiciones particulares del entorno en el que se encuentran los agentes y están intentando alinear gradualmente sus entidades ontológicas. En el futuro, nuestro esfuerzo se centrará en el lado práctico del problema de alineación semántica situada. Planeamos refinar aún más el modelo presentado aquí (por ejemplo, para incluir cuestiones pragmáticas como criterios de terminación para el proceso de alineación) y diseñar protocolos concretos de negociación de ontologías basados en este modelo que los agentes puedan llevar a cabo. El modelo formal expuesto en este documento constituirá una base sólida para futuros resultados prácticos. Agradecimientos Este trabajo ha sido apoyado en el marco del proyecto UPIC, patrocinado por el Ministerio de Educación y Ciencia de España bajo el número de subvención TIN2004-07461-C02-02 y también en el marco del Proyecto de Investigación Específica y Dirigida OpenKnowledge (STREP), patrocinado por la Comisión Europea bajo el número de contrato FP6-027253. Marco Schorlemmer cuenta con una Beca de Investigación Ramón y Cajal del Ministerio de Educación y Ciencia de España, parcialmente financiada por el Fondo Social Europeo. REFERENCIAS [1] J. Barwise y J. Seligman. Flujo de información: La lógica de los sistemas distribuidos. Cambridge University Press, 1997. [2] C. Ghidini y F. Giunchiglia. La semántica de modelos locales, o razonamiento contextual = localidad + compatibilidad. Inteligencia Artificial, 127(2):221-259, 2001. [3] F. Giunchiglia y P. Shvaiko. Coincidencia semántica. La revisión de Ingeniería del Conocimiento, 18(3):265-280, 2004. [4] Y. Kalfoglou y M. Schorlemmer. IF-Map: Un método de mapeo de ontologías basado en la teoría del flujo de información. En el Journal on Data Semantics I, LNCS 2800, 2003. [5] Y. Kalfoglou y M. Schorlemmer. Mapeo de ontologías: El estado del arte. La Revisión de Ingeniería del Conocimiento, 18(1):1-31, 2003. [6] R. E. Kent. Integración semántica en el Marco de Flujo de Información. En Interoperabilidad Semántica e Integración, Actas del Seminario de Dagstuhl 04391, 2005. [7] D. Lenat. CyC: Una inversión a gran escala en infraestructura de conocimiento. Comunicaciones de la ACM, 38(11), 1995. [8] V. López, M. Sabou y E. Motta. PowerMap: Mapeando la verdadera Web Semántica sobre la marcha. Actas de la ISWC06, 2006. [9] F. McNeill. Refinamiento de Ontología Dinámica. PhD 1284 La Sexta Internacional. Tesis de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07), Escuela de Informática, Universidad de Edimburgo, 2006. [10] M. Schorlemmer y Y. Kalfoglou. Alineación ontológica progresiva para la coordinación de significados: Una base teórica de la información. En la 4ta Int. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente, 2005. [11] P. Shvaiko y J. Euzenat. Una encuesta de enfoques de coincidencia basados en esquemas. En el Journal on Data Semantics IV, LNCS 3730, 2005. [12] L. Steels. Los Orígenes de las Ontologías y Convenciones de Comunicación en Sistemas Multiagente. En Journal of Autonomous Agents and Multi-Agent Systems, 1(2), 169-194, 1998. [13] J. van Diggelen y otros. ANEMONE: Un Entorno de Negociación de Ontologías Mínimas Efectivo en la 5ª Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente, 2006 APÉNDICE A. Términos de la teoría de canales Clasificación: es una tupla A = tok(A), typ(A), |=A donde tok(A) es un conjunto de tokens, typ(A) es un conjunto de tipos y |=A es una relación binaria entre tok(A) y typ(A). Si a |=A α entonces se dice que a es de tipo α. Infomorfismo: f : A → B de clasificaciones A a B es un par covariante de funciones f = ˆf, ˇf, donde ˆf : typ(A) → typ(B) y ˇf : tok(B) → tok(A), satisfaciendo la siguiente propiedad fundamental: ˇf(b) |=A α si y solo si b |=B ˆf(α) para cada token b ∈ tok(B) y cada tipo α ∈ typ(A). Canal: consiste en dos infomorfismos C = {fi : Ai → C}i∈{1,2} con un codominio común C, llamado núcleo de C. Los tokens de C se llaman conexiones y se dice que una conexión c conecta los tokens ˇf1(c) y ˇf2(c). Suma: dadas las clasificaciones A y B, la suma de A y B, denotada por A + B, es la clasificación con tok(A + B) = tok(A) × tok(B) = { a, b | a ∈ tok(A) y b ∈ tok(B)}, typ(A + B) = typ(A) typ(B) = { i, γ | i = 1 y γ ∈ typ(A) o i = 2 y γ ∈ typ(B)} y la relación |=A+B definida por: a, b |=A+B 1, α si a |=A α a, b |=A+B 2, β si b |=B β Dados los infomorfismos f : A → C y g : B → C, la suma f + g : A + B → C está definida en los tipos por ˆ(f + g)( 1, α ) = ˆf(α) y ˆ(f + g)( 2, β ) = ˆg(β), y en los tokens por ˇ(f + g)(c) = ˇf(c), ˇg(c) . Teoría: dado un conjunto Σ, un secuente de Σ es un par Γ, Δ de subconjuntos de Σ. Una relación binaria entre subconjuntos de Σ se llama una relación de consecuencia en Σ. Una teoría es un par T = Σ, donde es una relación de consecuencia en Σ. Un secuente Γ, Δ de Σ para el cual Γ Δ es llamado una restricción de la teoría T. T es regular si cumple: 1. Identidad: α α 2. Debilitamiento: si Γ Δ, entonces Γ, Γ Δ, Δ 2 De hecho, esta es la definición de un canal binario. Un canal se puede definir con un conjunto de índices arbitrario. Corte global: si Γ, Π0 Δ, Π1 para cada partición Π0, Π1 de Π (es decir, Π0 ∪ Π1 = Π y Π0 ∩ Π1 = ∅), entonces Γ Δ para todo α ∈ Σ y todo Γ, Γ , Δ, Δ , Π ⊆ Σ.3 Teoría generada por una clasificación: sea A una clasificación. Un token a ∈ tok(A) satisface un secuente Γ, Δ de typ(A) siempre que si a es de cada tipo en Γ entonces es de algún tipo en Δ. La teoría generada por A, denotada por Th(A), es la teoría typ(A), A donde Γ A Δ si cada token en A satisface Γ, Δ. Lógica local: es una tupla L = tok(L), typ(L), |=L , L , NL donde: 1. tok(L), typ(L), |=L es una clasificación denotada por Cla(L), 2. typ(L), L es una teoría regular denotada por Th(L), 3. NL es un subconjunto de tok(L), llamado los tokens normales de L, que cumplen con todas las restricciones de Th(L). Una lógica local L es válida si cada ficha en Cla(L) es normal, es decir, NL = tok(L). L es completo si cada secuencia de tipo(L) satisfecha por cada token normal es una restricción de Th(L). Lógica local generada por una clasificación: dada una clasificación A, la lógica local generada por A, escrita Log(A), es la lógica local en A (es decir, Cla(Log(A)) = A), con Th(Log(A)) = Th(A) y tal que todos sus tokens son normales, es decir, NLog(A) = tok(A). Imagen inversa: dado un infomorfismo f: A → B y una lógica local L en B, la imagen inversa de L bajo f, denotada f−1 [L], es la lógica local en A tal que Γ f−1[L] Δ si ˆf[Γ] L ˆf[Δ] y Nf−1[L] = ˇf[NL] = {a ∈ tok(A) | a = ˇf(b) para algún b ∈ NL}. Lógica distribuida: sea C = {fi : Ai → C}i∈{1,2} un canal y L una lógica local en su núcleo C, la lógica distribuida de C generada por L, escrita como DLogC(L), es la imagen inversa de L bajo la suma f1 + f2. Refinamiento: sean C = {fi : Ai → C}i∈{1,2} y C = {fi : Ai → C}i∈{1,2} dos canales con las mismas clasificaciones de componentes A1 y A2. Un infomorfismo de refinamiento de C a C es un infomorfismo r: C → C tal que para cada i ∈ {1, 2}, fi = r ◦ fi (es decir, ˆfi = ˆr ◦ ˆfi y ˇfi = ˇfi ◦ ˇr). El canal C es una refinación de C si existe un refinamiento infomorfismo r de C a C. B. TEOREMAS DE LA TEORÍA DE CANALES Teorema B.1. La lógica generada por una clasificación es sólida y completa. Además, dado un conjunto de clasificación A y una lógica L en A, L es correcta y completa si y solo si L = Log(A). Teorema B.2. Sea L una lógica en una clasificación B y f : A → B un infomorfismo. 1. Si L es completo, entonces f−1 [L] es completo. 2. Si L es acústico y ˇf es sobreyectivo, entonces f−1 [L] es acústico. Todas las teorías consideradas en este documento son regulares. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1285