{
    "id": "S2212667814001488",
    "original_text": "This paper presents general results on the Java source code snippet detection problem. We propose the tool which uses graph and subgraph isomorphism detection. A number of solutions for all of these tasks have been proposed in the literature. However, although that all these solutions are really fast, they compare just the constant static trees. Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed. We used several optimizations to achieve very low number of comparisons during the matching algorithm.",
    "original_translation": "",
    "original_sentences": [
        "This paper presents general results on the Java source code snippet detection problem.",
        "We propose the tool which uses graph and subgraph isomorphism detection.",
        "A number of solutions for all of these tasks have been proposed in the literature.",
        "However, although that all these solutions are really fast, they compare just the constant static trees.",
        "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
        "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
    ],
    "error_count": 0,
    "keys": {
        "compare just the constant static trees": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they <br>compare just the constant static trees</br>.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "comparisons": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of <br>comparisons</br> during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "enter an input sample dynamically": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to <br>enter an input sample dynamically</br> with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "graph and subgraph isomorphism detection": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses <br>graph and subgraph isomorphism detection</br>.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "Java source code snippet detection": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the <br>Java source code snippet detection</br> problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "matching algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the <br>matching algorithm</br>."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "preserving an acceptable speed": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while <br>preserving an acceptable speed</br>.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "Scripthon language": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the <br>Scripthon language</br> while preserving an acceptable speed.",
                "We used several optimizations to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "several optimizations": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "This paper presents general results on the Java source code snippet detection problem.",
                "We propose the tool which uses graph and subgraph isomorphism detection.",
                "A number of solutions for all of these tasks have been proposed in the literature.",
                "However, although that all these solutions are really fast, they compare just the constant static trees.",
                "Our solution offers to enter an input sample dynamically with the Scripthon language while preserving an acceptable speed.",
                "We used <br>several optimizations</br> to achieve very low number of comparisons during the matching algorithm."
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}