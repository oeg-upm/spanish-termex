{
    "id": "S1877750315000460",
    "original_text": "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows. FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations. Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources. FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data. It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation. The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands. In general, the FabHemeLB commands have the following structure:",
    "original_translation": "",
    "original_sentences": [
        "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
        "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
        "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
        "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
        "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
        "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
        "In general, the FabHemeLB commands have the following structure:"
    ],
    "error_count": 0,
    "keys": {
        "automate application deployment, execution and data analysis on remote resources": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to <br>automate application deployment, execution and data analysis on remote resources</br>.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "automate the construction and management of ensemble simulation workflows": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps <br>automate the construction and management of ensemble simulation workflows</br>.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "combine functionalities into single one-line commands": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently <br>combine functionalities into single one-line commands</br>.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "data analysis": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and <br>data analysis</br> on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "deployment": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application <br>deployment</br>, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "execution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, <br>execution</br> and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "FabHemeLB": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>FabHemeLB</br> is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "<br>FabHemeLB</br> is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and <br>FabHemeLB</br> help to automate application deployment, execution and data analysis on remote resources.",
                "<br>FabHemeLB</br> can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the <br>FabHemeLB</br> commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "FabSim": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of <br>FabSim</br> [27] configured to handle HemeLB operations.",
                "Both <br>FabSim</br> and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "fetch results of completed jobs": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, <br>fetch results of completed jobs</br>, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "HemeLB": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle <br>HemeLB</br> operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build <br>HemeLB</br> on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit <br>HemeLB</br> jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "monitor the queue status on remote resources": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to <br>monitor the queue status on remote resources</br>, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "organize and curate simulation data": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to <br>organize and curate simulation data</br>.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "Python tool": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a <br>Python tool</br> which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate simulation data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "simulation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble <br>simulation</br> workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate <br>simulation</br> data.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a <br>simulation</br>.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        },
        "simulation data": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "FabHemeLB is a Python tool which helps automate the construction and management of ensemble simulation workflows.",
                "FabHemeLB is an extended version of FabSim [27] configured to handle HemeLB operations.",
                "Both FabSim and FabHemeLB help to automate application deployment, execution and data analysis on remote resources.",
                "FabHemeLB can be used to compile and build HemeLB on any remote resource, to reuse machine-specific configurations, and to organize and curate <br>simulation data</br>.",
                "It can also submit HemeLB jobs to a remote resource specifying the number of cores and the wall clock time limit for completing a simulation.",
                "The tool is also able to monitor the queue status on remote resources, fetch results of completed jobs, and can conveniently combine functionalities into single one-line commands.",
                "In general, the FabHemeLB commands have the following structure:"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": []
        }
    }
}